ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"CapSense_CSHL.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 63020000 		.text
  20      02006600 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.global	CapSense_SensorBaseline
  24              		.bss
  25              		.align	2
  26              		.type	CapSense_SensorBaseline, %object
  27              		.size	CapSense_SensorBaseline, 14
  28              	CapSense_SensorBaseline:
  29 0000 00000000 		.space	14
  29      00000000 
  29      00000000 
  29      0000
  30              		.global	CapSense_SensorBaselineLow
  31 000e 0000     		.align	2
  32              		.type	CapSense_SensorBaselineLow, %object
  33              		.size	CapSense_SensorBaselineLow, 7
  34              	CapSense_SensorBaselineLow:
  35 0010 00000000 		.space	7
  35      000000
  36              		.global	CapSense_SensorSignal
  37 0017 00       		.align	2
  38              		.type	CapSense_SensorSignal, %object
  39              		.size	CapSense_SensorSignal, 7
  40              	CapSense_SensorSignal:
  41 0018 00000000 		.space	7
  41      000000
  42              		.global	CapSense_SensorOnMask
  43 001f 00       		.align	2
  44              		.type	CapSense_SensorOnMask, %object
  45              		.size	CapSense_SensorOnMask, 1
  46              	CapSense_SensorOnMask:
  47 0020 00       		.space	1
  48              		.comm	CapSense_LowBaselineResetCnt,7,4
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 2


  49 0021 000000   		.align	2
  50              	CapSense_centroid:
  51 0024 000000   		.space	3
  52              		.global	CapSense_fingerThreshold
  53              		.data
  54              		.align	2
  55              		.type	CapSense_fingerThreshold, %object
  56              		.size	CapSense_fingerThreshold, 3
  57              	CapSense_fingerThreshold:
  58 0000 64       		.byte	100
  59 0001 64       		.byte	100
  60 0002 64       		.byte	100
  61              		.global	CapSense_noiseThreshold
  62 0003 00       		.align	2
  63              		.type	CapSense_noiseThreshold, %object
  64              		.size	CapSense_noiseThreshold, 3
  65              	CapSense_noiseThreshold:
  66 0004 14       		.byte	20
  67 0005 14       		.byte	20
  68 0006 14       		.byte	20
  69              		.global	CapSense_hysteresis
  70 0007 00       		.align	2
  71              		.type	CapSense_hysteresis, %object
  72              		.size	CapSense_hysteresis, 3
  73              	CapSense_hysteresis:
  74 0008 00       		.byte	0
  75 0009 0A       		.byte	10
  76 000a 0A       		.byte	10
  77              		.global	CapSense_debounce
  78 000b 00       		.align	2
  79              		.type	CapSense_debounce, %object
  80              		.size	CapSense_debounce, 3
  81              	CapSense_debounce:
  82 000c 01       		.byte	1
  83 000d 01       		.byte	1
  84 000e 01       		.byte	1
  85              		.global	CapSense_debounceCounter
  86              		.bss
  87 0027 00       		.align	2
  88              		.type	CapSense_debounceCounter, %object
  89              		.size	CapSense_debounceCounter, 3
  90              	CapSense_debounceCounter:
  91 0028 000000   		.space	3
  92              		.global	CapSense_rawDataIndex
  93 002b 00       		.section	.rodata
  94              		.align	2
  95              		.type	CapSense_rawDataIndex, %object
  96              		.size	CapSense_rawDataIndex, 3
  97              	CapSense_rawDataIndex:
  98 0000 02       		.byte	2
  99 0001 00       		.byte	0
 100 0002 01       		.byte	1
 101              		.global	CapSense_numberOfSensors
 102 0003 00       		.align	2
 103              		.type	CapSense_numberOfSensors, %object
 104              		.size	CapSense_numberOfSensors, 3
 105              	CapSense_numberOfSensors:
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 3


 106 0004 05       		.byte	5
 107 0005 01       		.byte	1
 108 0006 01       		.byte	1
 109              		.global	CapSense_centroidMult
 110 0007 00       		.align	2
 111              		.type	CapSense_centroidMult, %object
 112              		.size	CapSense_centroidMult, 2
 113              	CapSense_centroidMult:
 114 0008 C01F     		.short	8128
 115              		.global	CapSense_posFiltersMask
 116 000a 0000     		.align	2
 117              		.type	CapSense_posFiltersMask, %object
 118              		.size	CapSense_posFiltersMask, 1
 119              	CapSense_posFiltersMask:
 120 000c 08       		.byte	8
 121              		.global	CapSense_posFiltersData
 122 000d 000000   		.data
 123 000f 00       		.align	2
 124              		.type	CapSense_posFiltersData, %object
 125              		.size	CapSense_posFiltersData, 3
 126              	CapSense_posFiltersData:
 127 0010 01       		.byte	1
 128 0011 00       		.byte	0
 129 0012 00       		.byte	0
 130 0013 00       		.section	.text.CapSense_BaseInit,"ax",%progbits
 131              		.align	2
 132              		.global	CapSense_BaseInit
 133              		.thumb
 134              		.thumb_func
 135              		.type	CapSense_BaseInit, %function
 136              	CapSense_BaseInit:
 137              	.LFB0:
 138              		.file 1 ".\\Generated_Source\\PSoC5\\CapSense_CSHL.c"
   1:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Version 3.30
   4:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  20:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* SmartSense functions */
  21:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
  22:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     extern void CapSense_CalculateThresholds(uint8 SensorNumber)
  23:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            ;
  24:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 4


  25:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  26:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* Median filter function prototype */
  27:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  28:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER) )
  29:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
  30:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ;
  31:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* CapSense_RAW_FILTER_MASK && CapSense_POS_FILTERS_MASK */
  32:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  33:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* Averaging filter function prototype */
  34:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
  35:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) )
  36:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
  37:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ;
  38:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* CapSense_RAW_FILTER_MASK && CapSense_POS_FILTERS_MASK */
  39:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  40:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* IIR2Filter(1/2prev + 1/2cur) filter function prototype */
  41:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) || \
  42:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER) )
  43:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2) ;
  44:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* CapSense_RAW_FILTER_MASK && CapSense_POS_FILTERS_MASK */
  45:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  46:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* IIR4Filter(3/4prev + 1/4cur) filter function prototype */
  47:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) || \
  48:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER) )
  49:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2) ;
  50:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* CapSense_RAW_FILTER_MASK && CapSense_POS_FILTERS_MASK */
  51:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  52:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* IIR8Filter(7/8prev + 1/8cur) filter function prototype - RawCounts only */
  53:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
  54:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2) ;
  55:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* CapSense_RAW_FILTER_MASK */
  56:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  57:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* IIR16Filter(15/16prev + 1/16cur) filter function prototype - RawCounts only */
  58:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
  59:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2) ;
  60:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* CapSense_RAW_FILTER_MASK */
  61:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  62:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* JitterFilter filter function prototype */
  63:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) || \
  64:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER) )
  65:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2) ;
  66:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* CapSense_RAW_FILTER_MASK && CapSense_POS_FILTERS_MASK */
  67:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  68:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* Storage of filters data */
  69:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  70:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  71:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  72:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  73:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  74:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  75:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #elif ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)   || \
  76:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)   || \
  77:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) || \
  78:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)   || \
  79:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) )
  80:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
  81:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 5


  82:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  83:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #else
  84:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* No Raw filters */
  85:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  86:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  87:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         */
  88:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  89:.\Generated_Source\PSoC5/CapSense_CSHL.c **** extern uint16 CapSense_SensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  90:.\Generated_Source\PSoC5/CapSense_CSHL.c **** extern uint8 CapSense_SensorEnableMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  91:.\Generated_Source\PSoC5/CapSense_CSHL.c **** extern const uint8 CYCODE CapSense_widgetNumber[];
  92:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  93:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint16 CapSense_SensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  94:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_SensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  95:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_SensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  96:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_SensorOnMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {0u};
  97:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  98:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_LowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  99:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 100:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* Helps while centroid calulation */
 101:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if (CapSense_TOTAL_CENTROIDS_COUNT)
 102:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     static uint8 CapSense_centroid[3];
 103:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif  /* (CapSense_TOTAL_CENTROIDS_COUNT) */
 104:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 105:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[] = {
 106:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     100u, 100u, 100u, 
 107:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 108:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 109:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[] = {
 110:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     20u, 20u, 20u, 
 111:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 112:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 113:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_hysteresis[] = {
 114:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, 10u, 10u, 
 115:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 116:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 117:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
 118:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, 1u, 1u, 
 119:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 120:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 121:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_debounceCounter[] = {
 122:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, 0u, 0u, 
 123:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 124:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 125:.\Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_rawDataIndex[] = {
 126:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     2u, /* LinearSlider0__LS */
 127:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, /* Button0__BTN */
 128:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button1__BTN */
 129:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 130:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 131:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 132:.\Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_numberOfSensors[] = {
 133:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     5u, /* LinearSlider0__LS */
 134:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button0__BTN */
 135:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button1__BTN */
 136:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 137:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 138:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 6


 139:.\Generated_Source\PSoC5/CapSense_CSHL.c **** const uint16 CYCODE CapSense_centroidMult[] = {
 140:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     8128u, 
 141:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 142:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 143:.\Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_posFiltersMask[] = {
 144:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     0x8u, 
 145:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 146:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 147:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_posFiltersData[] = {
 148:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, 0u, 0u, 
 149:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 150:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 151:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 152:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 153:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 154:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 155:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 156:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 157:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 158:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 159:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_SensorBaseline[sensor] array element with an 
 160:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value which is equal to raw count value. 
 161:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Resets to zero CapSense_SensorBaselineLow[senesor] and 
 162:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorSignal[sensor] array element.
 163:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads CapSense_debounceCounter[sensor] array element with initial 
 164:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  value equal CapSense_debounce[].
 165:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and 
 166:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an 
 167:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
 168:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 169:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 170:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 171:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 172:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 173:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 174:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 175:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 176:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorBaseline[]    - used to store baseline value.
 177:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorBaselineLow[] - used to store fraction byte of 
 178:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline value.
 179:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorSignal[]      - used to store diffence between 
 180:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 181:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store current debounce 
 182:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 183:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 184:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 185:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 186:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  any enabled raw data filter.
 187:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 188:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 189:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 190:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 191:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 192:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 193:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 194:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_BaseInit(uint8 sensor) 
 195:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 7


 139              		.loc 1 195 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 16
 142              		@ frame_needed = 1, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144 0000 80B4     		push	{r7}
 145              	.LCFI0:
 146              		.cfi_def_cfa_offset 4
 147 0002 85B0     		sub	sp, sp, #20
 148              	.LCFI1:
 149              		.cfi_def_cfa_offset 24
 150 0004 00AF     		add	r7, sp, #0
 151              		.cfi_offset 7, -4
 152              	.LCFI2:
 153              		.cfi_def_cfa_register 7
 154 0006 0346     		mov	r3, r0
 155 0008 FB71     		strb	r3, [r7, #7]
 196:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 197:.\Generated_Source\PSoC5/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 198:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 156              		.loc 1 198 0
 157 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 158 000c 40F20003 		movw	r3, #:lower16:CapSense_widgetNumber
 159 0010 C0F20003 		movt	r3, #:upper16:CapSense_widgetNumber
 160 0014 9B5C     		ldrb	r3, [r3, r2]
 161 0016 FB73     		strb	r3, [r7, #15]
 199:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 200:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 201:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 202:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 debounceIndex;
 203:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 204:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 205:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 206:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 207:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 208:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 209:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 210:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 211:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Initialize Baseline */
 212:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_SensorBaseline[sensor] = CapSense_SensorRaw[sensor];
 162              		.loc 1 212 0
 163 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 164 001a F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 165 001c 40F20003 		movw	r3, #:lower16:CapSense_SensorRaw
 166 0020 C0F20003 		movt	r3, #:upper16:CapSense_SensorRaw
 167 0024 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 168 0028 40F20003 		movw	r3, #:lower16:CapSense_SensorBaseline
 169 002c C0F20003 		movt	r3, #:upper16:CapSense_SensorBaseline
 170 0030 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 213:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_SensorBaselineLow[sensor] = 0u;
 171              		.loc 1 213 0
 172 0034 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 173 0036 40F20003 		movw	r3, #:lower16:CapSense_SensorBaselineLow
 174 003a C0F20003 		movt	r3, #:upper16:CapSense_SensorBaselineLow
 175 003e 4FF00001 		mov	r1, #0
 176 0042 9954     		strb	r1, [r3, r2]
 214:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_SensorSignal[sensor] = 0u;
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 8


 177              		.loc 1 214 0
 178 0044 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 179 0046 40F20003 		movw	r3, #:lower16:CapSense_SensorSignal
 180 004a C0F20003 		movt	r3, #:upper16:CapSense_SensorSignal
 181 004e 4FF00001 		mov	r1, #0
 182 0052 9954     		strb	r1, [r3, r2]
 215:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 216:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if(widget > CapSense_END_OF_TOUCH_PAD_INDEX)
 183              		.loc 1 216 0
 184 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 185 0056 002B     		cmp	r3, #0
 186 0058 0DD0     		beq	.L3
 217:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 218:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_debounceCounter[widget - (CapSense_END_OF_TOUCH_PAD_INDEX + 1)] =  CapSense_deboun
 187              		.loc 1 218 0
 188 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 189 005c 03F1FF32 		add	r2, r3, #-1
 190 0060 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 191 0062 40F20003 		movw	r3, #:lower16:CapSense_debounce
 192 0066 C0F20003 		movt	r3, #:upper16:CapSense_debounce
 193 006a 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 194 006c 40F20003 		movw	r3, #:lower16:CapSense_debounceCounter
 195 0070 C0F20003 		movt	r3, #:upper16:CapSense_debounceCounter
 196 0074 9954     		strb	r1, [r3, r2]
 197              	.L3:
 219:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 220:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 221:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 222:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) ||\
 223:.\Generated_Source\PSoC5/CapSense_CSHL.c ****          (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 224:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 225:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_SensorRaw[sensor];
 226:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_SensorRaw[sensor];
 227:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 228:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 229:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 230:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 231:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 232:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 233:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             
 234:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_SensorRaw[sensor];
 235:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 236:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 237:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* No Raw filters */
 238:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 239:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 240:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             */
 241:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 242:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 243:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 244:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 245:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 246:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 198              		.loc 1 246 0
 199 0076 07F11407 		add	r7, r7, #20
 200 007a BD46     		mov	sp, r7
 201 007c 80BC     		pop	{r7}
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 9


 202 007e 7047     		bx	lr
 203              		.cfi_endproc
 204              	.LFE0:
 205              		.size	CapSense_BaseInit, .-CapSense_BaseInit
 206              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 207              		.align	2
 208              		.global	CapSense_InitializeSensorBaseline
 209              		.thumb
 210              		.thumb_func
 211              		.type	CapSense_InitializeSensorBaseline, %function
 212              	CapSense_InitializeSensorBaseline:
 213              	.LFB1:
 247:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 248:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 249:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 250:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 251:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 252:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 253:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 254:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_SensorBaseline[sensor] array element with an 
 255:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 256:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 257:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 258:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  enabled.
 259:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 260:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 261:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 262:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 263:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 264:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 265:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 266:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 267:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 268:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 269:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 270:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint8 sensor)
 271:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                           
 272:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 214              		.loc 1 272 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 8
 217              		@ frame_needed = 1, uses_anonymous_args = 0
 218 0000 80B5     		push	{r7, lr}
 219              	.LCFI3:
 220              		.cfi_def_cfa_offset 8
 221 0002 82B0     		sub	sp, sp, #8
 222              	.LCFI4:
 223              		.cfi_def_cfa_offset 16
 224 0004 00AF     		add	r7, sp, #0
 225              		.cfi_offset 14, -4
 226              		.cfi_offset 7, -8
 227              	.LCFI5:
 228              		.cfi_def_cfa_register 7
 229 0006 0346     		mov	r3, r0
 230 0008 FB71     		strb	r3, [r7, #7]
 273:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Scan sensor */
 274:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 10


 231              		.loc 1 274 0
 232 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 233 000c 1846     		mov	r0, r3
 234 000e FFF7FEFF 		bl	CapSense_ScanSensor
 235              	.L5:
 275:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u) {;}
 236              		.loc 1 275 0
 237 0012 FFF7FEFF 		bl	CapSense_IsBusy
 238 0016 0346     		mov	r3, r0
 239 0018 002B     		cmp	r3, #0
 240 001a FAD1     		bne	.L5
 276:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 277:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 278:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 279:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_BaseInit(sensor);
 241              		.loc 1 279 0
 242 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 243 001e 1846     		mov	r0, r3
 244 0020 FFF7FEFF 		bl	CapSense_BaseInit
 280:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 281:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 282:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 283:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
 284:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 285:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 286:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 287:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 288:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 289:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
 290:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 291:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 292:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor + CapSense_TOTAL_SENSOR_COUNT__CH0);
 293:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 294:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 295:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
 296:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 245              		.loc 1 296 0
 246 0024 07F10807 		add	r7, r7, #8
 247 0028 BD46     		mov	sp, r7
 248 002a 80BD     		pop	{r7, pc}
 249              		.cfi_endproc
 250              	.LFE1:
 251              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 252              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 253              		.align	2
 254              		.global	CapSense_InitializeAllBaselines
 255              		.thumb
 256              		.thumb_func
 257              		.type	CapSense_InitializeAllBaselines, %function
 258              	CapSense_InitializeAllBaselines:
 259              	.LFB2:
 297:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 298:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 299:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 300:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 301:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 302:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 11


 303:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 304:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to loads the 
 305:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorBaseline[] array with an initial values by scanning 
 306:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 307:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 308:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 309:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 310:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 311:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 312:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 313:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 314:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 315:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 316:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 317:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 318:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 320:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                           
 321:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 260              		.loc 1 321 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 8
 263              		@ frame_needed = 1, uses_anonymous_args = 0
 264 0000 80B5     		push	{r7, lr}
 265              	.LCFI6:
 266              		.cfi_def_cfa_offset 8
 267 0002 82B0     		sub	sp, sp, #8
 268              	.LCFI7:
 269              		.cfi_def_cfa_offset 16
 270 0004 00AF     		add	r7, sp, #0
 271              		.cfi_offset 14, -4
 272              		.cfi_offset 7, -8
 273              	.LCFI8:
 274              		.cfi_def_cfa_register 7
 322:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 323:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 324:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 325:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 275              		.loc 1 325 0
 276 0006 4FF00003 		mov	r3, #0
 277 000a FB71     		strb	r3, [r7, #7]
 278 000c 07E0     		b	.L8
 279              	.L9:
 326:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 327:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 280              		.loc 1 327 0
 281 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 282 0010 1846     		mov	r0, r3
 283 0012 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 284              		.loc 1 325 0
 285 0016 FB79     		ldrb	r3, [r7, #7]
 286 0018 03F10103 		add	r3, r3, #1
 287 001c FB71     		strb	r3, [r7, #7]
 288              	.L8:
 289 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 290 0020 062B     		cmp	r3, #6
 291 0022 F4D9     		bls	.L9
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 12


 328:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 329:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 292              		.loc 1 329 0
 293 0024 07F10807 		add	r7, r7, #8
 294 0028 BD46     		mov	sp, r7
 295 002a 80BD     		pop	{r7, pc}
 296              		.cfi_endproc
 297              	.LFE2:
 298              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 299              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 300              		.align	2
 301              		.global	CapSense_InitializeEnabledBaselines
 302              		.thumb
 303              		.thumb_func
 304              		.type	CapSense_InitializeEnabledBaselines, %function
 305              	CapSense_InitializeEnabledBaselines:
 306              	.LFB3:
 330:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 331:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 332:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 333:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 334:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 335:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 336:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 337:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 338:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 339:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 340:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 341:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 342:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 343:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 344:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 345:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 346:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 347:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 348:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 349:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 350:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 351:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 352:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 353:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                              
 354:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 307              		.loc 1 354 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 8
 310              		@ frame_needed = 1, uses_anonymous_args = 0
 311 0000 80B5     		push	{r7, lr}
 312              	.LCFI9:
 313              		.cfi_def_cfa_offset 8
 314 0002 82B0     		sub	sp, sp, #8
 315              	.LCFI10:
 316              		.cfi_def_cfa_offset 16
 317 0004 00AF     		add	r7, sp, #0
 318              		.cfi_offset 14, -4
 319              		.cfi_offset 7, -8
 320              	.LCFI11:
 321              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 13


 355:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 356:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 357:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 358:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 359:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 322              		.loc 1 359 0
 323 0006 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 324              	.L12:
 360:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u){;}
 325              		.loc 1 360 0
 326 000a FFF7FEFF 		bl	CapSense_IsBusy
 327 000e 0346     		mov	r3, r0
 328 0010 002B     		cmp	r3, #0
 329 0012 FAD1     		bne	.L12
 361:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 362:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 330              		.loc 1 362 0
 331 0014 4FF00003 		mov	r3, #0
 332 0018 7B71     		strb	r3, [r7, #5]
 333 001a 28E0     		b	.L13
 334              	.L15:
 363:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 364:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (i >> 3u);
 335              		.loc 1 364 0
 336 001c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 337 001e 4FEAD303 		lsr	r3, r3, #3
 338 0022 BB71     		strb	r3, [r7, #6]
 365:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 339              		.loc 1 365 0
 340 0024 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 341 0026 03F00703 		and	r3, r3, #7
 342 002a 4FF00102 		mov	r2, #1
 343 002e 02FA03F3 		lsl	r3, r2, r3
 344 0032 FB71     		strb	r3, [r7, #7]
 366:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 367:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 368:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if((CapSense_SensorEnableMask[pos] & enMask) == 0u)
 345              		.loc 1 368 0
 346 0034 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 347 0036 40F20003 		movw	r3, #:lower16:CapSense_SensorEnableMask
 348 003a C0F20003 		movt	r3, #:upper16:CapSense_SensorEnableMask
 349 003e 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 350 0040 FB79     		ldrb	r3, [r7, #7]
 351 0042 02EA0303 		and	r3, r2, r3
 352 0046 DBB2     		uxtb	r3, r3
 353 0048 002B     		cmp	r3, #0
 354 004a 08D1     		bne	.L14
 369:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 370:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_SensorRaw[i] = 0u;
 355              		.loc 1 370 0
 356 004c 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 357 004e 40F20003 		movw	r3, #:lower16:CapSense_SensorRaw
 358 0052 C0F20003 		movt	r3, #:upper16:CapSense_SensorRaw
 359 0056 4FF00001 		mov	r1, #0
 360 005a 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 361              	.L14:
 371:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 14


 372:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 373:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Initialize baselines */
 374:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_BaseInit(i);
 362              		.loc 1 374 0
 363 005e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 364 0060 1846     		mov	r0, r3
 365 0062 FFF7FEFF 		bl	CapSense_BaseInit
 366              		.loc 1 362 0
 367 0066 7B79     		ldrb	r3, [r7, #5]
 368 0068 03F10103 		add	r3, r3, #1
 369 006c 7B71     		strb	r3, [r7, #5]
 370              	.L13:
 371 006e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 372 0070 062B     		cmp	r3, #6
 373 0072 D3D9     		bls	.L15
 375:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 376:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }  
 374              		.loc 1 376 0
 375 0074 07F10807 		add	r7, r7, #8
 376 0078 BD46     		mov	sp, r7
 377 007a 80BD     		pop	{r7, pc}
 378              		.cfi_endproc
 379              	.LFE3:
 380              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 381              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 382              		.align	2
 383              		.global	CapSense_UpdateSensorBaseline
 384              		.thumb
 385              		.thumb_func
 386              		.type	CapSense_UpdateSensorBaseline, %function
 387              	CapSense_UpdateSensorBaseline:
 388              	.LFB4:
 377:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 378:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 379:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 380:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 381:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 382:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 383:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 384:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Updates the CapSense_SensorBaseline[sensor] array element using the 
 385:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 386:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 387:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  it in CapSense_SensorSignal[sensor]. 
 388:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 389:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 390:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 391:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  that noise threshold.
 392:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 393:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  calculation.
 394:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 395:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 396:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 397:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 398:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 399:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 400:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 401:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 15


 402:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorBaseline[]    - used to store baseline value.
 403:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorBaselineLow[] - used to store fraction byte of 
 404:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline value.
 405:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorSignal[]      - used to store diffence between 
 406:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 407:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 408:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  any enabled raw data filter.
 409:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 410:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 411:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 412:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 413:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 414:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 415:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC5/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint8 sensor)
 417:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 418:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 389              		.loc 1 418 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 24
 392              		@ frame_needed = 1, uses_anonymous_args = 0
 393 0000 80B5     		push	{r7, lr}
 394              	.LCFI12:
 395              		.cfi_def_cfa_offset 8
 396 0002 86B0     		sub	sp, sp, #24
 397              	.LCFI13:
 398              		.cfi_def_cfa_offset 32
 399 0004 00AF     		add	r7, sp, #0
 400              		.cfi_offset 14, -4
 401              		.cfi_offset 7, -8
 402              	.LCFI14:
 403              		.cfi_def_cfa_register 7
 404 0006 0346     		mov	r3, r0
 405 0008 FB71     		strb	r3, [r7, #7]
 419:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint32 calc;
 420:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 tempRaw;
 421:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 filteredRawData;
 422:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 406              		.loc 1 422 0
 407 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 408 000c 40F20003 		movw	r3, #:lower16:CapSense_widgetNumber
 409 0010 C0F20003 		movt	r3, #:upper16:CapSense_widgetNumber
 410 0014 9B5C     		ldrb	r3, [r3, r2]
 411 0016 BB75     		strb	r3, [r7, #22]
 423:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 noiseThreshold = CapSense_noiseThreshold[widget];
 412              		.loc 1 423 0
 413 0018 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 414 001a 40F20003 		movw	r3, #:lower16:CapSense_noiseThreshold
 415 001e C0F20003 		movt	r3, #:upper16:CapSense_noiseThreshold
 416 0022 9B5C     		ldrb	r3, [r3, r2]
 417 0024 FB75     		strb	r3, [r7, #23]
 424:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 425:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 426:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 427:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 428:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 429:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 16


 430:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 431:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     filteredRawData = CapSense_SensorRaw[sensor];
 418              		.loc 1 431 0
 419 0026 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 420 0028 40F20003 		movw	r3, #:lower16:CapSense_SensorRaw
 421 002c C0F20003 		movt	r3, #:upper16:CapSense_SensorRaw
 422 0030 33F81230 		ldrh	r3, [r3, r2, lsl #1]	@ movhi
 423 0034 BB82     		strh	r3, [r7, #20]	@ movhi
 432:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 433:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 434:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData;
 435:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor], 
 436:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                         CapSense_rawFilterData2[sensor]);
 437:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 438:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = tempRaw;
 439:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 440:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 441:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData;
 442:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sensor]
 443:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                            CapSense_rawFilterData2[sensor]);
 444:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 445:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = tempRaw;
 446:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 447:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 448:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 449:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 450:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 451:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 452:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 453:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 454:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             
 455:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 456:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor]);
 457:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 458:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 459:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 460:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 461:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 462:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 463:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 464:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 465:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 466:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 467:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 468:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* No Raw filters */
 469:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 470:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 471:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 472:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_CalculateThresholds(sensor);
 424              		.loc 1 472 0
 425 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 426 0038 1846     		mov	r0, r3
 427 003a FFF7FEFF 		bl	CapSense_CalculateThresholds
 473:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 474:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 475:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 476:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Baseline calculation */
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 17


 477:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 478:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_SensorBaseline[sensor])
 428              		.loc 1 478 0
 429 003e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 430 0040 40F20003 		movw	r3, #:lower16:CapSense_SensorBaseline
 431 0044 C0F20003 		movt	r3, #:upper16:CapSense_SensorBaseline
 432 0048 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 433 004c BA8A     		ldrh	r2, [r7, #20]
 434 004e 9A42     		cmp	r2, r3
 435 0050 0ED3     		bcc	.L18
 479:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 480:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_SensorBaseline[sensor];
 436              		.loc 1 480 0
 437 0052 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 438 0054 40F20003 		movw	r3, #:lower16:CapSense_SensorBaseline
 439 0058 C0F20003 		movt	r3, #:upper16:CapSense_SensorBaseline
 440 005c 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 441 0060 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 442 0062 C3EB0203 		rsb	r3, r3, r2
 443 0066 7B82     		strh	r3, [r7, #18]	@ movhi
 481:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 444              		.loc 1 481 0
 445 0068 4FF00103 		mov	r3, #1
 446 006c BB75     		strb	r3, [r7, #22]
 447 006e 0DE0     		b	.L19
 448              	.L18:
 482:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 483:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 484:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 485:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = CapSense_SensorBaseline[sensor] - filteredRawData;
 449              		.loc 1 485 0
 450 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 451 0072 40F20003 		movw	r3, #:lower16:CapSense_SensorBaseline
 452 0076 C0F20003 		movt	r3, #:upper16:CapSense_SensorBaseline
 453 007a 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 454 007e BB8A     		ldrh	r3, [r7, #20]	@ movhi
 455 0080 C3EB0203 		rsb	r3, r3, r2
 456 0084 7B82     		strh	r3, [r7, #18]	@ movhi
 486:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 457              		.loc 1 486 0
 458 0086 4FF00003 		mov	r3, #0
 459 008a BB75     		strb	r3, [r7, #22]
 460              	.L19:
 487:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 488:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 489:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 461              		.loc 1 489 0
 462 008c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 463 008e 002B     		cmp	r3, #0
 464 0090 26D1     		bne	.L20
 465 0092 7B8A     		ldrh	r3, [r7, #18]
 466 0094 142B     		cmp	r3, #20
 467 0096 23D9     		bls	.L20
 490:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 491:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_LowBaselineResetCnt[sensor] >= CapSense_LOW_BASELINE_RESET)
 468              		.loc 1 491 0
 469 0098 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 18


 470 009a 40F20003 		movw	r3, #:lower16:CapSense_LowBaselineResetCnt
 471 009e C0F20003 		movt	r3, #:upper16:CapSense_LowBaselineResetCnt
 472 00a2 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 473 00a4 042B     		cmp	r3, #4
 474 00a6 0CD9     		bls	.L21
 492:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 493:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 475              		.loc 1 493 0
 476 00a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 477 00aa 1846     		mov	r0, r3
 478 00ac FFF7FEFF 		bl	CapSense_BaseInit
 494:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_LowBaselineResetCnt[sensor] = 0;
 479              		.loc 1 494 0
 480 00b0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 481 00b2 40F20003 		movw	r3, #:lower16:CapSense_LowBaselineResetCnt
 482 00b6 C0F20003 		movt	r3, #:upper16:CapSense_LowBaselineResetCnt
 483 00ba 4FF00001 		mov	r1, #0
 484 00be 9954     		strb	r1, [r3, r2]
 485              		.loc 1 489 0
 486 00c0 56E0     		b	.L23
 487              	.L21:
 495:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 496:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
 497:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 498:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_LowBaselineResetCnt[sensor]++;
 488              		.loc 1 498 0
 489 00c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 490 00c4 40F20003 		movw	r3, #:lower16:CapSense_LowBaselineResetCnt
 491 00c8 C0F20003 		movt	r3, #:upper16:CapSense_LowBaselineResetCnt
 492 00cc 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 493 00ce 03F10103 		add	r3, r3, #1
 494 00d2 D9B2     		uxtb	r1, r3
 495 00d4 40F20003 		movw	r3, #:lower16:CapSense_LowBaselineResetCnt
 496 00d8 C0F20003 		movt	r3, #:upper16:CapSense_LowBaselineResetCnt
 497 00dc 9954     		strb	r1, [r3, r2]
 498              		.loc 1 489 0
 499 00de 47E0     		b	.L23
 500              	.L20:
 499:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 500:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 501:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 502:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 503:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 504:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 505:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 501              		.loc 1 505 0
 502 00e0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 503 00e2 7A8A     		ldrh	r2, [r7, #18]
 504 00e4 9A42     		cmp	r2, r3
 505 00e6 05D9     		bls	.L24
 506 00e8 7B8A     		ldrh	r3, [r7, #18]
 507 00ea 132B     		cmp	r3, #19
 508 00ec 40D8     		bhi	.L23
 509 00ee BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 510 00f0 002B     		cmp	r3, #0
 511 00f2 3DD1     		bne	.L23
 512              	.L24:
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 19


 506:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 507:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                    && widget == 0))
 508:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 509:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 510:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 511:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc = (uint32) CapSense_SensorBaseline[sensor] << 8u;
 513              		.loc 1 511 0
 514 00f4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 515 00f6 40F20003 		movw	r3, #:lower16:CapSense_SensorBaseline
 516 00fa C0F20003 		movt	r3, #:upper16:CapSense_SensorBaseline
 517 00fe 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 518 0102 4FEA0323 		lsl	r3, r3, #8
 519 0106 FB60     		str	r3, [r7, #12]
 512:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_SensorBaselineLow[sensor];
 520              		.loc 1 512 0
 521 0108 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 522 010a 40F20003 		movw	r3, #:lower16:CapSense_SensorBaselineLow
 523 010e C0F20003 		movt	r3, #:upper16:CapSense_SensorBaselineLow
 524 0112 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 525 0114 FA68     		ldr	r2, [r7, #12]
 526 0116 42EA0303 		orr	r3, r2, r3
 527 011a FB60     		str	r3, [r7, #12]
 513:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 514:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 515:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc += filteredRawData;
 528              		.loc 1 515 0
 529 011c BB8A     		ldrh	r3, [r7, #20]
 530 011e FA68     		ldr	r2, [r7, #12]
 531 0120 1344     		add	r3, r2, r3
 532 0122 FB60     		str	r3, [r7, #12]
 516:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 517:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 518:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc -= CapSense_SensorBaseline[sensor];
 533              		.loc 1 518 0
 534 0124 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 535 0126 40F20003 		movw	r3, #:lower16:CapSense_SensorBaseline
 536 012a C0F20003 		movt	r3, #:upper16:CapSense_SensorBaseline
 537 012e 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 538 0132 FA68     		ldr	r2, [r7, #12]
 539 0134 C3EB0203 		rsb	r3, r3, r2
 540 0138 FB60     		str	r3, [r7, #12]
 519:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 520:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 521:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_SensorBaseline[sensor] = ((uint16) (calc >> 8u));
 541              		.loc 1 521 0
 542 013a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 543 013c FB68     		ldr	r3, [r7, #12]
 544 013e 4FEA1323 		lsr	r3, r3, #8
 545 0142 99B2     		uxth	r1, r3
 546 0144 40F20003 		movw	r3, #:lower16:CapSense_SensorBaseline
 547 0148 C0F20003 		movt	r3, #:upper16:CapSense_SensorBaseline
 548 014c 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 522:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_SensorBaselineLow[sensor] = ((uint8) calc);
 549              		.loc 1 522 0
 550 0150 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 551 0152 FB68     		ldr	r3, [r7, #12]
 552 0154 D9B2     		uxtb	r1, r3
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 20


 553 0156 40F20003 		movw	r3, #:lower16:CapSense_SensorBaselineLow
 554 015a C0F20003 		movt	r3, #:upper16:CapSense_SensorBaselineLow
 555 015e 9954     		strb	r1, [r3, r2]
 523:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 524:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_LowBaselineResetCnt[sensor] = 0;
 556              		.loc 1 524 0
 557 0160 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 558 0162 40F20003 		movw	r3, #:lower16:CapSense_LowBaselineResetCnt
 559 0166 C0F20003 		movt	r3, #:upper16:CapSense_LowBaselineResetCnt
 560 016a 4FF00001 		mov	r1, #0
 561 016e 9954     		strb	r1, [r3, r2]
 562              	.L23:
 525:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 526:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 527:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 528:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 529:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 530:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 531:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 563              		.loc 1 531 0
 564 0170 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 565 0172 7A8A     		ldrh	r2, [r7, #18]
 566 0174 9A42     		cmp	r2, r3
 567 0176 17D9     		bls	.L25
 568 0178 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 569 017a 002B     		cmp	r3, #0
 570 017c 14D0     		beq	.L25
 532:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 533:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 534:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 535:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 571              		.loc 1 535 0
 572 017e 7B8A     		ldrh	r3, [r7, #18]
 573 0180 FF2B     		cmp	r3, #255
 574 0182 08D9     		bls	.L26
 536:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 537:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_SensorSignal[sensor] = 0xFFu;
 575              		.loc 1 537 0
 576 0184 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 577 0186 40F20003 		movw	r3, #:lower16:CapSense_SensorSignal
 578 018a C0F20003 		movt	r3, #:upper16:CapSense_SensorSignal
 579 018e 4FF0FF31 		mov	r1, #-1
 580 0192 9954     		strb	r1, [r3, r2]
 581              		.loc 1 531 0
 582 0194 10E0     		b	.L29
 583              	.L26:
 538:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }    
 539:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             else 
 540:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 541:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_SensorSignal[sensor] = ((uint8) tempRaw);
 584              		.loc 1 541 0
 585 0196 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 586 0198 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 587 019a D9B2     		uxtb	r1, r3
 588 019c 40F20003 		movw	r3, #:lower16:CapSense_SensorSignal
 589 01a0 C0F20003 		movt	r3, #:upper16:CapSense_SensorSignal
 590 01a4 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 21


 591              		.loc 1 531 0
 592 01a6 07E0     		b	.L29
 593              	.L25:
 542:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 543:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
 544:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_SensorSignal[sensor] = ((uint16) tempRaw);
 545:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 546:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 547:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 548:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 549:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Signal is zero */
 550:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_SensorSignal[sensor] = 0u;
 594              		.loc 1 550 0
 595 01a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 596 01aa 40F20003 		movw	r3, #:lower16:CapSense_SensorSignal
 597 01ae C0F20003 		movt	r3, #:upper16:CapSense_SensorSignal
 598 01b2 4FF00001 		mov	r1, #0
 599 01b6 9954     		strb	r1, [r3, r2]
 600              	.L29:
 551:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 552:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 553:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 554:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 555:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 556:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 557:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 601              		.loc 1 557 0
 602 01b8 07F11807 		add	r7, r7, #24
 603 01bc BD46     		mov	sp, r7
 604 01be 80BD     		pop	{r7, pc}
 605              		.cfi_endproc
 606              	.LFE4:
 607              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 608              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 609              		.align	2
 610              		.global	CapSense_UpdateEnabledBaselines
 611              		.thumb
 612              		.thumb_func
 613              		.type	CapSense_UpdateEnabledBaselines, %function
 614              	CapSense_UpdateEnabledBaselines:
 615              	.LFB5:
 558:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 559:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 560:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 562:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 563:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 564:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 565:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Checks CapSense_SensorEnableMask[] array and calls the 
 566:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 567:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  for enabled sensors.
 568:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 569:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 570:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 571:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 572:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 573:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 22


 574:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 575:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 576:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[] - used to store the sensor scanning 
 577:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 578:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[0] contains the masked bits for sensors 
 579:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 580:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[1] contains the masked bits for 
 581:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 582:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 583:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 584:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 585:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 586:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 587:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 588:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 589:.\Generated_Source\PSoC5/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 590:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 591:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 616              		.loc 1 591 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 8
 619              		@ frame_needed = 1, uses_anonymous_args = 0
 620 0000 80B5     		push	{r7, lr}
 621              	.LCFI15:
 622              		.cfi_def_cfa_offset 8
 623 0002 82B0     		sub	sp, sp, #8
 624              	.LCFI16:
 625              		.cfi_def_cfa_offset 16
 626 0004 00AF     		add	r7, sp, #0
 627              		.cfi_offset 14, -4
 628              		.cfi_offset 7, -8
 629              	.LCFI17:
 630              		.cfi_def_cfa_register 7
 592:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 593:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 594:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 595:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 596:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 631              		.loc 1 596 0
 632 0006 4FF00003 		mov	r3, #0
 633 000a 7B71     		strb	r3, [r7, #5]
 634 000c 1FE0     		b	.L31
 635              	.L33:
 597:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 598:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (i >> 3u);
 636              		.loc 1 598 0
 637 000e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 638 0010 4FEAD303 		lsr	r3, r3, #3
 639 0014 BB71     		strb	r3, [r7, #6]
 599:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 640              		.loc 1 599 0
 641 0016 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 642 0018 03F00703 		and	r3, r3, #7
 643 001c 4FF00102 		mov	r2, #1
 644 0020 02FA03F3 		lsl	r3, r2, r3
 645 0024 FB71     		strb	r3, [r7, #7]
 600:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if((CapSense_SensorEnableMask[pos] & enMask) != 0u)
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 23


 646              		.loc 1 600 0
 647 0026 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 648 0028 40F20003 		movw	r3, #:lower16:CapSense_SensorEnableMask
 649 002c C0F20003 		movt	r3, #:upper16:CapSense_SensorEnableMask
 650 0030 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 651 0032 FB79     		ldrb	r3, [r7, #7]
 652 0034 02EA0303 		and	r3, r2, r3
 653 0038 DBB2     		uxtb	r3, r3
 654 003a 002B     		cmp	r3, #0
 655 003c 03D0     		beq	.L32
 601:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 602:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 656              		.loc 1 602 0
 657 003e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 658 0040 1846     		mov	r0, r3
 659 0042 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 660              	.L32:
 661              		.loc 1 596 0
 662 0046 7B79     		ldrb	r3, [r7, #5]
 663 0048 03F10103 		add	r3, r3, #1
 664 004c 7B71     		strb	r3, [r7, #5]
 665              	.L31:
 666 004e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 667 0050 062B     		cmp	r3, #6
 668 0052 DCD9     		bls	.L33
 603:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 604:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 605:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 669              		.loc 1 605 0
 670 0054 07F10807 		add	r7, r7, #8
 671 0058 BD46     		mov	sp, r7
 672 005a 80BD     		pop	{r7, pc}
 673              		.cfi_endproc
 674              	.LFE5:
 675              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 676              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 677              		.align	2
 678              		.global	CapSense_CheckIsSensorActive
 679              		.thumb
 680              		.thumb_func
 681              		.type	CapSense_CheckIsSensorActive, %function
 682              	CapSense_CheckIsSensorActive:
 683              	.LFB6:
 606:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 607:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 608:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 609:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
 610:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 611:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 612:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 613:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Compares the CapSense_SensorSignal[sensor] array element to finger
 614:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 615:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 616:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  based on whether the sensor is currently active. 
 617:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 618:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 619:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  The debounce counter added to the sensor active transition.
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 24


 620:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  This function updates CapSense_SensorOnMask[] array element.
 621:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 622:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 623:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 624:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 625:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 626:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 627:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 628:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 629:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorSignal[]      - used to store diffence between 
 630:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 631:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store current debounce 
 632:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 633:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 634:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 635:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorOnMask[] - used to store sensors on/off state.
 636:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorOnMask[0] contains the masked bits for sensors 
 637:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 638:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[1] contains the masked bits for 
 639:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 640:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor is inactive.
 641:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor is active.
 642:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 643:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 644:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 645:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 646:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 647:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsSensorActive(uint8 sensor)
 648:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                   
 649:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 684              		.loc 1 649 0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 16
 687              		@ frame_needed = 1, uses_anonymous_args = 0
 688              		@ link register save eliminated.
 689 0000 80B4     		push	{r7}
 690              	.LCFI18:
 691              		.cfi_def_cfa_offset 4
 692 0002 85B0     		sub	sp, sp, #20
 693              	.LCFI19:
 694              		.cfi_def_cfa_offset 24
 695 0004 00AF     		add	r7, sp, #0
 696              		.cfi_offset 7, -4
 697              	.LCFI20:
 698              		.cfi_def_cfa_register 7
 699 0006 0346     		mov	r3, r0
 700 0008 FB71     		strb	r3, [r7, #7]
 650:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 debounceIndex;
 651:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Get On/Off mask */
 652:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos = (sensor >> 3u);
 701              		.loc 1 652 0
 702 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 703 000c 4FEAD303 		lsr	r3, r3, #3
 704 0010 BB72     		strb	r3, [r7, #10]
 653:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 705              		.loc 1 653 0
 706 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 25


 707 0014 03F00703 		and	r3, r3, #7
 708 0018 4FF00102 		mov	r2, #1
 709 001c 02FA03F3 		lsl	r3, r2, r3
 710 0020 FB72     		strb	r3, [r7, #11]
 654:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
 655:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 711              		.loc 1 655 0
 712 0022 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 713 0024 40F20003 		movw	r3, #:lower16:CapSense_widgetNumber
 714 0028 C0F20003 		movt	r3, #:upper16:CapSense_widgetNumber
 715 002c 9B5C     		ldrb	r3, [r3, r2]
 716 002e 3B73     		strb	r3, [r7, #12]
 656:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 fingerThreshold = CapSense_fingerThreshold[widget];
 717              		.loc 1 656 0
 718 0030 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 719 0032 40F20003 		movw	r3, #:lower16:CapSense_fingerThreshold
 720 0036 C0F20003 		movt	r3, #:upper16:CapSense_fingerThreshold
 721 003a 9B5C     		ldrb	r3, [r3, r2]
 722 003c 7B73     		strb	r3, [r7, #13]
 657:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 hysteresis = CapSense_hysteresis[widget];
 723              		.loc 1 657 0
 724 003e 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 725 0040 40F20003 		movw	r3, #:lower16:CapSense_hysteresis
 726 0044 C0F20003 		movt	r3, #:upper16:CapSense_hysteresis
 727 0048 9B5C     		ldrb	r3, [r3, r2]
 728 004a BB73     		strb	r3, [r7, #14]
 658:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 debounce = CapSense_debounce[widget];
 729              		.loc 1 658 0
 730 004c 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 731 004e 40F20003 		movw	r3, #:lower16:CapSense_debounce
 732 0052 C0F20003 		movt	r3, #:upper16:CapSense_debounce
 733 0056 9B5C     		ldrb	r3, [r3, r2]
 734 0058 FB73     		strb	r3, [r7, #15]
 659:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 660:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if (widget < CapSense_TOTAL_CENTROIDS_COUNT)
 735              		.loc 1 660 0
 736 005a 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 737 005c 002B     		cmp	r3, #0
 738 005e 0BD1     		bne	.L36
 661:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 662:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         debounceIndex = CapSense_UNUSED_DEBOUNCE_COUNTER_INDEX;
 739              		.loc 1 662 0
 740 0060 4FF00203 		mov	r3, #2
 741 0064 7B72     		strb	r3, [r7, #9]
 663:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_debounceCounter[debounceIndex] = 1u;
 742              		.loc 1 663 0
 743 0066 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 744 0068 40F20003 		movw	r3, #:lower16:CapSense_debounceCounter
 745 006c C0F20003 		movt	r3, #:upper16:CapSense_debounceCounter
 746 0070 4FF00101 		mov	r1, #1
 747 0074 9954     		strb	r1, [r3, r2]
 748 0076 03E0     		b	.L37
 749              	.L36:
 664:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 665:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 666:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 667:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         debounceIndex = widget - (CapSense_END_OF_TOUCH_PAD_INDEX + 1);
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 26


 750              		.loc 1 667 0
 751 0078 3B7B     		ldrb	r3, [r7, #12]
 752 007a 03F1FF33 		add	r3, r3, #-1
 753 007e 7B72     		strb	r3, [r7, #9]
 754              	.L37:
 668:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 669:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 670:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 671:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Was on */
 672:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if (CapSense_SensorOnMask[pos] & onMask)
 755              		.loc 1 672 0
 756 0080 BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 757 0082 40F20003 		movw	r3, #:lower16:CapSense_SensorOnMask
 758 0086 C0F20003 		movt	r3, #:upper16:CapSense_SensorOnMask
 759 008a 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 760 008c FB7A     		ldrb	r3, [r7, #11]
 761 008e 02EA0303 		and	r3, r2, r3
 762 0092 DBB2     		uxtb	r3, r3
 763 0094 002B     		cmp	r3, #0
 764 0096 29D0     		beq	.L38
 673:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 674:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Hysteresis minus */
 675:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_SensorSignal[sensor] < (fingerThreshold - hysteresis))
 765              		.loc 1 675 0
 766 0098 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 767 009a 40F20003 		movw	r3, #:lower16:CapSense_SensorSignal
 768 009e C0F20003 		movt	r3, #:upper16:CapSense_SensorSignal
 769 00a2 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 770 00a4 1A46     		mov	r2, r3
 771 00a6 797B     		ldrb	r1, [r7, #13]	@ zero_extendqisi2
 772 00a8 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 773 00aa C3EB0103 		rsb	r3, r3, r1
 774 00ae 9A42     		cmp	r2, r3
 775 00b0 56DA     		bge	.L46
 676:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 677:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_SensorOnMask[pos] &= ~onMask;
 776              		.loc 1 677 0
 777 00b2 BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 778 00b4 B97A     		ldrb	r1, [r7, #10]	@ zero_extendqisi2
 779 00b6 40F20003 		movw	r3, #:lower16:CapSense_SensorOnMask
 780 00ba C0F20003 		movt	r3, #:upper16:CapSense_SensorOnMask
 781 00be 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 782 00c0 1946     		mov	r1, r3
 783 00c2 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 784 00c4 6FEA0303 		mvn	r3, r3
 785 00c8 DBB2     		uxtb	r3, r3
 786 00ca 01EA0303 		and	r3, r1, r3
 787 00ce DBB2     		uxtb	r3, r3
 788 00d0 D9B2     		uxtb	r1, r3
 789 00d2 40F20003 		movw	r3, #:lower16:CapSense_SensorOnMask
 790 00d6 C0F20003 		movt	r3, #:upper16:CapSense_SensorOnMask
 791 00da 9954     		strb	r1, [r3, r2]
 678:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce; 
 792              		.loc 1 678 0
 793 00dc 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 794 00de 40F20003 		movw	r3, #:lower16:CapSense_debounceCounter
 795 00e2 C0F20003 		movt	r3, #:upper16:CapSense_debounceCounter
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 27


 796 00e6 F97B     		ldrb	r1, [r7, #15]
 797 00e8 9954     		strb	r1, [r3, r2]
 798 00ea 3CE0     		b	.L40
 799              	.L38:
 679:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 680:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 681:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else    /* Was off */
 682:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 683:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Hysteresis plus */
 684:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_SensorSignal[sensor] > (fingerThreshold + hysteresis))
 800              		.loc 1 684 0
 801 00ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 802 00ee 40F20003 		movw	r3, #:lower16:CapSense_SensorSignal
 803 00f2 C0F20003 		movt	r3, #:upper16:CapSense_SensorSignal
 804 00f6 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 805 00f8 1A46     		mov	r2, r3
 806 00fa 797B     		ldrb	r1, [r7, #13]	@ zero_extendqisi2
 807 00fc BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 808 00fe 0B44     		add	r3, r1, r3
 809 0100 9A42     		cmp	r2, r3
 810 0102 25DD     		ble	.L41
 685:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 686:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
 687:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if (CapSense_debounceCounter[debounceIndex]-- <= 1u)
 811              		.loc 1 687 0
 812 0104 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 813 0106 40F20003 		movw	r3, #:lower16:CapSense_debounceCounter
 814 010a C0F20003 		movt	r3, #:upper16:CapSense_debounceCounter
 815 010e 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 816 0110 012B     		cmp	r3, #1
 817 0112 8CBF     		ite	hi
 818 0114 0021     		movhi	r1, #0
 819 0116 0121     		movls	r1, #1
 820 0118 C9B2     		uxtb	r1, r1
 821 011a 03F1FF33 		add	r3, r3, #-1
 822 011e D8B2     		uxtb	r0, r3
 823 0120 40F20003 		movw	r3, #:lower16:CapSense_debounceCounter
 824 0124 C0F20003 		movt	r3, #:upper16:CapSense_debounceCounter
 825 0128 9854     		strb	r0, [r3, r2]
 826 012a 0029     		cmp	r1, #0
 827 012c 1AD0     		beq	.L47
 688:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 689:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_SensorOnMask[pos] |= onMask; 
 828              		.loc 1 689 0
 829 012e BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 830 0130 B97A     		ldrb	r1, [r7, #10]	@ zero_extendqisi2
 831 0132 40F20003 		movw	r3, #:lower16:CapSense_SensorOnMask
 832 0136 C0F20003 		movt	r3, #:upper16:CapSense_SensorOnMask
 833 013a 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 834 013c FB7A     		ldrb	r3, [r7, #11]
 835 013e 41EA0303 		orr	r3, r1, r3
 836 0142 D9B2     		uxtb	r1, r3
 837 0144 40F20003 		movw	r3, #:lower16:CapSense_SensorOnMask
 838 0148 C0F20003 		movt	r3, #:upper16:CapSense_SensorOnMask
 839 014c 9954     		strb	r1, [r3, r2]
 840 014e 0AE0     		b	.L40
 841              	.L41:
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 28


 690:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 691:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 692:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
 693:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 694:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 695:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 842              		.loc 1 695 0
 843 0150 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 844 0152 40F20003 		movw	r3, #:lower16:CapSense_debounceCounter
 845 0156 C0F20003 		movt	r3, #:upper16:CapSense_debounceCounter
 846 015a F97B     		ldrb	r1, [r7, #15]
 847 015c 9954     		strb	r1, [r3, r2]
 848 015e 02E0     		b	.L40
 849              	.L46:
 850              		.loc 1 678 0
 851 0160 00BF     		nop
 852 0162 00E0     		b	.L40
 853              	.L47:
 854              		.loc 1 689 0
 855 0164 00BF     		nop
 856              	.L40:
 696:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 697:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 698:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 699:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     return (CapSense_SensorOnMask[pos] & onMask) ? 1u : 0u;
 857              		.loc 1 699 0
 858 0166 BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 859 0168 40F20003 		movw	r3, #:lower16:CapSense_SensorOnMask
 860 016c C0F20003 		movt	r3, #:upper16:CapSense_SensorOnMask
 861 0170 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 862 0172 FB7A     		ldrb	r3, [r7, #11]
 863 0174 02EA0303 		and	r3, r2, r3
 864 0178 DBB2     		uxtb	r3, r3
 865 017a 002B     		cmp	r3, #0
 866 017c 02D0     		beq	.L43
 867 017e 4FF00103 		mov	r3, #1
 868 0182 01E0     		b	.L44
 869              	.L43:
 870 0184 4FF00003 		mov	r3, #0
 871              	.L44:
 700:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 872              		.loc 1 700 0
 873 0188 1846     		mov	r0, r3
 874 018a 07F11407 		add	r7, r7, #20
 875 018e BD46     		mov	sp, r7
 876 0190 80BC     		pop	{r7}
 877 0192 7047     		bx	lr
 878              		.cfi_endproc
 879              	.LFE6:
 880              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 881              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 882              		.align	2
 883              		.global	CapSense_CheckIsWidgetActive
 884              		.thumb
 885              		.thumb_func
 886              		.type	CapSense_CheckIsWidgetActive, %function
 887              	CapSense_CheckIsWidgetActive:
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 29


 888              	.LFB7:
 701:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 702:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 703:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 704:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
 705:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 706:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 707:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 708:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Use function CapSense_CheckIsSensorActive() to update 
 709:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorOnMask[] for all sensors within the widget.
 710:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 711:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  active.
 712:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 713:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  col and row to return widget active status.
 714:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 715:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 716:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 717:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 718:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 719:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 720:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 721:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 722:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 723:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 724:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 725:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 726:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsWidgetActive(uint8 widget)
 727:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 728:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 889              		.loc 1 728 0
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 16
 892              		@ frame_needed = 1, uses_anonymous_args = 0
 893 0000 80B5     		push	{r7, lr}
 894              	.LCFI21:
 895              		.cfi_def_cfa_offset 8
 896 0002 84B0     		sub	sp, sp, #16
 897              	.LCFI22:
 898              		.cfi_def_cfa_offset 24
 899 0004 00AF     		add	r7, sp, #0
 900              		.cfi_offset 14, -4
 901              		.cfi_offset 7, -8
 902              	.LCFI23:
 903              		.cfi_def_cfa_register 7
 904 0006 0346     		mov	r3, r0
 905 0008 FB71     		strb	r3, [r7, #7]
 729:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 906              		.loc 1 729 0
 907 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 908 000c 40F20003 		movw	r3, #:lower16:CapSense_rawDataIndex
 909 0010 C0F20003 		movt	r3, #:upper16:CapSense_rawDataIndex
 910 0014 9B5C     		ldrb	r3, [r3, r2]
 911 0016 7B73     		strb	r3, [r7, #13]
 730:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 912              		.loc 1 730 0
 913 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 914 001a 40F20003 		movw	r3, #:lower16:CapSense_numberOfSensors
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 30


 915 001e C0F20003 		movt	r3, #:upper16:CapSense_numberOfSensors
 916 0022 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 917 0024 7B7B     		ldrb	r3, [r7, #13]
 918 0026 1344     		add	r3, r2, r3
 919 0028 BB73     		strb	r3, [r7, #14]
 731:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 state = 0u;
 920              		.loc 1 731 0
 921 002a 4FF00003 		mov	r3, #0
 922 002e FB73     		strb	r3, [r7, #15]
 923              	.L50:
 732:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 733:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Check all sensors of the widget */
 734:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 735:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 736:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive(rawIndex) != 0u)
 924              		.loc 1 736 0
 925 0030 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 926 0032 1846     		mov	r0, r3
 927 0034 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 928 0038 0346     		mov	r3, r0
 929 003a 002B     		cmp	r3, #0
 930 003c 02D0     		beq	.L49
 737:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 738:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             state = CapSense_SENSOR_1_IS_ACTIVE;
 931              		.loc 1 738 0
 932 003e 4FF00103 		mov	r3, #1
 933 0042 FB73     		strb	r3, [r7, #15]
 934              	.L49:
 739:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 740:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 935              		.loc 1 740 0
 936 0044 7B7B     		ldrb	r3, [r7, #13]
 937 0046 03F10103 		add	r3, r3, #1
 938 004a 7B73     		strb	r3, [r7, #13]
 741:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 742:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 939              		.loc 1 742 0
 940 004c 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 941 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 942 0050 9A42     		cmp	r2, r3
 943 0052 EDD3     		bcc	.L50
 743:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 744:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 745:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 746:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     return state;
 944              		.loc 1 746 0
 945 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 747:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 946              		.loc 1 747 0
 947 0056 1846     		mov	r0, r3
 948 0058 07F11007 		add	r7, r7, #16
 949 005c BD46     		mov	sp, r7
 950 005e 80BD     		pop	{r7, pc}
 951              		.cfi_endproc
 952              	.LFE7:
 953              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 954              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 31


 955              		.align	2
 956              		.global	CapSense_CheckIsAnyWidgetActive
 957              		.thumb
 958              		.thumb_func
 959              		.type	CapSense_CheckIsAnyWidgetActive, %function
 960              	CapSense_CheckIsAnyWidgetActive:
 961              	.LFB8:
 748:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 749:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 750:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 751:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
 752:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 753:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 754:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 755:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Compares all sensors of the CapSense_Signal[] array to their finger 
 756:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so 
 757:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  the CapSense_SensorOnMask[] array is up to date after calling this 
 758:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  function.
 759:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 760:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 761:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 762:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 763:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 764:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 765:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 766:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 767:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 768:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 769:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 770:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsAnyWidgetActive(void)
 771:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 772:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 962              		.loc 1 772 0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 8
 965              		@ frame_needed = 1, uses_anonymous_args = 0
 966 0000 80B5     		push	{r7, lr}
 967              	.LCFI24:
 968              		.cfi_def_cfa_offset 8
 969 0002 82B0     		sub	sp, sp, #8
 970              	.LCFI25:
 971              		.cfi_def_cfa_offset 16
 972 0004 00AF     		add	r7, sp, #0
 973              		.cfi_offset 14, -4
 974              		.cfi_offset 7, -8
 975              	.LCFI26:
 976              		.cfi_def_cfa_register 7
 773:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 774:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 state = 0u;
 977              		.loc 1 774 0
 978 0006 4FF00003 		mov	r3, #0
 979 000a FB71     		strb	r3, [r7, #7]
 775:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 776:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 980              		.loc 1 776 0
 981 000c 4FF00003 		mov	r3, #0
 982 0010 BB71     		strb	r3, [r7, #6]
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 32


 983 0012 0DE0     		b	.L53
 984              	.L55:
 777:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 778:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 985              		.loc 1 778 0
 986 0014 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 987 0016 1846     		mov	r0, r3
 988 0018 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 989 001c 0346     		mov	r3, r0
 990 001e 002B     		cmp	r3, #0
 991 0020 02D0     		beq	.L54
 779:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 780:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 992              		.loc 1 780 0
 993 0022 4FF00103 		mov	r3, #1
 994 0026 FB71     		strb	r3, [r7, #7]
 995              	.L54:
 996              		.loc 1 776 0
 997 0028 BB79     		ldrb	r3, [r7, #6]
 998 002a 03F10103 		add	r3, r3, #1
 999 002e BB71     		strb	r3, [r7, #6]
 1000              	.L53:
 1001 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1002 0032 022B     		cmp	r3, #2
 1003 0034 EED9     		bls	.L55
 781:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 782:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 783:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 784:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 785:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     return state;
 1004              		.loc 1 785 0
 1005 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 786:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 1006              		.loc 1 786 0
 1007 0038 1846     		mov	r0, r3
 1008 003a 07F10807 		add	r7, r7, #8
 1009 003e BD46     		mov	sp, r7
 1010 0040 80BD     		pop	{r7, pc}
 1011              		.cfi_endproc
 1012              	.LFE8:
 1013              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 1014 0042 00BF     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 1015              		.align	2
 1016              		.global	CapSense_EnableWidget
 1017              		.thumb
 1018              		.thumb_func
 1019              		.type	CapSense_EnableWidget, %function
 1020              	CapSense_EnableWidget:
 1021              	.LFB9:
 787:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 788:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 789:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 790:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
 791:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 792:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 793:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 794:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 33


 795:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 796:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 797:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 798:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 799:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 800:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 801:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 802:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 803:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[] - used to store the sensor scanning 
 804:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 805:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[0] contains the masked bits for sensors 
 806:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 807:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[1] contains the masked bits for 
 808:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 809:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 810:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 811:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 812:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 813:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 814:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 815:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 816:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_EnableWidget(uint8 widget)
 817:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    
 818:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 1022              		.loc 1 818 0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 16
 1025              		@ frame_needed = 1, uses_anonymous_args = 0
 1026              		@ link register save eliminated.
 1027 0000 80B4     		push	{r7}
 1028              	.LCFI27:
 1029              		.cfi_def_cfa_offset 4
 1030 0002 85B0     		sub	sp, sp, #20
 1031              	.LCFI28:
 1032              		.cfi_def_cfa_offset 24
 1033 0004 00AF     		add	r7, sp, #0
 1034              		.cfi_offset 7, -4
 1035              	.LCFI29:
 1036              		.cfi_def_cfa_register 7
 1037 0006 0346     		mov	r3, r0
 1038 0008 FB71     		strb	r3, [r7, #7]
 819:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 820:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 821:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1039              		.loc 1 821 0
 1040 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1041 000c 40F20003 		movw	r3, #:lower16:CapSense_rawDataIndex
 1042 0010 C0F20003 		movt	r3, #:upper16:CapSense_rawDataIndex
 1043 0014 9B5C     		ldrb	r3, [r3, r2]
 1044 0016 BB73     		strb	r3, [r7, #14]
 822:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1045              		.loc 1 822 0
 1046 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1047 001a 40F20003 		movw	r3, #:lower16:CapSense_numberOfSensors
 1048 001e C0F20003 		movt	r3, #:upper16:CapSense_numberOfSensors
 1049 0022 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 1050 0024 BB7B     		ldrb	r3, [r7, #14]
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 34


 1051 0026 1344     		add	r3, r2, r3
 1052 0028 FB73     		strb	r3, [r7, #15]
 1053              	.L58:
 823:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 824:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Enable all sensors of the widget */
 825:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 826:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 827:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (rawIndex >> 3u);
 1054              		.loc 1 827 0
 1055 002a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1056 002c 4FEAD303 		lsr	r3, r3, #3
 1057 0030 3B73     		strb	r3, [r7, #12]
 828:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1058              		.loc 1 828 0
 1059 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1060 0034 03F00703 		and	r3, r3, #7
 1061 0038 4FF00102 		mov	r2, #1
 1062 003c 02FA03F3 		lsl	r3, r2, r3
 1063 0040 7B73     		strb	r3, [r7, #13]
 829:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 830:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_SensorEnableMask[pos] |= enMask;
 1064              		.loc 1 830 0
 1065 0042 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 1066 0044 397B     		ldrb	r1, [r7, #12]	@ zero_extendqisi2
 1067 0046 40F20003 		movw	r3, #:lower16:CapSense_SensorEnableMask
 1068 004a C0F20003 		movt	r3, #:upper16:CapSense_SensorEnableMask
 1069 004e 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 1070 0050 7B7B     		ldrb	r3, [r7, #13]
 1071 0052 41EA0303 		orr	r3, r1, r3
 1072 0056 D9B2     		uxtb	r1, r3
 1073 0058 40F20003 		movw	r3, #:lower16:CapSense_SensorEnableMask
 1074 005c C0F20003 		movt	r3, #:upper16:CapSense_SensorEnableMask
 1075 0060 9954     		strb	r1, [r3, r2]
 831:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 1076              		.loc 1 831 0
 1077 0062 BB7B     		ldrb	r3, [r7, #14]
 1078 0064 03F10103 		add	r3, r3, #1
 1079 0068 BB73     		strb	r3, [r7, #14]
 832:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 833:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 1080              		.loc 1 833 0
 1081 006a BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1082 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1083 006e 9A42     		cmp	r2, r3
 1084 0070 DBD3     		bcc	.L58
 834:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 835:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 836:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 1085              		.loc 1 836 0
 1086 0072 07F11407 		add	r7, r7, #20
 1087 0076 BD46     		mov	sp, r7
 1088 0078 80BC     		pop	{r7}
 1089 007a 7047     		bx	lr
 1090              		.cfi_endproc
 1091              	.LFE9:
 1092              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 1093              		.section	.text.CapSense_DisableWidget,"ax",%progbits
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 35


 1094              		.align	2
 1095              		.global	CapSense_DisableWidget
 1096              		.thumb
 1097              		.thumb_func
 1098              		.type	CapSense_DisableWidget, %function
 1099              	CapSense_DisableWidget:
 1100              	.LFB10:
 837:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 838:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 839:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 840:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
 841:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 842:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 843:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 844:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 845:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 846:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 847:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 848:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 849:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 850:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 851:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 852:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 853:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[] - used to store the sensor scanning 
 854:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 855:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[0] contains the masked bits for sensors 
 856:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 857:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[1] contains the masked bits for 
 858:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 859:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 860:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 861:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 862:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 863:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 864:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 865:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 866:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_DisableWidget(uint8 widget)
 867:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
 868:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 1101              		.loc 1 868 0
 1102              		.cfi_startproc
 1103              		@ args = 0, pretend = 0, frame = 16
 1104              		@ frame_needed = 1, uses_anonymous_args = 0
 1105              		@ link register save eliminated.
 1106 0000 80B4     		push	{r7}
 1107              	.LCFI30:
 1108              		.cfi_def_cfa_offset 4
 1109 0002 85B0     		sub	sp, sp, #20
 1110              	.LCFI31:
 1111              		.cfi_def_cfa_offset 24
 1112 0004 00AF     		add	r7, sp, #0
 1113              		.cfi_offset 7, -4
 1114              	.LCFI32:
 1115              		.cfi_def_cfa_register 7
 1116 0006 0346     		mov	r3, r0
 1117 0008 FB71     		strb	r3, [r7, #7]
 869:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 36


 870:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 871:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1118              		.loc 1 871 0
 1119 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1120 000c 40F20003 		movw	r3, #:lower16:CapSense_rawDataIndex
 1121 0010 C0F20003 		movt	r3, #:upper16:CapSense_rawDataIndex
 1122 0014 9B5C     		ldrb	r3, [r3, r2]
 1123 0016 BB73     		strb	r3, [r7, #14]
 872:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1124              		.loc 1 872 0
 1125 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1126 001a 40F20003 		movw	r3, #:lower16:CapSense_numberOfSensors
 1127 001e C0F20003 		movt	r3, #:upper16:CapSense_numberOfSensors
 1128 0022 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 1129 0024 BB7B     		ldrb	r3, [r7, #14]
 1130 0026 1344     		add	r3, r2, r3
 1131 0028 FB73     		strb	r3, [r7, #15]
 1132              	.L61:
 873:.\Generated_Source\PSoC5/CapSense_CSHL.c ****    
 874:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Disable all sensors of the widget */
 875:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 876:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 877:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (rawIndex >> 3u);
 1133              		.loc 1 877 0
 1134 002a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1135 002c 4FEAD303 		lsr	r3, r3, #3
 1136 0030 3B73     		strb	r3, [r7, #12]
 878:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1137              		.loc 1 878 0
 1138 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1139 0034 03F00703 		and	r3, r3, #7
 1140 0038 4FF00102 		mov	r2, #1
 1141 003c 02FA03F3 		lsl	r3, r2, r3
 1142 0040 7B73     		strb	r3, [r7, #13]
 879:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 880:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_SensorEnableMask[pos] &= ~enMask;
 1143              		.loc 1 880 0
 1144 0042 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 1145 0044 397B     		ldrb	r1, [r7, #12]	@ zero_extendqisi2
 1146 0046 40F20003 		movw	r3, #:lower16:CapSense_SensorEnableMask
 1147 004a C0F20003 		movt	r3, #:upper16:CapSense_SensorEnableMask
 1148 004e 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 1149 0050 1946     		mov	r1, r3
 1150 0052 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1151 0054 6FEA0303 		mvn	r3, r3
 1152 0058 DBB2     		uxtb	r3, r3
 1153 005a 01EA0303 		and	r3, r1, r3
 1154 005e DBB2     		uxtb	r3, r3
 1155 0060 D9B2     		uxtb	r1, r3
 1156 0062 40F20003 		movw	r3, #:lower16:CapSense_SensorEnableMask
 1157 0066 C0F20003 		movt	r3, #:upper16:CapSense_SensorEnableMask
 1158 006a 9954     		strb	r1, [r3, r2]
 881:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 1159              		.loc 1 881 0
 1160 006c BB7B     		ldrb	r3, [r7, #14]
 1161 006e 03F10103 		add	r3, r3, #1
 1162 0072 BB73     		strb	r3, [r7, #14]
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 37


 882:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 883:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 1163              		.loc 1 883 0
 1164 0074 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1165 0076 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1166 0078 9A42     		cmp	r2, r3
 1167 007a D6D3     		bcc	.L61
 884:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 885:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 886:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 1168              		.loc 1 886 0
 1169 007c 07F11407 		add	r7, r7, #20
 1170 0080 BD46     		mov	sp, r7
 1171 0082 80BC     		pop	{r7}
 1172 0084 7047     		bx	lr
 1173              		.cfi_endproc
 1174              	.LFE10:
 1175              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1176 0086 00BF     		.section	.text.CapSense_FindMaximum,"ax",%progbits
 1177              		.align	2
 1178              		.global	CapSense_FindMaximum
 1179              		.thumb
 1180              		.thumb_func
 1181              		.type	CapSense_FindMaximum, %function
 1182              	CapSense_FindMaximum:
 1183              	.LFB11:
 887:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_COUNT)
 888:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
 889:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
 890:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
 891:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
 892:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
 893:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Finds index of maximum element within defined centroid. Checks 
 894:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  CapSense_SensorSignal[] within defined cenrtoid and 
 895:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  returns index of maximum element. The values below finger threshold are 
 896:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  ignored.
 897:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The centrod defines by offset of first element and number of elements - count.
 898:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The diplexed centroid requires at least consecutive two elements above
 899:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  FingerThreshold to find index of maximum element.
 900:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 901:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
 902:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  offset:  Start index of cetroid in CapSense_SensorSignal[] array.
 903:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
 904:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshould.
 905:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
 906:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 907:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
 908:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns index of maximum element within defined centroid.
 909:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If index of maximum element doesn't find the 0xFF returns.
 910:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 911:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
 912:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
 913:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 CY
 914:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                       
 915:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #else 
 916:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
 917:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                       
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 38


 918:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 919:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 1184              		.loc 1 919 0
 1185              		.cfi_startproc
 1186              		@ args = 0, pretend = 0, frame = 16
 1187              		@ frame_needed = 1, uses_anonymous_args = 0
 1188              		@ link register save eliminated.
 1189 0000 80B4     		push	{r7}
 1190              	.LCFI33:
 1191              		.cfi_def_cfa_offset 4
 1192 0002 85B0     		sub	sp, sp, #20
 1193              	.LCFI34:
 1194              		.cfi_def_cfa_offset 24
 1195 0004 00AF     		add	r7, sp, #0
 1196              		.cfi_offset 7, -4
 1197              	.LCFI35:
 1198              		.cfi_def_cfa_register 7
 1199 0006 1346     		mov	r3, r2
 1200 0008 0246     		mov	r2, r0
 1201 000a FA71     		strb	r2, [r7, #7]
 1202 000c 0A46     		mov	r2, r1
 1203 000e BA71     		strb	r2, [r7, #6]
 1204 0010 7B71     		strb	r3, [r7, #5]
 920:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 i;
 921:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
 922:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curPos = 0u;
 923:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* No centroid at the Start */
 924:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
 925:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curCtrdStartPos = 0xFFu;
 926:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The biggset centroid is zero */
 927:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
 928:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
 929:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 930:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum = 0xFFu;
 1205              		.loc 1 930 0
 1206 0012 4FF0FF33 		mov	r3, #-1
 1207 0016 BB72     		strb	r3, [r7, #10]
 931:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 temp = 0u;
 1208              		.loc 1 931 0
 1209 0018 4FF00003 		mov	r3, #0
 1210 001c FB72     		strb	r3, [r7, #11]
 932:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_SensorSignal[offset]; 
 1211              		.loc 1 932 0
 1212 001e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1213 0020 40F20003 		movw	r3, #:lower16:CapSense_SensorSignal
 1214 0024 C0F20003 		movt	r3, #:upper16:CapSense_SensorSignal
 1215 0028 1344     		add	r3, r2, r3
 1216 002a FB60     		str	r3, [r7, #12]
 933:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 934:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
 935:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(diplex != 0u)
 936:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 937:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Initialize */
 938:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 i = 0u;
 939:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
 940:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
 941:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 count <<= 1u;
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 39


 942:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 while(1u)
 943:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
 944:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
 945:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 946:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         if (curCtrdStartPos == 0xFFu)
 947:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 948:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Start of centroid */
 949:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCtrdStartPos = i;
 950:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize++;
 951:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 952:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         else
 953:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 954:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize++;
 955:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 956:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 957:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     else   /* Select the bigest and indicate zero start */
 958:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {          
 959:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         if(curCntrdSize > 0)
 960:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 961:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* We are in the end of current */
 962:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
 963:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 964:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
 965:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
 966:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
 967:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             
 968:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize = 0u;
 969:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCtrdStartPos = 0xFFu;
 970:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 971:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 972:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
 973:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     i++; 
 974:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     curPos = diplex[i];
 975:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(i == count)
 976:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 977:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         break;
 978:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }            
 979:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
 980:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
 981:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Find the biggest centroid if two are the same size, last one wins
 982:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                        We are in the end of current */
 983:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
 984:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
 985:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
 986:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
 987:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
 988:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 989:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             else
 990:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 991:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Without diplexing */ 
 992:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 biggestCtrdSize = count;
 993:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 994:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
 995:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 996:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Check centroid size */
 997:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
 998:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 40


 999:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #else                    
1000:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1001:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1002:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1003:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1004:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1005:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1006:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (diplex == 0u)
1007:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1008:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 curPos = i;
1009:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1010:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             else
1011:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1012:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 curPos = diplex[i];
1013:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }                    
1014:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)                    
1015:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curPos = diplex[i];                    
1016:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1017:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Looking for the grater element within centroid */
1018:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1019:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
1020:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1021:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1022:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 maximum = i;
1023:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1024:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1025:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
1026:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1027:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 } 
1028:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1029:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 1217              		.loc 1 1029 0
 1218 002c 4FF00003 		mov	r3, #0
 1219 0030 7B72     		strb	r3, [r7, #9]
 1220 0032 18E0     		b	.L64
 1221              	.L66:
1030:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {                      
1031:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Looking for the grater element within centroid */
1032:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 1222              		.loc 1 1032 0
 1223 0034 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1224 0036 FB68     		ldr	r3, [r7, #12]
 1225 0038 1344     		add	r3, r2, r3
 1226 003a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1227 003c 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 1228 003e 9A42     		cmp	r2, r3
 1229 0040 0DD2     		bcs	.L65
1033:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1034:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
 1230              		.loc 1 1034 0
 1231 0042 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1232 0044 FB68     		ldr	r3, [r7, #12]
 1233 0046 1344     		add	r3, r2, r3
 1234 0048 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1235 004a FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 1236 004c 9A42     		cmp	r2, r3
 1237 004e 06D2     		bcs	.L65
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 41


1035:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1036:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         maximum = i;
 1238              		.loc 1 1036 0
 1239 0050 7B7A     		ldrb	r3, [r7, #9]
 1240 0052 BB72     		strb	r3, [r7, #10]
1037:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 1241              		.loc 1 1037 0
 1242 0054 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1243 0056 FB68     		ldr	r3, [r7, #12]
 1244 0058 1344     		add	r3, r2, r3
 1245 005a 1B78     		ldrb	r3, [r3, #0]
 1246 005c FB72     		strb	r3, [r7, #11]
 1247              	.L65:
 1248              		.loc 1 1029 0
 1249 005e 7B7A     		ldrb	r3, [r7, #9]
 1250 0060 03F10103 		add	r3, r3, #1
 1251 0064 7B72     		strb	r3, [r7, #9]
 1252              	.L64:
 1253 0066 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1254 0068 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1255 006a 9A42     		cmp	r2, r3
 1256 006c E2D3     		bcc	.L66
1038:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1039:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1040:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }    
1041:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1042:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (maximum);
 1257              		.loc 1 1042 0
 1258 006e BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
1043:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 1259              		.loc 1 1043 0
 1260 0070 1846     		mov	r0, r3
 1261 0072 07F11407 		add	r7, r7, #20
 1262 0076 BD46     		mov	sp, r7
 1263 0078 80BC     		pop	{r7}
 1264 007a 7047     		bx	lr
 1265              		.cfi_endproc
 1266              	.LFE11:
 1267              		.size	CapSense_FindMaximum, .-CapSense_FindMaximum
 1268              		.section	.text.CapSense_CalcCentroid,"ax",%progbits
 1269              		.align	2
 1270              		.global	CapSense_CalcCentroid
 1271              		.thumb
 1272              		.thumb_func
 1273              		.type	CapSense_CalcCentroid, %function
 1274              	CapSense_CalcCentroid:
 1275              	.LFB12:
1044:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
1045:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
1046:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1047:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1048:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1049:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1050:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1051:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value calculated accoring index of maximum element and API
1052:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  resolution.
1053:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 42


1054:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1055:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  type:  widget type.
1056:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1057:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1058:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  offset:   Start index of cetroid in CapSense_SensorSignal[] array.
1059:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1060:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1061:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  API resolution.
1062:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshould.
1063:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1064:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1065:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the slider.
1066:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1067:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1068:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1069:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1070:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1071:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1072:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1073:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1074:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                    
1075:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 1276              		.loc 1 1075 0
 1277              		.cfi_startproc
 1278              		@ args = 4, pretend = 0, frame = 24
 1279              		@ frame_needed = 1, uses_anonymous_args = 0
 1280              		@ link register save eliminated.
 1281 0000 80B4     		push	{r7}
 1282              	.LCFI36:
 1283              		.cfi_def_cfa_offset 4
 1284 0002 87B0     		sub	sp, sp, #28
 1285              	.LCFI37:
 1286              		.cfi_def_cfa_offset 32
 1287 0004 00AF     		add	r7, sp, #0
 1288              		.cfi_offset 7, -4
 1289              	.LCFI38:
 1290              		.cfi_def_cfa_register 7
 1291 0006 F871     		strb	r0, [r7, #7]
 1292 0008 B971     		strb	r1, [r7, #6]
 1293 000a 7A71     		strb	r2, [r7, #5]
 1294 000c 7B80     		strh	r3, [r7, #2]	@ movhi
1076:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT > 0u))
1077:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posPrev;
1078:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posNext;
1079:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT>0u)
1080:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                
1081:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)                
1082:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 pos;
1083:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1084:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1085:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 position;
1086:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         int32 numerator;
1087:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         int32 denominator;
1088:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_SensorSignal[offset];
 1295              		.loc 1 1088 0
 1296 000e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 1297 0010 40F20003 		movw	r3, #:lower16:CapSense_SensorSignal
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 43


 1298 0014 C0F20003 		movt	r3, #:upper16:CapSense_SensorSignal
 1299 0018 1344     		add	r3, r2, r3
 1300 001a 7B61     		str	r3, [r7, #20]
1089:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1090:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1091:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1092:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1093:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1094:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1095:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1096:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Copy Signal for found centriod */
1097:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1098:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                  
1099:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1100:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1101:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
1102:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1103:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1104:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1105:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1106:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1107:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1108:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1109:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1110:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1111:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1112:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1113:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1114:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1115:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1116:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1117:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1118:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1119:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             else
1120:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1121:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif
1122:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1123:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT > 0
1124:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)                   
1125:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1126:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(diplex == 0u)
1127:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1128:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         pos     = maximum;
1129:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1130:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posNext = maximum + 1u; 
1131:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1132:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
1133:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1134:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1135:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1136:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1137:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         count <<= 1u;
1138:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }                    
1139:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1140:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1141:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1142:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 44


1143:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1144:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     count <<= 1u;                    
1145:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #else                    
1146:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1147:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posPrev = maximum - 1u;
 1301              		.loc 1 1147 0
 1302 001c FB79     		ldrb	r3, [r7, #7]
 1303 001e 03F1FF33 		add	r3, r3, #-1
 1304 0022 7B72     		strb	r3, [r7, #9]
1148:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posNext = maximum + 1u; 
 1305              		.loc 1 1148 0
 1306 0024 FB79     		ldrb	r3, [r7, #7]
 1307 0026 03F10103 		add	r3, r3, #1
 1308 002a BB72     		strb	r3, [r7, #10]
1149:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1150:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1151:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Copy Signal for found centriod */
1152:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1153:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1154:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #else
1155:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
 1309              		.loc 1 1155 0
 1310 002c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1311 002e 7B69     		ldr	r3, [r7, #20]
 1312 0030 1344     		add	r3, r2, r3
 1313 0032 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1314 0034 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1315 0038 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1316 003c 5A70     		strb	r2, [r3, #1]
1156:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1157:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1158:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1159:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 1317              		.loc 1 1159 0
 1318 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1319 0040 002B     		cmp	r3, #0
 1320 0042 10D1     		bne	.L69
1160:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
1161:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
 1321              		.loc 1 1161 0
 1322 0044 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1323 0048 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1324 004c 4FF00002 		mov	r2, #0
 1325 0050 1A70     		strb	r2, [r3, #0]
1162:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 1326              		.loc 1 1162 0
 1327 0052 BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 1328 0054 7B69     		ldr	r3, [r7, #20]
 1329 0056 1344     		add	r3, r2, r3
 1330 0058 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1331 005a 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1332 005e C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1333 0062 9A70     		strb	r2, [r3, #2]
 1334 0064 28E0     		b	.L70
 1335              	.L69:
1163:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1164:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 45


 1336              		.loc 1 1164 0
 1337 0066 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1338 0068 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1339 006a 03F1FF33 		add	r3, r3, #-1
 1340 006e 9A42     		cmp	r2, r3
 1341 0070 10D1     		bne	.L71
1165:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1166:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 1342              		.loc 1 1166 0
 1343 0072 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1344 0074 7B69     		ldr	r3, [r7, #20]
 1345 0076 1344     		add	r3, r2, r3
 1346 0078 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1347 007a 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1348 007e C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1349 0082 1A70     		strb	r2, [r3, #0]
1167:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
 1350              		.loc 1 1167 0
 1351 0084 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1352 0088 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1353 008c 4FF00002 		mov	r2, #0
 1354 0090 9A70     		strb	r2, [r3, #2]
 1355 0092 11E0     		b	.L70
 1356              	.L71:
1168:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1169:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1170:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1171:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 1357              		.loc 1 1171 0
 1358 0094 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1359 0096 7B69     		ldr	r3, [r7, #20]
 1360 0098 1344     		add	r3, r2, r3
 1361 009a 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1362 009c 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1363 00a0 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1364 00a4 1A70     		strb	r2, [r3, #0]
1172:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 1365              		.loc 1 1172 0
 1366 00a6 BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 1367 00a8 7B69     		ldr	r3, [r7, #20]
 1368 00aa 1344     		add	r3, r2, r3
 1369 00ac 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1370 00ae 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1371 00b2 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1372 00b6 9A70     		strb	r2, [r3, #2]
 1373              	.L70:
1173:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1174:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_COUNT>0
1175:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1176:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1177:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1178:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1179:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
1180:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1181:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
 1374              		.loc 1 1181 0
 1375 00b8 40F20003 		movw	r3, #:lower16:CapSense_centroid
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 46


 1376 00bc C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1377 00c0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1378 00c2 97F82020 		ldrb	r2, [r7, #32]	@ zero_extendqisi2
 1379 00c6 9A42     		cmp	r2, r3
 1380 00c8 0FD2     		bcs	.L72
1182:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1183:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
 1381              		.loc 1 1183 0
 1382 00ca 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1383 00ce C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1384 00d2 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1385 00d4 97F82030 		ldrb	r3, [r7, #32]
 1386 00d8 C3EB0203 		rsb	r3, r3, r2
 1387 00dc DAB2     		uxtb	r2, r3
 1388 00de 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1389 00e2 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1390 00e6 1A70     		strb	r2, [r3, #0]
 1391 00e8 06E0     		b	.L73
 1392              	.L72:
1184:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1185:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1186:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1187:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
 1393              		.loc 1 1187 0
 1394 00ea 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1395 00ee C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1396 00f2 4FF00002 		mov	r2, #0
 1397 00f6 1A70     		strb	r2, [r3, #0]
 1398              	.L73:
1188:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1189:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1190:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Maximum always grater than fingerThreshold, so grate than noiseThreshold */
1191:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
 1399              		.loc 1 1191 0
 1400 00f8 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1401 00fc C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1402 0100 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1403 0102 97F82030 		ldrb	r3, [r7, #32]
 1404 0106 C3EB0203 		rsb	r3, r3, r2
 1405 010a DAB2     		uxtb	r2, r3
 1406 010c 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1407 0110 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1408 0114 5A70     		strb	r2, [r3, #1]
1192:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1193:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1194:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
 1409              		.loc 1 1194 0
 1410 0116 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1411 011a C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1412 011e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1413 0120 97F82020 		ldrb	r2, [r7, #32]	@ zero_extendqisi2
 1414 0124 9A42     		cmp	r2, r3
 1415 0126 0FD2     		bcs	.L74
1195:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1196:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
 1416              		.loc 1 1196 0
 1417 0128 40F20003 		movw	r3, #:lower16:CapSense_centroid
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 47


 1418 012c C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1419 0130 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 1420 0132 97F82030 		ldrb	r3, [r7, #32]
 1421 0136 C3EB0203 		rsb	r3, r3, r2
 1422 013a DAB2     		uxtb	r2, r3
 1423 013c 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1424 0140 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1425 0144 9A70     		strb	r2, [r3, #2]
 1426 0146 06E0     		b	.L75
 1427              	.L74:
1197:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1198:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1199:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1200:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
 1428              		.loc 1 1200 0
 1429 0148 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1430 014c C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1431 0150 4FF00002 		mov	r2, #0
 1432 0154 9A70     		strb	r2, [r3, #2]
 1433              	.L75:
1201:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1202:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1203:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1204:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1205:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         numerator = (int32) CapSense_centroid[CapSense_POS_NEXT] - 
 1434              		.loc 1 1205 0
 1435 0156 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1436 015a C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1437 015e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1438 0160 1A46     		mov	r2, r3
1206:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     (int32) CapSense_centroid[CapSense_POS_PREV];
 1439              		.loc 1 1206 0
 1440 0162 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1441 0166 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1442 016a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1443              		.loc 1 1205 0
 1444 016c C3EB0203 		rsb	r3, r3, r2
 1445 0170 FB60     		str	r3, [r7, #12]
1207:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1208:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1209:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
 1446              		.loc 1 1209 0
 1447 0172 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1448 0176 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1449 017a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
1210:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
 1450              		.loc 1 1210 0
 1451 017c 1A46     		mov	r2, r3
 1452 017e 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1453 0182 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1454 0186 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1455 0188 1A44     		add	r2, r2, r3
1211:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
 1456              		.loc 1 1211 0
 1457 018a 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1458 018e C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1459 0192 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 48


 1460              		.loc 1 1209 0
 1461 0194 1344     		add	r3, r2, r3
 1462 0196 3B61     		str	r3, [r7, #16]
1212:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1213:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1214:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator = (numerator << 8u)/denominator + ((uint16) maximum << 8u);
 1463              		.loc 1 1214 0
 1464 0198 FB68     		ldr	r3, [r7, #12]
 1465 019a 4FEA0322 		lsl	r2, r3, #8
 1466 019e 3B69     		ldr	r3, [r7, #16]
 1467 01a0 92FBF3F2 		sdiv	r2, r2, r3
 1468 01a4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1469 01a6 4FEA0323 		lsl	r3, r3, #8
 1470 01aa 1344     		add	r3, r2, r3
 1471 01ac 3B61     		str	r3, [r7, #16]
1215:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1216:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1217:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1218:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(denominator < 0)
1219:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1220:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 denominator += ((uint16) count << 8u);
1221:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1222:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1223:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1224:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator *= resolution;
 1472              		.loc 1 1224 0
 1473 01ae 7A88     		ldrh	r2, [r7, #2]
 1474 01b0 3B69     		ldr	r3, [r7, #16]
 1475 01b2 02FB03F3 		mul	r3, r2, r3
 1476 01b6 3B61     		str	r3, [r7, #16]
1225:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1226:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Round the relust and put it to uint8 */
1227:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         position = ((uint8) HI16(denominator + CapSense_CENTROID_ROUND_VALUE));
 1477              		.loc 1 1227 0
 1478 01b8 3B69     		ldr	r3, [r7, #16]
 1479 01ba 03F5FE43 		add	r3, r3, #32512
 1480 01be 4FEA1343 		lsr	r3, r3, #16
 1481 01c2 FB72     		strb	r3, [r7, #11]
1228:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1229:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
 1482              		.loc 1 1229 0
 1483 01c4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
1230:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }    
 1484              		.loc 1 1230 0
 1485 01c6 1846     		mov	r0, r3
 1486 01c8 07F11C07 		add	r7, r7, #28
 1487 01cc BD46     		mov	sp, r7
 1488 01ce 80BC     		pop	{r7}
 1489 01d0 7047     		bx	lr
 1490              		.cfi_endproc
 1491              	.LFE12:
 1492              		.size	CapSense_CalcCentroid, .-CapSense_CalcCentroid
 1493 01d2 00BF     		.section	.text.CapSense_GetCentroidPos,"ax",%progbits
 1494              		.align	2
 1495              		.global	CapSense_GetCentroidPos
 1496              		.thumb
 1497              		.thumb_func
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 49


 1498              		.type	CapSense_GetCentroidPos, %function
 1499              	CapSense_GetCentroidPos:
 1500              	.LFB13:
1231:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_COUNT) */
1232:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1233:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1234:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1235:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1236:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1237:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1238:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1239:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1240:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1241:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1242:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1243:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result if enabled.
1244:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1245:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1246:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number.
1247:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1248:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_LS__"widget_name"            5
1249:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1250:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1251:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the linear slider.
1252:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1253:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1254:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1255:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1256:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1257:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1258:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1259:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1260:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1261:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Note:
1262:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1263:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1264:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1265:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1266:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1267:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1268:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1269:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1270:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1271:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint8 widget) 
1272:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 1501              		.loc 1 1272 0
 1502              		.cfi_startproc
 1503              		@ args = 0, pretend = 0, frame = 16
 1504              		@ frame_needed = 1, uses_anonymous_args = 0
 1505 0000 80B5     		push	{r7, lr}
 1506              	.LCFI39:
 1507              		.cfi_def_cfa_offset 8
 1508 0002 86B0     		sub	sp, sp, #24
 1509              	.LCFI40:
 1510              		.cfi_def_cfa_offset 32
 1511 0004 02AF     		add	r7, sp, #8
 1512              		.cfi_offset 14, -4
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 50


 1513              		.cfi_offset 7, -8
 1514              	.LCFI41:
 1515              		.cfi_def_cfa 7, 24
 1516 0006 0346     		mov	r3, r0
 1517 0008 FB71     		strb	r3, [r7, #7]
1273:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1274:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             const uint8 CYCODE *diplex;
1275:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1276:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1277:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1278:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posIndex;
1279:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
 1518              		.loc 1 1279 0
 1519 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1520 000c 40F20003 		movw	r3, #:lower16:CapSense_posFiltersData
 1521 0010 C0F20003 		movt	r3, #:upper16:CapSense_posFiltersData
 1522 0014 9B5C     		ldrb	r3, [r3, r2]
 1523 0016 7B72     		strb	r3, [r7, #9]
1280:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];  
 1524              		.loc 1 1280 0
 1525 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1526 001a 40F20003 		movw	r3, #:lower16:CapSense_posFiltersMask
 1527 001e C0F20003 		movt	r3, #:upper16:CapSense_posFiltersMask
 1528 0022 9B5C     		ldrb	r3, [r3, r2]
 1529 0024 BB72     		strb	r3, [r7, #10]
1281:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1282:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1283:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1284:.\Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1285:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 tempPos;
1286:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1287:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1288:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                */
1289:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1290:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum;
1291:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 position;
1292:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 1530              		.loc 1 1292 0
 1531 0026 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1532 0028 40F20003 		movw	r3, #:lower16:CapSense_rawDataIndex
 1533 002c C0F20003 		movt	r3, #:upper16:CapSense_rawDataIndex
 1534 0030 9B5C     		ldrb	r3, [r3, r2]
 1535 0032 BB73     		strb	r3, [r7, #14]
1293:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 1536              		.loc 1 1293 0
 1537 0034 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1538 0036 40F20003 		movw	r3, #:lower16:CapSense_numberOfSensors
 1539 003a C0F20003 		movt	r3, #:upper16:CapSense_numberOfSensors
 1540 003e 9B5C     		ldrb	r3, [r3, r2]
 1541 0040 FB73     		strb	r3, [r7, #15]
1294:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1295:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1296:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1297:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1298:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1299:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1300:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 51


1301:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             else
1302:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1303:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 diplex = 0u;
1304:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1305:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1306:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1307:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within centroid */      
1308:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1309:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], diplex)
1310:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1311:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
 1542              		.loc 1 1311 0
 1543 0042 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1544 0044 40F20003 		movw	r3, #:lower16:CapSense_fingerThreshold
 1545 0048 C0F20003 		movt	r3, #:upper16:CapSense_fingerThreshold
 1546 004c 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 1547 004e B97B     		ldrb	r1, [r7, #14]	@ zero_extendqisi2
 1548 0050 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1549 0052 0846     		mov	r0, r1
 1550 0054 1146     		mov	r1, r2
 1551 0056 1A46     		mov	r2, r3
 1552 0058 FFF7FEFF 		bl	CapSense_FindMaximum
 1553 005c 0346     		mov	r3, r0
 1554 005e FB72     		strb	r3, [r7, #11]
1312:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1313:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1314:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (maximum != 0xFFu)
 1555              		.loc 1 1314 0
 1556 0060 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1557 0062 FF2B     		cmp	r3, #255
 1558 0064 55D0     		beq	.L78
1315:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1316:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Calculate centroid */
1317:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
 1559              		.loc 1 1317 0
 1560 0066 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1561 0068 40F20003 		movw	r3, #:lower16:CapSense_centroidMult
 1562 006c C0F20003 		movt	r3, #:upper16:CapSense_centroidMult
 1563 0070 33F812C0 		ldrh	ip, [r3, r2, lsl #1]
 1564 0074 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1565 0076 40F20003 		movw	r3, #:lower16:CapSense_noiseThreshold
 1566 007a C0F20003 		movt	r3, #:upper16:CapSense_noiseThreshold
 1567 007e 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 1568 0080 F97A     		ldrb	r1, [r7, #11]	@ zero_extendqisi2
 1569 0082 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1570 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1571 0086 0090     		str	r0, [sp, #0]
 1572 0088 0846     		mov	r0, r1
 1573 008a 1146     		mov	r1, r2
 1574 008c 1A46     		mov	r2, r3
 1575 008e 6346     		mov	r3, ip
 1576 0090 FFF7FEFF 		bl	CapSense_CalcCentroid
 1577 0094 0346     		mov	r3, r0
 1578 0096 BB81     		strh	r3, [r7, #12]	@ movhi
1318:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1319:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1320:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 52


1321:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1322:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
 1579              		.loc 1 1322 0
 1580 0098 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1581 009a 03F01F03 		and	r3, r3, #31
 1582 009e 002B     		cmp	r3, #0
 1583 00a0 48D0     		beq	.L83
1323:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1324:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Caluclate position to store filters data */
1325:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
 1584              		.loc 1 1325 0
 1585 00a2 7B7A     		ldrb	r3, [r7, #9]
 1586 00a4 03F10103 		add	r3, r3, #1
 1587 00a8 3B72     		strb	r3, [r7, #8]
1326:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1327:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
 1588              		.loc 1 1327 0
 1589 00aa 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1590 00ac 40F20003 		movw	r3, #:lower16:CapSense_posFiltersData
 1591 00b0 C0F20003 		movt	r3, #:upper16:CapSense_posFiltersData
 1592 00b4 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 1593 00b6 002B     		cmp	r3, #0
 1594 00b8 10D1     		bne	.L80
1328:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1329:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Init filters */
1330:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
 1595              		.loc 1 1330 0
 1596 00ba 3A7A     		ldrb	r2, [r7, #8]	@ zero_extendqisi2
 1597 00bc BB89     		ldrh	r3, [r7, #12]	@ movhi
 1598 00be D9B2     		uxtb	r1, r3
 1599 00c0 40F20003 		movw	r3, #:lower16:CapSense_posFiltersData
 1600 00c4 C0F20003 		movt	r3, #:upper16:CapSense_posFiltersData
 1601 00c8 9954     		strb	r1, [r3, r2]
1331:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1332:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1333:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1334:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1335:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1336:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1337:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1338:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1339:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1340:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1341:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1342:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1343:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1344:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1345:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1346:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1347:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
 1602              		.loc 1 1347 0
 1603 00ca 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1604 00cc 40F20003 		movw	r3, #:lower16:CapSense_posFiltersData
 1605 00d0 C0F20003 		movt	r3, #:upper16:CapSense_posFiltersData
 1606 00d4 4FF00101 		mov	r1, #1
 1607 00d8 9954     		strb	r1, [r3, r2]
1348:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 53


1349:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
1350:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1351:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Do filtering */
1352:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1353:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1354:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1355:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1356:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position, 
1357:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     CapSense_posFiltersData[posInde
1358:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     CapSense_posFiltersData[posInde
1359:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = 
1360:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1361:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1362:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1363:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1364:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1365:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1366:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1367:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1368:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) 
1369:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1370:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1371:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position, 
1372:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1373:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1374:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1375:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1376:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1377:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1378:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1379:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1380:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1381:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1382:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER)) 
1383:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1384:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1385:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1386:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1387:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1388:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1389:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1390:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1391:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1392:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1393:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1394:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1395:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position, 
1396:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1397:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
 1608              		.loc 1 1397 0
 1609 00da 2EE0     		b	.L81
 1610              	.L80:
 1611              		.loc 1 1393 0
 1612 00dc BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1613 00de 03F00803 		and	r3, r3, #8
 1614 00e2 002B     		cmp	r3, #0
 1615 00e4 28D0     		beq	.L84
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 54


 1616              		.loc 1 1396 0
 1617 00e6 3A7A     		ldrb	r2, [r7, #8]	@ zero_extendqisi2
 1618 00e8 40F20003 		movw	r3, #:lower16:CapSense_posFiltersData
 1619 00ec C0F20003 		movt	r3, #:upper16:CapSense_posFiltersData
 1620 00f0 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 1621              		.loc 1 1395 0
 1622 00f2 BA89     		ldrh	r2, [r7, #12]
 1623 00f4 1046     		mov	r0, r2
 1624 00f6 1946     		mov	r1, r3
 1625 00f8 FFF7FEFF 		bl	CapSense_IIR4Filter
 1626 00fc 0346     		mov	r3, r0
 1627 00fe BB81     		strh	r3, [r7, #12]	@ movhi
 1628              		.loc 1 1397 0
 1629 0100 3A7A     		ldrb	r2, [r7, #8]	@ zero_extendqisi2
 1630 0102 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1631 0104 D9B2     		uxtb	r1, r3
 1632 0106 40F20003 		movw	r3, #:lower16:CapSense_posFiltersData
 1633 010a C0F20003 		movt	r3, #:upper16:CapSense_posFiltersData
 1634 010e 9954     		strb	r1, [r3, r2]
 1635 0110 13E0     		b	.L81
 1636              	.L78:
1398:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }                                
1399:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1400:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1401:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1402:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1403:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1404:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1405:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1406:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position, 
1407:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
1408:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1409:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1410:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1411:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1412:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1413:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1414:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1415:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1416:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1417:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1418:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1419:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1420:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The maximum didn't find */
1421:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             position = 0xFFFFu;
 1637              		.loc 1 1421 0
 1638 0112 4FF6FF73 		movw	r3, #65535
 1639 0116 BB81     		strh	r3, [r7, #12]	@ movhi
1422:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1423:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1424:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1425:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
 1640              		.loc 1 1425 0
 1641 0118 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1642 011a 03F01F03 		and	r3, r3, #31
 1643 011e 002B     		cmp	r3, #0
 1644 0120 0BD0     		beq	.L81
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 55


1426:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1427:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
 1645              		.loc 1 1427 0
 1646 0122 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1647 0124 40F20003 		movw	r3, #:lower16:CapSense_posFiltersData
 1648 0128 C0F20003 		movt	r3, #:upper16:CapSense_posFiltersData
 1649 012c 4FF00001 		mov	r1, #0
 1650 0130 9954     		strb	r1, [r3, r2]
 1651 0132 02E0     		b	.L81
 1652              	.L83:
 1653              		.loc 1 1397 0
 1654 0134 00BF     		nop
 1655 0136 00E0     		b	.L81
 1656              	.L84:
 1657 0138 00BF     		nop
 1658              	.L81:
1428:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1429:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1430:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1431:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1432:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1433:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
 1659              		.loc 1 1433 0
 1660 013a BB89     		ldrh	r3, [r7, #12]
1434:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 1661              		.loc 1 1434 0
 1662 013c 1846     		mov	r0, r3
 1663 013e 07F11007 		add	r7, r7, #16
 1664 0142 BD46     		mov	sp, r7
 1665 0144 80BD     		pop	{r7, pc}
 1666              		.cfi_endproc
 1667              	.LFE13:
 1668              		.size	CapSense_GetCentroidPos, .-CapSense_GetCentroidPos
 1669 0146 00BF     		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 1670              		.align	2
 1671              		.global	CapSense_IIR4Filter
 1672              		.thumb
 1673              		.thumb_func
 1674              		.type	CapSense_IIR4Filter, %function
 1675              	CapSense_IIR4Filter:
 1676              	.LFB14:
1435:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) */
1436:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1437:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1438:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1439:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1440:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1441:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1442:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1443:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1444:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1445:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1446:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1447:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result if enabled.
1448:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1449:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1450:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number.
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 56


1451:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1452:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_RS_"widget_name"            5
1453:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1454:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1455:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the radial slider.
1456:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1457:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1458:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1459:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1460:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1461:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1462:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1463:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1464:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Note:
1465:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1466:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1467:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1468:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1469:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1470:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1471:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1472:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1473:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1474:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1475:.\Generated_Source\PSoC5/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint8 widget)
1476:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                       
1477:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1478:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1479:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posIndex;
1480:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1481:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget]; 
1482:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1483:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1484:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1485:.\Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1486:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 tempPos;
1487:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1488:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1489:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                */
1490:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1491:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum;
1492:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 position;
1493:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1494:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1495:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1496:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within centroid */        
1497:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1498:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
1499:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1500:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
1501:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1502:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1503:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1504:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1505:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Calculate centroid */
1506:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1507:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 57


1508:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1509:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1510:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1511:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1512:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1513:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Caluclate position to store filters data */
1514:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1515:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1516:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1517:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1518:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Init filters */
1519:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1520:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1521:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1522:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1523:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1524:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1525:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  || 
1526:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1527:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1528:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1529:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1530:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1531:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1532:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1533:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1534:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1535:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1536:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1537:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1538:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
1539:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1540:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Do filtering */
1541:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
1542:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1543:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1544:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1545:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1546:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
1547:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
1548:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = 
1549:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
1550:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1551:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1552:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER & 
1553:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1554:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1555:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1556:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
1557:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1558:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1559:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1560:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1561:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position, 
1562:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1563:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1564:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 58


1565:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1566:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1567:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1568:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1569:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1570:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1571:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
1572:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1573:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1574:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position, 
1575:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1576:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1577:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1578:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & 
1579:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1580:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1581:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1582:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
1583:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1584:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1585:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position, 
1586:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1587:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1588:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1589:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & 
1590:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1591:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1592:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1593:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
1594:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1595:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1596:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position, 
1597:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
1598:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1599:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1600:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
1601:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1602:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1603:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1604:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1605:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1606:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1607:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1608:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1609:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1610:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The maximum didn't find */
1611:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             position = 0xFFFFu;
1612:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1613:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1614:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1615:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
1616:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1617:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1618:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1619:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1620:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1621:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 59


1622:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
1623:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1624:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif
1625:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1626:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1627:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_COUNT > 0u)
1628:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1629:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
1630:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1631:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1632:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1633:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If a finger is present on touch pad, this function calculates the X and Y
1634:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touch pad specified
1635:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated to the API resolutions set in the
1636:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  CapSense customizer. Returns a 1 if a finger is on the touchpad.
1637:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
1638:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
1639:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  customizer.
1640:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1641:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1642:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number. 
1643:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
1644:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_TP_"widget_name"            5
1645:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1646:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
1647:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
1648:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  pos[0u]  - position of X
1649:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
1650:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1651:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1652:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
1653:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1654:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1655:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *   There are no checks of widget type argument provided to this function.
1656:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
1657:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *   calculations.
1658:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1659:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1660:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1661:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1662:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1663:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 CapSense_GetTouchCentroidPos(uint8 widget, uint16* pos)
1664:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                    
1665:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1666:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
1667:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posXIndex;
1668:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posYIndex;
1669:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1670:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1671:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
1672:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1673:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
1674:.\Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1675:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint16 tempPos;
1676:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
1677:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1678:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                */
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 60


1679:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1680:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 MaxX;
1681:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 MaxY;
1682:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 posX;
1683:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 posY;
1684:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 touch = 0u;
1685:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1686:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1687:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1688:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
1689:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1690:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
1691:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1692:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
1693:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1694:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1695:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (MaxX != 0xFFu)
1696:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1697:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
1698:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
1699:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1700:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
1701:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
1702:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
1703:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #else
1704:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
1705:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1706:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1707:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if (MaxY != 0xFFu)
1708:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1709:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
1710:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 touch = 1u;
1711:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1712:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Calculate Y centroid */
1713:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count, 
1714:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
1715:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1716:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Calculate X centroid */
1717:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
1718:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
1719:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1720:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count, 
1721:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
1722:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
1723:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
1724:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
1725:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1726:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1727:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Caluclate position to store filters data */
1728:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
1729:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
1730:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1731:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
1732:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
1733:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Init filters */
1734:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
1735:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 61


1736:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1737:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
1738:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
1739:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
1740:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1741:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1742:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1743:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1744:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1745:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
1746:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
1747:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1748:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1749:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
1750:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
1751:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1752:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1753:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             
1754:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
1755:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
1756:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         else
1757:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
1758:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Do filtering */
1759:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
1760:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1761:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1762:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posX;
1763:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
1764:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
1765:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
1766:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
1767:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1768:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
1769:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1770:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posY;
1771:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
1772:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
1773:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
1774:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
1775:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1776:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
1777:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1778:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 
1779:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
1780:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1781:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1782:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1783:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
1784:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1785:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1786:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posX;
1787:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
1788:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
1789:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
1790:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
1791:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1792:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 62


1793:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1794:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posY;
1795:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY, 
1796:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
1797:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
1798:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
1799:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1800:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
1801:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1802:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1803:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1804:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1805:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1806:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1807:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
1808:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1809:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1810:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX, 
1811:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
1812:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
1813:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1814:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY, 
1815:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1816:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
1817:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1818:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 
1819:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
1820:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1821:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1822:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1823:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
1824:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1825:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1826:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter(posX, 
1827:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1828:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
1829:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1830:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter(posY, 
1831:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1832:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
1833:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1834:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 
1835:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
1836:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1837:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1838:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1839:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
1840:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1841:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     {
1842:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX, 
1843:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1844:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
1845:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         
1846:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY, 
1847:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1848:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
1849:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     }
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 63


1850:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
1851:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1852:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1853:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
1854:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1855:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
1856:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1857:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Save positions */
1858:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 pos[0u] = posX;
1859:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 pos[1u] = posY;
1860:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1861:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1862:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1863:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
1864:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(touch == 0u)
1865:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1866:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1867:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
1868:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1869:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1870:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1871:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1872:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
1873:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1874:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (touch);
1875:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1876:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_COUNT > 0u) */
1877:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1878:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1879:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
1880:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER) )
1881:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1882:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
1883:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1884:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1885:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1886:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Median filter function. 
1887:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
1888:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  median value.
1889:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1890:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1891:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1892:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1893:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x3:  Before previous value.
1894:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1895:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1896:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1897:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1898:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1899:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
1900:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                          
1901:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1902:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 tmp;
1903:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1904:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (x1 > x2)
1905:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1906:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             tmp = x2;
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 64


1907:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             x2 = x1;
1908:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             x1 = tmp;
1909:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1910:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1911:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (x2 > x3)
1912:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1913:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             x2 = x3;
1914:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1915:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1916:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
1917:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1918:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
1919:.\Generated_Source\PSoC5/CapSense_CSHL.c ****        *    (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER) )
1920:.\Generated_Source\PSoC5/CapSense_CSHL.c ****        */
1921:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1922:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1923:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
1924:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) )
1925:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1926:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
1927:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1928:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1929:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1930:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Averaging filter function.
1931:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of position and
1932:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  reports the averaging value.
1933:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1934:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1935:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1936:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1937:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x3:  Before previous value.
1938:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1939:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1940:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1941:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1942:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1943:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
1944:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                             
1945:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1946:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
1947:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1948:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((uint16) tmp);
1949:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1950:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* ( (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
1951:.\Generated_Source\PSoC5/CapSense_CSHL.c ****        *    (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) )
1952:.\Generated_Source\PSoC5/CapSense_CSHL.c ****        */
1953:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1954:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1955:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) || \
1956:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER) )
1957:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1958:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
1959:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1960:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1961:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1962:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
1963:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 65


1964:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1965:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1966:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1967:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1968:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1969:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1970:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1971:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1972:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
1973:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                        
1974:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1975:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 tmp;
1976:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1977:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
1978:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
1979:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp >>= 1u;
1980:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
1981:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((uint16) tmp);
1982:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1983:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) || \
1984:.\Generated_Source\PSoC5/CapSense_CSHL.c ****        *    (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER) )
1985:.\Generated_Source\PSoC5/CapSense_CSHL.c ****        */
1986:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1987:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1988:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) || \
1989:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER) )
1990:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1991:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
1992:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1993:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1994:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1995:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
1996:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1997:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1998:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1999:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
2000:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
2001:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
2002:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
2003:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
2004:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
2005:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2006:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                        
2007:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 1677              		.loc 1 2007 0
 1678              		.cfi_startproc
 1679              		@ args = 0, pretend = 0, frame = 16
 1680              		@ frame_needed = 1, uses_anonymous_args = 0
 1681              		@ link register save eliminated.
 1682 0000 80B4     		push	{r7}
 1683              	.LCFI42:
 1684              		.cfi_def_cfa_offset 4
 1685 0002 85B0     		sub	sp, sp, #20
 1686              	.LCFI43:
 1687              		.cfi_def_cfa_offset 24
 1688 0004 00AF     		add	r7, sp, #0
 1689              		.cfi_offset 7, -4
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 66


 1690              	.LCFI44:
 1691              		.cfi_def_cfa_register 7
 1692 0006 0246     		mov	r2, r0
 1693 0008 0B46     		mov	r3, r1
 1694 000a FA80     		strh	r2, [r7, #6]	@ movhi
 1695 000c BB80     		strh	r3, [r7, #4]	@ movhi
2008:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 tmp;
2009:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
2010:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2011:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 1696              		.loc 1 2011 0
 1697 000e FA88     		ldrh	r2, [r7, #6]
 1698 0010 BB88     		ldrh	r3, [r7, #4]
 1699 0012 1344     		add	r3, r2, r3
 1700 0014 FB60     		str	r3, [r7, #12]
2012:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1701              		.loc 1 2012 0
 1702 0016 BB88     		ldrh	r3, [r7, #4]
 1703 0018 4FEA4303 		lsl	r3, r3, #1
 1704 001c FA68     		ldr	r2, [r7, #12]
 1705 001e 1344     		add	r3, r2, r3
 1706 0020 FB60     		str	r3, [r7, #12]
2013:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp >>= 2u;
 1707              		.loc 1 2013 0
 1708 0022 FB68     		ldr	r3, [r7, #12]
 1709 0024 4FEA9303 		lsr	r3, r3, #2
 1710 0028 FB60     		str	r3, [r7, #12]
2014:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
2015:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((uint16) tmp);
 1711              		.loc 1 2015 0
 1712 002a FB68     		ldr	r3, [r7, #12]
 1713 002c 9BB2     		uxth	r3, r3
2016:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 1714              		.loc 1 2016 0
 1715 002e 1846     		mov	r0, r3
 1716 0030 07F11407 		add	r7, r7, #20
 1717 0034 BD46     		mov	sp, r7
 1718 0036 80BC     		pop	{r7}
 1719 0038 7047     		bx	lr
 1720              		.cfi_endproc
 1721              	.LFE14:
 1722              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 1723 003a 00BF     		.text
 1724              	.Letext0:
 1725              		.section	.debug_loc,"",%progbits
 1726              	.Ldebug_loc0:
 1727              	.LLST0:
 1728 0000 00000000 		.4byte	.LFB0
 1729 0004 02000000 		.4byte	.LCFI0
 1730 0008 0100     		.2byte	0x1
 1731 000a 5D       		.byte	0x5d
 1732 000b 02000000 		.4byte	.LCFI0
 1733 000f 04000000 		.4byte	.LCFI1
 1734 0013 0200     		.2byte	0x2
 1735 0015 7D       		.byte	0x7d
 1736 0016 04       		.sleb128 4
 1737 0017 04000000 		.4byte	.LCFI1
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 67


 1738 001b 06000000 		.4byte	.LCFI2
 1739 001f 0200     		.2byte	0x2
 1740 0021 7D       		.byte	0x7d
 1741 0022 18       		.sleb128 24
 1742 0023 06000000 		.4byte	.LCFI2
 1743 0027 80000000 		.4byte	.LFE0
 1744 002b 0200     		.2byte	0x2
 1745 002d 77       		.byte	0x77
 1746 002e 18       		.sleb128 24
 1747 002f 00000000 		.4byte	0x0
 1748 0033 00000000 		.4byte	0x0
 1749              	.LLST1:
 1750 0037 00000000 		.4byte	.LFB1
 1751 003b 02000000 		.4byte	.LCFI3
 1752 003f 0100     		.2byte	0x1
 1753 0041 5D       		.byte	0x5d
 1754 0042 02000000 		.4byte	.LCFI3
 1755 0046 04000000 		.4byte	.LCFI4
 1756 004a 0200     		.2byte	0x2
 1757 004c 7D       		.byte	0x7d
 1758 004d 08       		.sleb128 8
 1759 004e 04000000 		.4byte	.LCFI4
 1760 0052 06000000 		.4byte	.LCFI5
 1761 0056 0200     		.2byte	0x2
 1762 0058 7D       		.byte	0x7d
 1763 0059 10       		.sleb128 16
 1764 005a 06000000 		.4byte	.LCFI5
 1765 005e 2C000000 		.4byte	.LFE1
 1766 0062 0200     		.2byte	0x2
 1767 0064 77       		.byte	0x77
 1768 0065 10       		.sleb128 16
 1769 0066 00000000 		.4byte	0x0
 1770 006a 00000000 		.4byte	0x0
 1771              	.LLST2:
 1772 006e 00000000 		.4byte	.LFB2
 1773 0072 02000000 		.4byte	.LCFI6
 1774 0076 0100     		.2byte	0x1
 1775 0078 5D       		.byte	0x5d
 1776 0079 02000000 		.4byte	.LCFI6
 1777 007d 04000000 		.4byte	.LCFI7
 1778 0081 0200     		.2byte	0x2
 1779 0083 7D       		.byte	0x7d
 1780 0084 08       		.sleb128 8
 1781 0085 04000000 		.4byte	.LCFI7
 1782 0089 06000000 		.4byte	.LCFI8
 1783 008d 0200     		.2byte	0x2
 1784 008f 7D       		.byte	0x7d
 1785 0090 10       		.sleb128 16
 1786 0091 06000000 		.4byte	.LCFI8
 1787 0095 2C000000 		.4byte	.LFE2
 1788 0099 0200     		.2byte	0x2
 1789 009b 77       		.byte	0x77
 1790 009c 10       		.sleb128 16
 1791 009d 00000000 		.4byte	0x0
 1792 00a1 00000000 		.4byte	0x0
 1793              	.LLST3:
 1794 00a5 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 68


 1795 00a9 02000000 		.4byte	.LCFI9
 1796 00ad 0100     		.2byte	0x1
 1797 00af 5D       		.byte	0x5d
 1798 00b0 02000000 		.4byte	.LCFI9
 1799 00b4 04000000 		.4byte	.LCFI10
 1800 00b8 0200     		.2byte	0x2
 1801 00ba 7D       		.byte	0x7d
 1802 00bb 08       		.sleb128 8
 1803 00bc 04000000 		.4byte	.LCFI10
 1804 00c0 06000000 		.4byte	.LCFI11
 1805 00c4 0200     		.2byte	0x2
 1806 00c6 7D       		.byte	0x7d
 1807 00c7 10       		.sleb128 16
 1808 00c8 06000000 		.4byte	.LCFI11
 1809 00cc 7C000000 		.4byte	.LFE3
 1810 00d0 0200     		.2byte	0x2
 1811 00d2 77       		.byte	0x77
 1812 00d3 10       		.sleb128 16
 1813 00d4 00000000 		.4byte	0x0
 1814 00d8 00000000 		.4byte	0x0
 1815              	.LLST4:
 1816 00dc 00000000 		.4byte	.LFB4
 1817 00e0 02000000 		.4byte	.LCFI12
 1818 00e4 0100     		.2byte	0x1
 1819 00e6 5D       		.byte	0x5d
 1820 00e7 02000000 		.4byte	.LCFI12
 1821 00eb 04000000 		.4byte	.LCFI13
 1822 00ef 0200     		.2byte	0x2
 1823 00f1 7D       		.byte	0x7d
 1824 00f2 08       		.sleb128 8
 1825 00f3 04000000 		.4byte	.LCFI13
 1826 00f7 06000000 		.4byte	.LCFI14
 1827 00fb 0200     		.2byte	0x2
 1828 00fd 7D       		.byte	0x7d
 1829 00fe 20       		.sleb128 32
 1830 00ff 06000000 		.4byte	.LCFI14
 1831 0103 C0010000 		.4byte	.LFE4
 1832 0107 0200     		.2byte	0x2
 1833 0109 77       		.byte	0x77
 1834 010a 20       		.sleb128 32
 1835 010b 00000000 		.4byte	0x0
 1836 010f 00000000 		.4byte	0x0
 1837              	.LLST5:
 1838 0113 00000000 		.4byte	.LFB5
 1839 0117 02000000 		.4byte	.LCFI15
 1840 011b 0100     		.2byte	0x1
 1841 011d 5D       		.byte	0x5d
 1842 011e 02000000 		.4byte	.LCFI15
 1843 0122 04000000 		.4byte	.LCFI16
 1844 0126 0200     		.2byte	0x2
 1845 0128 7D       		.byte	0x7d
 1846 0129 08       		.sleb128 8
 1847 012a 04000000 		.4byte	.LCFI16
 1848 012e 06000000 		.4byte	.LCFI17
 1849 0132 0200     		.2byte	0x2
 1850 0134 7D       		.byte	0x7d
 1851 0135 10       		.sleb128 16
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 69


 1852 0136 06000000 		.4byte	.LCFI17
 1853 013a 5C000000 		.4byte	.LFE5
 1854 013e 0200     		.2byte	0x2
 1855 0140 77       		.byte	0x77
 1856 0141 10       		.sleb128 16
 1857 0142 00000000 		.4byte	0x0
 1858 0146 00000000 		.4byte	0x0
 1859              	.LLST6:
 1860 014a 00000000 		.4byte	.LFB6
 1861 014e 02000000 		.4byte	.LCFI18
 1862 0152 0100     		.2byte	0x1
 1863 0154 5D       		.byte	0x5d
 1864 0155 02000000 		.4byte	.LCFI18
 1865 0159 04000000 		.4byte	.LCFI19
 1866 015d 0200     		.2byte	0x2
 1867 015f 7D       		.byte	0x7d
 1868 0160 04       		.sleb128 4
 1869 0161 04000000 		.4byte	.LCFI19
 1870 0165 06000000 		.4byte	.LCFI20
 1871 0169 0200     		.2byte	0x2
 1872 016b 7D       		.byte	0x7d
 1873 016c 18       		.sleb128 24
 1874 016d 06000000 		.4byte	.LCFI20
 1875 0171 94010000 		.4byte	.LFE6
 1876 0175 0200     		.2byte	0x2
 1877 0177 77       		.byte	0x77
 1878 0178 18       		.sleb128 24
 1879 0179 00000000 		.4byte	0x0
 1880 017d 00000000 		.4byte	0x0
 1881              	.LLST7:
 1882 0181 00000000 		.4byte	.LFB7
 1883 0185 02000000 		.4byte	.LCFI21
 1884 0189 0100     		.2byte	0x1
 1885 018b 5D       		.byte	0x5d
 1886 018c 02000000 		.4byte	.LCFI21
 1887 0190 04000000 		.4byte	.LCFI22
 1888 0194 0200     		.2byte	0x2
 1889 0196 7D       		.byte	0x7d
 1890 0197 08       		.sleb128 8
 1891 0198 04000000 		.4byte	.LCFI22
 1892 019c 06000000 		.4byte	.LCFI23
 1893 01a0 0200     		.2byte	0x2
 1894 01a2 7D       		.byte	0x7d
 1895 01a3 18       		.sleb128 24
 1896 01a4 06000000 		.4byte	.LCFI23
 1897 01a8 60000000 		.4byte	.LFE7
 1898 01ac 0200     		.2byte	0x2
 1899 01ae 77       		.byte	0x77
 1900 01af 18       		.sleb128 24
 1901 01b0 00000000 		.4byte	0x0
 1902 01b4 00000000 		.4byte	0x0
 1903              	.LLST8:
 1904 01b8 00000000 		.4byte	.LFB8
 1905 01bc 02000000 		.4byte	.LCFI24
 1906 01c0 0100     		.2byte	0x1
 1907 01c2 5D       		.byte	0x5d
 1908 01c3 02000000 		.4byte	.LCFI24
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 70


 1909 01c7 04000000 		.4byte	.LCFI25
 1910 01cb 0200     		.2byte	0x2
 1911 01cd 7D       		.byte	0x7d
 1912 01ce 08       		.sleb128 8
 1913 01cf 04000000 		.4byte	.LCFI25
 1914 01d3 06000000 		.4byte	.LCFI26
 1915 01d7 0200     		.2byte	0x2
 1916 01d9 7D       		.byte	0x7d
 1917 01da 10       		.sleb128 16
 1918 01db 06000000 		.4byte	.LCFI26
 1919 01df 42000000 		.4byte	.LFE8
 1920 01e3 0200     		.2byte	0x2
 1921 01e5 77       		.byte	0x77
 1922 01e6 10       		.sleb128 16
 1923 01e7 00000000 		.4byte	0x0
 1924 01eb 00000000 		.4byte	0x0
 1925              	.LLST9:
 1926 01ef 00000000 		.4byte	.LFB9
 1927 01f3 02000000 		.4byte	.LCFI27
 1928 01f7 0100     		.2byte	0x1
 1929 01f9 5D       		.byte	0x5d
 1930 01fa 02000000 		.4byte	.LCFI27
 1931 01fe 04000000 		.4byte	.LCFI28
 1932 0202 0200     		.2byte	0x2
 1933 0204 7D       		.byte	0x7d
 1934 0205 04       		.sleb128 4
 1935 0206 04000000 		.4byte	.LCFI28
 1936 020a 06000000 		.4byte	.LCFI29
 1937 020e 0200     		.2byte	0x2
 1938 0210 7D       		.byte	0x7d
 1939 0211 18       		.sleb128 24
 1940 0212 06000000 		.4byte	.LCFI29
 1941 0216 7C000000 		.4byte	.LFE9
 1942 021a 0200     		.2byte	0x2
 1943 021c 77       		.byte	0x77
 1944 021d 18       		.sleb128 24
 1945 021e 00000000 		.4byte	0x0
 1946 0222 00000000 		.4byte	0x0
 1947              	.LLST10:
 1948 0226 00000000 		.4byte	.LFB10
 1949 022a 02000000 		.4byte	.LCFI30
 1950 022e 0100     		.2byte	0x1
 1951 0230 5D       		.byte	0x5d
 1952 0231 02000000 		.4byte	.LCFI30
 1953 0235 04000000 		.4byte	.LCFI31
 1954 0239 0200     		.2byte	0x2
 1955 023b 7D       		.byte	0x7d
 1956 023c 04       		.sleb128 4
 1957 023d 04000000 		.4byte	.LCFI31
 1958 0241 06000000 		.4byte	.LCFI32
 1959 0245 0200     		.2byte	0x2
 1960 0247 7D       		.byte	0x7d
 1961 0248 18       		.sleb128 24
 1962 0249 06000000 		.4byte	.LCFI32
 1963 024d 86000000 		.4byte	.LFE10
 1964 0251 0200     		.2byte	0x2
 1965 0253 77       		.byte	0x77
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 71


 1966 0254 18       		.sleb128 24
 1967 0255 00000000 		.4byte	0x0
 1968 0259 00000000 		.4byte	0x0
 1969              	.LLST11:
 1970 025d 00000000 		.4byte	.LFB11
 1971 0261 02000000 		.4byte	.LCFI33
 1972 0265 0100     		.2byte	0x1
 1973 0267 5D       		.byte	0x5d
 1974 0268 02000000 		.4byte	.LCFI33
 1975 026c 04000000 		.4byte	.LCFI34
 1976 0270 0200     		.2byte	0x2
 1977 0272 7D       		.byte	0x7d
 1978 0273 04       		.sleb128 4
 1979 0274 04000000 		.4byte	.LCFI34
 1980 0278 06000000 		.4byte	.LCFI35
 1981 027c 0200     		.2byte	0x2
 1982 027e 7D       		.byte	0x7d
 1983 027f 18       		.sleb128 24
 1984 0280 06000000 		.4byte	.LCFI35
 1985 0284 7C000000 		.4byte	.LFE11
 1986 0288 0200     		.2byte	0x2
 1987 028a 77       		.byte	0x77
 1988 028b 18       		.sleb128 24
 1989 028c 00000000 		.4byte	0x0
 1990 0290 00000000 		.4byte	0x0
 1991              	.LLST12:
 1992 0294 00000000 		.4byte	.LFB12
 1993 0298 02000000 		.4byte	.LCFI36
 1994 029c 0100     		.2byte	0x1
 1995 029e 5D       		.byte	0x5d
 1996 029f 02000000 		.4byte	.LCFI36
 1997 02a3 04000000 		.4byte	.LCFI37
 1998 02a7 0200     		.2byte	0x2
 1999 02a9 7D       		.byte	0x7d
 2000 02aa 04       		.sleb128 4
 2001 02ab 04000000 		.4byte	.LCFI37
 2002 02af 06000000 		.4byte	.LCFI38
 2003 02b3 0200     		.2byte	0x2
 2004 02b5 7D       		.byte	0x7d
 2005 02b6 20       		.sleb128 32
 2006 02b7 06000000 		.4byte	.LCFI38
 2007 02bb D2010000 		.4byte	.LFE12
 2008 02bf 0200     		.2byte	0x2
 2009 02c1 77       		.byte	0x77
 2010 02c2 20       		.sleb128 32
 2011 02c3 00000000 		.4byte	0x0
 2012 02c7 00000000 		.4byte	0x0
 2013              	.LLST13:
 2014 02cb 00000000 		.4byte	.LFB13
 2015 02cf 02000000 		.4byte	.LCFI39
 2016 02d3 0100     		.2byte	0x1
 2017 02d5 5D       		.byte	0x5d
 2018 02d6 02000000 		.4byte	.LCFI39
 2019 02da 04000000 		.4byte	.LCFI40
 2020 02de 0200     		.2byte	0x2
 2021 02e0 7D       		.byte	0x7d
 2022 02e1 08       		.sleb128 8
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 72


 2023 02e2 04000000 		.4byte	.LCFI40
 2024 02e6 06000000 		.4byte	.LCFI41
 2025 02ea 0200     		.2byte	0x2
 2026 02ec 7D       		.byte	0x7d
 2027 02ed 20       		.sleb128 32
 2028 02ee 06000000 		.4byte	.LCFI41
 2029 02f2 46010000 		.4byte	.LFE13
 2030 02f6 0200     		.2byte	0x2
 2031 02f8 77       		.byte	0x77
 2032 02f9 18       		.sleb128 24
 2033 02fa 00000000 		.4byte	0x0
 2034 02fe 00000000 		.4byte	0x0
 2035              	.LLST14:
 2036 0302 00000000 		.4byte	.LFB14
 2037 0306 02000000 		.4byte	.LCFI42
 2038 030a 0100     		.2byte	0x1
 2039 030c 5D       		.byte	0x5d
 2040 030d 02000000 		.4byte	.LCFI42
 2041 0311 04000000 		.4byte	.LCFI43
 2042 0315 0200     		.2byte	0x2
 2043 0317 7D       		.byte	0x7d
 2044 0318 04       		.sleb128 4
 2045 0319 04000000 		.4byte	.LCFI43
 2046 031d 06000000 		.4byte	.LCFI44
 2047 0321 0200     		.2byte	0x2
 2048 0323 7D       		.byte	0x7d
 2049 0324 18       		.sleb128 24
 2050 0325 06000000 		.4byte	.LCFI44
 2051 0329 3A000000 		.4byte	.LFE14
 2052 032d 0200     		.2byte	0x2
 2053 032f 77       		.byte	0x77
 2054 0330 18       		.sleb128 24
 2055 0331 00000000 		.4byte	0x0
 2056 0335 00000000 		.4byte	0x0
 2057              		.file 2 ".\\Generated_Source\\PSoC5\\/cytypes.h"
 2058              		.section	.debug_info
 2059 0000 1D080000 		.4byte	0x81d
 2060 0004 0200     		.2byte	0x2
 2061 0006 00000000 		.4byte	.Ldebug_abbrev0
 2062 000a 04       		.byte	0x4
 2063 000b 01       		.uleb128 0x1
 2064 000c 6F000000 		.4byte	.LASF79
 2065 0010 01       		.byte	0x1
 2066 0011 A1020000 		.4byte	.LASF80
 2067 0015 CF020000 		.4byte	.LASF81
 2068 0019 00000000 		.4byte	0x0
 2069 001d 00000000 		.4byte	0x0
 2070 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 2071 0025 00000000 		.4byte	.Ldebug_line0
 2072 0029 02       		.uleb128 0x2
 2073 002a 01       		.byte	0x1
 2074 002b 06       		.byte	0x6
 2075 002c CD000000 		.4byte	.LASF0
 2076 0030 02       		.uleb128 0x2
 2077 0031 01       		.byte	0x1
 2078 0032 08       		.byte	0x8
 2079 0033 0C040000 		.4byte	.LASF1
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 73


 2080 0037 02       		.uleb128 0x2
 2081 0038 02       		.byte	0x2
 2082 0039 05       		.byte	0x5
 2083 003a 49040000 		.4byte	.LASF2
 2084 003e 02       		.uleb128 0x2
 2085 003f 02       		.byte	0x2
 2086 0040 07       		.byte	0x7
 2087 0041 54020000 		.4byte	.LASF3
 2088 0045 02       		.uleb128 0x2
 2089 0046 04       		.byte	0x4
 2090 0047 05       		.byte	0x5
 2091 0048 2B010000 		.4byte	.LASF4
 2092 004c 02       		.uleb128 0x2
 2093 004d 04       		.byte	0x4
 2094 004e 07       		.byte	0x7
 2095 004f 14020000 		.4byte	.LASF5
 2096 0053 02       		.uleb128 0x2
 2097 0054 08       		.byte	0x8
 2098 0055 05       		.byte	0x5
 2099 0056 BF000000 		.4byte	.LASF6
 2100 005a 02       		.uleb128 0x2
 2101 005b 08       		.byte	0x8
 2102 005c 07       		.byte	0x7
 2103 005d 49000000 		.4byte	.LASF7
 2104 0061 03       		.uleb128 0x3
 2105 0062 04       		.byte	0x4
 2106 0063 05       		.byte	0x5
 2107 0064 696E7400 		.ascii	"int\000"
 2108 0068 02       		.uleb128 0x2
 2109 0069 04       		.byte	0x4
 2110 006a 07       		.byte	0x7
 2111 006b EB010000 		.4byte	.LASF8
 2112 006f 04       		.uleb128 0x4
 2113 0070 6A010000 		.4byte	.LASF9
 2114 0074 02       		.byte	0x2
 2115 0075 4C       		.byte	0x4c
 2116 0076 30000000 		.4byte	0x30
 2117 007a 04       		.uleb128 0x4
 2118 007b 06000000 		.4byte	.LASF10
 2119 007f 02       		.byte	0x2
 2120 0080 4D       		.byte	0x4d
 2121 0081 3E000000 		.4byte	0x3e
 2122 0085 04       		.uleb128 0x4
 2123 0086 8D010000 		.4byte	.LASF11
 2124 008a 02       		.byte	0x2
 2125 008b 4E       		.byte	0x4e
 2126 008c 4C000000 		.4byte	0x4c
 2127 0090 04       		.uleb128 0x4
 2128 0091 1F010000 		.4byte	.LASF12
 2129 0095 02       		.byte	0x2
 2130 0096 51       		.byte	0x51
 2131 0097 45000000 		.4byte	0x45
 2132 009b 02       		.uleb128 0x2
 2133 009c 04       		.byte	0x4
 2134 009d 04       		.byte	0x4
 2135 009e E9030000 		.4byte	.LASF13
 2136 00a2 02       		.uleb128 0x2
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 74


 2137 00a3 08       		.byte	0x8
 2138 00a4 04       		.byte	0x4
 2139 00a5 70010000 		.4byte	.LASF14
 2140 00a9 02       		.uleb128 0x2
 2141 00aa 01       		.byte	0x1
 2142 00ab 08       		.byte	0x8
 2143 00ac B0040000 		.4byte	.LASF15
 2144 00b0 05       		.uleb128 0x5
 2145 00b1 04       		.byte	0x4
 2146 00b2 07       		.byte	0x7
 2147 00b3 06       		.uleb128 0x6
 2148 00b4 01       		.byte	0x1
 2149 00b5 69040000 		.4byte	.LASF16
 2150 00b9 01       		.byte	0x1
 2151 00ba C2       		.byte	0xc2
 2152 00bb 01       		.byte	0x1
 2153 00bc 00000000 		.4byte	.LFB0
 2154 00c0 80000000 		.4byte	.LFE0
 2155 00c4 00000000 		.4byte	.LLST0
 2156 00c8 E9000000 		.4byte	0xe9
 2157 00cc 07       		.uleb128 0x7
 2158 00cd 67020000 		.4byte	.LASF18
 2159 00d1 01       		.byte	0x1
 2160 00d2 C2       		.byte	0xc2
 2161 00d3 6F000000 		.4byte	0x6f
 2162 00d7 02       		.byte	0x2
 2163 00d8 91       		.byte	0x91
 2164 00d9 6F       		.sleb128 -17
 2165 00da 08       		.uleb128 0x8
 2166 00db 53040000 		.4byte	.LASF20
 2167 00df 01       		.byte	0x1
 2168 00e0 C6       		.byte	0xc6
 2169 00e1 6F000000 		.4byte	0x6f
 2170 00e5 02       		.byte	0x2
 2171 00e6 91       		.byte	0x91
 2172 00e7 77       		.sleb128 -9
 2173 00e8 00       		.byte	0x0
 2174 00e9 09       		.uleb128 0x9
 2175 00ea 01       		.byte	0x1
 2176 00eb 46030000 		.4byte	.LASF17
 2177 00ef 01       		.byte	0x1
 2178 00f0 0E01     		.2byte	0x10e
 2179 00f2 01       		.byte	0x1
 2180 00f3 00000000 		.4byte	.LFB1
 2181 00f7 2C000000 		.4byte	.LFE1
 2182 00fb 37000000 		.4byte	.LLST1
 2183 00ff 13010000 		.4byte	0x113
 2184 0103 0A       		.uleb128 0xa
 2185 0104 67020000 		.4byte	.LASF18
 2186 0108 01       		.byte	0x1
 2187 0109 0E01     		.2byte	0x10e
 2188 010b 6F000000 		.4byte	0x6f
 2189 010f 02       		.byte	0x2
 2190 0110 91       		.byte	0x91
 2191 0111 77       		.sleb128 -9
 2192 0112 00       		.byte	0x0
 2193 0113 09       		.uleb128 0x9
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 75


 2194 0114 01       		.byte	0x1
 2195 0115 1A040000 		.4byte	.LASF19
 2196 0119 01       		.byte	0x1
 2197 011a 3F01     		.2byte	0x13f
 2198 011c 01       		.byte	0x1
 2199 011d 00000000 		.4byte	.LFB2
 2200 0121 2C000000 		.4byte	.LFE2
 2201 0125 6E000000 		.4byte	.LLST2
 2202 0129 3B010000 		.4byte	0x13b
 2203 012d 0B       		.uleb128 0xb
 2204 012e 6900     		.ascii	"i\000"
 2205 0130 01       		.byte	0x1
 2206 0131 4201     		.2byte	0x142
 2207 0133 6F000000 		.4byte	0x6f
 2208 0137 02       		.byte	0x2
 2209 0138 91       		.byte	0x91
 2210 0139 77       		.sleb128 -9
 2211 013a 00       		.byte	0x0
 2212 013b 09       		.uleb128 0x9
 2213 013c 01       		.byte	0x1
 2214 013d 7B000000 		.4byte	.LASF21
 2215 0141 01       		.byte	0x1
 2216 0142 6001     		.2byte	0x160
 2217 0144 01       		.byte	0x1
 2218 0145 00000000 		.4byte	.LFB3
 2219 0149 7C000000 		.4byte	.LFE3
 2220 014d A5000000 		.4byte	.LLST3
 2221 0151 81010000 		.4byte	0x181
 2222 0155 0B       		.uleb128 0xb
 2223 0156 6900     		.ascii	"i\000"
 2224 0158 01       		.byte	0x1
 2225 0159 6301     		.2byte	0x163
 2226 015b 6F000000 		.4byte	0x6f
 2227 015f 02       		.byte	0x2
 2228 0160 91       		.byte	0x91
 2229 0161 75       		.sleb128 -11
 2230 0162 0B       		.uleb128 0xb
 2231 0163 706F7300 		.ascii	"pos\000"
 2232 0167 01       		.byte	0x1
 2233 0168 6401     		.2byte	0x164
 2234 016a 6F000000 		.4byte	0x6f
 2235 016e 02       		.byte	0x2
 2236 016f 91       		.byte	0x91
 2237 0170 76       		.sleb128 -10
 2238 0171 0C       		.uleb128 0xc
 2239 0172 9B030000 		.4byte	.LASF22
 2240 0176 01       		.byte	0x1
 2241 0177 6501     		.2byte	0x165
 2242 0179 6F000000 		.4byte	0x6f
 2243 017d 02       		.byte	0x2
 2244 017e 91       		.byte	0x91
 2245 017f 77       		.sleb128 -9
 2246 0180 00       		.byte	0x0
 2247 0181 09       		.uleb128 0x9
 2248 0182 01       		.byte	0x1
 2249 0183 83020000 		.4byte	.LASF23
 2250 0187 01       		.byte	0x1
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 76


 2251 0188 A001     		.2byte	0x1a0
 2252 018a 01       		.byte	0x1
 2253 018b 00000000 		.4byte	.LFB4
 2254 018f C0010000 		.4byte	.LFE4
 2255 0193 DC000000 		.4byte	.LLST4
 2256 0197 F6010000 		.4byte	0x1f6
 2257 019b 0A       		.uleb128 0xa
 2258 019c 67020000 		.4byte	.LASF18
 2259 01a0 01       		.byte	0x1
 2260 01a1 A001     		.2byte	0x1a0
 2261 01a3 6F000000 		.4byte	0x6f
 2262 01a7 02       		.byte	0x2
 2263 01a8 91       		.byte	0x91
 2264 01a9 67       		.sleb128 -25
 2265 01aa 0C       		.uleb128 0xc
 2266 01ab CA020000 		.4byte	.LASF24
 2267 01af 01       		.byte	0x1
 2268 01b0 A301     		.2byte	0x1a3
 2269 01b2 85000000 		.4byte	0x85
 2270 01b6 02       		.byte	0x2
 2271 01b7 91       		.byte	0x91
 2272 01b8 6C       		.sleb128 -20
 2273 01b9 0C       		.uleb128 0xc
 2274 01ba 58050000 		.4byte	.LASF25
 2275 01be 01       		.byte	0x1
 2276 01bf A401     		.2byte	0x1a4
 2277 01c1 7A000000 		.4byte	0x7a
 2278 01c5 02       		.byte	0x2
 2279 01c6 91       		.byte	0x91
 2280 01c7 72       		.sleb128 -14
 2281 01c8 0C       		.uleb128 0xc
 2282 01c9 0D000000 		.4byte	.LASF26
 2283 01cd 01       		.byte	0x1
 2284 01ce A501     		.2byte	0x1a5
 2285 01d0 7A000000 		.4byte	0x7a
 2286 01d4 02       		.byte	0x2
 2287 01d5 91       		.byte	0x91
 2288 01d6 74       		.sleb128 -12
 2289 01d7 0C       		.uleb128 0xc
 2290 01d8 53040000 		.4byte	.LASF20
 2291 01dc 01       		.byte	0x1
 2292 01dd A601     		.2byte	0x1a6
 2293 01df 6F000000 		.4byte	0x6f
 2294 01e3 02       		.byte	0x2
 2295 01e4 91       		.byte	0x91
 2296 01e5 76       		.sleb128 -10
 2297 01e6 0C       		.uleb128 0xc
 2298 01e7 3A040000 		.4byte	.LASF27
 2299 01eb 01       		.byte	0x1
 2300 01ec A701     		.2byte	0x1a7
 2301 01ee 6F000000 		.4byte	0x6f
 2302 01f2 02       		.byte	0x2
 2303 01f3 91       		.byte	0x91
 2304 01f4 77       		.sleb128 -9
 2305 01f5 00       		.byte	0x0
 2306 01f6 09       		.uleb128 0x9
 2307 01f7 01       		.byte	0x1
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 77


 2308 01f8 9F000000 		.4byte	.LASF28
 2309 01fc 01       		.byte	0x1
 2310 01fd 4D02     		.2byte	0x24d
 2311 01ff 01       		.byte	0x1
 2312 0200 00000000 		.4byte	.LFB5
 2313 0204 5C000000 		.4byte	.LFE5
 2314 0208 13010000 		.4byte	.LLST5
 2315 020c 3C020000 		.4byte	0x23c
 2316 0210 0B       		.uleb128 0xb
 2317 0211 6900     		.ascii	"i\000"
 2318 0213 01       		.byte	0x1
 2319 0214 5002     		.2byte	0x250
 2320 0216 6F000000 		.4byte	0x6f
 2321 021a 02       		.byte	0x2
 2322 021b 91       		.byte	0x91
 2323 021c 75       		.sleb128 -11
 2324 021d 0B       		.uleb128 0xb
 2325 021e 706F7300 		.ascii	"pos\000"
 2326 0222 01       		.byte	0x1
 2327 0223 5102     		.2byte	0x251
 2328 0225 6F000000 		.4byte	0x6f
 2329 0229 02       		.byte	0x2
 2330 022a 91       		.byte	0x91
 2331 022b 76       		.sleb128 -10
 2332 022c 0C       		.uleb128 0xc
 2333 022d 9B030000 		.4byte	.LASF22
 2334 0231 01       		.byte	0x1
 2335 0232 5202     		.2byte	0x252
 2336 0234 6F000000 		.4byte	0x6f
 2337 0238 02       		.byte	0x2
 2338 0239 91       		.byte	0x91
 2339 023a 77       		.sleb128 -9
 2340 023b 00       		.byte	0x0
 2341 023c 0D       		.uleb128 0xd
 2342 023d 01       		.byte	0x1
 2343 023e 7E030000 		.4byte	.LASF34
 2344 0242 01       		.byte	0x1
 2345 0243 8702     		.2byte	0x287
 2346 0245 01       		.byte	0x1
 2347 0246 6F000000 		.4byte	0x6f
 2348 024a 00000000 		.4byte	.LFB6
 2349 024e 94010000 		.4byte	.LFE6
 2350 0252 4A010000 		.4byte	.LLST6
 2351 0256 D3020000 		.4byte	0x2d3
 2352 025a 0A       		.uleb128 0xa
 2353 025b 67020000 		.4byte	.LASF18
 2354 025f 01       		.byte	0x1
 2355 0260 8702     		.2byte	0x287
 2356 0262 6F000000 		.4byte	0x6f
 2357 0266 02       		.byte	0x2
 2358 0267 91       		.byte	0x91
 2359 0268 6F       		.sleb128 -17
 2360 0269 0C       		.uleb128 0xc
 2361 026a 00050000 		.4byte	.LASF29
 2362 026e 01       		.byte	0x1
 2363 026f 8A02     		.2byte	0x28a
 2364 0271 6F000000 		.4byte	0x6f
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 78


 2365 0275 02       		.byte	0x2
 2366 0276 91       		.byte	0x91
 2367 0277 71       		.sleb128 -15
 2368 0278 0B       		.uleb128 0xb
 2369 0279 706F7300 		.ascii	"pos\000"
 2370 027d 01       		.byte	0x1
 2371 027e 8C02     		.2byte	0x28c
 2372 0280 6F000000 		.4byte	0x6f
 2373 0284 02       		.byte	0x2
 2374 0285 91       		.byte	0x91
 2375 0286 72       		.sleb128 -14
 2376 0287 0C       		.uleb128 0xc
 2377 0288 5A040000 		.4byte	.LASF30
 2378 028c 01       		.byte	0x1
 2379 028d 8D02     		.2byte	0x28d
 2380 028f 6F000000 		.4byte	0x6f
 2381 0293 02       		.byte	0x2
 2382 0294 91       		.byte	0x91
 2383 0295 73       		.sleb128 -13
 2384 0296 0C       		.uleb128 0xc
 2385 0297 53040000 		.4byte	.LASF20
 2386 029b 01       		.byte	0x1
 2387 029c 8F02     		.2byte	0x28f
 2388 029e 6F000000 		.4byte	0x6f
 2389 02a2 02       		.byte	0x2
 2390 02a3 91       		.byte	0x91
 2391 02a4 74       		.sleb128 -12
 2392 02a5 0C       		.uleb128 0xc
 2393 02a6 31000000 		.4byte	.LASF31
 2394 02aa 01       		.byte	0x1
 2395 02ab 9002     		.2byte	0x290
 2396 02ad 6F000000 		.4byte	0x6f
 2397 02b1 02       		.byte	0x2
 2398 02b2 91       		.byte	0x91
 2399 02b3 75       		.sleb128 -11
 2400 02b4 0C       		.uleb128 0xc
 2401 02b5 94010000 		.4byte	.LASF32
 2402 02b9 01       		.byte	0x1
 2403 02ba 9102     		.2byte	0x291
 2404 02bc 6F000000 		.4byte	0x6f
 2405 02c0 02       		.byte	0x2
 2406 02c1 91       		.byte	0x91
 2407 02c2 76       		.sleb128 -10
 2408 02c3 0C       		.uleb128 0xc
 2409 02c4 18030000 		.4byte	.LASF33
 2410 02c8 01       		.byte	0x1
 2411 02c9 9202     		.2byte	0x292
 2412 02cb 6F000000 		.4byte	0x6f
 2413 02cf 02       		.byte	0x2
 2414 02d0 91       		.byte	0x91
 2415 02d1 77       		.sleb128 -9
 2416 02d2 00       		.byte	0x0
 2417 02d3 0D       		.uleb128 0xd
 2418 02d4 01       		.byte	0x1
 2419 02d5 EF030000 		.4byte	.LASF35
 2420 02d9 01       		.byte	0x1
 2421 02da D602     		.2byte	0x2d6
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 79


 2422 02dc 01       		.byte	0x1
 2423 02dd 6F000000 		.4byte	0x6f
 2424 02e1 00000000 		.4byte	.LFB7
 2425 02e5 60000000 		.4byte	.LFE7
 2426 02e9 81010000 		.4byte	.LLST7
 2427 02ed 2E030000 		.4byte	0x32e
 2428 02f1 0A       		.uleb128 0xa
 2429 02f2 53040000 		.4byte	.LASF20
 2430 02f6 01       		.byte	0x1
 2431 02f7 D602     		.2byte	0x2d6
 2432 02f9 6F000000 		.4byte	0x6f
 2433 02fd 02       		.byte	0x2
 2434 02fe 91       		.byte	0x91
 2435 02ff 6F       		.sleb128 -17
 2436 0300 0C       		.uleb128 0xc
 2437 0301 06010000 		.4byte	.LASF36
 2438 0305 01       		.byte	0x1
 2439 0306 D902     		.2byte	0x2d9
 2440 0308 6F000000 		.4byte	0x6f
 2441 030c 02       		.byte	0x2
 2442 030d 91       		.byte	0x91
 2443 030e 75       		.sleb128 -11
 2444 030f 0C       		.uleb128 0xc
 2445 0310 0F010000 		.4byte	.LASF37
 2446 0314 01       		.byte	0x1
 2447 0315 DA02     		.2byte	0x2da
 2448 0317 6F000000 		.4byte	0x6f
 2449 031b 02       		.byte	0x2
 2450 031c 91       		.byte	0x91
 2451 031d 76       		.sleb128 -10
 2452 031e 0C       		.uleb128 0xc
 2453 031f 25010000 		.4byte	.LASF38
 2454 0323 01       		.byte	0x1
 2455 0324 DB02     		.2byte	0x2db
 2456 0326 6F000000 		.4byte	0x6f
 2457 032a 02       		.byte	0x2
 2458 032b 91       		.byte	0x91
 2459 032c 77       		.sleb128 -9
 2460 032d 00       		.byte	0x0
 2461 032e 0D       		.uleb128 0xd
 2462 032f 01       		.byte	0x1
 2463 0330 3E010000 		.4byte	.LASF39
 2464 0334 01       		.byte	0x1
 2465 0335 0203     		.2byte	0x302
 2466 0337 01       		.byte	0x1
 2467 0338 6F000000 		.4byte	0x6f
 2468 033c 00000000 		.4byte	.LFB8
 2469 0340 42000000 		.4byte	.LFE8
 2470 0344 B8010000 		.4byte	.LLST8
 2471 0348 69030000 		.4byte	0x369
 2472 034c 0B       		.uleb128 0xb
 2473 034d 6900     		.ascii	"i\000"
 2474 034f 01       		.byte	0x1
 2475 0350 0503     		.2byte	0x305
 2476 0352 6F000000 		.4byte	0x6f
 2477 0356 02       		.byte	0x2
 2478 0357 91       		.byte	0x91
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 80


 2479 0358 76       		.sleb128 -10
 2480 0359 0C       		.uleb128 0xc
 2481 035a 25010000 		.4byte	.LASF38
 2482 035e 01       		.byte	0x1
 2483 035f 0603     		.2byte	0x306
 2484 0361 6F000000 		.4byte	0x6f
 2485 0365 02       		.byte	0x2
 2486 0366 91       		.byte	0x91
 2487 0367 77       		.sleb128 -9
 2488 0368 00       		.byte	0x0
 2489 0369 09       		.uleb128 0x9
 2490 036a 01       		.byte	0x1
 2491 036b 21030000 		.4byte	.LASF40
 2492 036f 01       		.byte	0x1
 2493 0370 3003     		.2byte	0x330
 2494 0372 01       		.byte	0x1
 2495 0373 00000000 		.4byte	.LFB9
 2496 0377 7C000000 		.4byte	.LFE9
 2497 037b EF010000 		.4byte	.LLST9
 2498 037f CF030000 		.4byte	0x3cf
 2499 0383 0A       		.uleb128 0xa
 2500 0384 53040000 		.4byte	.LASF20
 2501 0388 01       		.byte	0x1
 2502 0389 3003     		.2byte	0x330
 2503 038b 6F000000 		.4byte	0x6f
 2504 038f 02       		.byte	0x2
 2505 0390 91       		.byte	0x91
 2506 0391 6F       		.sleb128 -17
 2507 0392 0B       		.uleb128 0xb
 2508 0393 706F7300 		.ascii	"pos\000"
 2509 0397 01       		.byte	0x1
 2510 0398 3303     		.2byte	0x333
 2511 039a 6F000000 		.4byte	0x6f
 2512 039e 02       		.byte	0x2
 2513 039f 91       		.byte	0x91
 2514 03a0 74       		.sleb128 -12
 2515 03a1 0C       		.uleb128 0xc
 2516 03a2 9B030000 		.4byte	.LASF22
 2517 03a6 01       		.byte	0x1
 2518 03a7 3403     		.2byte	0x334
 2519 03a9 6F000000 		.4byte	0x6f
 2520 03ad 02       		.byte	0x2
 2521 03ae 91       		.byte	0x91
 2522 03af 75       		.sleb128 -11
 2523 03b0 0C       		.uleb128 0xc
 2524 03b1 06010000 		.4byte	.LASF36
 2525 03b5 01       		.byte	0x1
 2526 03b6 3503     		.2byte	0x335
 2527 03b8 6F000000 		.4byte	0x6f
 2528 03bc 02       		.byte	0x2
 2529 03bd 91       		.byte	0x91
 2530 03be 76       		.sleb128 -10
 2531 03bf 0C       		.uleb128 0xc
 2532 03c0 0F010000 		.4byte	.LASF37
 2533 03c4 01       		.byte	0x1
 2534 03c5 3603     		.2byte	0x336
 2535 03c7 6F000000 		.4byte	0x6f
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 81


 2536 03cb 02       		.byte	0x2
 2537 03cc 91       		.byte	0x91
 2538 03cd 77       		.sleb128 -9
 2539 03ce 00       		.byte	0x0
 2540 03cf 09       		.uleb128 0x9
 2541 03d0 01       		.byte	0x1
 2542 03d1 EF000000 		.4byte	.LASF41
 2543 03d5 01       		.byte	0x1
 2544 03d6 6203     		.2byte	0x362
 2545 03d8 01       		.byte	0x1
 2546 03d9 00000000 		.4byte	.LFB10
 2547 03dd 86000000 		.4byte	.LFE10
 2548 03e1 26020000 		.4byte	.LLST10
 2549 03e5 35040000 		.4byte	0x435
 2550 03e9 0A       		.uleb128 0xa
 2551 03ea 53040000 		.4byte	.LASF20
 2552 03ee 01       		.byte	0x1
 2553 03ef 6203     		.2byte	0x362
 2554 03f1 6F000000 		.4byte	0x6f
 2555 03f5 02       		.byte	0x2
 2556 03f6 91       		.byte	0x91
 2557 03f7 6F       		.sleb128 -17
 2558 03f8 0B       		.uleb128 0xb
 2559 03f9 706F7300 		.ascii	"pos\000"
 2560 03fd 01       		.byte	0x1
 2561 03fe 6503     		.2byte	0x365
 2562 0400 6F000000 		.4byte	0x6f
 2563 0404 02       		.byte	0x2
 2564 0405 91       		.byte	0x91
 2565 0406 74       		.sleb128 -12
 2566 0407 0C       		.uleb128 0xc
 2567 0408 9B030000 		.4byte	.LASF22
 2568 040c 01       		.byte	0x1
 2569 040d 6603     		.2byte	0x366
 2570 040f 6F000000 		.4byte	0x6f
 2571 0413 02       		.byte	0x2
 2572 0414 91       		.byte	0x91
 2573 0415 75       		.sleb128 -11
 2574 0416 0C       		.uleb128 0xc
 2575 0417 06010000 		.4byte	.LASF36
 2576 041b 01       		.byte	0x1
 2577 041c 6703     		.2byte	0x367
 2578 041e 6F000000 		.4byte	0x6f
 2579 0422 02       		.byte	0x2
 2580 0423 91       		.byte	0x91
 2581 0424 76       		.sleb128 -10
 2582 0425 0C       		.uleb128 0xc
 2583 0426 0F010000 		.4byte	.LASF37
 2584 042a 01       		.byte	0x1
 2585 042b 6803     		.2byte	0x368
 2586 042d 6F000000 		.4byte	0x6f
 2587 0431 02       		.byte	0x2
 2588 0432 91       		.byte	0x91
 2589 0433 77       		.sleb128 -9
 2590 0434 00       		.byte	0x0
 2591 0435 0D       		.uleb128 0xd
 2592 0436 01       		.byte	0x1
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 82


 2593 0437 6E020000 		.4byte	.LASF42
 2594 043b 01       		.byte	0x1
 2595 043c 9403     		.2byte	0x394
 2596 043e 01       		.byte	0x1
 2597 043f 6F000000 		.4byte	0x6f
 2598 0443 00000000 		.4byte	.LFB11
 2599 0447 7C000000 		.4byte	.LFE11
 2600 044b 5D020000 		.4byte	.LLST11
 2601 044f BB040000 		.4byte	0x4bb
 2602 0453 0A       		.uleb128 0xa
 2603 0454 F9040000 		.4byte	.LASF43
 2604 0458 01       		.byte	0x1
 2605 0459 9403     		.2byte	0x394
 2606 045b 6F000000 		.4byte	0x6f
 2607 045f 02       		.byte	0x2
 2608 0460 91       		.byte	0x91
 2609 0461 6F       		.sleb128 -17
 2610 0462 0A       		.uleb128 0xa
 2611 0463 00000000 		.4byte	.LASF44
 2612 0467 01       		.byte	0x1
 2613 0468 9403     		.2byte	0x394
 2614 046a 6F000000 		.4byte	0x6f
 2615 046e 02       		.byte	0x2
 2616 046f 91       		.byte	0x91
 2617 0470 6E       		.sleb128 -18
 2618 0471 0A       		.uleb128 0xa
 2619 0472 31000000 		.4byte	.LASF31
 2620 0476 01       		.byte	0x1
 2621 0477 9403     		.2byte	0x394
 2622 0479 6F000000 		.4byte	0x6f
 2623 047d 02       		.byte	0x2
 2624 047e 91       		.byte	0x91
 2625 047f 6D       		.sleb128 -19
 2626 0480 0B       		.uleb128 0xb
 2627 0481 6900     		.ascii	"i\000"
 2628 0483 01       		.byte	0x1
 2629 0484 9803     		.2byte	0x398
 2630 0486 6F000000 		.4byte	0x6f
 2631 048a 02       		.byte	0x2
 2632 048b 91       		.byte	0x91
 2633 048c 71       		.sleb128 -15
 2634 048d 0C       		.uleb128 0xc
 2635 048e 61040000 		.4byte	.LASF45
 2636 0492 01       		.byte	0x1
 2637 0493 A203     		.2byte	0x3a2
 2638 0495 6F000000 		.4byte	0x6f
 2639 0499 02       		.byte	0x2
 2640 049a 91       		.byte	0x91
 2641 049b 72       		.sleb128 -14
 2642 049c 0C       		.uleb128 0xc
 2643 049d D2010000 		.4byte	.LASF46
 2644 04a1 01       		.byte	0x1
 2645 04a2 A303     		.2byte	0x3a3
 2646 04a4 6F000000 		.4byte	0x6f
 2647 04a8 02       		.byte	0x2
 2648 04a9 91       		.byte	0x91
 2649 04aa 73       		.sleb128 -13
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 83


 2650 04ab 0C       		.uleb128 0xc
 2651 04ac C4010000 		.4byte	.LASF47
 2652 04b0 01       		.byte	0x1
 2653 04b1 A403     		.2byte	0x3a4
 2654 04b3 BB040000 		.4byte	0x4bb
 2655 04b7 02       		.byte	0x2
 2656 04b8 91       		.byte	0x91
 2657 04b9 74       		.sleb128 -12
 2658 04ba 00       		.byte	0x0
 2659 04bb 0E       		.uleb128 0xe
 2660 04bc 04       		.byte	0x4
 2661 04bd 6F000000 		.4byte	0x6f
 2662 04c1 0D       		.uleb128 0xd
 2663 04c2 01       		.byte	0x1
 2664 04c3 29050000 		.4byte	.LASF48
 2665 04c7 01       		.byte	0x1
 2666 04c8 3004     		.2byte	0x430
 2667 04ca 01       		.byte	0x1
 2668 04cb 6F000000 		.4byte	0x6f
 2669 04cf 00000000 		.4byte	.LFB12
 2670 04d3 D2010000 		.4byte	.LFE12
 2671 04d7 94020000 		.4byte	.LLST12
 2672 04db 85050000 		.4byte	0x585
 2673 04df 0A       		.uleb128 0xa
 2674 04e0 61040000 		.4byte	.LASF45
 2675 04e4 01       		.byte	0x1
 2676 04e5 3004     		.2byte	0x430
 2677 04e7 6F000000 		.4byte	0x6f
 2678 04eb 02       		.byte	0x2
 2679 04ec 91       		.byte	0x91
 2680 04ed 67       		.sleb128 -25
 2681 04ee 0A       		.uleb128 0xa
 2682 04ef F9040000 		.4byte	.LASF43
 2683 04f3 01       		.byte	0x1
 2684 04f4 3004     		.2byte	0x430
 2685 04f6 6F000000 		.4byte	0x6f
 2686 04fa 02       		.byte	0x2
 2687 04fb 91       		.byte	0x91
 2688 04fc 66       		.sleb128 -26
 2689 04fd 0A       		.uleb128 0xa
 2690 04fe 00000000 		.4byte	.LASF44
 2691 0502 01       		.byte	0x1
 2692 0503 3104     		.2byte	0x431
 2693 0505 6F000000 		.4byte	0x6f
 2694 0509 02       		.byte	0x2
 2695 050a 91       		.byte	0x91
 2696 050b 65       		.sleb128 -27
 2697 050c 0A       		.uleb128 0xa
 2698 050d 7B040000 		.4byte	.LASF49
 2699 0511 01       		.byte	0x1
 2700 0512 3104     		.2byte	0x431
 2701 0514 7A000000 		.4byte	0x7a
 2702 0518 02       		.byte	0x2
 2703 0519 91       		.byte	0x91
 2704 051a 62       		.sleb128 -30
 2705 051b 0A       		.uleb128 0xa
 2706 051c 3A040000 		.4byte	.LASF27
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 84


 2707 0520 01       		.byte	0x1
 2708 0521 3104     		.2byte	0x431
 2709 0523 6F000000 		.4byte	0x6f
 2710 0527 02       		.byte	0x2
 2711 0528 91       		.byte	0x91
 2712 0529 00       		.sleb128 0
 2713 052a 0C       		.uleb128 0xc
 2714 052b 41000000 		.4byte	.LASF50
 2715 052f 01       		.byte	0x1
 2716 0530 3504     		.2byte	0x435
 2717 0532 6F000000 		.4byte	0x6f
 2718 0536 02       		.byte	0x2
 2719 0537 91       		.byte	0x91
 2720 0538 69       		.sleb128 -23
 2721 0539 0C       		.uleb128 0xc
 2722 053a BC010000 		.4byte	.LASF51
 2723 053e 01       		.byte	0x1
 2724 053f 3604     		.2byte	0x436
 2725 0541 6F000000 		.4byte	0x6f
 2726 0545 02       		.byte	0x2
 2727 0546 91       		.byte	0x91
 2728 0547 6A       		.sleb128 -22
 2729 0548 0C       		.uleb128 0xc
 2730 0549 F8010000 		.4byte	.LASF52
 2731 054d 01       		.byte	0x1
 2732 054e 3D04     		.2byte	0x43d
 2733 0550 6F000000 		.4byte	0x6f
 2734 0554 02       		.byte	0x2
 2735 0555 91       		.byte	0x91
 2736 0556 6B       		.sleb128 -21
 2737 0557 0C       		.uleb128 0xc
 2738 0558 34010000 		.4byte	.LASF53
 2739 055c 01       		.byte	0x1
 2740 055d 3E04     		.2byte	0x43e
 2741 055f 90000000 		.4byte	0x90
 2742 0563 02       		.byte	0x2
 2743 0564 91       		.byte	0x91
 2744 0565 6C       		.sleb128 -20
 2745 0566 0C       		.uleb128 0xc
 2746 0567 5E010000 		.4byte	.LASF54
 2747 056b 01       		.byte	0x1
 2748 056c 3F04     		.2byte	0x43f
 2749 056e 90000000 		.4byte	0x90
 2750 0572 02       		.byte	0x2
 2751 0573 91       		.byte	0x91
 2752 0574 70       		.sleb128 -16
 2753 0575 0C       		.uleb128 0xc
 2754 0576 C4010000 		.4byte	.LASF47
 2755 057a 01       		.byte	0x1
 2756 057b 4004     		.2byte	0x440
 2757 057d BB040000 		.4byte	0x4bb
 2758 0581 02       		.byte	0x2
 2759 0582 91       		.byte	0x91
 2760 0583 74       		.sleb128 -12
 2761 0584 00       		.byte	0x0
 2762 0585 0D       		.uleb128 0xd
 2763 0586 01       		.byte	0x1
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 85


 2764 0587 98040000 		.4byte	.LASF55
 2765 058b 01       		.byte	0x1
 2766 058c F704     		.2byte	0x4f7
 2767 058e 01       		.byte	0x1
 2768 058f 7A000000 		.4byte	0x7a
 2769 0593 00000000 		.4byte	.LFB13
 2770 0597 46010000 		.4byte	.LFE13
 2771 059b CB020000 		.4byte	.LLST13
 2772 059f 1C060000 		.4byte	0x61c
 2773 05a3 0A       		.uleb128 0xa
 2774 05a4 53040000 		.4byte	.LASF20
 2775 05a8 01       		.byte	0x1
 2776 05a9 F704     		.2byte	0x4f7
 2777 05ab 6F000000 		.4byte	0x6f
 2778 05af 02       		.byte	0x2
 2779 05b0 91       		.byte	0x91
 2780 05b1 6F       		.sleb128 -17
 2781 05b2 0C       		.uleb128 0xc
 2782 05b3 0F030000 		.4byte	.LASF56
 2783 05b7 01       		.byte	0x1
 2784 05b8 FE04     		.2byte	0x4fe
 2785 05ba 6F000000 		.4byte	0x6f
 2786 05be 02       		.byte	0x2
 2787 05bf 91       		.byte	0x91
 2788 05c0 70       		.sleb128 -16
 2789 05c1 0C       		.uleb128 0xc
 2790 05c2 60000000 		.4byte	.LASF57
 2791 05c6 01       		.byte	0x1
 2792 05c7 FF04     		.2byte	0x4ff
 2793 05c9 6F000000 		.4byte	0x6f
 2794 05cd 02       		.byte	0x2
 2795 05ce 91       		.byte	0x91
 2796 05cf 71       		.sleb128 -15
 2797 05d0 0C       		.uleb128 0xc
 2798 05d1 37030000 		.4byte	.LASF58
 2799 05d5 01       		.byte	0x1
 2800 05d6 0005     		.2byte	0x500
 2801 05d8 6F000000 		.4byte	0x6f
 2802 05dc 02       		.byte	0x2
 2803 05dd 91       		.byte	0x91
 2804 05de 72       		.sleb128 -14
 2805 05df 0C       		.uleb128 0xc
 2806 05e0 61040000 		.4byte	.LASF45
 2807 05e4 01       		.byte	0x1
 2808 05e5 0A05     		.2byte	0x50a
 2809 05e7 6F000000 		.4byte	0x6f
 2810 05eb 02       		.byte	0x2
 2811 05ec 91       		.byte	0x91
 2812 05ed 73       		.sleb128 -13
 2813 05ee 0C       		.uleb128 0xc
 2814 05ef F8010000 		.4byte	.LASF52
 2815 05f3 01       		.byte	0x1
 2816 05f4 0B05     		.2byte	0x50b
 2817 05f6 7A000000 		.4byte	0x7a
 2818 05fa 02       		.byte	0x2
 2819 05fb 91       		.byte	0x91
 2820 05fc 74       		.sleb128 -12
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 86


 2821 05fd 0C       		.uleb128 0xc
 2822 05fe F9040000 		.4byte	.LASF43
 2823 0602 01       		.byte	0x1
 2824 0603 0C05     		.2byte	0x50c
 2825 0605 6F000000 		.4byte	0x6f
 2826 0609 02       		.byte	0x2
 2827 060a 91       		.byte	0x91
 2828 060b 76       		.sleb128 -10
 2829 060c 0C       		.uleb128 0xc
 2830 060d 00000000 		.4byte	.LASF44
 2831 0611 01       		.byte	0x1
 2832 0612 0D05     		.2byte	0x50d
 2833 0614 6F000000 		.4byte	0x6f
 2834 0618 02       		.byte	0x2
 2835 0619 91       		.byte	0x91
 2836 061a 77       		.sleb128 -9
 2837 061b 00       		.byte	0x0
 2838 061c 0D       		.uleb128 0xd
 2839 061d 01       		.byte	0x1
 2840 061e D7010000 		.4byte	.LASF59
 2841 0622 01       		.byte	0x1
 2842 0623 D507     		.2byte	0x7d5
 2843 0625 01       		.byte	0x1
 2844 0626 7A000000 		.4byte	0x7a
 2845 062a 00000000 		.4byte	.LFB14
 2846 062e 3A000000 		.4byte	.LFE14
 2847 0632 02030000 		.4byte	.LLST14
 2848 0636 66060000 		.4byte	0x666
 2849 063a 0F       		.uleb128 0xf
 2850 063b 783100   		.ascii	"x1\000"
 2851 063e 01       		.byte	0x1
 2852 063f D507     		.2byte	0x7d5
 2853 0641 7A000000 		.4byte	0x7a
 2854 0645 02       		.byte	0x2
 2855 0646 91       		.byte	0x91
 2856 0647 6E       		.sleb128 -18
 2857 0648 0F       		.uleb128 0xf
 2858 0649 783200   		.ascii	"x2\000"
 2859 064c 01       		.byte	0x1
 2860 064d D507     		.2byte	0x7d5
 2861 064f 7A000000 		.4byte	0x7a
 2862 0653 02       		.byte	0x2
 2863 0654 91       		.byte	0x91
 2864 0655 6C       		.sleb128 -20
 2865 0656 0B       		.uleb128 0xb
 2866 0657 746D7000 		.ascii	"tmp\000"
 2867 065b 01       		.byte	0x1
 2868 065c D807     		.2byte	0x7d8
 2869 065e 85000000 		.4byte	0x85
 2870 0662 02       		.byte	0x2
 2871 0663 91       		.byte	0x91
 2872 0664 74       		.sleb128 -12
 2873 0665 00       		.byte	0x0
 2874 0666 10       		.uleb128 0x10
 2875 0667 6F000000 		.4byte	0x6f
 2876 066b 76060000 		.4byte	0x676
 2877 066f 11       		.uleb128 0x11
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 87


 2878 0670 B0000000 		.4byte	0xb0
 2879 0674 02       		.byte	0x2
 2880 0675 00       		.byte	0x0
 2881 0676 08       		.uleb128 0x8
 2882 0677 CD040000 		.4byte	.LASF60
 2883 067b 01       		.byte	0x1
 2884 067c 66       		.byte	0x66
 2885 067d 66060000 		.4byte	0x666
 2886 0681 05       		.byte	0x5
 2887 0682 03       		.byte	0x3
 2888 0683 24000000 		.4byte	CapSense_centroid
 2889 0687 10       		.uleb128 0x10
 2890 0688 7A000000 		.4byte	0x7a
 2891 068c 97060000 		.4byte	0x697
 2892 0690 11       		.uleb128 0x11
 2893 0691 B0000000 		.4byte	0xb0
 2894 0695 06       		.byte	0x6
 2895 0696 00       		.byte	0x0
 2896 0697 12       		.uleb128 0x12
 2897 0698 01020000 		.4byte	.LASF61
 2898 069c 01       		.byte	0x1
 2899 069d 59       		.byte	0x59
 2900 069e 87060000 		.4byte	0x687
 2901 06a2 01       		.byte	0x1
 2902 06a3 01       		.byte	0x1
 2903 06a4 10       		.uleb128 0x10
 2904 06a5 6F000000 		.4byte	0x6f
 2905 06a9 B4060000 		.4byte	0x6b4
 2906 06ad 11       		.uleb128 0x11
 2907 06ae B0000000 		.4byte	0xb0
 2908 06b2 00       		.byte	0x0
 2909 06b3 00       		.byte	0x0
 2910 06b4 12       		.uleb128 0x12
 2911 06b5 DF040000 		.4byte	.LASF62
 2912 06b9 01       		.byte	0x1
 2913 06ba 5A       		.byte	0x5a
 2914 06bb A4060000 		.4byte	0x6a4
 2915 06bf 01       		.byte	0x1
 2916 06c0 01       		.byte	0x1
 2917 06c1 10       		.uleb128 0x10
 2918 06c2 6F000000 		.4byte	0x6f
 2919 06c6 CC060000 		.4byte	0x6cc
 2920 06ca 13       		.uleb128 0x13
 2921 06cb 00       		.byte	0x0
 2922 06cc 12       		.uleb128 0x12
 2923 06cd 77010000 		.4byte	.LASF63
 2924 06d1 01       		.byte	0x1
 2925 06d2 5B       		.byte	0x5b
 2926 06d3 D9060000 		.4byte	0x6d9
 2927 06d7 01       		.byte	0x1
 2928 06d8 01       		.byte	0x1
 2929 06d9 14       		.uleb128 0x14
 2930 06da C1060000 		.4byte	0x6c1
 2931 06de 15       		.uleb128 0x15
 2932 06df B5040000 		.4byte	.LASF64
 2933 06e3 01       		.byte	0x1
 2934 06e4 5D       		.byte	0x5d
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 88


 2935 06e5 87060000 		.4byte	0x687
 2936 06e9 01       		.byte	0x1
 2937 06ea 05       		.byte	0x5
 2938 06eb 03       		.byte	0x3
 2939 06ec 00000000 		.4byte	CapSense_SensorBaseline
 2940 06f0 10       		.uleb128 0x10
 2941 06f1 6F000000 		.4byte	0x6f
 2942 06f5 00070000 		.4byte	0x700
 2943 06f9 11       		.uleb128 0x11
 2944 06fa B0000000 		.4byte	0xb0
 2945 06fe 06       		.byte	0x6
 2946 06ff 00       		.byte	0x0
 2947 0700 15       		.uleb128 0x15
 2948 0701 0E050000 		.4byte	.LASF65
 2949 0705 01       		.byte	0x1
 2950 0706 5E       		.byte	0x5e
 2951 0707 F0060000 		.4byte	0x6f0
 2952 070b 01       		.byte	0x1
 2953 070c 05       		.byte	0x5
 2954 070d 03       		.byte	0x3
 2955 070e 00000000 		.4byte	CapSense_SensorBaselineLow
 2956 0712 15       		.uleb128 0x15
 2957 0713 68030000 		.4byte	.LASF66
 2958 0717 01       		.byte	0x1
 2959 0718 5F       		.byte	0x5f
 2960 0719 F0060000 		.4byte	0x6f0
 2961 071d 01       		.byte	0x1
 2962 071e 05       		.byte	0x5
 2963 071f 03       		.byte	0x3
 2964 0720 00000000 		.4byte	CapSense_SensorSignal
 2965 0724 15       		.uleb128 0x15
 2966 0725 D9000000 		.4byte	.LASF67
 2967 0729 01       		.byte	0x1
 2968 072a 60       		.byte	0x60
 2969 072b A4060000 		.4byte	0x6a4
 2970 072f 01       		.byte	0x1
 2971 0730 05       		.byte	0x5
 2972 0731 03       		.byte	0x3
 2973 0732 00000000 		.4byte	CapSense_SensorOnMask
 2974 0736 15       		.uleb128 0x15
 2975 0737 9F010000 		.4byte	.LASF68
 2976 073b 01       		.byte	0x1
 2977 073c 62       		.byte	0x62
 2978 073d F0060000 		.4byte	0x6f0
 2979 0741 01       		.byte	0x1
 2980 0742 05       		.byte	0x5
 2981 0743 03       		.byte	0x3
 2982 0744 00000000 		.4byte	CapSense_LowBaselineResetCnt
 2983 0748 15       		.uleb128 0x15
 2984 0749 BA030000 		.4byte	.LASF69
 2985 074d 01       		.byte	0x1
 2986 074e 69       		.byte	0x69
 2987 074f 66060000 		.4byte	0x666
 2988 0753 01       		.byte	0x1
 2989 0754 05       		.byte	0x5
 2990 0755 03       		.byte	0x3
 2991 0756 00000000 		.4byte	CapSense_fingerThreshold
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 89


 2992 075a 15       		.uleb128 0x15
 2993 075b A2030000 		.4byte	.LASF70
 2994 075f 01       		.byte	0x1
 2995 0760 6D       		.byte	0x6d
 2996 0761 66060000 		.4byte	0x666
 2997 0765 01       		.byte	0x1
 2998 0766 05       		.byte	0x5
 2999 0767 03       		.byte	0x3
 3000 0768 00000000 		.4byte	CapSense_noiseThreshold
 3001 076c 15       		.uleb128 0x15
 3002 076d 1D000000 		.4byte	.LASF71
 3003 0771 01       		.byte	0x1
 3004 0772 71       		.byte	0x71
 3005 0773 66060000 		.4byte	0x666
 3006 0777 01       		.byte	0x1
 3007 0778 05       		.byte	0x5
 3008 0779 03       		.byte	0x3
 3009 077a 00000000 		.4byte	CapSense_hysteresis
 3010 077e 15       		.uleb128 0x15
 3011 077f 86040000 		.4byte	.LASF72
 3012 0783 01       		.byte	0x1
 3013 0784 75       		.byte	0x75
 3014 0785 66060000 		.4byte	0x666
 3015 0789 01       		.byte	0x1
 3016 078a 05       		.byte	0x5
 3017 078b 03       		.byte	0x3
 3018 078c 00000000 		.4byte	CapSense_debounce
 3019 0790 15       		.uleb128 0x15
 3020 0791 3F050000 		.4byte	.LASF73
 3021 0795 01       		.byte	0x1
 3022 0796 79       		.byte	0x79
 3023 0797 66060000 		.4byte	0x666
 3024 079b 01       		.byte	0x1
 3025 079c 05       		.byte	0x5
 3026 079d 03       		.byte	0x3
 3027 079e 00000000 		.4byte	CapSense_debounceCounter
 3028 07a2 15       		.uleb128 0x15
 3029 07a3 3E020000 		.4byte	.LASF74
 3030 07a7 01       		.byte	0x1
 3031 07a8 7D       		.byte	0x7d
 3032 07a9 B4070000 		.4byte	0x7b4
 3033 07ad 01       		.byte	0x1
 3034 07ae 05       		.byte	0x5
 3035 07af 03       		.byte	0x3
 3036 07b0 00000000 		.4byte	CapSense_rawDataIndex
 3037 07b4 14       		.uleb128 0x14
 3038 07b5 66060000 		.4byte	0x666
 3039 07b9 15       		.uleb128 0x15
 3040 07ba 60050000 		.4byte	.LASF75
 3041 07be 01       		.byte	0x1
 3042 07bf 84       		.byte	0x84
 3043 07c0 CB070000 		.4byte	0x7cb
 3044 07c4 01       		.byte	0x1
 3045 07c5 05       		.byte	0x5
 3046 07c6 03       		.byte	0x3
 3047 07c7 00000000 		.4byte	CapSense_numberOfSensors
 3048 07cb 14       		.uleb128 0x14
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 90


 3049 07cc 66060000 		.4byte	0x666
 3050 07d0 10       		.uleb128 0x10
 3051 07d1 7A000000 		.4byte	0x7a
 3052 07d5 E0070000 		.4byte	0x7e0
 3053 07d9 11       		.uleb128 0x11
 3054 07da B0000000 		.4byte	0xb0
 3055 07de 00       		.byte	0x0
 3056 07df 00       		.byte	0x0
 3057 07e0 15       		.uleb128 0x15
 3058 07e1 D3030000 		.4byte	.LASF76
 3059 07e5 01       		.byte	0x1
 3060 07e6 8B       		.byte	0x8b
 3061 07e7 F2070000 		.4byte	0x7f2
 3062 07eb 01       		.byte	0x1
 3063 07ec 05       		.byte	0x5
 3064 07ed 03       		.byte	0x3
 3065 07ee 00000000 		.4byte	CapSense_centroidMult
 3066 07f2 14       		.uleb128 0x14
 3067 07f3 D0070000 		.4byte	0x7d0
 3068 07f7 15       		.uleb128 0x15
 3069 07f8 26020000 		.4byte	.LASF77
 3070 07fc 01       		.byte	0x1
 3071 07fd 8F       		.byte	0x8f
 3072 07fe 09080000 		.4byte	0x809
 3073 0802 01       		.byte	0x1
 3074 0803 05       		.byte	0x5
 3075 0804 03       		.byte	0x3
 3076 0805 00000000 		.4byte	CapSense_posFiltersMask
 3077 0809 14       		.uleb128 0x14
 3078 080a A4060000 		.4byte	0x6a4
 3079 080e 15       		.uleb128 0x15
 3080 080f F7020000 		.4byte	.LASF78
 3081 0813 01       		.byte	0x1
 3082 0814 93       		.byte	0x93
 3083 0815 66060000 		.4byte	0x666
 3084 0819 01       		.byte	0x1
 3085 081a 05       		.byte	0x5
 3086 081b 03       		.byte	0x3
 3087 081c 00000000 		.4byte	CapSense_posFiltersData
 3088 0820 00       		.byte	0x0
 3089              		.section	.debug_abbrev
 3090 0000 01       		.uleb128 0x1
 3091 0001 11       		.uleb128 0x11
 3092 0002 01       		.byte	0x1
 3093 0003 25       		.uleb128 0x25
 3094 0004 0E       		.uleb128 0xe
 3095 0005 13       		.uleb128 0x13
 3096 0006 0B       		.uleb128 0xb
 3097 0007 03       		.uleb128 0x3
 3098 0008 0E       		.uleb128 0xe
 3099 0009 1B       		.uleb128 0x1b
 3100 000a 0E       		.uleb128 0xe
 3101 000b 11       		.uleb128 0x11
 3102 000c 01       		.uleb128 0x1
 3103 000d 52       		.uleb128 0x52
 3104 000e 01       		.uleb128 0x1
 3105 000f 55       		.uleb128 0x55
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 91


 3106 0010 06       		.uleb128 0x6
 3107 0011 10       		.uleb128 0x10
 3108 0012 06       		.uleb128 0x6
 3109 0013 00       		.byte	0x0
 3110 0014 00       		.byte	0x0
 3111 0015 02       		.uleb128 0x2
 3112 0016 24       		.uleb128 0x24
 3113 0017 00       		.byte	0x0
 3114 0018 0B       		.uleb128 0xb
 3115 0019 0B       		.uleb128 0xb
 3116 001a 3E       		.uleb128 0x3e
 3117 001b 0B       		.uleb128 0xb
 3118 001c 03       		.uleb128 0x3
 3119 001d 0E       		.uleb128 0xe
 3120 001e 00       		.byte	0x0
 3121 001f 00       		.byte	0x0
 3122 0020 03       		.uleb128 0x3
 3123 0021 24       		.uleb128 0x24
 3124 0022 00       		.byte	0x0
 3125 0023 0B       		.uleb128 0xb
 3126 0024 0B       		.uleb128 0xb
 3127 0025 3E       		.uleb128 0x3e
 3128 0026 0B       		.uleb128 0xb
 3129 0027 03       		.uleb128 0x3
 3130 0028 08       		.uleb128 0x8
 3131 0029 00       		.byte	0x0
 3132 002a 00       		.byte	0x0
 3133 002b 04       		.uleb128 0x4
 3134 002c 16       		.uleb128 0x16
 3135 002d 00       		.byte	0x0
 3136 002e 03       		.uleb128 0x3
 3137 002f 0E       		.uleb128 0xe
 3138 0030 3A       		.uleb128 0x3a
 3139 0031 0B       		.uleb128 0xb
 3140 0032 3B       		.uleb128 0x3b
 3141 0033 0B       		.uleb128 0xb
 3142 0034 49       		.uleb128 0x49
 3143 0035 13       		.uleb128 0x13
 3144 0036 00       		.byte	0x0
 3145 0037 00       		.byte	0x0
 3146 0038 05       		.uleb128 0x5
 3147 0039 24       		.uleb128 0x24
 3148 003a 00       		.byte	0x0
 3149 003b 0B       		.uleb128 0xb
 3150 003c 0B       		.uleb128 0xb
 3151 003d 3E       		.uleb128 0x3e
 3152 003e 0B       		.uleb128 0xb
 3153 003f 00       		.byte	0x0
 3154 0040 00       		.byte	0x0
 3155 0041 06       		.uleb128 0x6
 3156 0042 2E       		.uleb128 0x2e
 3157 0043 01       		.byte	0x1
 3158 0044 3F       		.uleb128 0x3f
 3159 0045 0C       		.uleb128 0xc
 3160 0046 03       		.uleb128 0x3
 3161 0047 0E       		.uleb128 0xe
 3162 0048 3A       		.uleb128 0x3a
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 92


 3163 0049 0B       		.uleb128 0xb
 3164 004a 3B       		.uleb128 0x3b
 3165 004b 0B       		.uleb128 0xb
 3166 004c 27       		.uleb128 0x27
 3167 004d 0C       		.uleb128 0xc
 3168 004e 11       		.uleb128 0x11
 3169 004f 01       		.uleb128 0x1
 3170 0050 12       		.uleb128 0x12
 3171 0051 01       		.uleb128 0x1
 3172 0052 40       		.uleb128 0x40
 3173 0053 06       		.uleb128 0x6
 3174 0054 01       		.uleb128 0x1
 3175 0055 13       		.uleb128 0x13
 3176 0056 00       		.byte	0x0
 3177 0057 00       		.byte	0x0
 3178 0058 07       		.uleb128 0x7
 3179 0059 05       		.uleb128 0x5
 3180 005a 00       		.byte	0x0
 3181 005b 03       		.uleb128 0x3
 3182 005c 0E       		.uleb128 0xe
 3183 005d 3A       		.uleb128 0x3a
 3184 005e 0B       		.uleb128 0xb
 3185 005f 3B       		.uleb128 0x3b
 3186 0060 0B       		.uleb128 0xb
 3187 0061 49       		.uleb128 0x49
 3188 0062 13       		.uleb128 0x13
 3189 0063 02       		.uleb128 0x2
 3190 0064 0A       		.uleb128 0xa
 3191 0065 00       		.byte	0x0
 3192 0066 00       		.byte	0x0
 3193 0067 08       		.uleb128 0x8
 3194 0068 34       		.uleb128 0x34
 3195 0069 00       		.byte	0x0
 3196 006a 03       		.uleb128 0x3
 3197 006b 0E       		.uleb128 0xe
 3198 006c 3A       		.uleb128 0x3a
 3199 006d 0B       		.uleb128 0xb
 3200 006e 3B       		.uleb128 0x3b
 3201 006f 0B       		.uleb128 0xb
 3202 0070 49       		.uleb128 0x49
 3203 0071 13       		.uleb128 0x13
 3204 0072 02       		.uleb128 0x2
 3205 0073 0A       		.uleb128 0xa
 3206 0074 00       		.byte	0x0
 3207 0075 00       		.byte	0x0
 3208 0076 09       		.uleb128 0x9
 3209 0077 2E       		.uleb128 0x2e
 3210 0078 01       		.byte	0x1
 3211 0079 3F       		.uleb128 0x3f
 3212 007a 0C       		.uleb128 0xc
 3213 007b 03       		.uleb128 0x3
 3214 007c 0E       		.uleb128 0xe
 3215 007d 3A       		.uleb128 0x3a
 3216 007e 0B       		.uleb128 0xb
 3217 007f 3B       		.uleb128 0x3b
 3218 0080 05       		.uleb128 0x5
 3219 0081 27       		.uleb128 0x27
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 93


 3220 0082 0C       		.uleb128 0xc
 3221 0083 11       		.uleb128 0x11
 3222 0084 01       		.uleb128 0x1
 3223 0085 12       		.uleb128 0x12
 3224 0086 01       		.uleb128 0x1
 3225 0087 40       		.uleb128 0x40
 3226 0088 06       		.uleb128 0x6
 3227 0089 01       		.uleb128 0x1
 3228 008a 13       		.uleb128 0x13
 3229 008b 00       		.byte	0x0
 3230 008c 00       		.byte	0x0
 3231 008d 0A       		.uleb128 0xa
 3232 008e 05       		.uleb128 0x5
 3233 008f 00       		.byte	0x0
 3234 0090 03       		.uleb128 0x3
 3235 0091 0E       		.uleb128 0xe
 3236 0092 3A       		.uleb128 0x3a
 3237 0093 0B       		.uleb128 0xb
 3238 0094 3B       		.uleb128 0x3b
 3239 0095 05       		.uleb128 0x5
 3240 0096 49       		.uleb128 0x49
 3241 0097 13       		.uleb128 0x13
 3242 0098 02       		.uleb128 0x2
 3243 0099 0A       		.uleb128 0xa
 3244 009a 00       		.byte	0x0
 3245 009b 00       		.byte	0x0
 3246 009c 0B       		.uleb128 0xb
 3247 009d 34       		.uleb128 0x34
 3248 009e 00       		.byte	0x0
 3249 009f 03       		.uleb128 0x3
 3250 00a0 08       		.uleb128 0x8
 3251 00a1 3A       		.uleb128 0x3a
 3252 00a2 0B       		.uleb128 0xb
 3253 00a3 3B       		.uleb128 0x3b
 3254 00a4 05       		.uleb128 0x5
 3255 00a5 49       		.uleb128 0x49
 3256 00a6 13       		.uleb128 0x13
 3257 00a7 02       		.uleb128 0x2
 3258 00a8 0A       		.uleb128 0xa
 3259 00a9 00       		.byte	0x0
 3260 00aa 00       		.byte	0x0
 3261 00ab 0C       		.uleb128 0xc
 3262 00ac 34       		.uleb128 0x34
 3263 00ad 00       		.byte	0x0
 3264 00ae 03       		.uleb128 0x3
 3265 00af 0E       		.uleb128 0xe
 3266 00b0 3A       		.uleb128 0x3a
 3267 00b1 0B       		.uleb128 0xb
 3268 00b2 3B       		.uleb128 0x3b
 3269 00b3 05       		.uleb128 0x5
 3270 00b4 49       		.uleb128 0x49
 3271 00b5 13       		.uleb128 0x13
 3272 00b6 02       		.uleb128 0x2
 3273 00b7 0A       		.uleb128 0xa
 3274 00b8 00       		.byte	0x0
 3275 00b9 00       		.byte	0x0
 3276 00ba 0D       		.uleb128 0xd
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 94


 3277 00bb 2E       		.uleb128 0x2e
 3278 00bc 01       		.byte	0x1
 3279 00bd 3F       		.uleb128 0x3f
 3280 00be 0C       		.uleb128 0xc
 3281 00bf 03       		.uleb128 0x3
 3282 00c0 0E       		.uleb128 0xe
 3283 00c1 3A       		.uleb128 0x3a
 3284 00c2 0B       		.uleb128 0xb
 3285 00c3 3B       		.uleb128 0x3b
 3286 00c4 05       		.uleb128 0x5
 3287 00c5 27       		.uleb128 0x27
 3288 00c6 0C       		.uleb128 0xc
 3289 00c7 49       		.uleb128 0x49
 3290 00c8 13       		.uleb128 0x13
 3291 00c9 11       		.uleb128 0x11
 3292 00ca 01       		.uleb128 0x1
 3293 00cb 12       		.uleb128 0x12
 3294 00cc 01       		.uleb128 0x1
 3295 00cd 40       		.uleb128 0x40
 3296 00ce 06       		.uleb128 0x6
 3297 00cf 01       		.uleb128 0x1
 3298 00d0 13       		.uleb128 0x13
 3299 00d1 00       		.byte	0x0
 3300 00d2 00       		.byte	0x0
 3301 00d3 0E       		.uleb128 0xe
 3302 00d4 0F       		.uleb128 0xf
 3303 00d5 00       		.byte	0x0
 3304 00d6 0B       		.uleb128 0xb
 3305 00d7 0B       		.uleb128 0xb
 3306 00d8 49       		.uleb128 0x49
 3307 00d9 13       		.uleb128 0x13
 3308 00da 00       		.byte	0x0
 3309 00db 00       		.byte	0x0
 3310 00dc 0F       		.uleb128 0xf
 3311 00dd 05       		.uleb128 0x5
 3312 00de 00       		.byte	0x0
 3313 00df 03       		.uleb128 0x3
 3314 00e0 08       		.uleb128 0x8
 3315 00e1 3A       		.uleb128 0x3a
 3316 00e2 0B       		.uleb128 0xb
 3317 00e3 3B       		.uleb128 0x3b
 3318 00e4 05       		.uleb128 0x5
 3319 00e5 49       		.uleb128 0x49
 3320 00e6 13       		.uleb128 0x13
 3321 00e7 02       		.uleb128 0x2
 3322 00e8 0A       		.uleb128 0xa
 3323 00e9 00       		.byte	0x0
 3324 00ea 00       		.byte	0x0
 3325 00eb 10       		.uleb128 0x10
 3326 00ec 01       		.uleb128 0x1
 3327 00ed 01       		.byte	0x1
 3328 00ee 49       		.uleb128 0x49
 3329 00ef 13       		.uleb128 0x13
 3330 00f0 01       		.uleb128 0x1
 3331 00f1 13       		.uleb128 0x13
 3332 00f2 00       		.byte	0x0
 3333 00f3 00       		.byte	0x0
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 95


 3334 00f4 11       		.uleb128 0x11
 3335 00f5 21       		.uleb128 0x21
 3336 00f6 00       		.byte	0x0
 3337 00f7 49       		.uleb128 0x49
 3338 00f8 13       		.uleb128 0x13
 3339 00f9 2F       		.uleb128 0x2f
 3340 00fa 0B       		.uleb128 0xb
 3341 00fb 00       		.byte	0x0
 3342 00fc 00       		.byte	0x0
 3343 00fd 12       		.uleb128 0x12
 3344 00fe 34       		.uleb128 0x34
 3345 00ff 00       		.byte	0x0
 3346 0100 03       		.uleb128 0x3
 3347 0101 0E       		.uleb128 0xe
 3348 0102 3A       		.uleb128 0x3a
 3349 0103 0B       		.uleb128 0xb
 3350 0104 3B       		.uleb128 0x3b
 3351 0105 0B       		.uleb128 0xb
 3352 0106 49       		.uleb128 0x49
 3353 0107 13       		.uleb128 0x13
 3354 0108 3F       		.uleb128 0x3f
 3355 0109 0C       		.uleb128 0xc
 3356 010a 3C       		.uleb128 0x3c
 3357 010b 0C       		.uleb128 0xc
 3358 010c 00       		.byte	0x0
 3359 010d 00       		.byte	0x0
 3360 010e 13       		.uleb128 0x13
 3361 010f 21       		.uleb128 0x21
 3362 0110 00       		.byte	0x0
 3363 0111 00       		.byte	0x0
 3364 0112 00       		.byte	0x0
 3365 0113 14       		.uleb128 0x14
 3366 0114 26       		.uleb128 0x26
 3367 0115 00       		.byte	0x0
 3368 0116 49       		.uleb128 0x49
 3369 0117 13       		.uleb128 0x13
 3370 0118 00       		.byte	0x0
 3371 0119 00       		.byte	0x0
 3372 011a 15       		.uleb128 0x15
 3373 011b 34       		.uleb128 0x34
 3374 011c 00       		.byte	0x0
 3375 011d 03       		.uleb128 0x3
 3376 011e 0E       		.uleb128 0xe
 3377 011f 3A       		.uleb128 0x3a
 3378 0120 0B       		.uleb128 0xb
 3379 0121 3B       		.uleb128 0x3b
 3380 0122 0B       		.uleb128 0xb
 3381 0123 49       		.uleb128 0x49
 3382 0124 13       		.uleb128 0x13
 3383 0125 3F       		.uleb128 0x3f
 3384 0126 0C       		.uleb128 0xc
 3385 0127 02       		.uleb128 0x2
 3386 0128 0A       		.uleb128 0xa
 3387 0129 00       		.byte	0x0
 3388 012a 00       		.byte	0x0
 3389 012b 00       		.byte	0x0
 3390              		.section	.debug_pubnames,"",%progbits
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 96


 3391 0000 7B030000 		.4byte	0x37b
 3392 0004 0200     		.2byte	0x2
 3393 0006 00000000 		.4byte	.Ldebug_info0
 3394 000a 21080000 		.4byte	0x821
 3395 000e B3000000 		.4byte	0xb3
 3396 0012 43617053 		.ascii	"CapSense_BaseInit\000"
 3396      656E7365 
 3396      5F426173 
 3396      65496E69 
 3396      7400
 3397 0024 E9000000 		.4byte	0xe9
 3398 0028 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 3398      656E7365 
 3398      5F496E69 
 3398      7469616C 
 3398      697A6553 
 3399 004a 13010000 		.4byte	0x113
 3400 004e 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 3400      656E7365 
 3400      5F496E69 
 3400      7469616C 
 3400      697A6541 
 3401 006e 3B010000 		.4byte	0x13b
 3402 0072 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 3402      656E7365 
 3402      5F496E69 
 3402      7469616C 
 3402      697A6545 
 3403 0096 81010000 		.4byte	0x181
 3404 009a 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 3404      656E7365 
 3404      5F557064 
 3404      61746553 
 3404      656E736F 
 3405 00b8 F6010000 		.4byte	0x1f6
 3406 00bc 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 3406      656E7365 
 3406      5F557064 
 3406      61746545 
 3406      6E61626C 
 3407 00dc 3C020000 		.4byte	0x23c
 3408 00e0 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 3408      656E7365 
 3408      5F436865 
 3408      636B4973 
 3408      53656E73 
 3409 00fd D3020000 		.4byte	0x2d3
 3410 0101 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 3410      656E7365 
 3410      5F436865 
 3410      636B4973 
 3410      57696467 
 3411 011e 2E030000 		.4byte	0x32e
 3412 0122 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 3412      656E7365 
 3412      5F436865 
 3412      636B4973 
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 97


 3412      416E7957 
 3413 0142 69030000 		.4byte	0x369
 3414 0146 43617053 		.ascii	"CapSense_EnableWidget\000"
 3414      656E7365 
 3414      5F456E61 
 3414      626C6557 
 3414      69646765 
 3415 015c CF030000 		.4byte	0x3cf
 3416 0160 43617053 		.ascii	"CapSense_DisableWidget\000"
 3416      656E7365 
 3416      5F446973 
 3416      61626C65 
 3416      57696467 
 3417 0177 35040000 		.4byte	0x435
 3418 017b 43617053 		.ascii	"CapSense_FindMaximum\000"
 3418      656E7365 
 3418      5F46696E 
 3418      644D6178 
 3418      696D756D 
 3419 0190 C1040000 		.4byte	0x4c1
 3420 0194 43617053 		.ascii	"CapSense_CalcCentroid\000"
 3420      656E7365 
 3420      5F43616C 
 3420      6343656E 
 3420      74726F69 
 3421 01aa 85050000 		.4byte	0x585
 3422 01ae 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 3422      656E7365 
 3422      5F476574 
 3422      43656E74 
 3422      726F6964 
 3423 01c6 1C060000 		.4byte	0x61c
 3424 01ca 43617053 		.ascii	"CapSense_IIR4Filter\000"
 3424      656E7365 
 3424      5F494952 
 3424      3446696C 
 3424      74657200 
 3425 01de DE060000 		.4byte	0x6de
 3426 01e2 43617053 		.ascii	"CapSense_SensorBaseline\000"
 3426      656E7365 
 3426      5F53656E 
 3426      736F7242 
 3426      6173656C 
 3427 01fa 00070000 		.4byte	0x700
 3428 01fe 43617053 		.ascii	"CapSense_SensorBaselineLow\000"
 3428      656E7365 
 3428      5F53656E 
 3428      736F7242 
 3428      6173656C 
 3429 0219 12070000 		.4byte	0x712
 3430 021d 43617053 		.ascii	"CapSense_SensorSignal\000"
 3430      656E7365 
 3430      5F53656E 
 3430      736F7253 
 3430      69676E61 
 3431 0233 24070000 		.4byte	0x724
 3432 0237 43617053 		.ascii	"CapSense_SensorOnMask\000"
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 98


 3432      656E7365 
 3432      5F53656E 
 3432      736F724F 
 3432      6E4D6173 
 3433 024d 36070000 		.4byte	0x736
 3434 0251 43617053 		.ascii	"CapSense_LowBaselineResetCnt\000"
 3434      656E7365 
 3434      5F4C6F77 
 3434      42617365 
 3434      6C696E65 
 3435 026e 48070000 		.4byte	0x748
 3436 0272 43617053 		.ascii	"CapSense_fingerThreshold\000"
 3436      656E7365 
 3436      5F66696E 
 3436      67657254 
 3436      68726573 
 3437 028b 5A070000 		.4byte	0x75a
 3438 028f 43617053 		.ascii	"CapSense_noiseThreshold\000"
 3438      656E7365 
 3438      5F6E6F69 
 3438      73655468 
 3438      72657368 
 3439 02a7 6C070000 		.4byte	0x76c
 3440 02ab 43617053 		.ascii	"CapSense_hysteresis\000"
 3440      656E7365 
 3440      5F687973 
 3440      74657265 
 3440      73697300 
 3441 02bf 7E070000 		.4byte	0x77e
 3442 02c3 43617053 		.ascii	"CapSense_debounce\000"
 3442      656E7365 
 3442      5F646562 
 3442      6F756E63 
 3442      6500
 3443 02d5 90070000 		.4byte	0x790
 3444 02d9 43617053 		.ascii	"CapSense_debounceCounter\000"
 3444      656E7365 
 3444      5F646562 
 3444      6F756E63 
 3444      65436F75 
 3445 02f2 A2070000 		.4byte	0x7a2
 3446 02f6 43617053 		.ascii	"CapSense_rawDataIndex\000"
 3446      656E7365 
 3446      5F726177 
 3446      44617461 
 3446      496E6465 
 3447 030c B9070000 		.4byte	0x7b9
 3448 0310 43617053 		.ascii	"CapSense_numberOfSensors\000"
 3448      656E7365 
 3448      5F6E756D 
 3448      6265724F 
 3448      6653656E 
 3449 0329 E0070000 		.4byte	0x7e0
 3450 032d 43617053 		.ascii	"CapSense_centroidMult\000"
 3450      656E7365 
 3450      5F63656E 
 3450      74726F69 
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 99


 3450      644D756C 
 3451 0343 F7070000 		.4byte	0x7f7
 3452 0347 43617053 		.ascii	"CapSense_posFiltersMask\000"
 3452      656E7365 
 3452      5F706F73 
 3452      46696C74 
 3452      6572734D 
 3453 035f 0E080000 		.4byte	0x80e
 3454 0363 43617053 		.ascii	"CapSense_posFiltersData\000"
 3454      656E7365 
 3454      5F706F73 
 3454      46696C74 
 3454      65727344 
 3455 037b 00000000 		.4byte	0x0
 3456              		.section	.debug_aranges,"",%progbits
 3457 0000 8C000000 		.4byte	0x8c
 3458 0004 0200     		.2byte	0x2
 3459 0006 00000000 		.4byte	.Ldebug_info0
 3460 000a 04       		.byte	0x4
 3461 000b 00       		.byte	0x0
 3462 000c 0000     		.2byte	0x0
 3463 000e 0000     		.2byte	0x0
 3464 0010 00000000 		.4byte	.LFB0
 3465 0014 80000000 		.4byte	.LFE0-.LFB0
 3466 0018 00000000 		.4byte	.LFB1
 3467 001c 2C000000 		.4byte	.LFE1-.LFB1
 3468 0020 00000000 		.4byte	.LFB2
 3469 0024 2C000000 		.4byte	.LFE2-.LFB2
 3470 0028 00000000 		.4byte	.LFB3
 3471 002c 7C000000 		.4byte	.LFE3-.LFB3
 3472 0030 00000000 		.4byte	.LFB4
 3473 0034 C0010000 		.4byte	.LFE4-.LFB4
 3474 0038 00000000 		.4byte	.LFB5
 3475 003c 5C000000 		.4byte	.LFE5-.LFB5
 3476 0040 00000000 		.4byte	.LFB6
 3477 0044 94010000 		.4byte	.LFE6-.LFB6
 3478 0048 00000000 		.4byte	.LFB7
 3479 004c 60000000 		.4byte	.LFE7-.LFB7
 3480 0050 00000000 		.4byte	.LFB8
 3481 0054 42000000 		.4byte	.LFE8-.LFB8
 3482 0058 00000000 		.4byte	.LFB9
 3483 005c 7C000000 		.4byte	.LFE9-.LFB9
 3484 0060 00000000 		.4byte	.LFB10
 3485 0064 86000000 		.4byte	.LFE10-.LFB10
 3486 0068 00000000 		.4byte	.LFB11
 3487 006c 7C000000 		.4byte	.LFE11-.LFB11
 3488 0070 00000000 		.4byte	.LFB12
 3489 0074 D2010000 		.4byte	.LFE12-.LFB12
 3490 0078 00000000 		.4byte	.LFB13
 3491 007c 46010000 		.4byte	.LFE13-.LFB13
 3492 0080 00000000 		.4byte	.LFB14
 3493 0084 3A000000 		.4byte	.LFE14-.LFB14
 3494 0088 00000000 		.4byte	0x0
 3495 008c 00000000 		.4byte	0x0
 3496              		.section	.debug_ranges,"",%progbits
 3497              	.Ldebug_ranges0:
 3498 0000 00000000 		.4byte	.Ltext0
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 100


 3499 0004 00000000 		.4byte	.Letext0
 3500 0008 00000000 		.4byte	.LFB0
 3501 000c 80000000 		.4byte	.LFE0
 3502 0010 00000000 		.4byte	.LFB1
 3503 0014 2C000000 		.4byte	.LFE1
 3504 0018 00000000 		.4byte	.LFB2
 3505 001c 2C000000 		.4byte	.LFE2
 3506 0020 00000000 		.4byte	.LFB3
 3507 0024 7C000000 		.4byte	.LFE3
 3508 0028 00000000 		.4byte	.LFB4
 3509 002c C0010000 		.4byte	.LFE4
 3510 0030 00000000 		.4byte	.LFB5
 3511 0034 5C000000 		.4byte	.LFE5
 3512 0038 00000000 		.4byte	.LFB6
 3513 003c 94010000 		.4byte	.LFE6
 3514 0040 00000000 		.4byte	.LFB7
 3515 0044 60000000 		.4byte	.LFE7
 3516 0048 00000000 		.4byte	.LFB8
 3517 004c 42000000 		.4byte	.LFE8
 3518 0050 00000000 		.4byte	.LFB9
 3519 0054 7C000000 		.4byte	.LFE9
 3520 0058 00000000 		.4byte	.LFB10
 3521 005c 86000000 		.4byte	.LFE10
 3522 0060 00000000 		.4byte	.LFB11
 3523 0064 7C000000 		.4byte	.LFE11
 3524 0068 00000000 		.4byte	.LFB12
 3525 006c D2010000 		.4byte	.LFE12
 3526 0070 00000000 		.4byte	.LFB13
 3527 0074 46010000 		.4byte	.LFE13
 3528 0078 00000000 		.4byte	.LFB14
 3529 007c 3A000000 		.4byte	.LFE14
 3530 0080 00000000 		.4byte	0x0
 3531 0084 00000000 		.4byte	0x0
 3532              		.section	.debug_str,"MS",%progbits,1
 3533              	.LASF44:
 3534 0000 636F756E 		.ascii	"count\000"
 3534      7400
 3535              	.LASF10:
 3536 0006 75696E74 		.ascii	"uint16\000"
 3536      313600
 3537              	.LASF26:
 3538 000d 66696C74 		.ascii	"filteredRawData\000"
 3538      65726564 
 3538      52617744 
 3538      61746100 
 3539              	.LASF71:
 3540 001d 43617053 		.ascii	"CapSense_hysteresis\000"
 3540      656E7365 
 3540      5F687973 
 3540      74657265 
 3540      73697300 
 3541              	.LASF31:
 3542 0031 66696E67 		.ascii	"fingerThreshold\000"
 3542      65725468 
 3542      72657368 
 3542      6F6C6400 
 3543              	.LASF50:
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 101


 3544 0041 706F7350 		.ascii	"posPrev\000"
 3544      72657600 
 3545              	.LASF7:
 3546 0049 6C6F6E67 		.ascii	"long long unsigned int\000"
 3546      206C6F6E 
 3546      6720756E 
 3546      7369676E 
 3546      65642069 
 3547              	.LASF57:
 3548 0060 66697273 		.ascii	"firstTimeIndex\000"
 3548      7454696D 
 3548      65496E64 
 3548      657800
 3549              	.LASF79:
 3550 006f 474E5520 		.ascii	"GNU C 4.4.1\000"
 3550      4320342E 
 3550      342E3100 
 3551              	.LASF21:
 3552 007b 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 3552      656E7365 
 3552      5F496E69 
 3552      7469616C 
 3552      697A6545 
 3553              	.LASF28:
 3554 009f 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 3554      656E7365 
 3554      5F557064 
 3554      61746545 
 3554      6E61626C 
 3555              	.LASF6:
 3556 00bf 6C6F6E67 		.ascii	"long long int\000"
 3556      206C6F6E 
 3556      6720696E 
 3556      7400
 3557              	.LASF0:
 3558 00cd 7369676E 		.ascii	"signed char\000"
 3558      65642063 
 3558      68617200 
 3559              	.LASF67:
 3560 00d9 43617053 		.ascii	"CapSense_SensorOnMask\000"
 3560      656E7365 
 3560      5F53656E 
 3560      736F724F 
 3560      6E4D6173 
 3561              	.LASF41:
 3562 00ef 43617053 		.ascii	"CapSense_DisableWidget\000"
 3562      656E7365 
 3562      5F446973 
 3562      61626C65 
 3562      57696467 
 3563              	.LASF36:
 3564 0106 72617749 		.ascii	"rawIndex\000"
 3564      6E646578 
 3564      00
 3565              	.LASF37:
 3566 010f 6E756D62 		.ascii	"numberOfSensors\000"
 3566      65724F66 
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 102


 3566      53656E73 
 3566      6F727300 
 3567              	.LASF12:
 3568 011f 696E7433 		.ascii	"int32\000"
 3568      3200
 3569              	.LASF38:
 3570 0125 73746174 		.ascii	"state\000"
 3570      6500
 3571              	.LASF4:
 3572 012b 6C6F6E67 		.ascii	"long int\000"
 3572      20696E74 
 3572      00
 3573              	.LASF53:
 3574 0134 6E756D65 		.ascii	"numerator\000"
 3574      7261746F 
 3574      7200
 3575              	.LASF39:
 3576 013e 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 3576      656E7365 
 3576      5F436865 
 3576      636B4973 
 3576      416E7957 
 3577              	.LASF54:
 3578 015e 64656E6F 		.ascii	"denominator\000"
 3578      6D696E61 
 3578      746F7200 
 3579              	.LASF9:
 3580 016a 75696E74 		.ascii	"uint8\000"
 3580      3800
 3581              	.LASF14:
 3582 0170 646F7562 		.ascii	"double\000"
 3582      6C6500
 3583              	.LASF63:
 3584 0177 43617053 		.ascii	"CapSense_widgetNumber\000"
 3584      656E7365 
 3584      5F776964 
 3584      6765744E 
 3584      756D6265 
 3585              	.LASF11:
 3586 018d 75696E74 		.ascii	"uint32\000"
 3586      333200
 3587              	.LASF32:
 3588 0194 68797374 		.ascii	"hysteresis\000"
 3588      65726573 
 3588      697300
 3589              	.LASF68:
 3590 019f 43617053 		.ascii	"CapSense_LowBaselineResetCnt\000"
 3590      656E7365 
 3590      5F4C6F77 
 3590      42617365 
 3590      6C696E65 
 3591              	.LASF51:
 3592 01bc 706F734E 		.ascii	"posNext\000"
 3592      65787400 
 3593              	.LASF47:
 3594 01c4 73746172 		.ascii	"startOfSlider\000"
 3594      744F6653 
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 103


 3594      6C696465 
 3594      7200
 3595              	.LASF46:
 3596 01d2 74656D70 		.ascii	"temp\000"
 3596      00
 3597              	.LASF59:
 3598 01d7 43617053 		.ascii	"CapSense_IIR4Filter\000"
 3598      656E7365 
 3598      5F494952 
 3598      3446696C 
 3598      74657200 
 3599              	.LASF8:
 3600 01eb 756E7369 		.ascii	"unsigned int\000"
 3600      676E6564 
 3600      20696E74 
 3600      00
 3601              	.LASF52:
 3602 01f8 706F7369 		.ascii	"position\000"
 3602      74696F6E 
 3602      00
 3603              	.LASF61:
 3604 0201 43617053 		.ascii	"CapSense_SensorRaw\000"
 3604      656E7365 
 3604      5F53656E 
 3604      736F7252 
 3604      617700
 3605              	.LASF5:
 3606 0214 6C6F6E67 		.ascii	"long unsigned int\000"
 3606      20756E73 
 3606      69676E65 
 3606      6420696E 
 3606      7400
 3607              	.LASF77:
 3608 0226 43617053 		.ascii	"CapSense_posFiltersMask\000"
 3608      656E7365 
 3608      5F706F73 
 3608      46696C74 
 3608      6572734D 
 3609              	.LASF74:
 3610 023e 43617053 		.ascii	"CapSense_rawDataIndex\000"
 3610      656E7365 
 3610      5F726177 
 3610      44617461 
 3610      496E6465 
 3611              	.LASF3:
 3612 0254 73686F72 		.ascii	"short unsigned int\000"
 3612      7420756E 
 3612      7369676E 
 3612      65642069 
 3612      6E7400
 3613              	.LASF18:
 3614 0267 73656E73 		.ascii	"sensor\000"
 3614      6F7200
 3615              	.LASF42:
 3616 026e 43617053 		.ascii	"CapSense_FindMaximum\000"
 3616      656E7365 
 3616      5F46696E 
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 104


 3616      644D6178 
 3616      696D756D 
 3617              	.LASF23:
 3618 0283 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 3618      656E7365 
 3618      5F557064 
 3618      61746553 
 3618      656E736F 
 3619              	.LASF80:
 3620 02a1 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\CapSense_CSHL.c\000"
 3620      6E657261 
 3620      7465645F 
 3620      536F7572 
 3620      63655C50 
 3621              	.LASF24:
 3622 02ca 63616C63 		.ascii	"calc\000"
 3622      00
 3623              	.LASF81:
 3624 02cf 463A5C50 		.ascii	"F:\\PSoC Creator\\connect4\\connect4.cydsn\000"
 3624      536F4320 
 3624      43726561 
 3624      746F725C 
 3624      636F6E6E 
 3625              	.LASF78:
 3626 02f7 43617053 		.ascii	"CapSense_posFiltersData\000"
 3626      656E7365 
 3626      5F706F73 
 3626      46696C74 
 3626      65727344 
 3627              	.LASF56:
 3628 030f 706F7349 		.ascii	"posIndex\000"
 3628      6E646578 
 3628      00
 3629              	.LASF33:
 3630 0318 6465626F 		.ascii	"debounce\000"
 3630      756E6365 
 3630      00
 3631              	.LASF40:
 3632 0321 43617053 		.ascii	"CapSense_EnableWidget\000"
 3632      656E7365 
 3632      5F456E61 
 3632      626C6557 
 3632      69646765 
 3633              	.LASF58:
 3634 0337 706F7346 		.ascii	"posFiltersMask\000"
 3634      696C7465 
 3634      72734D61 
 3634      736B00
 3635              	.LASF17:
 3636 0346 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 3636      656E7365 
 3636      5F496E69 
 3636      7469616C 
 3636      697A6553 
 3637              	.LASF66:
 3638 0368 43617053 		.ascii	"CapSense_SensorSignal\000"
 3638      656E7365 
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 105


 3638      5F53656E 
 3638      736F7253 
 3638      69676E61 
 3639              	.LASF34:
 3640 037e 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 3640      656E7365 
 3640      5F436865 
 3640      636B4973 
 3640      53656E73 
 3641              	.LASF22:
 3642 039b 656E4D61 		.ascii	"enMask\000"
 3642      736B00
 3643              	.LASF70:
 3644 03a2 43617053 		.ascii	"CapSense_noiseThreshold\000"
 3644      656E7365 
 3644      5F6E6F69 
 3644      73655468 
 3644      72657368 
 3645              	.LASF69:
 3646 03ba 43617053 		.ascii	"CapSense_fingerThreshold\000"
 3646      656E7365 
 3646      5F66696E 
 3646      67657254 
 3646      68726573 
 3647              	.LASF76:
 3648 03d3 43617053 		.ascii	"CapSense_centroidMult\000"
 3648      656E7365 
 3648      5F63656E 
 3648      74726F69 
 3648      644D756C 
 3649              	.LASF13:
 3650 03e9 666C6F61 		.ascii	"float\000"
 3650      7400
 3651              	.LASF35:
 3652 03ef 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 3652      656E7365 
 3652      5F436865 
 3652      636B4973 
 3652      57696467 
 3653              	.LASF1:
 3654 040c 756E7369 		.ascii	"unsigned char\000"
 3654      676E6564 
 3654      20636861 
 3654      7200
 3655              	.LASF19:
 3656 041a 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 3656      656E7365 
 3656      5F496E69 
 3656      7469616C 
 3656      697A6541 
 3657              	.LASF27:
 3658 043a 6E6F6973 		.ascii	"noiseThreshold\000"
 3658      65546872 
 3658      6573686F 
 3658      6C6400
 3659              	.LASF2:
 3660 0449 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 106


 3660      7420696E 
 3660      7400
 3661              	.LASF20:
 3662 0453 77696467 		.ascii	"widget\000"
 3662      657400
 3663              	.LASF30:
 3664 045a 6F6E4D61 		.ascii	"onMask\000"
 3664      736B00
 3665              	.LASF45:
 3666 0461 6D617869 		.ascii	"maximum\000"
 3666      6D756D00 
 3667              	.LASF16:
 3668 0469 43617053 		.ascii	"CapSense_BaseInit\000"
 3668      656E7365 
 3668      5F426173 
 3668      65496E69 
 3668      7400
 3669              	.LASF49:
 3670 047b 7265736F 		.ascii	"resolution\000"
 3670      6C757469 
 3670      6F6E00
 3671              	.LASF72:
 3672 0486 43617053 		.ascii	"CapSense_debounce\000"
 3672      656E7365 
 3672      5F646562 
 3672      6F756E63 
 3672      6500
 3673              	.LASF55:
 3674 0498 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 3674      656E7365 
 3674      5F476574 
 3674      43656E74 
 3674      726F6964 
 3675              	.LASF15:
 3676 04b0 63686172 		.ascii	"char\000"
 3676      00
 3677              	.LASF64:
 3678 04b5 43617053 		.ascii	"CapSense_SensorBaseline\000"
 3678      656E7365 
 3678      5F53656E 
 3678      736F7242 
 3678      6173656C 
 3679              	.LASF60:
 3680 04cd 43617053 		.ascii	"CapSense_centroid\000"
 3680      656E7365 
 3680      5F63656E 
 3680      74726F69 
 3680      6400
 3681              	.LASF62:
 3682 04df 43617053 		.ascii	"CapSense_SensorEnableMask\000"
 3682      656E7365 
 3682      5F53656E 
 3682      736F7245 
 3682      6E61626C 
 3683              	.LASF43:
 3684 04f9 6F666673 		.ascii	"offset\000"
 3684      657400
ARM GAS  C:\Users\dmtucker\AppData\Local\Temp\ccg9UjVa.s 			page 107


 3685              	.LASF29:
 3686 0500 6465626F 		.ascii	"debounceIndex\000"
 3686      756E6365 
 3686      496E6465 
 3686      7800
 3687              	.LASF65:
 3688 050e 43617053 		.ascii	"CapSense_SensorBaselineLow\000"
 3688      656E7365 
 3688      5F53656E 
 3688      736F7242 
 3688      6173656C 
 3689              	.LASF48:
 3690 0529 43617053 		.ascii	"CapSense_CalcCentroid\000"
 3690      656E7365 
 3690      5F43616C 
 3690      6343656E 
 3690      74726F69 
 3691              	.LASF73:
 3692 053f 43617053 		.ascii	"CapSense_debounceCounter\000"
 3692      656E7365 
 3692      5F646562 
 3692      6F756E63 
 3692      65436F75 
 3693              	.LASF25:
 3694 0558 74656D70 		.ascii	"tempRaw\000"
 3694      52617700 
 3695              	.LASF75:
 3696 0560 43617053 		.ascii	"CapSense_numberOfSensors\000"
 3696      656E7365 
 3696      5F6E756D 
 3696      6265724F 
 3696      6653656E 
 3697              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"

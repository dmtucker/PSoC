ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"Timer.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 86010000 		.text
  20      02005E00 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.global	Timer_initVar
  24              		.bss
  25              		.type	Timer_initVar, %object
  26              		.size	Timer_initVar, 1
  27              	Timer_initVar:
  28 0000 00       		.space	1
  29              		.section	.text.Timer_Init,"ax",%progbits
  30              		.align	2
  31              		.global	Timer_Init
  32              		.thumb
  33              		.thumb_func
  34              		.type	Timer_Init, %function
  35              	Timer_Init:
  36              	.LFB0:
  37              		.file 1 ".\\Generated_Source\\PSoC5\\Timer.c"
   1:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/Timer.c **** * File Name: Timer.c
   3:.\Generated_Source\PSoC5/Timer.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/Timer.c **** *
   5:.\Generated_Source\PSoC5/Timer.c **** * Description:
   6:.\Generated_Source\PSoC5/Timer.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:.\Generated_Source\PSoC5/Timer.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:.\Generated_Source\PSoC5/Timer.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:.\Generated_Source\PSoC5/Timer.c **** *  by a positive or negative edge signal as well as via software.
  10:.\Generated_Source\PSoC5/Timer.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:.\Generated_Source\PSoC5/Timer.c **** *  falling edge, either edge or continous run.
  12:.\Generated_Source\PSoC5/Timer.c **** *  Interrupts may be generated due to a terminal count condition
  13:.\Generated_Source\PSoC5/Timer.c **** *  or a capture event.
  14:.\Generated_Source\PSoC5/Timer.c **** *
  15:.\Generated_Source\PSoC5/Timer.c **** * Note:
  16:.\Generated_Source\PSoC5/Timer.c **** *
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 2


  17:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
  18:.\Generated_Source\PSoC5/Timer.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/Timer.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/Timer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/Timer.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/Timer.c **** 
  24:.\Generated_Source\PSoC5/Timer.c **** #include "Timer.h"
  25:.\Generated_Source\PSoC5/Timer.c **** 
  26:.\Generated_Source\PSoC5/Timer.c **** uint8 Timer_initVar = 0u;
  27:.\Generated_Source\PSoC5/Timer.c **** 
  28:.\Generated_Source\PSoC5/Timer.c **** 
  29:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
  30:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_Init
  31:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
  32:.\Generated_Source\PSoC5/Timer.c **** *
  33:.\Generated_Source\PSoC5/Timer.c **** * Summary:
  34:.\Generated_Source\PSoC5/Timer.c **** *  Initialize to the schematic state
  35:.\Generated_Source\PSoC5/Timer.c **** *
  36:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
  37:.\Generated_Source\PSoC5/Timer.c **** *  void
  38:.\Generated_Source\PSoC5/Timer.c **** *
  39:.\Generated_Source\PSoC5/Timer.c **** * Return:
  40:.\Generated_Source\PSoC5/Timer.c **** *  void
  41:.\Generated_Source\PSoC5/Timer.c **** *
  42:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
  43:.\Generated_Source\PSoC5/Timer.c **** void Timer_Init(void) 
  44:.\Generated_Source\PSoC5/Timer.c **** {
  38              		.loc 1 44 0
  39              		.cfi_startproc
  40              		@ args = 0, pretend = 0, frame = 8
  41              		@ frame_needed = 1, uses_anonymous_args = 0
  42 0000 80B5     		push	{r7, lr}
  43              	.LCFI0:
  44              		.cfi_def_cfa_offset 8
  45 0002 82B0     		sub	sp, sp, #8
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 16
  48 0004 00AF     		add	r7, sp, #0
  49              		.cfi_offset 14, -4
  50              		.cfi_offset 7, -8
  51              	.LCFI2:
  52              		.cfi_def_cfa_register 7
  45:.\Generated_Source\PSoC5/Timer.c ****     #if(!Timer_UsingFixedFunction)
  46:.\Generated_Source\PSoC5/Timer.c ****             /* Interrupt State Backup for Critical Region*/
  47:.\Generated_Source\PSoC5/Timer.c ****             uint8 Timer_interruptState;
  48:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:.\Generated_Source\PSoC5/Timer.c **** 
  50:.\Generated_Source\PSoC5/Timer.c ****     #if (Timer_UsingFixedFunction)
  51:.\Generated_Source\PSoC5/Timer.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL &= Timer_CTRL_ENABLE;
  53:.\Generated_Source\PSoC5/Timer.c **** 
  54:.\Generated_Source\PSoC5/Timer.c ****         /* Clear the mode bits for continuous run mode */
  55:.\Generated_Source\PSoC5/Timer.c ****         #if (CY_PSOC5A)
  56:.\Generated_Source\PSoC5/Timer.c ****             Timer_CONTROL2 &= ((uint8)(~Timer_CTRL_MODE_MASK));
  57:.\Generated_Source\PSoC5/Timer.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:.\Generated_Source\PSoC5/Timer.c **** 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 3


  59:.\Generated_Source\PSoC5/Timer.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:.\Generated_Source\PSoC5/Timer.c ****             Timer_CONTROL3 &= ((uint8)(~Timer_CTRL_MODE_MASK));
  61:.\Generated_Source\PSoC5/Timer.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:.\Generated_Source\PSoC5/Timer.c **** 
  63:.\Generated_Source\PSoC5/Timer.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:.\Generated_Source\PSoC5/Timer.c ****         #if (Timer_RunModeUsed != 0x0u)
  65:.\Generated_Source\PSoC5/Timer.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:.\Generated_Source\PSoC5/Timer.c ****             Timer_CONTROL |= 0x04u;
  67:.\Generated_Source\PSoC5/Timer.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:.\Generated_Source\PSoC5/Timer.c **** 
  69:.\Generated_Source\PSoC5/Timer.c ****         #if (Timer_RunModeUsed == 2)
  70:.\Generated_Source\PSoC5/Timer.c ****             #if (CY_PSOC5A)
  71:.\Generated_Source\PSoC5/Timer.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:.\Generated_Source\PSoC5/Timer.c ****                 interrupt) is enabled*/
  73:.\Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL2 |= 0x03u;
  74:.\Generated_Source\PSoC5/Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:.\Generated_Source\PSoC5/Timer.c **** 
  76:.\Generated_Source\PSoC5/Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:.\Generated_Source\PSoC5/Timer.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:.\Generated_Source\PSoC5/Timer.c ****                 interrupt) is enabled*/
  79:.\Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL3 |= 0x03u;
  80:.\Generated_Source\PSoC5/Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:.\Generated_Source\PSoC5/Timer.c **** 
  82:.\Generated_Source\PSoC5/Timer.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:.\Generated_Source\PSoC5/Timer.c **** 
  84:.\Generated_Source\PSoC5/Timer.c ****         #if (Timer_UsingHWEnable != 0)
  85:.\Generated_Source\PSoC5/Timer.c ****             #if (CY_PSOC5A)
  86:.\Generated_Source\PSoC5/Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:.\Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL2 |= Timer_CTRL_MODE_PULSEWIDTH;
  88:.\Generated_Source\PSoC5/Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:.\Generated_Source\PSoC5/Timer.c **** 
  90:.\Generated_Source\PSoC5/Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:.\Generated_Source\PSoC5/Timer.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:.\Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL3 &= ((uint8)(~Timer_CTRL_RCOD_MASK));
  93:.\Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL3 |= Timer_CTRL_RCOD;
  94:.\Generated_Source\PSoC5/Timer.c **** 
  95:.\Generated_Source\PSoC5/Timer.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:.\Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL3 &= ((uint8)(~Timer_CTRL_ENBL_MASK));
  97:.\Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL3 |= Timer_CTRL_ENBL;
  98:.\Generated_Source\PSoC5/Timer.c **** 
  99:.\Generated_Source\PSoC5/Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:.\Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL3 |= Timer_CTRL_MODE_CONTINUOUS;
 101:.\Generated_Source\PSoC5/Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:.\Generated_Source\PSoC5/Timer.c **** 
 103:.\Generated_Source\PSoC5/Timer.c ****         #endif /* Configure Run Mode with hardware enable */
 104:.\Generated_Source\PSoC5/Timer.c **** 
 105:.\Generated_Source\PSoC5/Timer.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:.\Generated_Source\PSoC5/Timer.c ****         Timer_RT1 &= ((uint8)(~Timer_RT1_MASK));
 107:.\Generated_Source\PSoC5/Timer.c ****         Timer_RT1 |= Timer_SYNC;
 108:.\Generated_Source\PSoC5/Timer.c **** 
 109:.\Generated_Source\PSoC5/Timer.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:.\Generated_Source\PSoC5/Timer.c ****         Timer_RT1 &= ((uint8)(~Timer_SYNCDSI_MASK));
 111:.\Generated_Source\PSoC5/Timer.c ****         Timer_RT1 |= Timer_SYNCDSI_EN;
 112:.\Generated_Source\PSoC5/Timer.c **** 
 113:.\Generated_Source\PSoC5/Timer.c ****         /* Set the IRQ to use the status register interrupts */
 114:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL2 |= Timer_CTRL2_IRQ_SEL;
 115:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Configuring registers of fixed function implementation */
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 4


 116:.\Generated_Source\PSoC5/Timer.c **** 
 117:.\Generated_Source\PSoC5/Timer.c ****     /* Set Initial values from Configuration */
 118:.\Generated_Source\PSoC5/Timer.c ****     Timer_WritePeriod(Timer_INIT_PERIOD);
  53              		.loc 1 118 0
  54 0006 4FF6FF70 		movw	r0, #65535
  55 000a FFF7FEFF 		bl	Timer_WritePeriod
 119:.\Generated_Source\PSoC5/Timer.c ****     Timer_WriteCounter(Timer_INIT_PERIOD);
  56              		.loc 1 119 0
  57 000e 4FF6FF70 		movw	r0, #65535
  58 0012 FFF7FEFF 		bl	Timer_WriteCounter
 120:.\Generated_Source\PSoC5/Timer.c **** 
 121:.\Generated_Source\PSoC5/Timer.c ****     #if (Timer_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:.\Generated_Source\PSoC5/Timer.c ****         Timer_CAPTURE_COUNT_CTRL |= Timer_CNTR_ENABLE;
 123:.\Generated_Source\PSoC5/Timer.c ****         Timer_SetCaptureCount(Timer_INIT_CAPTURE_COUNT);
 124:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Configure capture counter value */
 125:.\Generated_Source\PSoC5/Timer.c **** 
 126:.\Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UsingFixedFunction)
 127:.\Generated_Source\PSoC5/Timer.c ****         #if (Timer_SoftwareCaptureMode)
 128:.\Generated_Source\PSoC5/Timer.c ****             Timer_SetCaptureMode(Timer_INIT_CAPTURE_MODE);
 129:.\Generated_Source\PSoC5/Timer.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:.\Generated_Source\PSoC5/Timer.c **** 
 131:.\Generated_Source\PSoC5/Timer.c ****         #if (Timer_SoftwareTriggerMode)
 132:.\Generated_Source\PSoC5/Timer.c ****             if (0u == (Timer_CONTROL & Timer__B_TIMER__TM_SOFTWARE))
 133:.\Generated_Source\PSoC5/Timer.c ****             {
 134:.\Generated_Source\PSoC5/Timer.c ****                 Timer_SetTriggerMode(Timer_INIT_TRIGGER_MODE);
 135:.\Generated_Source\PSoC5/Timer.c ****             }
 136:.\Generated_Source\PSoC5/Timer.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 137:.\Generated_Source\PSoC5/Timer.c **** 
 138:.\Generated_Source\PSoC5/Timer.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 139:.\Generated_Source\PSoC5/Timer.c ****         /* Enter Critical Region*/
 140:.\Generated_Source\PSoC5/Timer.c ****         Timer_interruptState = CyEnterCriticalSection();
  59              		.loc 1 140 0
  60 0016 FFF7FEFF 		bl	CyEnterCriticalSection
  61 001a 0346     		mov	r3, r0
  62 001c FB71     		strb	r3, [r7, #7]
 141:.\Generated_Source\PSoC5/Timer.c **** 
 142:.\Generated_Source\PSoC5/Timer.c ****         /* Use the interrupt output of the status register for IRQ output */
 143:.\Generated_Source\PSoC5/Timer.c ****         Timer_STATUS_AUX_CTRL |= Timer_STATUS_ACTL_INT_EN_MASK;
  63              		.loc 1 143 0
  64 001e 46F29B43 		movw	r3, #:lower16:1073767579
  65 0022 C4F20003 		movt	r3, #:upper16:1073767579
  66 0026 46F29B42 		movw	r2, #:lower16:1073767579
  67 002a C4F20002 		movt	r2, #:upper16:1073767579
  68 002e 1278     		ldrb	r2, [r2, #0]
  69 0030 D2B2     		uxtb	r2, r2
  70 0032 42F01002 		orr	r2, r2, #16
  71 0036 D2B2     		uxtb	r2, r2
  72 0038 1A70     		strb	r2, [r3, #0]
 144:.\Generated_Source\PSoC5/Timer.c **** 
 145:.\Generated_Source\PSoC5/Timer.c ****         /* Exit Critical Region*/
 146:.\Generated_Source\PSoC5/Timer.c ****         CyExitCriticalSection(Timer_interruptState);
  73              		.loc 1 146 0
  74 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  75 003c 1846     		mov	r0, r3
  76 003e FFF7FEFF 		bl	CyExitCriticalSection
 147:.\Generated_Source\PSoC5/Timer.c **** 
 148:.\Generated_Source\PSoC5/Timer.c ****         #if (Timer_EnableTriggerMode)
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 5


 149:.\Generated_Source\PSoC5/Timer.c ****             Timer_EnableTrigger();
 150:.\Generated_Source\PSoC5/Timer.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 151:.\Generated_Source\PSoC5/Timer.c **** 
 152:.\Generated_Source\PSoC5/Timer.c ****         #if (Timer_InterruptOnCaptureCount)
 153:.\Generated_Source\PSoC5/Timer.c ****              #if (!Timer_ControlRegRemoved)
 154:.\Generated_Source\PSoC5/Timer.c ****                 Timer_SetInterruptCount(Timer_INIT_INT_CAPTURE_COUNT);
 155:.\Generated_Source\PSoC5/Timer.c ****             #endif /* Set interrupt count in control register if control register is not removed */
 156:.\Generated_Source\PSoC5/Timer.c ****         #endif /*Set interrupt count in UDB implementation if interrupt count feature is checked.*/
 157:.\Generated_Source\PSoC5/Timer.c **** 
 158:.\Generated_Source\PSoC5/Timer.c ****         Timer_ClearFIFO();
  77              		.loc 1 158 0
  78 0042 FFF7FEFF 		bl	Timer_ClearFIFO
 159:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Configure additional features of UDB implementation */
 160:.\Generated_Source\PSoC5/Timer.c **** 
 161:.\Generated_Source\PSoC5/Timer.c ****     Timer_SetInterruptMode(Timer_INIT_INTERRUPT_MODE);
  79              		.loc 1 161 0
  80 0046 4FF00000 		mov	r0, #0
  81 004a FFF7FEFF 		bl	Timer_SetInterruptMode
 162:.\Generated_Source\PSoC5/Timer.c **** }
  82              		.loc 1 162 0
  83 004e 07F10807 		add	r7, r7, #8
  84 0052 BD46     		mov	sp, r7
  85 0054 80BD     		pop	{r7, pc}
  86              		.cfi_endproc
  87              	.LFE0:
  88              		.size	Timer_Init, .-Timer_Init
  89 0056 00BF     		.section	.text.Timer_Enable,"ax",%progbits
  90              		.align	2
  91              		.global	Timer_Enable
  92              		.thumb
  93              		.thumb_func
  94              		.type	Timer_Enable, %function
  95              	Timer_Enable:
  96              	.LFB1:
 163:.\Generated_Source\PSoC5/Timer.c **** 
 164:.\Generated_Source\PSoC5/Timer.c **** 
 165:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 166:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_Enable
 167:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 168:.\Generated_Source\PSoC5/Timer.c **** *
 169:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 170:.\Generated_Source\PSoC5/Timer.c **** *  Enable the Timer
 171:.\Generated_Source\PSoC5/Timer.c **** *
 172:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 173:.\Generated_Source\PSoC5/Timer.c **** *  void
 174:.\Generated_Source\PSoC5/Timer.c **** *
 175:.\Generated_Source\PSoC5/Timer.c **** * Return:
 176:.\Generated_Source\PSoC5/Timer.c **** *  void
 177:.\Generated_Source\PSoC5/Timer.c **** *
 178:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 179:.\Generated_Source\PSoC5/Timer.c **** void Timer_Enable(void) 
 180:.\Generated_Source\PSoC5/Timer.c **** {
  97              		.loc 1 180 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 1, uses_anonymous_args = 0
 101              		@ link register save eliminated.
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 6


 102 0000 80B4     		push	{r7}
 103              	.LCFI3:
 104              		.cfi_def_cfa_offset 4
 105 0002 00AF     		add	r7, sp, #0
 106              		.cfi_offset 7, -4
 107              	.LCFI4:
 108              		.cfi_def_cfa_register 7
 181:.\Generated_Source\PSoC5/Timer.c ****     /* Globally Enable the Fixed Function Block chosen */
 182:.\Generated_Source\PSoC5/Timer.c ****     #if (Timer_UsingFixedFunction)
 183:.\Generated_Source\PSoC5/Timer.c ****         Timer_GLOBAL_ENABLE |= Timer_BLOCK_EN_MASK;
 184:.\Generated_Source\PSoC5/Timer.c ****         Timer_GLOBAL_STBY_ENABLE |= Timer_BLOCK_STBY_EN_MASK;
 185:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 186:.\Generated_Source\PSoC5/Timer.c **** 
 187:.\Generated_Source\PSoC5/Timer.c ****     /* Remove assignment if control register is removed */
 188:.\Generated_Source\PSoC5/Timer.c ****     #if (!Timer_ControlRegRemoved || Timer_UsingFixedFunction)
 189:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL |= Timer_CTRL_ENABLE;
 109              		.loc 1 189 0
 110 0004 46F27B43 		movw	r3, #:lower16:1073767547
 111 0008 C4F20003 		movt	r3, #:upper16:1073767547
 112 000c 46F27B42 		movw	r2, #:lower16:1073767547
 113 0010 C4F20002 		movt	r2, #:upper16:1073767547
 114 0014 1278     		ldrb	r2, [r2, #0]
 115 0016 D2B2     		uxtb	r2, r2
 116 0018 6FEA4262 		mvn	r2, r2, lsl #25
 117 001c 6FEA5262 		mvn	r2, r2, lsr #25
 118 0020 D2B2     		uxtb	r2, r2
 119 0022 1A70     		strb	r2, [r3, #0]
 190:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Remove assignment if control register is removed */
 191:.\Generated_Source\PSoC5/Timer.c **** }
 120              		.loc 1 191 0
 121 0024 BD46     		mov	sp, r7
 122 0026 80BC     		pop	{r7}
 123 0028 7047     		bx	lr
 124              		.cfi_endproc
 125              	.LFE1:
 126              		.size	Timer_Enable, .-Timer_Enable
 127 002a 00BF     		.section	.text.Timer_Start,"ax",%progbits
 128              		.align	2
 129              		.global	Timer_Start
 130              		.thumb
 131              		.thumb_func
 132              		.type	Timer_Start, %function
 133              	Timer_Start:
 134              	.LFB2:
 192:.\Generated_Source\PSoC5/Timer.c **** 
 193:.\Generated_Source\PSoC5/Timer.c **** 
 194:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 195:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_Start
 196:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 197:.\Generated_Source\PSoC5/Timer.c **** *
 198:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 199:.\Generated_Source\PSoC5/Timer.c **** *  The start function initializes the timer with the default values, the
 200:.\Generated_Source\PSoC5/Timer.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 201:.\Generated_Source\PSoC5/Timer.c **** *  the EnableInt command should be called if interrupt generation is required.
 202:.\Generated_Source\PSoC5/Timer.c **** *
 203:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 204:.\Generated_Source\PSoC5/Timer.c **** *  void
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 7


 205:.\Generated_Source\PSoC5/Timer.c **** *
 206:.\Generated_Source\PSoC5/Timer.c **** * Return:
 207:.\Generated_Source\PSoC5/Timer.c **** *  void
 208:.\Generated_Source\PSoC5/Timer.c **** *
 209:.\Generated_Source\PSoC5/Timer.c **** * Global variables:
 210:.\Generated_Source\PSoC5/Timer.c **** *  Timer_initVar: Is modified when this function is called for the
 211:.\Generated_Source\PSoC5/Timer.c **** *   first time. Is used to ensure that initialization happens only once.
 212:.\Generated_Source\PSoC5/Timer.c **** *
 213:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 214:.\Generated_Source\PSoC5/Timer.c **** void Timer_Start(void) 
 215:.\Generated_Source\PSoC5/Timer.c **** {
 135              		.loc 1 215 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 1, uses_anonymous_args = 0
 139 0000 80B5     		push	{r7, lr}
 140              	.LCFI5:
 141              		.cfi_def_cfa_offset 8
 142 0002 00AF     		add	r7, sp, #0
 143              		.cfi_offset 14, -4
 144              		.cfi_offset 7, -8
 145              	.LCFI6:
 146              		.cfi_def_cfa_register 7
 216:.\Generated_Source\PSoC5/Timer.c ****     if(Timer_initVar == 0u)
 147              		.loc 1 216 0
 148 0004 40F20003 		movw	r3, #:lower16:Timer_initVar
 149 0008 C0F20003 		movt	r3, #:upper16:Timer_initVar
 150 000c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 151 000e 002B     		cmp	r3, #0
 152 0010 08D1     		bne	.L6
 217:.\Generated_Source\PSoC5/Timer.c ****     {
 218:.\Generated_Source\PSoC5/Timer.c ****         Timer_Init();
 153              		.loc 1 218 0
 154 0012 FFF7FEFF 		bl	Timer_Init
 219:.\Generated_Source\PSoC5/Timer.c **** 
 220:.\Generated_Source\PSoC5/Timer.c ****         Timer_initVar = 1u;   /* Clear this bit for Initialization */
 155              		.loc 1 220 0
 156 0016 40F20003 		movw	r3, #:lower16:Timer_initVar
 157 001a C0F20003 		movt	r3, #:upper16:Timer_initVar
 158 001e 4FF00102 		mov	r2, #1
 159 0022 1A70     		strb	r2, [r3, #0]
 160              	.L6:
 221:.\Generated_Source\PSoC5/Timer.c ****     }
 222:.\Generated_Source\PSoC5/Timer.c **** 
 223:.\Generated_Source\PSoC5/Timer.c ****     /* Enable the Timer */
 224:.\Generated_Source\PSoC5/Timer.c ****     Timer_Enable();
 161              		.loc 1 224 0
 162 0024 FFF7FEFF 		bl	Timer_Enable
 225:.\Generated_Source\PSoC5/Timer.c **** }
 163              		.loc 1 225 0
 164 0028 80BD     		pop	{r7, pc}
 165              		.cfi_endproc
 166              	.LFE2:
 167              		.size	Timer_Start, .-Timer_Start
 168 002a 00BF     		.section	.text.Timer_Stop,"ax",%progbits
 169              		.align	2
 170              		.global	Timer_Stop
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 8


 171              		.thumb
 172              		.thumb_func
 173              		.type	Timer_Stop, %function
 174              	Timer_Stop:
 175              	.LFB3:
 226:.\Generated_Source\PSoC5/Timer.c **** 
 227:.\Generated_Source\PSoC5/Timer.c **** 
 228:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 229:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_Stop
 230:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 231:.\Generated_Source\PSoC5/Timer.c **** *
 232:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 233:.\Generated_Source\PSoC5/Timer.c **** *  The stop function halts the timer, but does not change any modes or disable
 234:.\Generated_Source\PSoC5/Timer.c **** *  interrupts.
 235:.\Generated_Source\PSoC5/Timer.c **** *
 236:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 237:.\Generated_Source\PSoC5/Timer.c **** *  void
 238:.\Generated_Source\PSoC5/Timer.c **** *
 239:.\Generated_Source\PSoC5/Timer.c **** * Return:
 240:.\Generated_Source\PSoC5/Timer.c **** *  void
 241:.\Generated_Source\PSoC5/Timer.c **** *
 242:.\Generated_Source\PSoC5/Timer.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 243:.\Generated_Source\PSoC5/Timer.c **** *               has no effect on the operation of the timer.
 244:.\Generated_Source\PSoC5/Timer.c **** *
 245:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 246:.\Generated_Source\PSoC5/Timer.c **** void Timer_Stop(void) 
 247:.\Generated_Source\PSoC5/Timer.c **** {
 176              		.loc 1 247 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 1, uses_anonymous_args = 0
 180              		@ link register save eliminated.
 181 0000 80B4     		push	{r7}
 182              	.LCFI7:
 183              		.cfi_def_cfa_offset 4
 184 0002 00AF     		add	r7, sp, #0
 185              		.cfi_offset 7, -4
 186              	.LCFI8:
 187              		.cfi_def_cfa_register 7
 248:.\Generated_Source\PSoC5/Timer.c ****     /* Disable Timer */
 249:.\Generated_Source\PSoC5/Timer.c ****     #if(!Timer_ControlRegRemoved || Timer_UsingFixedFunction)
 250:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL &= ((uint8)(~Timer_CTRL_ENABLE));
 188              		.loc 1 250 0
 189 0004 46F27B43 		movw	r3, #:lower16:1073767547
 190 0008 C4F20003 		movt	r3, #:upper16:1073767547
 191 000c 46F27B42 		movw	r2, #:lower16:1073767547
 192 0010 C4F20002 		movt	r2, #:upper16:1073767547
 193 0014 1278     		ldrb	r2, [r2, #0]
 194 0016 D2B2     		uxtb	r2, r2
 195 0018 02F07F02 		and	r2, r2, #127
 196 001c 1A70     		strb	r2, [r3, #0]
 251:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Remove assignment if control register is removed */
 252:.\Generated_Source\PSoC5/Timer.c **** 
 253:.\Generated_Source\PSoC5/Timer.c ****     /* Globally disable the Fixed Function Block chosen */
 254:.\Generated_Source\PSoC5/Timer.c ****     #if (Timer_UsingFixedFunction)
 255:.\Generated_Source\PSoC5/Timer.c ****         Timer_GLOBAL_ENABLE &= ((uint8)(~Timer_BLOCK_EN_MASK));
 256:.\Generated_Source\PSoC5/Timer.c ****         Timer_GLOBAL_STBY_ENABLE &= ((uint8)(~Timer_BLOCK_STBY_EN_MASK));
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 9


 257:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 258:.\Generated_Source\PSoC5/Timer.c **** }
 197              		.loc 1 258 0
 198 001e BD46     		mov	sp, r7
 199 0020 80BC     		pop	{r7}
 200 0022 7047     		bx	lr
 201              		.cfi_endproc
 202              	.LFE3:
 203              		.size	Timer_Stop, .-Timer_Stop
 204              		.section	.text.Timer_SetInterruptMode,"ax",%progbits
 205              		.align	2
 206              		.global	Timer_SetInterruptMode
 207              		.thumb
 208              		.thumb_func
 209              		.type	Timer_SetInterruptMode, %function
 210              	Timer_SetInterruptMode:
 211              	.LFB4:
 259:.\Generated_Source\PSoC5/Timer.c **** 
 260:.\Generated_Source\PSoC5/Timer.c **** 
 261:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 262:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_SetInterruptMode
 263:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 264:.\Generated_Source\PSoC5/Timer.c **** *
 265:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 266:.\Generated_Source\PSoC5/Timer.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 267:.\Generated_Source\PSoC5/Timer.c **** *  The twosources are caputure and terminal.  One, both or neither may
 268:.\Generated_Source\PSoC5/Timer.c **** *  be selected.
 269:.\Generated_Source\PSoC5/Timer.c **** *
 270:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 271:.\Generated_Source\PSoC5/Timer.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 272:.\Generated_Source\PSoC5/Timer.c **** *                   terminal count or capture.
 273:.\Generated_Source\PSoC5/Timer.c **** *
 274:.\Generated_Source\PSoC5/Timer.c **** * Return:
 275:.\Generated_Source\PSoC5/Timer.c **** *  void
 276:.\Generated_Source\PSoC5/Timer.c **** *
 277:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 278:.\Generated_Source\PSoC5/Timer.c **** void Timer_SetInterruptMode(uint8 interruptMode) 
 279:.\Generated_Source\PSoC5/Timer.c **** {
 212              		.loc 1 279 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 8
 215              		@ frame_needed = 1, uses_anonymous_args = 0
 216              		@ link register save eliminated.
 217 0000 80B4     		push	{r7}
 218              	.LCFI9:
 219              		.cfi_def_cfa_offset 4
 220 0002 83B0     		sub	sp, sp, #12
 221              	.LCFI10:
 222              		.cfi_def_cfa_offset 16
 223 0004 00AF     		add	r7, sp, #0
 224              		.cfi_offset 7, -4
 225              	.LCFI11:
 226              		.cfi_def_cfa_register 7
 227 0006 0346     		mov	r3, r0
 228 0008 FB71     		strb	r3, [r7, #7]
 280:.\Generated_Source\PSoC5/Timer.c ****     Timer_STATUS_MASK = interruptMode;
 229              		.loc 1 280 0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 10


 230 000a 46F28B43 		movw	r3, #:lower16:1073767563
 231 000e C4F20003 		movt	r3, #:upper16:1073767563
 232 0012 FA79     		ldrb	r2, [r7, #7]
 233 0014 1A70     		strb	r2, [r3, #0]
 281:.\Generated_Source\PSoC5/Timer.c **** }
 234              		.loc 1 281 0
 235 0016 07F10C07 		add	r7, r7, #12
 236 001a BD46     		mov	sp, r7
 237 001c 80BC     		pop	{r7}
 238 001e 7047     		bx	lr
 239              		.cfi_endproc
 240              	.LFE4:
 241              		.size	Timer_SetInterruptMode, .-Timer_SetInterruptMode
 242              		.section	.text.Timer_SoftwareCapture,"ax",%progbits
 243              		.align	2
 244              		.global	Timer_SoftwareCapture
 245              		.thumb
 246              		.thumb_func
 247              		.type	Timer_SoftwareCapture, %function
 248              	Timer_SoftwareCapture:
 249              	.LFB5:
 282:.\Generated_Source\PSoC5/Timer.c **** 
 283:.\Generated_Source\PSoC5/Timer.c **** 
 284:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 285:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_SoftwareCapture
 286:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 287:.\Generated_Source\PSoC5/Timer.c **** *
 288:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 289:.\Generated_Source\PSoC5/Timer.c **** *  This function forces a capture independent of the capture signal.
 290:.\Generated_Source\PSoC5/Timer.c **** *
 291:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 292:.\Generated_Source\PSoC5/Timer.c **** *  void
 293:.\Generated_Source\PSoC5/Timer.c **** *
 294:.\Generated_Source\PSoC5/Timer.c **** * Return:
 295:.\Generated_Source\PSoC5/Timer.c **** *  void
 296:.\Generated_Source\PSoC5/Timer.c **** *
 297:.\Generated_Source\PSoC5/Timer.c **** * Side Effects:
 298:.\Generated_Source\PSoC5/Timer.c **** *  An existing hardware capture could be overwritten.
 299:.\Generated_Source\PSoC5/Timer.c **** *
 300:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 301:.\Generated_Source\PSoC5/Timer.c **** void Timer_SoftwareCapture(void) 
 302:.\Generated_Source\PSoC5/Timer.c **** {
 250              		.loc 1 302 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 1, uses_anonymous_args = 0
 254              		@ link register save eliminated.
 255 0000 80B4     		push	{r7}
 256              	.LCFI12:
 257              		.cfi_def_cfa_offset 4
 258 0002 00AF     		add	r7, sp, #0
 259              		.cfi_offset 7, -4
 260              	.LCFI13:
 261              		.cfi_def_cfa_register 7
 303:.\Generated_Source\PSoC5/Timer.c ****     /* Generate a software capture by reading the counter register */
 304:.\Generated_Source\PSoC5/Timer.c ****     (void)Timer_COUNTER_LSB;
 262              		.loc 1 304 0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 11


 263 0004 46F61403 		movw	r3, #:lower16:1073768468
 264 0008 C4F20003 		movt	r3, #:upper16:1073768468
 265 000c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 305:.\Generated_Source\PSoC5/Timer.c ****     /* Capture Data is now in the FIFO */
 306:.\Generated_Source\PSoC5/Timer.c **** }
 266              		.loc 1 306 0
 267 000e BD46     		mov	sp, r7
 268 0010 80BC     		pop	{r7}
 269 0012 7047     		bx	lr
 270              		.cfi_endproc
 271              	.LFE5:
 272              		.size	Timer_SoftwareCapture, .-Timer_SoftwareCapture
 273              		.section	.text.Timer_ReadStatusRegister,"ax",%progbits
 274              		.align	2
 275              		.global	Timer_ReadStatusRegister
 276              		.thumb
 277              		.thumb_func
 278              		.type	Timer_ReadStatusRegister, %function
 279              	Timer_ReadStatusRegister:
 280              	.LFB6:
 307:.\Generated_Source\PSoC5/Timer.c **** 
 308:.\Generated_Source\PSoC5/Timer.c **** 
 309:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 310:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ReadStatusRegister
 311:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 312:.\Generated_Source\PSoC5/Timer.c **** *
 313:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 314:.\Generated_Source\PSoC5/Timer.c **** *  Reads the status register and returns it's state. This function should use
 315:.\Generated_Source\PSoC5/Timer.c **** *  defined types for the bit-field information as the bits in this register may
 316:.\Generated_Source\PSoC5/Timer.c **** *  be permuteable.
 317:.\Generated_Source\PSoC5/Timer.c **** *
 318:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 319:.\Generated_Source\PSoC5/Timer.c **** *  void
 320:.\Generated_Source\PSoC5/Timer.c **** *
 321:.\Generated_Source\PSoC5/Timer.c **** * Return:
 322:.\Generated_Source\PSoC5/Timer.c **** *  The contents of the status register
 323:.\Generated_Source\PSoC5/Timer.c **** *
 324:.\Generated_Source\PSoC5/Timer.c **** * Side Effects:
 325:.\Generated_Source\PSoC5/Timer.c **** *  Status register bits may be clear on read.
 326:.\Generated_Source\PSoC5/Timer.c **** *
 327:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 328:.\Generated_Source\PSoC5/Timer.c **** uint8   Timer_ReadStatusRegister(void) 
 329:.\Generated_Source\PSoC5/Timer.c **** {
 281              		.loc 1 329 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 1, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286 0000 80B4     		push	{r7}
 287              	.LCFI14:
 288              		.cfi_def_cfa_offset 4
 289 0002 00AF     		add	r7, sp, #0
 290              		.cfi_offset 7, -4
 291              	.LCFI15:
 292              		.cfi_def_cfa_register 7
 330:.\Generated_Source\PSoC5/Timer.c ****     return (Timer_STATUS);
 293              		.loc 1 330 0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 12


 294 0004 46F26B43 		movw	r3, #:lower16:1073767531
 295 0008 C4F20003 		movt	r3, #:upper16:1073767531
 296 000c 1B78     		ldrb	r3, [r3, #0]
 297 000e DBB2     		uxtb	r3, r3
 331:.\Generated_Source\PSoC5/Timer.c **** }
 298              		.loc 1 331 0
 299 0010 1846     		mov	r0, r3
 300 0012 BD46     		mov	sp, r7
 301 0014 80BC     		pop	{r7}
 302 0016 7047     		bx	lr
 303              		.cfi_endproc
 304              	.LFE6:
 305              		.size	Timer_ReadStatusRegister, .-Timer_ReadStatusRegister
 306              		.section	.text.Timer_ReadControlRegister,"ax",%progbits
 307              		.align	2
 308              		.global	Timer_ReadControlRegister
 309              		.thumb
 310              		.thumb_func
 311              		.type	Timer_ReadControlRegister, %function
 312              	Timer_ReadControlRegister:
 313              	.LFB7:
 332:.\Generated_Source\PSoC5/Timer.c **** 
 333:.\Generated_Source\PSoC5/Timer.c **** 
 334:.\Generated_Source\PSoC5/Timer.c **** #if (!Timer_ControlRegRemoved) /* Remove API if control register is removed */
 335:.\Generated_Source\PSoC5/Timer.c **** 
 336:.\Generated_Source\PSoC5/Timer.c **** 
 337:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 338:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ReadControlRegister
 339:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 340:.\Generated_Source\PSoC5/Timer.c **** *
 341:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 342:.\Generated_Source\PSoC5/Timer.c **** *  Reads the control register and returns it's value.
 343:.\Generated_Source\PSoC5/Timer.c **** *
 344:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 345:.\Generated_Source\PSoC5/Timer.c **** *  void
 346:.\Generated_Source\PSoC5/Timer.c **** *
 347:.\Generated_Source\PSoC5/Timer.c **** * Return:
 348:.\Generated_Source\PSoC5/Timer.c **** *  The contents of the control register
 349:.\Generated_Source\PSoC5/Timer.c **** *
 350:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 351:.\Generated_Source\PSoC5/Timer.c **** uint8 Timer_ReadControlRegister(void) 
 352:.\Generated_Source\PSoC5/Timer.c **** {
 314              		.loc 1 352 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 1, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 319 0000 80B4     		push	{r7}
 320              	.LCFI16:
 321              		.cfi_def_cfa_offset 4
 322 0002 00AF     		add	r7, sp, #0
 323              		.cfi_offset 7, -4
 324              	.LCFI17:
 325              		.cfi_def_cfa_register 7
 353:.\Generated_Source\PSoC5/Timer.c ****     return ((uint8)Timer_CONTROL);
 326              		.loc 1 353 0
 327 0004 46F27B43 		movw	r3, #:lower16:1073767547
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 13


 328 0008 C4F20003 		movt	r3, #:upper16:1073767547
 329 000c 1B78     		ldrb	r3, [r3, #0]
 330 000e DBB2     		uxtb	r3, r3
 354:.\Generated_Source\PSoC5/Timer.c **** }
 331              		.loc 1 354 0
 332 0010 1846     		mov	r0, r3
 333 0012 BD46     		mov	sp, r7
 334 0014 80BC     		pop	{r7}
 335 0016 7047     		bx	lr
 336              		.cfi_endproc
 337              	.LFE7:
 338              		.size	Timer_ReadControlRegister, .-Timer_ReadControlRegister
 339              		.section	.text.Timer_WriteControlRegister,"ax",%progbits
 340              		.align	2
 341              		.global	Timer_WriteControlRegister
 342              		.thumb
 343              		.thumb_func
 344              		.type	Timer_WriteControlRegister, %function
 345              	Timer_WriteControlRegister:
 346              	.LFB8:
 355:.\Generated_Source\PSoC5/Timer.c **** 
 356:.\Generated_Source\PSoC5/Timer.c **** 
 357:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 358:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_WriteControlRegister
 359:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 360:.\Generated_Source\PSoC5/Timer.c **** *
 361:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 362:.\Generated_Source\PSoC5/Timer.c **** *  Sets the bit-field of the control register.
 363:.\Generated_Source\PSoC5/Timer.c **** *
 364:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 365:.\Generated_Source\PSoC5/Timer.c **** *  control: The contents of the control register
 366:.\Generated_Source\PSoC5/Timer.c **** *
 367:.\Generated_Source\PSoC5/Timer.c **** * Return:
 368:.\Generated_Source\PSoC5/Timer.c **** *
 369:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 370:.\Generated_Source\PSoC5/Timer.c **** void Timer_WriteControlRegister(uint8 control) 
 371:.\Generated_Source\PSoC5/Timer.c **** {
 347              		.loc 1 371 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 8
 350              		@ frame_needed = 1, uses_anonymous_args = 0
 351              		@ link register save eliminated.
 352 0000 80B4     		push	{r7}
 353              	.LCFI18:
 354              		.cfi_def_cfa_offset 4
 355 0002 83B0     		sub	sp, sp, #12
 356              	.LCFI19:
 357              		.cfi_def_cfa_offset 16
 358 0004 00AF     		add	r7, sp, #0
 359              		.cfi_offset 7, -4
 360              	.LCFI20:
 361              		.cfi_def_cfa_register 7
 362 0006 0346     		mov	r3, r0
 363 0008 FB71     		strb	r3, [r7, #7]
 372:.\Generated_Source\PSoC5/Timer.c ****     Timer_CONTROL = control;
 364              		.loc 1 372 0
 365 000a 46F27B43 		movw	r3, #:lower16:1073767547
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 14


 366 000e C4F20003 		movt	r3, #:upper16:1073767547
 367 0012 FA79     		ldrb	r2, [r7, #7]
 368 0014 1A70     		strb	r2, [r3, #0]
 373:.\Generated_Source\PSoC5/Timer.c **** }
 369              		.loc 1 373 0
 370 0016 07F10C07 		add	r7, r7, #12
 371 001a BD46     		mov	sp, r7
 372 001c 80BC     		pop	{r7}
 373 001e 7047     		bx	lr
 374              		.cfi_endproc
 375              	.LFE8:
 376              		.size	Timer_WriteControlRegister, .-Timer_WriteControlRegister
 377              		.section	.text.Timer_ReadPeriod,"ax",%progbits
 378              		.align	2
 379              		.global	Timer_ReadPeriod
 380              		.thumb
 381              		.thumb_func
 382              		.type	Timer_ReadPeriod, %function
 383              	Timer_ReadPeriod:
 384              	.LFB9:
 374:.\Generated_Source\PSoC5/Timer.c **** #endif /* Remove API if control register is removed */
 375:.\Generated_Source\PSoC5/Timer.c **** 
 376:.\Generated_Source\PSoC5/Timer.c **** 
 377:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 378:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ReadPeriod
 379:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 380:.\Generated_Source\PSoC5/Timer.c **** *
 381:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 382:.\Generated_Source\PSoC5/Timer.c **** *  This function returns the current value of the Period.
 383:.\Generated_Source\PSoC5/Timer.c **** *
 384:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 385:.\Generated_Source\PSoC5/Timer.c **** *  void
 386:.\Generated_Source\PSoC5/Timer.c **** *
 387:.\Generated_Source\PSoC5/Timer.c **** * Return:
 388:.\Generated_Source\PSoC5/Timer.c **** *  The present value of the counter.
 389:.\Generated_Source\PSoC5/Timer.c **** *
 390:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC5/Timer.c **** uint16 Timer_ReadPeriod(void) 
 392:.\Generated_Source\PSoC5/Timer.c **** {
 385              		.loc 1 392 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 1, uses_anonymous_args = 0
 389              		@ link register save eliminated.
 390 0000 80B4     		push	{r7}
 391              	.LCFI21:
 392              		.cfi_def_cfa_offset 4
 393 0002 00AF     		add	r7, sp, #0
 394              		.cfi_offset 7, -4
 395              	.LCFI22:
 396              		.cfi_def_cfa_register 7
 393:.\Generated_Source\PSoC5/Timer.c ****    #if(Timer_UsingFixedFunction)
 394:.\Generated_Source\PSoC5/Timer.c ****        return ((uint16)CY_GET_REG16(Timer_PERIOD_LSB_PTR));
 395:.\Generated_Source\PSoC5/Timer.c ****    #else
 396:.\Generated_Source\PSoC5/Timer.c ****        return (CY_GET_REG16(Timer_PERIOD_LSB_PTR));
 397              		.loc 1 396 0
 398 0004 46F65403 		movw	r3, #:lower16:1073768532
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 15


 399 0008 C4F20003 		movt	r3, #:upper16:1073768532
 400 000c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 401 000e 9BB2     		uxth	r3, r3
 397:.\Generated_Source\PSoC5/Timer.c ****    #endif /* (Timer_UsingFixedFunction) */
 398:.\Generated_Source\PSoC5/Timer.c **** }
 402              		.loc 1 398 0
 403 0010 1846     		mov	r0, r3
 404 0012 BD46     		mov	sp, r7
 405 0014 80BC     		pop	{r7}
 406 0016 7047     		bx	lr
 407              		.cfi_endproc
 408              	.LFE9:
 409              		.size	Timer_ReadPeriod, .-Timer_ReadPeriod
 410              		.section	.text.Timer_WritePeriod,"ax",%progbits
 411              		.align	2
 412              		.global	Timer_WritePeriod
 413              		.thumb
 414              		.thumb_func
 415              		.type	Timer_WritePeriod, %function
 416              	Timer_WritePeriod:
 417              	.LFB10:
 399:.\Generated_Source\PSoC5/Timer.c **** 
 400:.\Generated_Source\PSoC5/Timer.c **** 
 401:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 402:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_WritePeriod
 403:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 404:.\Generated_Source\PSoC5/Timer.c **** *
 405:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 406:.\Generated_Source\PSoC5/Timer.c **** *  This function is used to change the period of the counter.  The new period
 407:.\Generated_Source\PSoC5/Timer.c **** *  will be loaded the next time terminal count is detected.
 408:.\Generated_Source\PSoC5/Timer.c **** *
 409:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 410:.\Generated_Source\PSoC5/Timer.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 411:.\Generated_Source\PSoC5/Timer.c **** *          result in the counter remaining at zero.
 412:.\Generated_Source\PSoC5/Timer.c **** *
 413:.\Generated_Source\PSoC5/Timer.c **** * Return:
 414:.\Generated_Source\PSoC5/Timer.c **** *  void
 415:.\Generated_Source\PSoC5/Timer.c **** *
 416:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 417:.\Generated_Source\PSoC5/Timer.c **** void Timer_WritePeriod(uint16 period) 
 418:.\Generated_Source\PSoC5/Timer.c **** {
 418              		.loc 1 418 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 8
 421              		@ frame_needed = 1, uses_anonymous_args = 0
 422              		@ link register save eliminated.
 423 0000 80B4     		push	{r7}
 424              	.LCFI23:
 425              		.cfi_def_cfa_offset 4
 426 0002 83B0     		sub	sp, sp, #12
 427              	.LCFI24:
 428              		.cfi_def_cfa_offset 16
 429 0004 00AF     		add	r7, sp, #0
 430              		.cfi_offset 7, -4
 431              	.LCFI25:
 432              		.cfi_def_cfa_register 7
 433 0006 0346     		mov	r3, r0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 16


 434 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 419:.\Generated_Source\PSoC5/Timer.c ****     #if(Timer_UsingFixedFunction)
 420:.\Generated_Source\PSoC5/Timer.c ****         uint16 period_temp = (uint16)period;
 421:.\Generated_Source\PSoC5/Timer.c ****         CY_SET_REG16(Timer_PERIOD_LSB_PTR, period_temp);
 422:.\Generated_Source\PSoC5/Timer.c ****     #else
 423:.\Generated_Source\PSoC5/Timer.c ****         CY_SET_REG16(Timer_PERIOD_LSB_PTR, period);
 435              		.loc 1 423 0
 436 000a 46F65403 		movw	r3, #:lower16:1073768532
 437 000e C4F20003 		movt	r3, #:upper16:1073768532
 438 0012 FA88     		ldrh	r2, [r7, #6]	@ movhi
 439 0014 1A80     		strh	r2, [r3, #0]	@ movhi
 424:.\Generated_Source\PSoC5/Timer.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 425:.\Generated_Source\PSoC5/Timer.c **** }
 440              		.loc 1 425 0
 441 0016 07F10C07 		add	r7, r7, #12
 442 001a BD46     		mov	sp, r7
 443 001c 80BC     		pop	{r7}
 444 001e 7047     		bx	lr
 445              		.cfi_endproc
 446              	.LFE10:
 447              		.size	Timer_WritePeriod, .-Timer_WritePeriod
 448              		.section	.text.Timer_ReadCapture,"ax",%progbits
 449              		.align	2
 450              		.global	Timer_ReadCapture
 451              		.thumb
 452              		.thumb_func
 453              		.type	Timer_ReadCapture, %function
 454              	Timer_ReadCapture:
 455              	.LFB11:
 426:.\Generated_Source\PSoC5/Timer.c **** 
 427:.\Generated_Source\PSoC5/Timer.c **** 
 428:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 429:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ReadCapture
 430:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 431:.\Generated_Source\PSoC5/Timer.c **** *
 432:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 433:.\Generated_Source\PSoC5/Timer.c **** *  This function returns the last value captured.
 434:.\Generated_Source\PSoC5/Timer.c **** *
 435:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 436:.\Generated_Source\PSoC5/Timer.c **** *  void
 437:.\Generated_Source\PSoC5/Timer.c **** *
 438:.\Generated_Source\PSoC5/Timer.c **** * Return:
 439:.\Generated_Source\PSoC5/Timer.c **** *  Present Capture value.
 440:.\Generated_Source\PSoC5/Timer.c **** *
 441:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 442:.\Generated_Source\PSoC5/Timer.c **** uint16 Timer_ReadCapture(void) 
 443:.\Generated_Source\PSoC5/Timer.c **** {
 456              		.loc 1 443 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 1, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 461 0000 80B4     		push	{r7}
 462              	.LCFI26:
 463              		.cfi_def_cfa_offset 4
 464 0002 00AF     		add	r7, sp, #0
 465              		.cfi_offset 7, -4
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 17


 466              	.LCFI27:
 467              		.cfi_def_cfa_register 7
 444:.\Generated_Source\PSoC5/Timer.c ****    #if(Timer_UsingFixedFunction)
 445:.\Generated_Source\PSoC5/Timer.c ****        return ((uint16)CY_GET_REG16(Timer_CAPTURE_LSB_PTR));
 446:.\Generated_Source\PSoC5/Timer.c ****    #else
 447:.\Generated_Source\PSoC5/Timer.c ****        return (CY_GET_REG16(Timer_CAPTURE_LSB_PTR));
 468              		.loc 1 447 0
 469 0004 46F69403 		movw	r3, #:lower16:1073768596
 470 0008 C4F20003 		movt	r3, #:upper16:1073768596
 471 000c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 472 000e 9BB2     		uxth	r3, r3
 448:.\Generated_Source\PSoC5/Timer.c ****    #endif /* (Timer_UsingFixedFunction) */
 449:.\Generated_Source\PSoC5/Timer.c **** }
 473              		.loc 1 449 0
 474 0010 1846     		mov	r0, r3
 475 0012 BD46     		mov	sp, r7
 476 0014 80BC     		pop	{r7}
 477 0016 7047     		bx	lr
 478              		.cfi_endproc
 479              	.LFE11:
 480              		.size	Timer_ReadCapture, .-Timer_ReadCapture
 481              		.section	.text.Timer_WriteCounter,"ax",%progbits
 482              		.align	2
 483              		.global	Timer_WriteCounter
 484              		.thumb
 485              		.thumb_func
 486              		.type	Timer_WriteCounter, %function
 487              	Timer_WriteCounter:
 488              	.LFB12:
 450:.\Generated_Source\PSoC5/Timer.c **** 
 451:.\Generated_Source\PSoC5/Timer.c **** 
 452:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 453:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_WriteCounter
 454:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 455:.\Generated_Source\PSoC5/Timer.c **** *
 456:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 457:.\Generated_Source\PSoC5/Timer.c **** *  This funtion is used to set the counter to a specific value
 458:.\Generated_Source\PSoC5/Timer.c **** *
 459:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 460:.\Generated_Source\PSoC5/Timer.c **** *  counter:  New counter value.
 461:.\Generated_Source\PSoC5/Timer.c **** *
 462:.\Generated_Source\PSoC5/Timer.c **** * Return:
 463:.\Generated_Source\PSoC5/Timer.c **** *  void
 464:.\Generated_Source\PSoC5/Timer.c **** *
 465:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 466:.\Generated_Source\PSoC5/Timer.c **** void Timer_WriteCounter(uint16 counter) \
 467:.\Generated_Source\PSoC5/Timer.c ****                                    
 468:.\Generated_Source\PSoC5/Timer.c **** {
 489              		.loc 1 468 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 8
 492              		@ frame_needed = 1, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 494 0000 80B4     		push	{r7}
 495              	.LCFI28:
 496              		.cfi_def_cfa_offset 4
 497 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 18


 498              	.LCFI29:
 499              		.cfi_def_cfa_offset 16
 500 0004 00AF     		add	r7, sp, #0
 501              		.cfi_offset 7, -4
 502              	.LCFI30:
 503              		.cfi_def_cfa_register 7
 504 0006 0346     		mov	r3, r0
 505 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 469:.\Generated_Source\PSoC5/Timer.c ****    #if(Timer_UsingFixedFunction)
 470:.\Generated_Source\PSoC5/Timer.c ****         /* This functionality is removed until a FixedFunction HW update to
 471:.\Generated_Source\PSoC5/Timer.c ****          * allow this register to be written
 472:.\Generated_Source\PSoC5/Timer.c ****          */
 473:.\Generated_Source\PSoC5/Timer.c ****         CY_SET_REG16(Timer_COUNTER_LSB_PTR, (uint16)counter);
 474:.\Generated_Source\PSoC5/Timer.c ****         
 475:.\Generated_Source\PSoC5/Timer.c ****     #else
 476:.\Generated_Source\PSoC5/Timer.c ****         CY_SET_REG16(Timer_COUNTER_LSB_PTR, counter);
 506              		.loc 1 476 0
 507 000a 46F61403 		movw	r3, #:lower16:1073768468
 508 000e C4F20003 		movt	r3, #:upper16:1073768468
 509 0012 FA88     		ldrh	r2, [r7, #6]	@ movhi
 510 0014 1A80     		strh	r2, [r3, #0]	@ movhi
 477:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 478:.\Generated_Source\PSoC5/Timer.c **** }
 511              		.loc 1 478 0
 512 0016 07F10C07 		add	r7, r7, #12
 513 001a BD46     		mov	sp, r7
 514 001c 80BC     		pop	{r7}
 515 001e 7047     		bx	lr
 516              		.cfi_endproc
 517              	.LFE12:
 518              		.size	Timer_WriteCounter, .-Timer_WriteCounter
 519              		.section	.text.Timer_ReadCounter,"ax",%progbits
 520              		.align	2
 521              		.global	Timer_ReadCounter
 522              		.thumb
 523              		.thumb_func
 524              		.type	Timer_ReadCounter, %function
 525              	Timer_ReadCounter:
 526              	.LFB13:
 479:.\Generated_Source\PSoC5/Timer.c **** 
 480:.\Generated_Source\PSoC5/Timer.c **** 
 481:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 482:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ReadCounter
 483:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 484:.\Generated_Source\PSoC5/Timer.c **** *
 485:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 486:.\Generated_Source\PSoC5/Timer.c **** *  This function returns the current counter value.
 487:.\Generated_Source\PSoC5/Timer.c **** *
 488:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 489:.\Generated_Source\PSoC5/Timer.c **** *  void
 490:.\Generated_Source\PSoC5/Timer.c **** *
 491:.\Generated_Source\PSoC5/Timer.c **** * Return:
 492:.\Generated_Source\PSoC5/Timer.c **** *  Present compare value.
 493:.\Generated_Source\PSoC5/Timer.c **** *
 494:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 495:.\Generated_Source\PSoC5/Timer.c **** uint16 Timer_ReadCounter(void) 
 496:.\Generated_Source\PSoC5/Timer.c **** {
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 19


 527              		.loc 1 496 0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 1, uses_anonymous_args = 0
 531              		@ link register save eliminated.
 532 0000 80B4     		push	{r7}
 533              	.LCFI31:
 534              		.cfi_def_cfa_offset 4
 535 0002 00AF     		add	r7, sp, #0
 536              		.cfi_offset 7, -4
 537              	.LCFI32:
 538              		.cfi_def_cfa_register 7
 497:.\Generated_Source\PSoC5/Timer.c **** 
 498:.\Generated_Source\PSoC5/Timer.c ****     /* Force capture by reading Accumulator */
 499:.\Generated_Source\PSoC5/Timer.c ****     /* Must first do a software capture to be able to read the counter */
 500:.\Generated_Source\PSoC5/Timer.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 501:.\Generated_Source\PSoC5/Timer.c ****     (void)Timer_COUNTER_LSB;
 539              		.loc 1 501 0
 540 0004 46F61403 		movw	r3, #:lower16:1073768468
 541 0008 C4F20003 		movt	r3, #:upper16:1073768468
 542 000c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 502:.\Generated_Source\PSoC5/Timer.c **** 
 503:.\Generated_Source\PSoC5/Timer.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 504:.\Generated_Source\PSoC5/Timer.c ****     #if(Timer_UsingFixedFunction)
 505:.\Generated_Source\PSoC5/Timer.c ****         return ((uint16)CY_GET_REG16(Timer_CAPTURE_LSB_PTR));
 506:.\Generated_Source\PSoC5/Timer.c ****     #else
 507:.\Generated_Source\PSoC5/Timer.c ****         return (CY_GET_REG16(Timer_CAPTURE_LSB_PTR));
 543              		.loc 1 507 0
 544 000e 46F69403 		movw	r3, #:lower16:1073768596
 545 0012 C4F20003 		movt	r3, #:upper16:1073768596
 546 0016 1B88     		ldrh	r3, [r3, #0]	@ movhi
 547 0018 9BB2     		uxth	r3, r3
 508:.\Generated_Source\PSoC5/Timer.c ****     #endif /* (Timer_UsingFixedFunction) */
 509:.\Generated_Source\PSoC5/Timer.c **** }
 548              		.loc 1 509 0
 549 001a 1846     		mov	r0, r3
 550 001c BD46     		mov	sp, r7
 551 001e 80BC     		pop	{r7}
 552 0020 7047     		bx	lr
 553              		.cfi_endproc
 554              	.LFE13:
 555              		.size	Timer_ReadCounter, .-Timer_ReadCounter
 556 0022 00BF     		.section	.text.Timer_ClearFIFO,"ax",%progbits
 557              		.align	2
 558              		.global	Timer_ClearFIFO
 559              		.thumb
 560              		.thumb_func
 561              		.type	Timer_ClearFIFO, %function
 562              	Timer_ClearFIFO:
 563              	.LFB14:
 510:.\Generated_Source\PSoC5/Timer.c **** 
 511:.\Generated_Source\PSoC5/Timer.c **** 
 512:.\Generated_Source\PSoC5/Timer.c **** #if(!Timer_UsingFixedFunction) /* UDB Specific Functions */
 513:.\Generated_Source\PSoC5/Timer.c **** 
 514:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 515:.\Generated_Source\PSoC5/Timer.c ****  * The functions below this point are only available using the UDB
 516:.\Generated_Source\PSoC5/Timer.c ****  * implementation.  If a feature is selected, then the API is enabled.
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 20


 517:.\Generated_Source\PSoC5/Timer.c ****  ******************************************************************************/
 518:.\Generated_Source\PSoC5/Timer.c **** 
 519:.\Generated_Source\PSoC5/Timer.c **** 
 520:.\Generated_Source\PSoC5/Timer.c **** #if (Timer_SoftwareCaptureMode)
 521:.\Generated_Source\PSoC5/Timer.c **** 
 522:.\Generated_Source\PSoC5/Timer.c **** 
 523:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 524:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_SetCaptureMode
 525:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 526:.\Generated_Source\PSoC5/Timer.c **** *
 527:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 528:.\Generated_Source\PSoC5/Timer.c **** *  This function sets the capture mode to either rising or falling edge.
 529:.\Generated_Source\PSoC5/Timer.c **** *
 530:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 531:.\Generated_Source\PSoC5/Timer.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 532:.\Generated_Source\PSoC5/Timer.c **** *  The parameter values are defined using the
 533:.\Generated_Source\PSoC5/Timer.c **** *  #define Timer__B_TIMER__CM_NONE 0
 534:.\Generated_Source\PSoC5/Timer.c **** #define Timer__B_TIMER__CM_RISINGEDGE 1
 535:.\Generated_Source\PSoC5/Timer.c **** #define Timer__B_TIMER__CM_FALLINGEDGE 2
 536:.\Generated_Source\PSoC5/Timer.c **** #define Timer__B_TIMER__CM_EITHEREDGE 3
 537:.\Generated_Source\PSoC5/Timer.c **** #define Timer__B_TIMER__CM_SOFTWARE 4
 538:.\Generated_Source\PSoC5/Timer.c ****  identifiers
 539:.\Generated_Source\PSoC5/Timer.c **** *  The following are the possible values of the parameter
 540:.\Generated_Source\PSoC5/Timer.c **** *  Timer__B_TIMER__CM_NONE        - Set Capture mode to None
 541:.\Generated_Source\PSoC5/Timer.c **** *  Timer__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 542:.\Generated_Source\PSoC5/Timer.c **** *  Timer__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 543:.\Generated_Source\PSoC5/Timer.c **** *  Timer__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 544:.\Generated_Source\PSoC5/Timer.c **** *
 545:.\Generated_Source\PSoC5/Timer.c **** * Return:
 546:.\Generated_Source\PSoC5/Timer.c **** *  void
 547:.\Generated_Source\PSoC5/Timer.c **** *
 548:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC5/Timer.c **** void Timer_SetCaptureMode(uint8 captureMode) 
 550:.\Generated_Source\PSoC5/Timer.c **** {
 551:.\Generated_Source\PSoC5/Timer.c ****     /* This must only set to two bits of the control register associated */
 552:.\Generated_Source\PSoC5/Timer.c ****     captureMode = ((uint8)((uint8)captureMode << Timer_CTRL_CAP_MODE_SHIFT));
 553:.\Generated_Source\PSoC5/Timer.c ****     captureMode &= (Timer_CTRL_CAP_MODE_MASK);
 554:.\Generated_Source\PSoC5/Timer.c **** 
 555:.\Generated_Source\PSoC5/Timer.c ****     /* Clear the Current Setting */
 556:.\Generated_Source\PSoC5/Timer.c ****     Timer_CONTROL &= ((uint8)(~Timer_CTRL_CAP_MODE_MASK));
 557:.\Generated_Source\PSoC5/Timer.c **** 
 558:.\Generated_Source\PSoC5/Timer.c ****     /* Write The New Setting */
 559:.\Generated_Source\PSoC5/Timer.c ****     Timer_CONTROL |= captureMode;
 560:.\Generated_Source\PSoC5/Timer.c **** }
 561:.\Generated_Source\PSoC5/Timer.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 562:.\Generated_Source\PSoC5/Timer.c **** 
 563:.\Generated_Source\PSoC5/Timer.c **** 
 564:.\Generated_Source\PSoC5/Timer.c **** #if (Timer_SoftwareTriggerMode)
 565:.\Generated_Source\PSoC5/Timer.c **** 
 566:.\Generated_Source\PSoC5/Timer.c **** 
 567:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 568:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_SetTriggerMode
 569:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 570:.\Generated_Source\PSoC5/Timer.c **** *
 571:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 572:.\Generated_Source\PSoC5/Timer.c **** *  This function sets the trigger input mode
 573:.\Generated_Source\PSoC5/Timer.c **** *
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 21


 574:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 575:.\Generated_Source\PSoC5/Timer.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 576:.\Generated_Source\PSoC5/Timer.c ****     #define Timer__B_TIMER__TM_NONE 0x00u
 577:.\Generated_Source\PSoC5/Timer.c ****     #define Timer__B_TIMER__TM_RISINGEDGE 0x04u
 578:.\Generated_Source\PSoC5/Timer.c ****     #define Timer__B_TIMER__TM_FALLINGEDGE 0x08u
 579:.\Generated_Source\PSoC5/Timer.c ****     #define Timer__B_TIMER__TM_EITHEREDGE 0x0Cu
 580:.\Generated_Source\PSoC5/Timer.c ****     #define Timer__B_TIMER__TM_SOFTWARE 0x10u
 581:.\Generated_Source\PSoC5/Timer.c **** *
 582:.\Generated_Source\PSoC5/Timer.c **** * Return:
 583:.\Generated_Source\PSoC5/Timer.c **** *  void
 584:.\Generated_Source\PSoC5/Timer.c **** *
 585:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 586:.\Generated_Source\PSoC5/Timer.c **** void Timer_SetTriggerMode(uint8 triggerMode) 
 587:.\Generated_Source\PSoC5/Timer.c **** {
 588:.\Generated_Source\PSoC5/Timer.c ****     /* This must only set to two bits of the control register associated */
 589:.\Generated_Source\PSoC5/Timer.c ****     triggerMode &= Timer_CTRL_TRIG_MODE_MASK;
 590:.\Generated_Source\PSoC5/Timer.c **** 
 591:.\Generated_Source\PSoC5/Timer.c ****     /* Clear the Current Setting */
 592:.\Generated_Source\PSoC5/Timer.c ****     Timer_CONTROL &= ((uint8)(~Timer_CTRL_TRIG_MODE_MASK));
 593:.\Generated_Source\PSoC5/Timer.c **** 
 594:.\Generated_Source\PSoC5/Timer.c ****     /* Write The New Setting */
 595:.\Generated_Source\PSoC5/Timer.c ****     Timer_CONTROL |= (triggerMode | Timer__B_TIMER__TM_SOFTWARE);
 596:.\Generated_Source\PSoC5/Timer.c **** 
 597:.\Generated_Source\PSoC5/Timer.c **** }
 598:.\Generated_Source\PSoC5/Timer.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 599:.\Generated_Source\PSoC5/Timer.c **** 
 600:.\Generated_Source\PSoC5/Timer.c **** #if (Timer_EnableTriggerMode)
 601:.\Generated_Source\PSoC5/Timer.c **** 
 602:.\Generated_Source\PSoC5/Timer.c **** 
 603:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 604:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_EnableTrigger
 605:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 606:.\Generated_Source\PSoC5/Timer.c **** *
 607:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 608:.\Generated_Source\PSoC5/Timer.c **** *  Sets the control bit enabling Hardware Trigger mode
 609:.\Generated_Source\PSoC5/Timer.c **** *
 610:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 611:.\Generated_Source\PSoC5/Timer.c **** *  void
 612:.\Generated_Source\PSoC5/Timer.c **** *
 613:.\Generated_Source\PSoC5/Timer.c **** * Return:
 614:.\Generated_Source\PSoC5/Timer.c **** *  void
 615:.\Generated_Source\PSoC5/Timer.c **** *
 616:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 617:.\Generated_Source\PSoC5/Timer.c **** void Timer_EnableTrigger(void) 
 618:.\Generated_Source\PSoC5/Timer.c **** {
 619:.\Generated_Source\PSoC5/Timer.c ****     #if (!Timer_ControlRegRemoved)   /* Remove assignment if control register is removed */
 620:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL |= Timer_CTRL_TRIG_EN;
 621:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Remove code section if control register is not used */
 622:.\Generated_Source\PSoC5/Timer.c **** }
 623:.\Generated_Source\PSoC5/Timer.c **** 
 624:.\Generated_Source\PSoC5/Timer.c **** 
 625:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 626:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_DisableTrigger
 627:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 628:.\Generated_Source\PSoC5/Timer.c **** *
 629:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 630:.\Generated_Source\PSoC5/Timer.c **** *  Clears the control bit enabling Hardware Trigger mode
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 22


 631:.\Generated_Source\PSoC5/Timer.c **** *
 632:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 633:.\Generated_Source\PSoC5/Timer.c **** *  void
 634:.\Generated_Source\PSoC5/Timer.c **** *
 635:.\Generated_Source\PSoC5/Timer.c **** * Return:
 636:.\Generated_Source\PSoC5/Timer.c **** *  void
 637:.\Generated_Source\PSoC5/Timer.c **** *
 638:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 639:.\Generated_Source\PSoC5/Timer.c **** void Timer_DisableTrigger(void) 
 640:.\Generated_Source\PSoC5/Timer.c **** {
 641:.\Generated_Source\PSoC5/Timer.c ****     #if (!Timer_ControlRegRemoved)   /* Remove assignment if control register is removed */
 642:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL &= ((uint8)(~Timer_CTRL_TRIG_EN));
 643:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Remove code section if control register is not used */
 644:.\Generated_Source\PSoC5/Timer.c **** }
 645:.\Generated_Source\PSoC5/Timer.c **** #endif /* Remove API is Trigger Mode is set to None */
 646:.\Generated_Source\PSoC5/Timer.c **** 
 647:.\Generated_Source\PSoC5/Timer.c **** 
 648:.\Generated_Source\PSoC5/Timer.c **** #if(Timer_InterruptOnCaptureCount)
 649:.\Generated_Source\PSoC5/Timer.c **** #if (!Timer_ControlRegRemoved)   /* Remove API if control register is removed */
 650:.\Generated_Source\PSoC5/Timer.c **** 
 651:.\Generated_Source\PSoC5/Timer.c **** 
 652:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 653:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_SetInterruptCount
 654:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 655:.\Generated_Source\PSoC5/Timer.c **** *
 656:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 657:.\Generated_Source\PSoC5/Timer.c **** *  This function sets the capture count before an interrupt is triggered.
 658:.\Generated_Source\PSoC5/Timer.c **** *
 659:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 660:.\Generated_Source\PSoC5/Timer.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 661:.\Generated_Source\PSoC5/Timer.c **** *                   an interrupt will occur each time a capture occurs.
 662:.\Generated_Source\PSoC5/Timer.c **** *                   A value of 1 to 3 will cause the interrupt
 663:.\Generated_Source\PSoC5/Timer.c **** *                   to delay by the same number of captures.
 664:.\Generated_Source\PSoC5/Timer.c **** *
 665:.\Generated_Source\PSoC5/Timer.c **** * Return:
 666:.\Generated_Source\PSoC5/Timer.c **** *  void
 667:.\Generated_Source\PSoC5/Timer.c **** *
 668:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 669:.\Generated_Source\PSoC5/Timer.c **** void Timer_SetInterruptCount(uint8 interruptCount) 
 670:.\Generated_Source\PSoC5/Timer.c **** {
 671:.\Generated_Source\PSoC5/Timer.c ****     /* This must only set to two bits of the control register associated */
 672:.\Generated_Source\PSoC5/Timer.c ****     interruptCount &= Timer_CTRL_INTCNT_MASK;
 673:.\Generated_Source\PSoC5/Timer.c **** 
 674:.\Generated_Source\PSoC5/Timer.c ****     /* Clear the Current Setting */
 675:.\Generated_Source\PSoC5/Timer.c ****     Timer_CONTROL &= ((uint8)(~Timer_CTRL_INTCNT_MASK));
 676:.\Generated_Source\PSoC5/Timer.c ****     /* Write The New Setting */
 677:.\Generated_Source\PSoC5/Timer.c ****     Timer_CONTROL |= interruptCount;
 678:.\Generated_Source\PSoC5/Timer.c **** }
 679:.\Generated_Source\PSoC5/Timer.c **** #endif /* Remove API if control register is removed */
 680:.\Generated_Source\PSoC5/Timer.c **** #endif /* Timer_InterruptOnCaptureCount */
 681:.\Generated_Source\PSoC5/Timer.c **** 
 682:.\Generated_Source\PSoC5/Timer.c **** 
 683:.\Generated_Source\PSoC5/Timer.c **** #if (Timer_UsingHWCaptureCounter)
 684:.\Generated_Source\PSoC5/Timer.c **** 
 685:.\Generated_Source\PSoC5/Timer.c **** 
 686:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 687:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_SetCaptureCount
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 23


 688:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 689:.\Generated_Source\PSoC5/Timer.c **** *
 690:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 691:.\Generated_Source\PSoC5/Timer.c **** *  This function sets the capture count
 692:.\Generated_Source\PSoC5/Timer.c **** *
 693:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 694:.\Generated_Source\PSoC5/Timer.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 695:.\Generated_Source\PSoC5/Timer.c **** *                to 127 will cause the interrupt to delay by the same number of
 696:.\Generated_Source\PSoC5/Timer.c **** *                captures.
 697:.\Generated_Source\PSoC5/Timer.c **** *
 698:.\Generated_Source\PSoC5/Timer.c **** * Return:
 699:.\Generated_Source\PSoC5/Timer.c **** *  void
 700:.\Generated_Source\PSoC5/Timer.c **** *
 701:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 702:.\Generated_Source\PSoC5/Timer.c **** void Timer_SetCaptureCount(uint8 captureCount) 
 703:.\Generated_Source\PSoC5/Timer.c **** {
 704:.\Generated_Source\PSoC5/Timer.c ****     Timer_CAP_COUNT = captureCount;
 705:.\Generated_Source\PSoC5/Timer.c **** }
 706:.\Generated_Source\PSoC5/Timer.c **** 
 707:.\Generated_Source\PSoC5/Timer.c **** 
 708:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 709:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ReadCaptureCount
 710:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 711:.\Generated_Source\PSoC5/Timer.c **** *
 712:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 713:.\Generated_Source\PSoC5/Timer.c **** *  This function reads the capture count setting
 714:.\Generated_Source\PSoC5/Timer.c **** *
 715:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 716:.\Generated_Source\PSoC5/Timer.c **** *  void
 717:.\Generated_Source\PSoC5/Timer.c **** *
 718:.\Generated_Source\PSoC5/Timer.c **** * Return:
 719:.\Generated_Source\PSoC5/Timer.c **** *  Returns the Capture Count Setting
 720:.\Generated_Source\PSoC5/Timer.c **** *
 721:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC5/Timer.c **** uint8 Timer_ReadCaptureCount(void) 
 723:.\Generated_Source\PSoC5/Timer.c **** {
 724:.\Generated_Source\PSoC5/Timer.c ****     return ((uint8)Timer_CAP_COUNT);
 725:.\Generated_Source\PSoC5/Timer.c **** }
 726:.\Generated_Source\PSoC5/Timer.c **** #endif /* Timer_UsingHWCaptureCounter */
 727:.\Generated_Source\PSoC5/Timer.c **** 
 728:.\Generated_Source\PSoC5/Timer.c **** 
 729:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 730:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ClearFIFO
 731:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 732:.\Generated_Source\PSoC5/Timer.c **** *
 733:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 734:.\Generated_Source\PSoC5/Timer.c **** *  This function clears all capture data from the capture FIFO
 735:.\Generated_Source\PSoC5/Timer.c **** *
 736:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 737:.\Generated_Source\PSoC5/Timer.c **** *  void
 738:.\Generated_Source\PSoC5/Timer.c **** *
 739:.\Generated_Source\PSoC5/Timer.c **** * Return:
 740:.\Generated_Source\PSoC5/Timer.c **** *  void
 741:.\Generated_Source\PSoC5/Timer.c **** *
 742:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 743:.\Generated_Source\PSoC5/Timer.c **** void Timer_ClearFIFO(void) 
 744:.\Generated_Source\PSoC5/Timer.c **** {
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 24


 564              		.loc 1 744 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 1, uses_anonymous_args = 0
 568 0000 80B5     		push	{r7, lr}
 569              	.LCFI33:
 570              		.cfi_def_cfa_offset 8
 571 0002 00AF     		add	r7, sp, #0
 572              		.cfi_offset 14, -4
 573              		.cfi_offset 7, -8
 574              	.LCFI34:
 575              		.cfi_def_cfa_register 7
 745:.\Generated_Source\PSoC5/Timer.c ****     while(0u != (Timer_ReadStatusRegister() & Timer_STATUS_FIFONEMP))
 576              		.loc 1 745 0
 577 0004 01E0     		b	.L31
 578              	.L32:
 746:.\Generated_Source\PSoC5/Timer.c ****     {
 747:.\Generated_Source\PSoC5/Timer.c ****         (void)Timer_ReadCapture();
 579              		.loc 1 747 0
 580 0006 FFF7FEFF 		bl	Timer_ReadCapture
 581              	.L31:
 582              		.loc 1 745 0
 583 000a FFF7FEFF 		bl	Timer_ReadStatusRegister
 584 000e 0346     		mov	r3, r0
 585 0010 03F00803 		and	r3, r3, #8
 586 0014 002B     		cmp	r3, #0
 587 0016 F6D1     		bne	.L32
 748:.\Generated_Source\PSoC5/Timer.c ****     }
 749:.\Generated_Source\PSoC5/Timer.c **** }
 588              		.loc 1 749 0
 589 0018 80BD     		pop	{r7, pc}
 590              		.cfi_endproc
 591              	.LFE14:
 592              		.size	Timer_ClearFIFO, .-Timer_ClearFIFO
 593 001a 00BF     		.text
 594              	.Letext0:
 595              		.section	.debug_loc,"",%progbits
 596              	.Ldebug_loc0:
 597              	.LLST0:
 598 0000 00000000 		.4byte	.LFB0
 599 0004 02000000 		.4byte	.LCFI0
 600 0008 0100     		.2byte	0x1
 601 000a 5D       		.byte	0x5d
 602 000b 02000000 		.4byte	.LCFI0
 603 000f 04000000 		.4byte	.LCFI1
 604 0013 0200     		.2byte	0x2
 605 0015 7D       		.byte	0x7d
 606 0016 08       		.sleb128 8
 607 0017 04000000 		.4byte	.LCFI1
 608 001b 06000000 		.4byte	.LCFI2
 609 001f 0200     		.2byte	0x2
 610 0021 7D       		.byte	0x7d
 611 0022 10       		.sleb128 16
 612 0023 06000000 		.4byte	.LCFI2
 613 0027 56000000 		.4byte	.LFE0
 614 002b 0200     		.2byte	0x2
 615 002d 77       		.byte	0x77
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 25


 616 002e 10       		.sleb128 16
 617 002f 00000000 		.4byte	0x0
 618 0033 00000000 		.4byte	0x0
 619              	.LLST1:
 620 0037 00000000 		.4byte	.LFB1
 621 003b 02000000 		.4byte	.LCFI3
 622 003f 0100     		.2byte	0x1
 623 0041 5D       		.byte	0x5d
 624 0042 02000000 		.4byte	.LCFI3
 625 0046 04000000 		.4byte	.LCFI4
 626 004a 0200     		.2byte	0x2
 627 004c 7D       		.byte	0x7d
 628 004d 04       		.sleb128 4
 629 004e 04000000 		.4byte	.LCFI4
 630 0052 2A000000 		.4byte	.LFE1
 631 0056 0200     		.2byte	0x2
 632 0058 77       		.byte	0x77
 633 0059 04       		.sleb128 4
 634 005a 00000000 		.4byte	0x0
 635 005e 00000000 		.4byte	0x0
 636              	.LLST2:
 637 0062 00000000 		.4byte	.LFB2
 638 0066 02000000 		.4byte	.LCFI5
 639 006a 0100     		.2byte	0x1
 640 006c 5D       		.byte	0x5d
 641 006d 02000000 		.4byte	.LCFI5
 642 0071 04000000 		.4byte	.LCFI6
 643 0075 0200     		.2byte	0x2
 644 0077 7D       		.byte	0x7d
 645 0078 08       		.sleb128 8
 646 0079 04000000 		.4byte	.LCFI6
 647 007d 2A000000 		.4byte	.LFE2
 648 0081 0200     		.2byte	0x2
 649 0083 77       		.byte	0x77
 650 0084 08       		.sleb128 8
 651 0085 00000000 		.4byte	0x0
 652 0089 00000000 		.4byte	0x0
 653              	.LLST3:
 654 008d 00000000 		.4byte	.LFB3
 655 0091 02000000 		.4byte	.LCFI7
 656 0095 0100     		.2byte	0x1
 657 0097 5D       		.byte	0x5d
 658 0098 02000000 		.4byte	.LCFI7
 659 009c 04000000 		.4byte	.LCFI8
 660 00a0 0200     		.2byte	0x2
 661 00a2 7D       		.byte	0x7d
 662 00a3 04       		.sleb128 4
 663 00a4 04000000 		.4byte	.LCFI8
 664 00a8 24000000 		.4byte	.LFE3
 665 00ac 0200     		.2byte	0x2
 666 00ae 77       		.byte	0x77
 667 00af 04       		.sleb128 4
 668 00b0 00000000 		.4byte	0x0
 669 00b4 00000000 		.4byte	0x0
 670              	.LLST4:
 671 00b8 00000000 		.4byte	.LFB4
 672 00bc 02000000 		.4byte	.LCFI9
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 26


 673 00c0 0100     		.2byte	0x1
 674 00c2 5D       		.byte	0x5d
 675 00c3 02000000 		.4byte	.LCFI9
 676 00c7 04000000 		.4byte	.LCFI10
 677 00cb 0200     		.2byte	0x2
 678 00cd 7D       		.byte	0x7d
 679 00ce 04       		.sleb128 4
 680 00cf 04000000 		.4byte	.LCFI10
 681 00d3 06000000 		.4byte	.LCFI11
 682 00d7 0200     		.2byte	0x2
 683 00d9 7D       		.byte	0x7d
 684 00da 10       		.sleb128 16
 685 00db 06000000 		.4byte	.LCFI11
 686 00df 20000000 		.4byte	.LFE4
 687 00e3 0200     		.2byte	0x2
 688 00e5 77       		.byte	0x77
 689 00e6 10       		.sleb128 16
 690 00e7 00000000 		.4byte	0x0
 691 00eb 00000000 		.4byte	0x0
 692              	.LLST5:
 693 00ef 00000000 		.4byte	.LFB5
 694 00f3 02000000 		.4byte	.LCFI12
 695 00f7 0100     		.2byte	0x1
 696 00f9 5D       		.byte	0x5d
 697 00fa 02000000 		.4byte	.LCFI12
 698 00fe 04000000 		.4byte	.LCFI13
 699 0102 0200     		.2byte	0x2
 700 0104 7D       		.byte	0x7d
 701 0105 04       		.sleb128 4
 702 0106 04000000 		.4byte	.LCFI13
 703 010a 14000000 		.4byte	.LFE5
 704 010e 0200     		.2byte	0x2
 705 0110 77       		.byte	0x77
 706 0111 04       		.sleb128 4
 707 0112 00000000 		.4byte	0x0
 708 0116 00000000 		.4byte	0x0
 709              	.LLST6:
 710 011a 00000000 		.4byte	.LFB6
 711 011e 02000000 		.4byte	.LCFI14
 712 0122 0100     		.2byte	0x1
 713 0124 5D       		.byte	0x5d
 714 0125 02000000 		.4byte	.LCFI14
 715 0129 04000000 		.4byte	.LCFI15
 716 012d 0200     		.2byte	0x2
 717 012f 7D       		.byte	0x7d
 718 0130 04       		.sleb128 4
 719 0131 04000000 		.4byte	.LCFI15
 720 0135 18000000 		.4byte	.LFE6
 721 0139 0200     		.2byte	0x2
 722 013b 77       		.byte	0x77
 723 013c 04       		.sleb128 4
 724 013d 00000000 		.4byte	0x0
 725 0141 00000000 		.4byte	0x0
 726              	.LLST7:
 727 0145 00000000 		.4byte	.LFB7
 728 0149 02000000 		.4byte	.LCFI16
 729 014d 0100     		.2byte	0x1
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 27


 730 014f 5D       		.byte	0x5d
 731 0150 02000000 		.4byte	.LCFI16
 732 0154 04000000 		.4byte	.LCFI17
 733 0158 0200     		.2byte	0x2
 734 015a 7D       		.byte	0x7d
 735 015b 04       		.sleb128 4
 736 015c 04000000 		.4byte	.LCFI17
 737 0160 18000000 		.4byte	.LFE7
 738 0164 0200     		.2byte	0x2
 739 0166 77       		.byte	0x77
 740 0167 04       		.sleb128 4
 741 0168 00000000 		.4byte	0x0
 742 016c 00000000 		.4byte	0x0
 743              	.LLST8:
 744 0170 00000000 		.4byte	.LFB8
 745 0174 02000000 		.4byte	.LCFI18
 746 0178 0100     		.2byte	0x1
 747 017a 5D       		.byte	0x5d
 748 017b 02000000 		.4byte	.LCFI18
 749 017f 04000000 		.4byte	.LCFI19
 750 0183 0200     		.2byte	0x2
 751 0185 7D       		.byte	0x7d
 752 0186 04       		.sleb128 4
 753 0187 04000000 		.4byte	.LCFI19
 754 018b 06000000 		.4byte	.LCFI20
 755 018f 0200     		.2byte	0x2
 756 0191 7D       		.byte	0x7d
 757 0192 10       		.sleb128 16
 758 0193 06000000 		.4byte	.LCFI20
 759 0197 20000000 		.4byte	.LFE8
 760 019b 0200     		.2byte	0x2
 761 019d 77       		.byte	0x77
 762 019e 10       		.sleb128 16
 763 019f 00000000 		.4byte	0x0
 764 01a3 00000000 		.4byte	0x0
 765              	.LLST9:
 766 01a7 00000000 		.4byte	.LFB9
 767 01ab 02000000 		.4byte	.LCFI21
 768 01af 0100     		.2byte	0x1
 769 01b1 5D       		.byte	0x5d
 770 01b2 02000000 		.4byte	.LCFI21
 771 01b6 04000000 		.4byte	.LCFI22
 772 01ba 0200     		.2byte	0x2
 773 01bc 7D       		.byte	0x7d
 774 01bd 04       		.sleb128 4
 775 01be 04000000 		.4byte	.LCFI22
 776 01c2 18000000 		.4byte	.LFE9
 777 01c6 0200     		.2byte	0x2
 778 01c8 77       		.byte	0x77
 779 01c9 04       		.sleb128 4
 780 01ca 00000000 		.4byte	0x0
 781 01ce 00000000 		.4byte	0x0
 782              	.LLST10:
 783 01d2 00000000 		.4byte	.LFB10
 784 01d6 02000000 		.4byte	.LCFI23
 785 01da 0100     		.2byte	0x1
 786 01dc 5D       		.byte	0x5d
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 28


 787 01dd 02000000 		.4byte	.LCFI23
 788 01e1 04000000 		.4byte	.LCFI24
 789 01e5 0200     		.2byte	0x2
 790 01e7 7D       		.byte	0x7d
 791 01e8 04       		.sleb128 4
 792 01e9 04000000 		.4byte	.LCFI24
 793 01ed 06000000 		.4byte	.LCFI25
 794 01f1 0200     		.2byte	0x2
 795 01f3 7D       		.byte	0x7d
 796 01f4 10       		.sleb128 16
 797 01f5 06000000 		.4byte	.LCFI25
 798 01f9 20000000 		.4byte	.LFE10
 799 01fd 0200     		.2byte	0x2
 800 01ff 77       		.byte	0x77
 801 0200 10       		.sleb128 16
 802 0201 00000000 		.4byte	0x0
 803 0205 00000000 		.4byte	0x0
 804              	.LLST11:
 805 0209 00000000 		.4byte	.LFB11
 806 020d 02000000 		.4byte	.LCFI26
 807 0211 0100     		.2byte	0x1
 808 0213 5D       		.byte	0x5d
 809 0214 02000000 		.4byte	.LCFI26
 810 0218 04000000 		.4byte	.LCFI27
 811 021c 0200     		.2byte	0x2
 812 021e 7D       		.byte	0x7d
 813 021f 04       		.sleb128 4
 814 0220 04000000 		.4byte	.LCFI27
 815 0224 18000000 		.4byte	.LFE11
 816 0228 0200     		.2byte	0x2
 817 022a 77       		.byte	0x77
 818 022b 04       		.sleb128 4
 819 022c 00000000 		.4byte	0x0
 820 0230 00000000 		.4byte	0x0
 821              	.LLST12:
 822 0234 00000000 		.4byte	.LFB12
 823 0238 02000000 		.4byte	.LCFI28
 824 023c 0100     		.2byte	0x1
 825 023e 5D       		.byte	0x5d
 826 023f 02000000 		.4byte	.LCFI28
 827 0243 04000000 		.4byte	.LCFI29
 828 0247 0200     		.2byte	0x2
 829 0249 7D       		.byte	0x7d
 830 024a 04       		.sleb128 4
 831 024b 04000000 		.4byte	.LCFI29
 832 024f 06000000 		.4byte	.LCFI30
 833 0253 0200     		.2byte	0x2
 834 0255 7D       		.byte	0x7d
 835 0256 10       		.sleb128 16
 836 0257 06000000 		.4byte	.LCFI30
 837 025b 20000000 		.4byte	.LFE12
 838 025f 0200     		.2byte	0x2
 839 0261 77       		.byte	0x77
 840 0262 10       		.sleb128 16
 841 0263 00000000 		.4byte	0x0
 842 0267 00000000 		.4byte	0x0
 843              	.LLST13:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 29


 844 026b 00000000 		.4byte	.LFB13
 845 026f 02000000 		.4byte	.LCFI31
 846 0273 0100     		.2byte	0x1
 847 0275 5D       		.byte	0x5d
 848 0276 02000000 		.4byte	.LCFI31
 849 027a 04000000 		.4byte	.LCFI32
 850 027e 0200     		.2byte	0x2
 851 0280 7D       		.byte	0x7d
 852 0281 04       		.sleb128 4
 853 0282 04000000 		.4byte	.LCFI32
 854 0286 22000000 		.4byte	.LFE13
 855 028a 0200     		.2byte	0x2
 856 028c 77       		.byte	0x77
 857 028d 04       		.sleb128 4
 858 028e 00000000 		.4byte	0x0
 859 0292 00000000 		.4byte	0x0
 860              	.LLST14:
 861 0296 00000000 		.4byte	.LFB14
 862 029a 02000000 		.4byte	.LCFI33
 863 029e 0100     		.2byte	0x1
 864 02a0 5D       		.byte	0x5d
 865 02a1 02000000 		.4byte	.LCFI33
 866 02a5 04000000 		.4byte	.LCFI34
 867 02a9 0200     		.2byte	0x2
 868 02ab 7D       		.byte	0x7d
 869 02ac 08       		.sleb128 8
 870 02ad 04000000 		.4byte	.LCFI34
 871 02b1 1A000000 		.4byte	.LFE14
 872 02b5 0200     		.2byte	0x2
 873 02b7 77       		.byte	0x77
 874 02b8 08       		.sleb128 8
 875 02b9 00000000 		.4byte	0x0
 876 02bd 00000000 		.4byte	0x0
 877              		.file 2 ".\\Generated_Source\\PSoC5\\/cytypes.h"
 878              		.section	.debug_info
 879 0000 69020000 		.4byte	0x269
 880 0004 0200     		.2byte	0x2
 881 0006 00000000 		.4byte	.Ldebug_abbrev0
 882 000a 04       		.byte	0x4
 883 000b 01       		.uleb128 0x1
 884 000c 8D010000 		.4byte	.LASF33
 885 0010 01       		.byte	0x1
 886 0011 A7010000 		.4byte	.LASF34
 887 0015 0E000000 		.4byte	.LASF35
 888 0019 00000000 		.4byte	0x0
 889 001d 00000000 		.4byte	0x0
 890 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 891 0025 00000000 		.4byte	.Ldebug_line0
 892 0029 02       		.uleb128 0x2
 893 002a 01       		.byte	0x1
 894 002b 06       		.byte	0x6
 895 002c 2B020000 		.4byte	.LASF0
 896 0030 02       		.uleb128 0x2
 897 0031 01       		.byte	0x1
 898 0032 08       		.byte	0x8
 899 0033 A2000000 		.4byte	.LASF1
 900 0037 02       		.uleb128 0x2
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 30


 901 0038 02       		.byte	0x2
 902 0039 05       		.byte	0x5
 903 003a C8010000 		.4byte	.LASF2
 904 003e 02       		.uleb128 0x2
 905 003f 02       		.byte	0x2
 906 0040 07       		.byte	0x7
 907 0041 66000000 		.4byte	.LASF3
 908 0045 02       		.uleb128 0x2
 909 0046 04       		.byte	0x4
 910 0047 05       		.byte	0x5
 911 0048 12020000 		.4byte	.LASF4
 912 004c 02       		.uleb128 0x2
 913 004d 04       		.byte	0x4
 914 004e 07       		.byte	0x7
 915 004f 57010000 		.4byte	.LASF5
 916 0053 02       		.uleb128 0x2
 917 0054 08       		.byte	0x8
 918 0055 05       		.byte	0x5
 919 0056 00000000 		.4byte	.LASF6
 920 005a 02       		.uleb128 0x2
 921 005b 08       		.byte	0x8
 922 005c 07       		.byte	0x7
 923 005d 76010000 		.4byte	.LASF7
 924 0061 03       		.uleb128 0x3
 925 0062 04       		.byte	0x4
 926 0063 05       		.byte	0x5
 927 0064 696E7400 		.ascii	"int\000"
 928 0068 02       		.uleb128 0x2
 929 0069 04       		.byte	0x4
 930 006a 07       		.byte	0x7
 931 006b 69010000 		.4byte	.LASF8
 932 006f 04       		.uleb128 0x4
 933 0070 EE000000 		.4byte	.LASF9
 934 0074 02       		.byte	0x2
 935 0075 4C       		.byte	0x4c
 936 0076 30000000 		.4byte	0x30
 937 007a 04       		.uleb128 0x4
 938 007b 2A010000 		.4byte	.LASF10
 939 007f 02       		.byte	0x2
 940 0080 4D       		.byte	0x4d
 941 0081 3E000000 		.4byte	0x3e
 942 0085 02       		.uleb128 0x2
 943 0086 04       		.byte	0x4
 944 0087 04       		.byte	0x4
 945 0088 94000000 		.4byte	.LASF11
 946 008c 02       		.uleb128 0x2
 947 008d 08       		.byte	0x8
 948 008e 04       		.byte	0x4
 949 008f 12010000 		.4byte	.LASF12
 950 0093 02       		.uleb128 0x2
 951 0094 01       		.byte	0x1
 952 0095 08       		.byte	0x8
 953 0096 1B020000 		.4byte	.LASF13
 954 009a 05       		.uleb128 0x5
 955 009b 04       		.byte	0x4
 956 009c 07       		.byte	0x7
 957 009d 06       		.uleb128 0x6
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 31


 958 009e 01       		.byte	0x1
 959 009f 20020000 		.4byte	.LASF17
 960 00a3 01       		.byte	0x1
 961 00a4 2B       		.byte	0x2b
 962 00a5 01       		.byte	0x1
 963 00a6 00000000 		.4byte	.LFB0
 964 00aa 56000000 		.4byte	.LFE0
 965 00ae 00000000 		.4byte	.LLST0
 966 00b2 C5000000 		.4byte	0xc5
 967 00b6 07       		.uleb128 0x7
 968 00b7 B0000000 		.4byte	.LASF36
 969 00bb 01       		.byte	0x1
 970 00bc 2F       		.byte	0x2f
 971 00bd 6F000000 		.4byte	0x6f
 972 00c1 02       		.byte	0x2
 973 00c2 91       		.byte	0x91
 974 00c3 77       		.sleb128 -9
 975 00c4 00       		.byte	0x0
 976 00c5 08       		.uleb128 0x8
 977 00c6 01       		.byte	0x1
 978 00c7 45020000 		.4byte	.LASF14
 979 00cb 01       		.byte	0x1
 980 00cc B3       		.byte	0xb3
 981 00cd 01       		.byte	0x1
 982 00ce 00000000 		.4byte	.LFB1
 983 00d2 2A000000 		.4byte	.LFE1
 984 00d6 37000000 		.4byte	.LLST1
 985 00da 08       		.uleb128 0x8
 986 00db 01       		.byte	0x1
 987 00dc 4B010000 		.4byte	.LASF15
 988 00e0 01       		.byte	0x1
 989 00e1 D6       		.byte	0xd6
 990 00e2 01       		.byte	0x1
 991 00e3 00000000 		.4byte	.LFB2
 992 00e7 2A000000 		.4byte	.LFE2
 993 00eb 62000000 		.4byte	.LLST2
 994 00ef 08       		.uleb128 0x8
 995 00f0 01       		.byte	0x1
 996 00f1 89000000 		.4byte	.LASF16
 997 00f5 01       		.byte	0x1
 998 00f6 F6       		.byte	0xf6
 999 00f7 01       		.byte	0x1
 1000 00f8 00000000 		.4byte	.LFB3
 1001 00fc 24000000 		.4byte	.LFE3
 1002 0100 8D000000 		.4byte	.LLST3
 1003 0104 09       		.uleb128 0x9
 1004 0105 01       		.byte	0x1
 1005 0106 D7000000 		.4byte	.LASF18
 1006 010a 01       		.byte	0x1
 1007 010b 1601     		.2byte	0x116
 1008 010d 01       		.byte	0x1
 1009 010e 00000000 		.4byte	.LFB4
 1010 0112 20000000 		.4byte	.LFE4
 1011 0116 B8000000 		.4byte	.LLST4
 1012 011a 2E010000 		.4byte	0x12e
 1013 011e 0A       		.uleb128 0xa
 1014 011f 99010000 		.4byte	.LASF23
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 32


 1015 0123 01       		.byte	0x1
 1016 0124 1601     		.2byte	0x116
 1017 0126 6F000000 		.4byte	0x6f
 1018 012a 02       		.byte	0x2
 1019 012b 91       		.byte	0x91
 1020 012c 77       		.sleb128 -9
 1021 012d 00       		.byte	0x0
 1022 012e 0B       		.uleb128 0xb
 1023 012f 01       		.byte	0x1
 1024 0130 FC000000 		.4byte	.LASF19
 1025 0134 01       		.byte	0x1
 1026 0135 2D01     		.2byte	0x12d
 1027 0137 01       		.byte	0x1
 1028 0138 00000000 		.4byte	.LFB5
 1029 013c 14000000 		.4byte	.LFE5
 1030 0140 EF000000 		.4byte	.LLST5
 1031 0144 0C       		.uleb128 0xc
 1032 0145 01       		.byte	0x1
 1033 0146 34000000 		.4byte	.LASF20
 1034 014a 01       		.byte	0x1
 1035 014b 4801     		.2byte	0x148
 1036 014d 01       		.byte	0x1
 1037 014e 6F000000 		.4byte	0x6f
 1038 0152 00000000 		.4byte	.LFB6
 1039 0156 18000000 		.4byte	.LFE6
 1040 015a 1A010000 		.4byte	.LLST6
 1041 015e 0C       		.uleb128 0xc
 1042 015f 01       		.byte	0x1
 1043 0160 31010000 		.4byte	.LASF21
 1044 0164 01       		.byte	0x1
 1045 0165 5F01     		.2byte	0x15f
 1046 0167 01       		.byte	0x1
 1047 0168 6F000000 		.4byte	0x6f
 1048 016c 00000000 		.4byte	.LFB7
 1049 0170 18000000 		.4byte	.LFE7
 1050 0174 45010000 		.4byte	.LLST7
 1051 0178 09       		.uleb128 0x9
 1052 0179 01       		.byte	0x1
 1053 017a D2010000 		.4byte	.LASF22
 1054 017e 01       		.byte	0x1
 1055 017f 7201     		.2byte	0x172
 1056 0181 01       		.byte	0x1
 1057 0182 00000000 		.4byte	.LFB8
 1058 0186 20000000 		.4byte	.LFE8
 1059 018a 70010000 		.4byte	.LLST8
 1060 018e A2010000 		.4byte	0x1a2
 1061 0192 0A       		.uleb128 0xa
 1062 0193 F4000000 		.4byte	.LASF24
 1063 0197 01       		.byte	0x1
 1064 0198 7201     		.2byte	0x172
 1065 019a 6F000000 		.4byte	0x6f
 1066 019e 02       		.byte	0x2
 1067 019f 91       		.byte	0x91
 1068 01a0 77       		.sleb128 -9
 1069 01a1 00       		.byte	0x0
 1070 01a2 0C       		.uleb128 0xc
 1071 01a3 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 33


 1072 01a4 19010000 		.4byte	.LASF25
 1073 01a8 01       		.byte	0x1
 1074 01a9 8701     		.2byte	0x187
 1075 01ab 01       		.byte	0x1
 1076 01ac 7A000000 		.4byte	0x7a
 1077 01b0 00000000 		.4byte	.LFB9
 1078 01b4 18000000 		.4byte	.LFE9
 1079 01b8 A7010000 		.4byte	.LLST9
 1080 01bc 09       		.uleb128 0x9
 1081 01bd 01       		.byte	0x1
 1082 01be C5000000 		.4byte	.LASF26
 1083 01c2 01       		.byte	0x1
 1084 01c3 A101     		.2byte	0x1a1
 1085 01c5 01       		.byte	0x1
 1086 01c6 00000000 		.4byte	.LFB10
 1087 01ca 20000000 		.4byte	.LFE10
 1088 01ce D2010000 		.4byte	.LLST10
 1089 01d2 E6010000 		.4byte	0x1e6
 1090 01d6 0A       		.uleb128 0xa
 1091 01d7 4D000000 		.4byte	.LASF27
 1092 01db 01       		.byte	0x1
 1093 01dc A101     		.2byte	0x1a1
 1094 01de 7A000000 		.4byte	0x7a
 1095 01e2 02       		.byte	0x2
 1096 01e3 91       		.byte	0x91
 1097 01e4 76       		.sleb128 -10
 1098 01e5 00       		.byte	0x0
 1099 01e6 0C       		.uleb128 0xc
 1100 01e7 01       		.byte	0x1
 1101 01e8 ED010000 		.4byte	.LASF28
 1102 01ec 01       		.byte	0x1
 1103 01ed BA01     		.2byte	0x1ba
 1104 01ef 01       		.byte	0x1
 1105 01f0 7A000000 		.4byte	0x7a
 1106 01f4 00000000 		.4byte	.LFB11
 1107 01f8 18000000 		.4byte	.LFE11
 1108 01fc 09020000 		.4byte	.LLST11
 1109 0200 09       		.uleb128 0x9
 1110 0201 01       		.byte	0x1
 1111 0202 FF010000 		.4byte	.LASF29
 1112 0206 01       		.byte	0x1
 1113 0207 D201     		.2byte	0x1d2
 1114 0209 01       		.byte	0x1
 1115 020a 00000000 		.4byte	.LFB12
 1116 020e 20000000 		.4byte	.LFE12
 1117 0212 34020000 		.4byte	.LLST12
 1118 0216 2A020000 		.4byte	0x22a
 1119 021a 0A       		.uleb128 0xa
 1120 021b 9A000000 		.4byte	.LASF30
 1121 021f 01       		.byte	0x1
 1122 0220 D201     		.2byte	0x1d2
 1123 0222 7A000000 		.4byte	0x7a
 1124 0226 02       		.byte	0x2
 1125 0227 91       		.byte	0x91
 1126 0228 76       		.sleb128 -10
 1127 0229 00       		.byte	0x0
 1128 022a 0C       		.uleb128 0xc
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 34


 1129 022b 01       		.byte	0x1
 1130 022c 54000000 		.4byte	.LASF31
 1131 0230 01       		.byte	0x1
 1132 0231 EF01     		.2byte	0x1ef
 1133 0233 01       		.byte	0x1
 1134 0234 7A000000 		.4byte	0x7a
 1135 0238 00000000 		.4byte	.LFB13
 1136 023c 22000000 		.4byte	.LFE13
 1137 0240 6B020000 		.4byte	.LLST13
 1138 0244 0B       		.uleb128 0xb
 1139 0245 01       		.byte	0x1
 1140 0246 79000000 		.4byte	.LASF32
 1141 024a 01       		.byte	0x1
 1142 024b E702     		.2byte	0x2e7
 1143 024d 01       		.byte	0x1
 1144 024e 00000000 		.4byte	.LFB14
 1145 0252 1A000000 		.4byte	.LFE14
 1146 0256 96020000 		.4byte	.LLST14
 1147 025a 0D       		.uleb128 0xd
 1148 025b 37020000 		.4byte	.LASF37
 1149 025f 01       		.byte	0x1
 1150 0260 1A       		.byte	0x1a
 1151 0261 6F000000 		.4byte	0x6f
 1152 0265 01       		.byte	0x1
 1153 0266 05       		.byte	0x5
 1154 0267 03       		.byte	0x3
 1155 0268 00000000 		.4byte	Timer_initVar
 1156 026c 00       		.byte	0x0
 1157              		.section	.debug_abbrev
 1158 0000 01       		.uleb128 0x1
 1159 0001 11       		.uleb128 0x11
 1160 0002 01       		.byte	0x1
 1161 0003 25       		.uleb128 0x25
 1162 0004 0E       		.uleb128 0xe
 1163 0005 13       		.uleb128 0x13
 1164 0006 0B       		.uleb128 0xb
 1165 0007 03       		.uleb128 0x3
 1166 0008 0E       		.uleb128 0xe
 1167 0009 1B       		.uleb128 0x1b
 1168 000a 0E       		.uleb128 0xe
 1169 000b 11       		.uleb128 0x11
 1170 000c 01       		.uleb128 0x1
 1171 000d 52       		.uleb128 0x52
 1172 000e 01       		.uleb128 0x1
 1173 000f 55       		.uleb128 0x55
 1174 0010 06       		.uleb128 0x6
 1175 0011 10       		.uleb128 0x10
 1176 0012 06       		.uleb128 0x6
 1177 0013 00       		.byte	0x0
 1178 0014 00       		.byte	0x0
 1179 0015 02       		.uleb128 0x2
 1180 0016 24       		.uleb128 0x24
 1181 0017 00       		.byte	0x0
 1182 0018 0B       		.uleb128 0xb
 1183 0019 0B       		.uleb128 0xb
 1184 001a 3E       		.uleb128 0x3e
 1185 001b 0B       		.uleb128 0xb
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 35


 1186 001c 03       		.uleb128 0x3
 1187 001d 0E       		.uleb128 0xe
 1188 001e 00       		.byte	0x0
 1189 001f 00       		.byte	0x0
 1190 0020 03       		.uleb128 0x3
 1191 0021 24       		.uleb128 0x24
 1192 0022 00       		.byte	0x0
 1193 0023 0B       		.uleb128 0xb
 1194 0024 0B       		.uleb128 0xb
 1195 0025 3E       		.uleb128 0x3e
 1196 0026 0B       		.uleb128 0xb
 1197 0027 03       		.uleb128 0x3
 1198 0028 08       		.uleb128 0x8
 1199 0029 00       		.byte	0x0
 1200 002a 00       		.byte	0x0
 1201 002b 04       		.uleb128 0x4
 1202 002c 16       		.uleb128 0x16
 1203 002d 00       		.byte	0x0
 1204 002e 03       		.uleb128 0x3
 1205 002f 0E       		.uleb128 0xe
 1206 0030 3A       		.uleb128 0x3a
 1207 0031 0B       		.uleb128 0xb
 1208 0032 3B       		.uleb128 0x3b
 1209 0033 0B       		.uleb128 0xb
 1210 0034 49       		.uleb128 0x49
 1211 0035 13       		.uleb128 0x13
 1212 0036 00       		.byte	0x0
 1213 0037 00       		.byte	0x0
 1214 0038 05       		.uleb128 0x5
 1215 0039 24       		.uleb128 0x24
 1216 003a 00       		.byte	0x0
 1217 003b 0B       		.uleb128 0xb
 1218 003c 0B       		.uleb128 0xb
 1219 003d 3E       		.uleb128 0x3e
 1220 003e 0B       		.uleb128 0xb
 1221 003f 00       		.byte	0x0
 1222 0040 00       		.byte	0x0
 1223 0041 06       		.uleb128 0x6
 1224 0042 2E       		.uleb128 0x2e
 1225 0043 01       		.byte	0x1
 1226 0044 3F       		.uleb128 0x3f
 1227 0045 0C       		.uleb128 0xc
 1228 0046 03       		.uleb128 0x3
 1229 0047 0E       		.uleb128 0xe
 1230 0048 3A       		.uleb128 0x3a
 1231 0049 0B       		.uleb128 0xb
 1232 004a 3B       		.uleb128 0x3b
 1233 004b 0B       		.uleb128 0xb
 1234 004c 27       		.uleb128 0x27
 1235 004d 0C       		.uleb128 0xc
 1236 004e 11       		.uleb128 0x11
 1237 004f 01       		.uleb128 0x1
 1238 0050 12       		.uleb128 0x12
 1239 0051 01       		.uleb128 0x1
 1240 0052 40       		.uleb128 0x40
 1241 0053 06       		.uleb128 0x6
 1242 0054 01       		.uleb128 0x1
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 36


 1243 0055 13       		.uleb128 0x13
 1244 0056 00       		.byte	0x0
 1245 0057 00       		.byte	0x0
 1246 0058 07       		.uleb128 0x7
 1247 0059 34       		.uleb128 0x34
 1248 005a 00       		.byte	0x0
 1249 005b 03       		.uleb128 0x3
 1250 005c 0E       		.uleb128 0xe
 1251 005d 3A       		.uleb128 0x3a
 1252 005e 0B       		.uleb128 0xb
 1253 005f 3B       		.uleb128 0x3b
 1254 0060 0B       		.uleb128 0xb
 1255 0061 49       		.uleb128 0x49
 1256 0062 13       		.uleb128 0x13
 1257 0063 02       		.uleb128 0x2
 1258 0064 0A       		.uleb128 0xa
 1259 0065 00       		.byte	0x0
 1260 0066 00       		.byte	0x0
 1261 0067 08       		.uleb128 0x8
 1262 0068 2E       		.uleb128 0x2e
 1263 0069 00       		.byte	0x0
 1264 006a 3F       		.uleb128 0x3f
 1265 006b 0C       		.uleb128 0xc
 1266 006c 03       		.uleb128 0x3
 1267 006d 0E       		.uleb128 0xe
 1268 006e 3A       		.uleb128 0x3a
 1269 006f 0B       		.uleb128 0xb
 1270 0070 3B       		.uleb128 0x3b
 1271 0071 0B       		.uleb128 0xb
 1272 0072 27       		.uleb128 0x27
 1273 0073 0C       		.uleb128 0xc
 1274 0074 11       		.uleb128 0x11
 1275 0075 01       		.uleb128 0x1
 1276 0076 12       		.uleb128 0x12
 1277 0077 01       		.uleb128 0x1
 1278 0078 40       		.uleb128 0x40
 1279 0079 06       		.uleb128 0x6
 1280 007a 00       		.byte	0x0
 1281 007b 00       		.byte	0x0
 1282 007c 09       		.uleb128 0x9
 1283 007d 2E       		.uleb128 0x2e
 1284 007e 01       		.byte	0x1
 1285 007f 3F       		.uleb128 0x3f
 1286 0080 0C       		.uleb128 0xc
 1287 0081 03       		.uleb128 0x3
 1288 0082 0E       		.uleb128 0xe
 1289 0083 3A       		.uleb128 0x3a
 1290 0084 0B       		.uleb128 0xb
 1291 0085 3B       		.uleb128 0x3b
 1292 0086 05       		.uleb128 0x5
 1293 0087 27       		.uleb128 0x27
 1294 0088 0C       		.uleb128 0xc
 1295 0089 11       		.uleb128 0x11
 1296 008a 01       		.uleb128 0x1
 1297 008b 12       		.uleb128 0x12
 1298 008c 01       		.uleb128 0x1
 1299 008d 40       		.uleb128 0x40
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 37


 1300 008e 06       		.uleb128 0x6
 1301 008f 01       		.uleb128 0x1
 1302 0090 13       		.uleb128 0x13
 1303 0091 00       		.byte	0x0
 1304 0092 00       		.byte	0x0
 1305 0093 0A       		.uleb128 0xa
 1306 0094 05       		.uleb128 0x5
 1307 0095 00       		.byte	0x0
 1308 0096 03       		.uleb128 0x3
 1309 0097 0E       		.uleb128 0xe
 1310 0098 3A       		.uleb128 0x3a
 1311 0099 0B       		.uleb128 0xb
 1312 009a 3B       		.uleb128 0x3b
 1313 009b 05       		.uleb128 0x5
 1314 009c 49       		.uleb128 0x49
 1315 009d 13       		.uleb128 0x13
 1316 009e 02       		.uleb128 0x2
 1317 009f 0A       		.uleb128 0xa
 1318 00a0 00       		.byte	0x0
 1319 00a1 00       		.byte	0x0
 1320 00a2 0B       		.uleb128 0xb
 1321 00a3 2E       		.uleb128 0x2e
 1322 00a4 00       		.byte	0x0
 1323 00a5 3F       		.uleb128 0x3f
 1324 00a6 0C       		.uleb128 0xc
 1325 00a7 03       		.uleb128 0x3
 1326 00a8 0E       		.uleb128 0xe
 1327 00a9 3A       		.uleb128 0x3a
 1328 00aa 0B       		.uleb128 0xb
 1329 00ab 3B       		.uleb128 0x3b
 1330 00ac 05       		.uleb128 0x5
 1331 00ad 27       		.uleb128 0x27
 1332 00ae 0C       		.uleb128 0xc
 1333 00af 11       		.uleb128 0x11
 1334 00b0 01       		.uleb128 0x1
 1335 00b1 12       		.uleb128 0x12
 1336 00b2 01       		.uleb128 0x1
 1337 00b3 40       		.uleb128 0x40
 1338 00b4 06       		.uleb128 0x6
 1339 00b5 00       		.byte	0x0
 1340 00b6 00       		.byte	0x0
 1341 00b7 0C       		.uleb128 0xc
 1342 00b8 2E       		.uleb128 0x2e
 1343 00b9 00       		.byte	0x0
 1344 00ba 3F       		.uleb128 0x3f
 1345 00bb 0C       		.uleb128 0xc
 1346 00bc 03       		.uleb128 0x3
 1347 00bd 0E       		.uleb128 0xe
 1348 00be 3A       		.uleb128 0x3a
 1349 00bf 0B       		.uleb128 0xb
 1350 00c0 3B       		.uleb128 0x3b
 1351 00c1 05       		.uleb128 0x5
 1352 00c2 27       		.uleb128 0x27
 1353 00c3 0C       		.uleb128 0xc
 1354 00c4 49       		.uleb128 0x49
 1355 00c5 13       		.uleb128 0x13
 1356 00c6 11       		.uleb128 0x11
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 38


 1357 00c7 01       		.uleb128 0x1
 1358 00c8 12       		.uleb128 0x12
 1359 00c9 01       		.uleb128 0x1
 1360 00ca 40       		.uleb128 0x40
 1361 00cb 06       		.uleb128 0x6
 1362 00cc 00       		.byte	0x0
 1363 00cd 00       		.byte	0x0
 1364 00ce 0D       		.uleb128 0xd
 1365 00cf 34       		.uleb128 0x34
 1366 00d0 00       		.byte	0x0
 1367 00d1 03       		.uleb128 0x3
 1368 00d2 0E       		.uleb128 0xe
 1369 00d3 3A       		.uleb128 0x3a
 1370 00d4 0B       		.uleb128 0xb
 1371 00d5 3B       		.uleb128 0x3b
 1372 00d6 0B       		.uleb128 0xb
 1373 00d7 49       		.uleb128 0x49
 1374 00d8 13       		.uleb128 0x13
 1375 00d9 3F       		.uleb128 0x3f
 1376 00da 0C       		.uleb128 0xc
 1377 00db 02       		.uleb128 0x2
 1378 00dc 0A       		.uleb128 0xa
 1379 00dd 00       		.byte	0x0
 1380 00de 00       		.byte	0x0
 1381 00df 00       		.byte	0x0
 1382              		.section	.debug_pubnames,"",%progbits
 1383 0000 70010000 		.4byte	0x170
 1384 0004 0200     		.2byte	0x2
 1385 0006 00000000 		.4byte	.Ldebug_info0
 1386 000a 6D020000 		.4byte	0x26d
 1387 000e 9D000000 		.4byte	0x9d
 1388 0012 54696D65 		.ascii	"Timer_Init\000"
 1388      725F496E 
 1388      697400
 1389 001d C5000000 		.4byte	0xc5
 1390 0021 54696D65 		.ascii	"Timer_Enable\000"
 1390      725F456E 
 1390      61626C65 
 1390      00
 1391 002e DA000000 		.4byte	0xda
 1392 0032 54696D65 		.ascii	"Timer_Start\000"
 1392      725F5374 
 1392      61727400 
 1393 003e EF000000 		.4byte	0xef
 1394 0042 54696D65 		.ascii	"Timer_Stop\000"
 1394      725F5374 
 1394      6F7000
 1395 004d 04010000 		.4byte	0x104
 1396 0051 54696D65 		.ascii	"Timer_SetInterruptMode\000"
 1396      725F5365 
 1396      74496E74 
 1396      65727275 
 1396      70744D6F 
 1397 0068 2E010000 		.4byte	0x12e
 1398 006c 54696D65 		.ascii	"Timer_SoftwareCapture\000"
 1398      725F536F 
 1398      66747761 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 39


 1398      72654361 
 1398      70747572 
 1399 0082 44010000 		.4byte	0x144
 1400 0086 54696D65 		.ascii	"Timer_ReadStatusRegister\000"
 1400      725F5265 
 1400      61645374 
 1400      61747573 
 1400      52656769 
 1401 009f 5E010000 		.4byte	0x15e
 1402 00a3 54696D65 		.ascii	"Timer_ReadControlRegister\000"
 1402      725F5265 
 1402      6164436F 
 1402      6E74726F 
 1402      6C526567 
 1403 00bd 78010000 		.4byte	0x178
 1404 00c1 54696D65 		.ascii	"Timer_WriteControlRegister\000"
 1404      725F5772 
 1404      69746543 
 1404      6F6E7472 
 1404      6F6C5265 
 1405 00dc A2010000 		.4byte	0x1a2
 1406 00e0 54696D65 		.ascii	"Timer_ReadPeriod\000"
 1406      725F5265 
 1406      61645065 
 1406      72696F64 
 1406      00
 1407 00f1 BC010000 		.4byte	0x1bc
 1408 00f5 54696D65 		.ascii	"Timer_WritePeriod\000"
 1408      725F5772 
 1408      69746550 
 1408      6572696F 
 1408      6400
 1409 0107 E6010000 		.4byte	0x1e6
 1410 010b 54696D65 		.ascii	"Timer_ReadCapture\000"
 1410      725F5265 
 1410      61644361 
 1410      70747572 
 1410      6500
 1411 011d 00020000 		.4byte	0x200
 1412 0121 54696D65 		.ascii	"Timer_WriteCounter\000"
 1412      725F5772 
 1412      69746543 
 1412      6F756E74 
 1412      657200
 1413 0134 2A020000 		.4byte	0x22a
 1414 0138 54696D65 		.ascii	"Timer_ReadCounter\000"
 1414      725F5265 
 1414      6164436F 
 1414      756E7465 
 1414      7200
 1415 014a 44020000 		.4byte	0x244
 1416 014e 54696D65 		.ascii	"Timer_ClearFIFO\000"
 1416      725F436C 
 1416      65617246 
 1416      49464F00 
 1417 015e 5A020000 		.4byte	0x25a
 1418 0162 54696D65 		.ascii	"Timer_initVar\000"
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 40


 1418      725F696E 
 1418      69745661 
 1418      7200
 1419 0170 00000000 		.4byte	0x0
 1420              		.section	.debug_aranges,"",%progbits
 1421 0000 8C000000 		.4byte	0x8c
 1422 0004 0200     		.2byte	0x2
 1423 0006 00000000 		.4byte	.Ldebug_info0
 1424 000a 04       		.byte	0x4
 1425 000b 00       		.byte	0x0
 1426 000c 0000     		.2byte	0x0
 1427 000e 0000     		.2byte	0x0
 1428 0010 00000000 		.4byte	.LFB0
 1429 0014 56000000 		.4byte	.LFE0-.LFB0
 1430 0018 00000000 		.4byte	.LFB1
 1431 001c 2A000000 		.4byte	.LFE1-.LFB1
 1432 0020 00000000 		.4byte	.LFB2
 1433 0024 2A000000 		.4byte	.LFE2-.LFB2
 1434 0028 00000000 		.4byte	.LFB3
 1435 002c 24000000 		.4byte	.LFE3-.LFB3
 1436 0030 00000000 		.4byte	.LFB4
 1437 0034 20000000 		.4byte	.LFE4-.LFB4
 1438 0038 00000000 		.4byte	.LFB5
 1439 003c 14000000 		.4byte	.LFE5-.LFB5
 1440 0040 00000000 		.4byte	.LFB6
 1441 0044 18000000 		.4byte	.LFE6-.LFB6
 1442 0048 00000000 		.4byte	.LFB7
 1443 004c 18000000 		.4byte	.LFE7-.LFB7
 1444 0050 00000000 		.4byte	.LFB8
 1445 0054 20000000 		.4byte	.LFE8-.LFB8
 1446 0058 00000000 		.4byte	.LFB9
 1447 005c 18000000 		.4byte	.LFE9-.LFB9
 1448 0060 00000000 		.4byte	.LFB10
 1449 0064 20000000 		.4byte	.LFE10-.LFB10
 1450 0068 00000000 		.4byte	.LFB11
 1451 006c 18000000 		.4byte	.LFE11-.LFB11
 1452 0070 00000000 		.4byte	.LFB12
 1453 0074 20000000 		.4byte	.LFE12-.LFB12
 1454 0078 00000000 		.4byte	.LFB13
 1455 007c 22000000 		.4byte	.LFE13-.LFB13
 1456 0080 00000000 		.4byte	.LFB14
 1457 0084 1A000000 		.4byte	.LFE14-.LFB14
 1458 0088 00000000 		.4byte	0x0
 1459 008c 00000000 		.4byte	0x0
 1460              		.section	.debug_ranges,"",%progbits
 1461              	.Ldebug_ranges0:
 1462 0000 00000000 		.4byte	.Ltext0
 1463 0004 00000000 		.4byte	.Letext0
 1464 0008 00000000 		.4byte	.LFB0
 1465 000c 56000000 		.4byte	.LFE0
 1466 0010 00000000 		.4byte	.LFB1
 1467 0014 2A000000 		.4byte	.LFE1
 1468 0018 00000000 		.4byte	.LFB2
 1469 001c 2A000000 		.4byte	.LFE2
 1470 0020 00000000 		.4byte	.LFB3
 1471 0024 24000000 		.4byte	.LFE3
 1472 0028 00000000 		.4byte	.LFB4
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 41


 1473 002c 20000000 		.4byte	.LFE4
 1474 0030 00000000 		.4byte	.LFB5
 1475 0034 14000000 		.4byte	.LFE5
 1476 0038 00000000 		.4byte	.LFB6
 1477 003c 18000000 		.4byte	.LFE6
 1478 0040 00000000 		.4byte	.LFB7
 1479 0044 18000000 		.4byte	.LFE7
 1480 0048 00000000 		.4byte	.LFB8
 1481 004c 20000000 		.4byte	.LFE8
 1482 0050 00000000 		.4byte	.LFB9
 1483 0054 18000000 		.4byte	.LFE9
 1484 0058 00000000 		.4byte	.LFB10
 1485 005c 20000000 		.4byte	.LFE10
 1486 0060 00000000 		.4byte	.LFB11
 1487 0064 18000000 		.4byte	.LFE11
 1488 0068 00000000 		.4byte	.LFB12
 1489 006c 20000000 		.4byte	.LFE12
 1490 0070 00000000 		.4byte	.LFB13
 1491 0074 22000000 		.4byte	.LFE13
 1492 0078 00000000 		.4byte	.LFB14
 1493 007c 1A000000 		.4byte	.LFE14
 1494 0080 00000000 		.4byte	0x0
 1495 0084 00000000 		.4byte	0x0
 1496              		.section	.debug_str,"MS",%progbits,1
 1497              	.LASF6:
 1498 0000 6C6F6E67 		.ascii	"long long int\000"
 1498      206C6F6E 
 1498      6720696E 
 1498      7400
 1499              	.LASF35:
 1500 000e 453A5C50 		.ascii	"E:\\PSoC Creator\\connect4\\trials.cydsn\000"
 1500      536F4320 
 1500      43726561 
 1500      746F725C 
 1500      636F6E6E 
 1501              	.LASF20:
 1502 0034 54696D65 		.ascii	"Timer_ReadStatusRegister\000"
 1502      725F5265 
 1502      61645374 
 1502      61747573 
 1502      52656769 
 1503              	.LASF27:
 1504 004d 70657269 		.ascii	"period\000"
 1504      6F6400
 1505              	.LASF31:
 1506 0054 54696D65 		.ascii	"Timer_ReadCounter\000"
 1506      725F5265 
 1506      6164436F 
 1506      756E7465 
 1506      7200
 1507              	.LASF3:
 1508 0066 73686F72 		.ascii	"short unsigned int\000"
 1508      7420756E 
 1508      7369676E 
 1508      65642069 
 1508      6E7400
 1509              	.LASF32:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 42


 1510 0079 54696D65 		.ascii	"Timer_ClearFIFO\000"
 1510      725F436C 
 1510      65617246 
 1510      49464F00 
 1511              	.LASF16:
 1512 0089 54696D65 		.ascii	"Timer_Stop\000"
 1512      725F5374 
 1512      6F7000
 1513              	.LASF11:
 1514 0094 666C6F61 		.ascii	"float\000"
 1514      7400
 1515              	.LASF30:
 1516 009a 636F756E 		.ascii	"counter\000"
 1516      74657200 
 1517              	.LASF1:
 1518 00a2 756E7369 		.ascii	"unsigned char\000"
 1518      676E6564 
 1518      20636861 
 1518      7200
 1519              	.LASF36:
 1520 00b0 54696D65 		.ascii	"Timer_interruptState\000"
 1520      725F696E 
 1520      74657272 
 1520      75707453 
 1520      74617465 
 1521              	.LASF26:
 1522 00c5 54696D65 		.ascii	"Timer_WritePeriod\000"
 1522      725F5772 
 1522      69746550 
 1522      6572696F 
 1522      6400
 1523              	.LASF18:
 1524 00d7 54696D65 		.ascii	"Timer_SetInterruptMode\000"
 1524      725F5365 
 1524      74496E74 
 1524      65727275 
 1524      70744D6F 
 1525              	.LASF9:
 1526 00ee 75696E74 		.ascii	"uint8\000"
 1526      3800
 1527              	.LASF24:
 1528 00f4 636F6E74 		.ascii	"control\000"
 1528      726F6C00 
 1529              	.LASF19:
 1530 00fc 54696D65 		.ascii	"Timer_SoftwareCapture\000"
 1530      725F536F 
 1530      66747761 
 1530      72654361 
 1530      70747572 
 1531              	.LASF12:
 1532 0112 646F7562 		.ascii	"double\000"
 1532      6C6500
 1533              	.LASF25:
 1534 0119 54696D65 		.ascii	"Timer_ReadPeriod\000"
 1534      725F5265 
 1534      61645065 
 1534      72696F64 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 43


 1534      00
 1535              	.LASF10:
 1536 012a 75696E74 		.ascii	"uint16\000"
 1536      313600
 1537              	.LASF21:
 1538 0131 54696D65 		.ascii	"Timer_ReadControlRegister\000"
 1538      725F5265 
 1538      6164436F 
 1538      6E74726F 
 1538      6C526567 
 1539              	.LASF15:
 1540 014b 54696D65 		.ascii	"Timer_Start\000"
 1540      725F5374 
 1540      61727400 
 1541              	.LASF5:
 1542 0157 6C6F6E67 		.ascii	"long unsigned int\000"
 1542      20756E73 
 1542      69676E65 
 1542      6420696E 
 1542      7400
 1543              	.LASF8:
 1544 0169 756E7369 		.ascii	"unsigned int\000"
 1544      676E6564 
 1544      20696E74 
 1544      00
 1545              	.LASF7:
 1546 0176 6C6F6E67 		.ascii	"long long unsigned int\000"
 1546      206C6F6E 
 1546      6720756E 
 1546      7369676E 
 1546      65642069 
 1547              	.LASF33:
 1548 018d 474E5520 		.ascii	"GNU C 4.4.1\000"
 1548      4320342E 
 1548      342E3100 
 1549              	.LASF23:
 1550 0199 696E7465 		.ascii	"interruptMode\000"
 1550      72727570 
 1550      744D6F64 
 1550      6500
 1551              	.LASF34:
 1552 01a7 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\Timer.c\000"
 1552      6E657261 
 1552      7465645F 
 1552      536F7572 
 1552      63655C50 
 1553              	.LASF2:
 1554 01c8 73686F72 		.ascii	"short int\000"
 1554      7420696E 
 1554      7400
 1555              	.LASF22:
 1556 01d2 54696D65 		.ascii	"Timer_WriteControlRegister\000"
 1556      725F5772 
 1556      69746543 
 1556      6F6E7472 
 1556      6F6C5265 
 1557              	.LASF28:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccdM9x8l.s 			page 44


 1558 01ed 54696D65 		.ascii	"Timer_ReadCapture\000"
 1558      725F5265 
 1558      61644361 
 1558      70747572 
 1558      6500
 1559              	.LASF29:
 1560 01ff 54696D65 		.ascii	"Timer_WriteCounter\000"
 1560      725F5772 
 1560      69746543 
 1560      6F756E74 
 1560      657200
 1561              	.LASF4:
 1562 0212 6C6F6E67 		.ascii	"long int\000"
 1562      20696E74 
 1562      00
 1563              	.LASF13:
 1564 021b 63686172 		.ascii	"char\000"
 1564      00
 1565              	.LASF17:
 1566 0220 54696D65 		.ascii	"Timer_Init\000"
 1566      725F496E 
 1566      697400
 1567              	.LASF0:
 1568 022b 7369676E 		.ascii	"signed char\000"
 1568      65642063 
 1568      68617200 
 1569              	.LASF37:
 1570 0237 54696D65 		.ascii	"Timer_initVar\000"
 1570      725F696E 
 1570      69745661 
 1570      7200
 1571              	.LASF14:
 1572 0245 54696D65 		.ascii	"Timer_Enable\000"
 1572      725F456E 
 1572      61626C65 
 1572      00
 1573              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"

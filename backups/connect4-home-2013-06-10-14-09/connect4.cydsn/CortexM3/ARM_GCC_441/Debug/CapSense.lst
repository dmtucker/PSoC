ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"CapSense.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 5D020000 		.text
  20      02006100 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.global	CapSense_lowLevelTuningDone
  24              		.bss
  25              		.type	CapSense_lowLevelTuningDone, %object
  26              		.size	CapSense_lowLevelTuningDone, 1
  27              	CapSense_lowLevelTuningDone:
  28 0000 00       		.space	1
  29              		.global	CapSense_initVar
  30              		.type	CapSense_initVar, %object
  31              		.size	CapSense_initVar, 1
  32              	CapSense_initVar:
  33 0001 00       		.space	1
  34              		.global	CapSense_csv
  35              		.type	CapSense_csv, %object
  36              		.size	CapSense_csv, 1
  37              	CapSense_csv:
  38 0002 00       		.space	1
  39              		.global	CapSense_sensorIndex
  40              		.type	CapSense_sensorIndex, %object
  41              		.size	CapSense_sensorIndex, 1
  42              	CapSense_sensorIndex:
  43 0003 00       		.space	1
  44              		.global	CapSense_SensorRaw
  45              		.align	2
  46              		.type	CapSense_SensorRaw, %object
  47              		.size	CapSense_SensorRaw, 14
  48              	CapSense_SensorRaw:
  49 0004 00000000 		.space	14
  49      00000000 
  49      00000000 
  49      0000
  50              		.global	CapSense_SensorEnableMask
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 2


  51 0012 0000     		.data
  52              		.align	2
  53              		.type	CapSense_SensorEnableMask, %object
  54              		.size	CapSense_SensorEnableMask, 1
  55              	CapSense_SensorEnableMask:
  56 0000 7F       		.byte	127
  57              		.global	CapSense_pcTable
  58              		.section	.rodata
  59              		.align	2
  60              		.type	CapSense_pcTable, %object
  61              		.size	CapSense_pcTable, 28
  62              	CapSense_pcTable:
  63 0000 2D500040 		.word	1073762349
  64 0004 2E500040 		.word	1073762350
  65 0008 28500040 		.word	1073762344
  66 000c 29500040 		.word	1073762345
  67 0010 2A500040 		.word	1073762346
  68 0014 2B500040 		.word	1073762347
  69 0018 2C500040 		.word	1073762348
  70              		.global	CapSense_portTable
  71              		.align	2
  72              		.type	CapSense_portTable, %object
  73              		.size	CapSense_portTable, 7
  74              	CapSense_portTable:
  75 001c 05       		.byte	5
  76 001d 05       		.byte	5
  77 001e 05       		.byte	5
  78 001f 05       		.byte	5
  79 0020 05       		.byte	5
  80 0021 05       		.byte	5
  81 0022 05       		.byte	5
  82              		.global	CapSense_maskTable
  83 0023 00       		.align	2
  84              		.type	CapSense_maskTable, %object
  85              		.size	CapSense_maskTable, 7
  86              	CapSense_maskTable:
  87 0024 20       		.byte	32
  88 0025 40       		.byte	64
  89 0026 01       		.byte	1
  90 0027 02       		.byte	2
  91 0028 04       		.byte	4
  92 0029 08       		.byte	8
  93 002a 10       		.byte	16
  94              		.global	CapSense_csTable
  95 002b 00       		.align	2
  96              		.type	CapSense_csTable, %object
  97              		.size	CapSense_csTable, 32
  98              	CapSense_csTable:
  99 002c 06520040 		.word	1073762822
 100 0030 0E520040 		.word	1073762830
 101 0034 16520040 		.word	1073762838
 102 0038 1E520040 		.word	1073762846
 103 003c 26520040 		.word	1073762854
 104 0040 2E520040 		.word	1073762862
 105 0044 36520040 		.word	1073762870
 106 0048 7E520040 		.word	1073762942
 107              		.global	CapSense_idacSettings
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 3


 108              		.data
 109 0001 000000   		.align	2
 110              		.type	CapSense_idacSettings, %object
 111              		.size	CapSense_idacSettings, 7
 112              	CapSense_idacSettings:
 113 0004 C8       		.byte	-56
 114 0005 C8       		.byte	-56
 115 0006 C8       		.byte	-56
 116 0007 C8       		.byte	-56
 117 0008 C8       		.byte	-56
 118 0009 C8       		.byte	-56
 119 000a C8       		.byte	-56
 120              		.global	CapSense_widgetResolution
 121 000b 00       		.align	2
 122              		.type	CapSense_widgetResolution, %object
 123              		.size	CapSense_widgetResolution, 3
 124              	CapSense_widgetResolution:
 125 000c 03       		.byte	3
 126 000d 03       		.byte	3
 127 000e 03       		.byte	3
 128              		.comm	CapSense_AnalogSwitchDivider,7,4
 129              		.global	CapSense_widgetNumber
 130 000f 00       		.section	.rodata
 131              		.align	2
 132              		.type	CapSense_widgetNumber, %object
 133              		.size	CapSense_widgetNumber, 7
 134              	CapSense_widgetNumber:
 135 004c 01       		.byte	1
 136 004d 02       		.byte	2
 137 004e 00       		.byte	0
 138 004f 00       		.byte	0
 139 0050 00       		.byte	0
 140 0051 00       		.byte	0
 141 0052 00       		.byte	0
 142 0053 00       		.section	.text.CapSense_Init,"ax",%progbits
 143              		.align	2
 144              		.global	CapSense_Init
 145              		.thumb
 146              		.thumb_func
 147              		.type	CapSense_Init, %function
 148              	CapSense_Init:
 149              	.LFB0:
 150              		.file 1 ".\\Generated_Source\\PSoC5\\CapSense.c"
   1:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/CapSense.c **** * File Name: CapSense.c
   3:.\Generated_Source\PSoC5/CapSense.c **** * Version 3.30
   4:.\Generated_Source\PSoC5/CapSense.c **** *
   5:.\Generated_Source\PSoC5/CapSense.c **** * Description:
   6:.\Generated_Source\PSoC5/CapSense.c **** *  This file provides the source code of scanning APIs for the CapSense CSD 
   7:.\Generated_Source\PSoC5/CapSense.c **** *  component.
   8:.\Generated_Source\PSoC5/CapSense.c **** *
   9:.\Generated_Source\PSoC5/CapSense.c **** * Note:
  10:.\Generated_Source\PSoC5/CapSense.c **** *
  11:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/CapSense.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/CapSense.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/CapSense.c **** * disclaimers, and limitations in the end user license agreement accompanying
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 4


  15:.\Generated_Source\PSoC5/CapSense.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/CapSense.c **** 
  18:.\Generated_Source\PSoC5/CapSense.c **** #include "CapSense.h"
  19:.\Generated_Source\PSoC5/CapSense.c **** 
  20:.\Generated_Source\PSoC5/CapSense.c **** /* Rb init function */
  21:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
  22:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_InitRb(void);
  23:.\Generated_Source\PSoC5/CapSense.c **** #endif /* End CapSense_CURRENT_SOURCE */ 
  24:.\Generated_Source\PSoC5/CapSense.c **** 
  25:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_IS_COMPLEX_SCANSLOTS)
  26:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_EnableScanSlot(uint8 slot) CYREENTRANT;
  27:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_DisableScanSlot(uint8 slot) CYREENTRANT;
  28:.\Generated_Source\PSoC5/CapSense.c ****     
  29:.\Generated_Source\PSoC5/CapSense.c **** #else
  30:.\Generated_Source\PSoC5/CapSense.c ****     #define CapSense_EnableScanSlot(slot)   CapSense_EnableSensor(slot)
  31:.\Generated_Source\PSoC5/CapSense.c ****     #define CapSense_DisableScanSlot(slot)  CapSense_DisableSensor(slot)
  32:.\Generated_Source\PSoC5/CapSense.c **** 
  33:.\Generated_Source\PSoC5/CapSense.c **** #endif  /* End CapSense_IS_COMPLEX_SCANSLOTS */
  34:.\Generated_Source\PSoC5/CapSense.c **** 
  35:.\Generated_Source\PSoC5/CapSense.c **** /* Helper functions - do nto part of public interface*/
  36:.\Generated_Source\PSoC5/CapSense.c **** 
  37:.\Generated_Source\PSoC5/CapSense.c **** /* Find next sensor for One Channel design */
  38:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
  39:.\Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextSensor(uint8 snsIndex) CYREENTRANT;
  40:.\Generated_Source\PSoC5/CapSense.c **** #endif  /* End CapSense_DESIGN_TYPE */
  41:.\Generated_Source\PSoC5/CapSense.c **** 
  42:.\Generated_Source\PSoC5/CapSense.c **** /* Find next pair for Two Channels design */
  43:.\Generated_Source\PSoC5/CapSense.c ****  #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
  44:.\Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextPair(uint8 snsIndex) CYREENTRANT;
  45:.\Generated_Source\PSoC5/CapSense.c **** #endif  /* End CapSense_DESIGN_TYPE */
  46:.\Generated_Source\PSoC5/CapSense.c **** 
  47:.\Generated_Source\PSoC5/CapSense.c **** /* Start and Compete the scan */
  48:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_PreScan(uint8 sensor) CYREENTRANT;
  49:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
  50:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScan(uint8 sensor) CYREENTRANT;
  51:.\Generated_Source\PSoC5/CapSense.c **** #else
  52:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh0(uint8 sensor) CYREENTRANT;
  53:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh1(uint8 sensor) CYREENTRANT;
  54:.\Generated_Source\PSoC5/CapSense.c **** #endif  /* End CapSense_DESIGN_TYPE */
  55:.\Generated_Source\PSoC5/CapSense.c **** 
  56:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRESCALER_OPTIONS)
  57:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetPrescaler(uint8 prescaler) CYREENTRANT;
  58:.\Generated_Source\PSoC5/CapSense.c **** #endif  /* End CapSense_PRESCALER_OPTIONS */
  59:.\Generated_Source\PSoC5/CapSense.c **** 
  60:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSpeed(uint8 scanspeed) ;
  61:.\Generated_Source\PSoC5/CapSense.c **** 
  62:.\Generated_Source\PSoC5/CapSense.c **** /* SmartSense functions */
  63:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
  64:.\Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_lowLevelTuningDone = 0u;
  65:.\Generated_Source\PSoC5/CapSense.c ****     extern void CapSense_AutoTune(void) ;
  66:.\Generated_Source\PSoC5/CapSense.c **** #endif /* End (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
  67:.\Generated_Source\PSoC5/CapSense.c **** 
  68:.\Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_initVar = 0u;
  69:.\Generated_Source\PSoC5/CapSense.c ****             
  70:.\Generated_Source\PSoC5/CapSense.c **** /* Global software variables */
  71:.\Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_csv = 0u;            /* CapSense CSD status, control variable */
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 5


  72:.\Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_sensorIndex = 0u;    /* Index of scannig sensor */
  73:.\Generated_Source\PSoC5/CapSense.c **** 
  74:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
  75:.\Generated_Source\PSoC5/CapSense.c ****     uint8  CapSense_RbCh0_cur = CapSense_RBLEED1;
  76:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
  77:.\Generated_Source\PSoC5/CapSense.c ****         uint8  CapSense_RbCh1_cur = (CapSense_RBLEED1 + CapSense_TOTAL_RB_NUMBER__CH0);
  78:.\Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)*/ 
  79:.\Generated_Source\PSoC5/CapSense.c **** #else
  80:.\Generated_Source\PSoC5/CapSense.c ****     #if (CY_PSOC5A)
  81:.\Generated_Source\PSoC5/CapSense.c ****         uint8 CapSense_idac_cfg_restore = 0u;
  82:.\Generated_Source\PSoC5/CapSense.c ****         uint8 CapSense_idac_ch0_cr0reg = 0u;
  83:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
  84:.\Generated_Source\PSoC5/CapSense.c ****             uint8 CapSense_idac_ch1_cr0reg = 0u;
  85:.\Generated_Source\PSoC5/CapSense.c ****         #endif /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */ 
  86:.\Generated_Source\PSoC5/CapSense.c ****     #endif /* (CY_PSOC5A) */
  87:.\Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */ 
  88:.\Generated_Source\PSoC5/CapSense.c ****         
  89:.\Generated_Source\PSoC5/CapSense.c **** /* Global array of Raw Counts */
  90:.\Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_SensorRaw[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  91:.\Generated_Source\PSoC5/CapSense.c **** 
  92:.\Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_SensorEnableMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  93:.\Generated_Source\PSoC5/CapSense.c **** 0x7Fu, };
  94:.\Generated_Source\PSoC5/CapSense.c **** 
  95:.\Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_pcTable[] = {
  96:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button0__BTN__PC, 
  97:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button1__BTN__PC, 
  98:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__LinearSlider0_e0__LS__PC, 
  99:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__LinearSlider0_e1__LS__PC, 
 100:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__LinearSlider0_e2__LS__PC, 
 101:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__LinearSlider0_e3__LS__PC, 
 102:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__LinearSlider0_e4__LS__PC, 
 103:.\Generated_Source\PSoC5/CapSense.c **** };
 104:.\Generated_Source\PSoC5/CapSense.c **** 
 105:.\Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_portTable[] = {
 106:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button0__BTN__PORT, 
 107:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button1__BTN__PORT, 
 108:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e0__LS__PORT, 
 109:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e1__LS__PORT, 
 110:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e2__LS__PORT, 
 111:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e3__LS__PORT, 
 112:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e4__LS__PORT, 
 113:.\Generated_Source\PSoC5/CapSense.c **** };
 114:.\Generated_Source\PSoC5/CapSense.c **** 
 115:.\Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_maskTable[] = {
 116:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button0__BTN__MASK,
 117:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button1__BTN__MASK,
 118:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e0__LS__MASK,
 119:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e1__LS__MASK,
 120:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e2__LS__MASK,
 121:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e3__LS__MASK,
 122:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e4__LS__MASK,
 123:.\Generated_Source\PSoC5/CapSense.c **** };
 124:.\Generated_Source\PSoC5/CapSense.c **** 
 125:.\Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_csTable[] = {
 126:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT0_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT1_CAPS_SEL, (uint8 CYXDATA *)CY
 127:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT3_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT4_CAPS_SEL, (uint8 CYXDATA *)CY
 128:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT6_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT15_CAPS_SEL,
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 6


 129:.\Generated_Source\PSoC5/CapSense.c **** };
 130:.\Generated_Source\PSoC5/CapSense.c **** 
 131:.\Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_idacSettings[] = {
 132:.\Generated_Source\PSoC5/CapSense.c ****     200u,200u,200u,200u,200u,200u,200u,
 133:.\Generated_Source\PSoC5/CapSense.c **** };
 134:.\Generated_Source\PSoC5/CapSense.c **** 
 135:.\Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_widgetResolution[] = {
 136:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 137:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 138:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
 139:.\Generated_Source\PSoC5/CapSense.c **** };
 140:.\Generated_Source\PSoC5/CapSense.c **** 
 141:.\Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_AnalogSwitchDivider[CapSense_TOTAL_SCANSLOT_COUNT];
 142:.\Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_widgetNumber[] = {
 143:.\Generated_Source\PSoC5/CapSense.c ****     1u, /* Button0__BTN */
 144:.\Generated_Source\PSoC5/CapSense.c ****     2u, /* Button1__BTN */
 145:.\Generated_Source\PSoC5/CapSense.c ****     0u, 0u, 0u, 0u, 0u, /* LinearSlider0__LS */
 146:.\Generated_Source\PSoC5/CapSense.c ****     
 147:.\Generated_Source\PSoC5/CapSense.c **** };
 148:.\Generated_Source\PSoC5/CapSense.c **** 
 149:.\Generated_Source\PSoC5/CapSense.c **** 
 150:.\Generated_Source\PSoC5/CapSense.c **** 
 151:.\Generated_Source\PSoC5/CapSense.c **** 
 152:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 153:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Init
 154:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 155:.\Generated_Source\PSoC5/CapSense.c **** *
 156:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
 157:.\Generated_Source\PSoC5/CapSense.c **** *  Inits default CapSense configuration provided with customizer that defines 
 158:.\Generated_Source\PSoC5/CapSense.c **** *  mode of component operations and resets all sensors to an inactive state.
 159:.\Generated_Source\PSoC5/CapSense.c **** *
 160:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 161:.\Generated_Source\PSoC5/CapSense.c **** *  None
 162:.\Generated_Source\PSoC5/CapSense.c **** *
 163:.\Generated_Source\PSoC5/CapSense.c **** * Return:
 164:.\Generated_Source\PSoC5/CapSense.c **** *  None
 165:.\Generated_Source\PSoC5/CapSense.c **** *
 166:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 167:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_Init(void) 
 168:.\Generated_Source\PSoC5/CapSense.c **** {
 151              		.loc 1 168 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 8
 154              		@ frame_needed = 1, uses_anonymous_args = 0
 155 0000 80B5     		push	{r7, lr}
 156              	.LCFI0:
 157              		.cfi_def_cfa_offset 8
 158 0002 82B0     		sub	sp, sp, #8
 159              	.LCFI1:
 160              		.cfi_def_cfa_offset 16
 161 0004 00AF     		add	r7, sp, #0
 162              		.cfi_offset 14, -4
 163              		.cfi_offset 7, -8
 164              	.LCFI2:
 165              		.cfi_def_cfa_register 7
 169:.\Generated_Source\PSoC5/CapSense.c ****     #if ( (CapSense_PRS_OPTIONS) || \
 170:.\Generated_Source\PSoC5/CapSense.c ****           (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 7


 171:.\Generated_Source\PSoC5/CapSense.c ****           ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 172:.\Generated_Source\PSoC5/CapSense.c ****             (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) )
 173:.\Generated_Source\PSoC5/CapSense.c ****         
 174:.\Generated_Source\PSoC5/CapSense.c ****         uint8 enableInterrupts;
 175:.\Generated_Source\PSoC5/CapSense.c ****     #endif /* ( (CapSense_PRS_OPTIONS) || \
 176:.\Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 177:.\Generated_Source\PSoC5/CapSense.c ****            * ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 178:.\Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) ) 
 179:.\Generated_Source\PSoC5/CapSense.c ****            */
 180:.\Generated_Source\PSoC5/CapSense.c ****     
 181:.\Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 182:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 166              		.loc 1 182 0
 167 0006 FFF7FEFF 		bl	CapSense_ClearSensors
 183:.\Generated_Source\PSoC5/CapSense.c **** 
 184:.\Generated_Source\PSoC5/CapSense.c ****     /* Set Prescaler */
 185:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 186:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 187:.\Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 188:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL_REG   = (CapSense_PRESCALER_CTRL_ENABLE |
 189:.\Generated_Source\PSoC5/CapSense.c ****                                                     CapSense_PRESCALER_CTRL_MODE_CMP);
 190:.\Generated_Source\PSoC5/CapSense.c ****                                                
 191:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL2_REG |= CapSense_PRESCALER_CTRL_CMP_LESS_EQ;
 192:.\Generated_Source\PSoC5/CapSense.c ****     #else
 193:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 194:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 195:.\Generated_Source\PSoC5/CapSense.c **** 
 196:.\Generated_Source\PSoC5/CapSense.c ****     /* Set PRS */
 197:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS)
 198:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_SetAnalogSwitchesSource(CapSense_ANALOG_SWITCHES_SRC_PRS);
 168              		.loc 1 198 0
 169 000a 4FF00200 		mov	r0, #2
 170 000e FFF7FEFF 		bl	CapSense_SetAnalogSwitchesSource
 199:.\Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_PRS_OPTIONS) */
 200:.\Generated_Source\PSoC5/CapSense.c **** 
 201:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS)
 202:.\Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 203:.\Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 204:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 205:.\Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 206:.\Generated_Source\PSoC5/CapSense.c ****         
 207:.\Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 208:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_REG   = CapSense_PRS8_DEFAULT_POLYNOM;
 209:.\Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 210:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 211:.\Generated_Source\PSoC5/CapSense.c ****         
 212:.\Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS)
 213:.\Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */ 
 214:.\Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();  
 171              		.loc 1 214 0
 172 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 173 0016 0346     		mov	r3, r0
 174 0018 FB71     		strb	r3, [r7, #7]
 215:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 175              		.loc 1 215 0
 176 001a 46F29A43 		movw	r3, #:lower16:1073767578
 177 001e C4F20003 		movt	r3, #:upper16:1073767578
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 8


 178 0022 46F29A42 		movw	r2, #:lower16:1073767578
 179 0026 C4F20002 		movt	r2, #:upper16:1073767578
 180 002a 1278     		ldrb	r2, [r2, #0]
 181 002c D2B2     		uxtb	r2, r2
 182 002e 42F00302 		orr	r2, r2, #3
 183 0032 D2B2     		uxtb	r2, r2
 184 0034 1A70     		strb	r2, [r3, #0]
 216:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_B_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 185              		.loc 1 216 0
 186 0036 46F29B43 		movw	r3, #:lower16:1073767579
 187 003a C4F20003 		movt	r3, #:upper16:1073767579
 188 003e 46F29B42 		movw	r2, #:lower16:1073767579
 189 0042 C4F20002 		movt	r2, #:upper16:1073767579
 190 0046 1278     		ldrb	r2, [r2, #0]
 191 0048 D2B2     		uxtb	r2, r2
 192 004a 42F00302 		orr	r2, r2, #3
 193 004e D2B2     		uxtb	r2, r2
 194 0050 1A70     		strb	r2, [r3, #0]
 217:.\Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 195              		.loc 1 217 0
 196 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 197 0054 1846     		mov	r0, r3
 198 0056 FFF7FEFF 		bl	CyExitCriticalSection
 218:.\Generated_Source\PSoC5/CapSense.c ****         
 219:.\Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 220:.\Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_POLYNOM_PTR, CapSense_PRS16_DEFAULT_POLYNOM);
 199              		.loc 1 220 0
 200 005a 46F22A43 		movw	r3, #:lower16:1073767466
 201 005e C4F20003 		movt	r3, #:upper16:1073767466
 202 0062 4FF43442 		mov	r2, #46080
 203 0066 1A80     		strh	r2, [r3, #0]	@ movhi
 221:.\Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 222:.\Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_SEED_COPY_PTR, CapSense_MEASURE_FULL_RANGE);
 204              		.loc 1 222 0
 205 0068 46F24A43 		movw	r3, #:lower16:1073767498
 206 006c C4F20003 		movt	r3, #:upper16:1073767498
 207 0070 4FF6FF72 		movw	r2, #65535
 208 0074 1A80     		strh	r2, [r3, #0]	@ movhi
 223:.\Generated_Source\PSoC5/CapSense.c ****                 
 224:.\Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS_4X)
 225:.\Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 226:.\Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 227:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG  |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 228:.\Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 229:.\Generated_Source\PSoC5/CapSense.c ****         
 230:.\Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 231:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D1_REG   = HI8(CapSense_PRS16_DEFAULT_POLYNOM);
 232:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D0_REG   = LO8(CapSense_PRS16_DEFAULT_POLYNOM);
 233:.\Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 234:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F1_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 235:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F0_REG = CapSense_MEASURE_FULL_RANGE_LOW; 
 236:.\Generated_Source\PSoC5/CapSense.c ****         
 237:.\Generated_Source\PSoC5/CapSense.c ****     #else
 238:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without PRS */
 239:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS) */ 
 240:.\Generated_Source\PSoC5/CapSense.c ****     
 241:.\Generated_Source\PSoC5/CapSense.c ****     /* Set ScanSpeed */
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 9


 242:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = CapSense_SCANSPEED_VALUE;
 209              		.loc 1 242 0
 210 0076 46F28A43 		movw	r3, #:lower16:1073767562
 211 007a C4F20003 		movt	r3, #:upper16:1073767562
 212 007e 4FF00702 		mov	r2, #7
 213 0082 1A70     		strb	r2, [r3, #0]
 243:.\Generated_Source\PSoC5/CapSense.c ****     
 244:.\Generated_Source\PSoC5/CapSense.c ****     /* Set the Measure */
 245:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 246:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 247:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 248:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 249:.\Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_PWM_CH0_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 250:.\Generated_Source\PSoC5/CapSense.c ****         
 251:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 252:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 253:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 254:.\Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_RAW_CH0_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 255:.\Generated_Source\PSoC5/CapSense.c ****     
 256:.\Generated_Source\PSoC5/CapSense.c ****     #else
 257:.\Generated_Source\PSoC5/CapSense.c ****         /*Window PWM and Raw Counter AUX set */
 258:.\Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 214              		.loc 1 258 0
 215 0084 FFF7FEFF 		bl	CyEnterCriticalSection
 216 0088 0346     		mov	r3, r0
 217 008a FB71     		strb	r3, [r7, #7]
 259:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 218              		.loc 1 259 0
 219 008c 46F29D43 		movw	r3, #:lower16:1073767581
 220 0090 C4F20003 		movt	r3, #:upper16:1073767581
 221 0094 46F29D42 		movw	r2, #:lower16:1073767581
 222 0098 C4F20002 		movt	r2, #:upper16:1073767581
 223 009c 1278     		ldrb	r2, [r2, #0]
 224 009e D2B2     		uxtb	r2, r2
 225 00a0 42F00302 		orr	r2, r2, #3
 226 00a4 D2B2     		uxtb	r2, r2
 227 00a6 1A70     		strb	r2, [r3, #0]
 260:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 228              		.loc 1 260 0
 229 00a8 46F29C43 		movw	r3, #:lower16:1073767580
 230 00ac C4F20003 		movt	r3, #:upper16:1073767580
 231 00b0 46F29C42 		movw	r2, #:lower16:1073767580
 232 00b4 C4F20002 		movt	r2, #:upper16:1073767580
 233 00b8 1278     		ldrb	r2, [r2, #0]
 234 00ba D2B2     		uxtb	r2, r2
 235 00bc 42F00302 		orr	r2, r2, #3
 236 00c0 D2B2     		uxtb	r2, r2
 237 00c2 1A70     		strb	r2, [r3, #0]
 261:.\Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 238              		.loc 1 261 0
 239 00c4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 240 00c6 1846     		mov	r0, r3
 241 00c8 FFF7FEFF 		bl	CyExitCriticalSection
 262:.\Generated_Source\PSoC5/CapSense.c ****         
 263:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 264:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 242              		.loc 1 264 0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 10


 243 00cc 46F22D43 		movw	r3, #:lower16:1073767469
 244 00d0 C4F20003 		movt	r3, #:upper16:1073767469
 245 00d4 4FF0FF32 		mov	r2, #-1
 246 00d8 1A70     		strb	r2, [r3, #0]
 265:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 247              		.loc 1 265 0
 248 00da 46F24D43 		movw	r3, #:lower16:1073767501
 249 00de C4F20003 		movt	r3, #:upper16:1073767501
 250 00e2 4FF0FF32 		mov	r2, #-1
 251 00e6 1A70     		strb	r2, [r3, #0]
 266:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 252              		.loc 1 266 0
 253 00e8 46F20D43 		movw	r3, #:lower16:1073767437
 254 00ec C4F20003 		movt	r3, #:upper16:1073767437
 255 00f0 4FF0FF32 		mov	r2, #-1
 256 00f4 1A70     		strb	r2, [r3, #0]
 267:.\Generated_Source\PSoC5/CapSense.c ****         
 268:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 269:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 257              		.loc 1 269 0
 258 00f6 46F22C43 		movw	r3, #:lower16:1073767468
 259 00fa C4F20003 		movt	r3, #:upper16:1073767468
 260 00fe 4FF0FF32 		mov	r2, #-1
 261 0102 1A70     		strb	r2, [r3, #0]
 270:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 262              		.loc 1 270 0
 263 0104 46F25C43 		movw	r3, #:lower16:1073767516
 264 0108 C4F20003 		movt	r3, #:upper16:1073767516
 265 010c 4FF0FF32 		mov	r2, #-1
 266 0110 1A70     		strb	r2, [r3, #0]
 271:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 267              		.loc 1 271 0
 268 0112 46F24C43 		movw	r3, #:lower16:1073767500
 269 0116 C4F20003 		movt	r3, #:upper16:1073767500
 270 011a 4FF0FF32 		mov	r2, #-1
 271 011e 1A70     		strb	r2, [r3, #0]
 272:.\Generated_Source\PSoC5/CapSense.c ****         
 273:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 274:.\Generated_Source\PSoC5/CapSense.c ****     
 275:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 276:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 277:.\Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 278:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 279:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 280:.\Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH1_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 281:.\Generated_Source\PSoC5/CapSense.c ****             
 282:.\Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 283:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 284:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 285:.\Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_RAW_CH1_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 286:.\Generated_Source\PSoC5/CapSense.c ****            
 287:.\Generated_Source\PSoC5/CapSense.c ****         #else
 288:.\Generated_Source\PSoC5/CapSense.c ****             /*Window PWM and Raw Counter AUX set */
 289:.\Generated_Source\PSoC5/CapSense.c ****             enableInterrupts = CyEnterCriticalSection();
 290:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 291:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 292:.\Generated_Source\PSoC5/CapSense.c ****             CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 11


 293:.\Generated_Source\PSoC5/CapSense.c ****             
 294:.\Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 295:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 296:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 297:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 298:.\Generated_Source\PSoC5/CapSense.c ****             
 299:.\Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 300:.\Generated_Source\PSoC5/CapSense.c ****             
 301:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 302:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 303:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 304:.\Generated_Source\PSoC5/CapSense.c ****             
 305:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 306:.\Generated_Source\PSoC5/CapSense.c ****     
 307:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN) */
 308:.\Generated_Source\PSoC5/CapSense.c ****     
 309:.\Generated_Source\PSoC5/CapSense.c ****     /* Setup ISR */
 310:.\Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 272              		.loc 1 310 0
 273 0120 4EF28013 		movw	r3, #:lower16:-536813184
 274 0124 CEF20003 		movt	r3, #:upper16:-536813184
 275 0128 4FF00402 		mov	r2, #4
 276 012c 1A60     		str	r2, [r3, #0]
 311:.\Generated_Source\PSoC5/CapSense.c ****     CyIntSetVector(CapSense_IsrCH0_ISR_NUMBER, CapSense_IsrCH0_ISR);
 277              		.loc 1 311 0
 278 012e 4FF00200 		mov	r0, #2
 279 0132 40F20001 		movw	r1, #:lower16:CapSense_IsrCH0_ISR
 280 0136 C0F20001 		movt	r1, #:upper16:CapSense_IsrCH0_ISR
 281 013a FFF7FEFF 		bl	CyIntSetVector
 312:.\Generated_Source\PSoC5/CapSense.c ****     CyIntSetPriority(CapSense_IsrCH0_ISR_NUMBER, CapSense_IsrCH0_ISR_PRIORITY);
 282              		.loc 1 312 0
 283 013e 4FF00200 		mov	r0, #2
 284 0142 4FF00701 		mov	r1, #7
 285 0146 FFF7FEFF 		bl	CyIntSetPriority
 313:.\Generated_Source\PSoC5/CapSense.c ****     
 314:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 315:.\Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 316:.\Generated_Source\PSoC5/CapSense.c ****         CyIntSetVector(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR);
 317:.\Generated_Source\PSoC5/CapSense.c ****         CyIntSetPriority(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR_PRIORITY);
 318:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 319:.\Generated_Source\PSoC5/CapSense.c ****     
 320:.\Generated_Source\PSoC5/CapSense.c ****     /* Setup AMux Bus: Connect Cmod, Cmp, Idac */
 321:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Init();
 286              		.loc 1 321 0
 287 014a FFF7FEFF 		bl	CapSense_AMuxCH0_Init
 322:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMOD_CHANNEL);
 288              		.loc 1 322 0
 289 014e 4FF00700 		mov	r0, #7
 290 0152 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 323:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMP_VP_CHANNEL);
 291              		.loc 1 323 0
 292 0156 4FF00800 		mov	r0, #8
 293 015a FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 324:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 325:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
 294              		.loc 1 325 0
 295 015e 4FF00900 		mov	r0, #9
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 12


 296 0162 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 326:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 327:.\Generated_Source\PSoC5/CapSense.c ****     
 328:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 329:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Init();
 330:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMOD_CHANNEL);
 331:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMP_VP_CHANNEL);
 332:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 333:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
 334:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 335:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 336:.\Generated_Source\PSoC5/CapSense.c ****     
 337:.\Generated_Source\PSoC5/CapSense.c ****     /* Int Rb */
 338:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
 339:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_InitRb();
 340:.\Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */
 341:.\Generated_Source\PSoC5/CapSense.c ****     
 342:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable window generation */
 343:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 297              		.loc 1 343 0
 298 0166 46F27B43 		movw	r3, #:lower16:1073767547
 299 016a C4F20003 		movt	r3, #:upper16:1073767547
 300 016e 46F27B42 		movw	r2, #:lower16:1073767547
 301 0172 C4F20002 		movt	r2, #:upper16:1073767547
 302 0176 1278     		ldrb	r2, [r2, #0]
 303 0178 D2B2     		uxtb	r2, r2
 304 017a 42F00402 		orr	r2, r2, #4
 305 017e D2B2     		uxtb	r2, r2
 306 0180 1A70     		strb	r2, [r3, #0]
 344:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 345:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 346:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 347:.\Generated_Source\PSoC5/CapSense.c ****     
 348:.\Generated_Source\PSoC5/CapSense.c ****     /* Initialize Cmp and Idac */
 349:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Init();
 307              		.loc 1 349 0
 308 0182 FFF7FEFF 		bl	CapSense_CompCH0_Init
 350:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 351:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Init();
 309              		.loc 1 351 0
 310 0186 FFF7FEFF 		bl	CapSense_IdacCH0_Init
 352:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetPolarity(CapSense_IdacCH0_IDIR);
 311              		.loc 1 352 0
 312 018a 4FF00000 		mov	r0, #0
 313 018e FFF7FEFF 		bl	CapSense_IdacCH0_SetPolarity
 353:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetRange(CapSense_IDAC_RANGE_VALUE);
 314              		.loc 1 353 0
 315 0192 4FF00400 		mov	r0, #4
 316 0196 FFF7FEFF 		bl	CapSense_IdacCH0_SetRange
 354:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 317              		.loc 1 354 0
 318 019a 4FF00000 		mov	r0, #0
 319 019e FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 355:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 356:.\Generated_Source\PSoC5/CapSense.c ****     
 357:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 358:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Init();
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 13


 359:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 360:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Init();
 361:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetPolarity(CapSense_IdacCH1_IDIR);
 362:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetRange(CapSense_IDAC_RANGE_VALUE);
 363:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
 364:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 365:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 366:.\Generated_Source\PSoC5/CapSense.c ****     
 367:.\Generated_Source\PSoC5/CapSense.c ****     /* Initialize Vref if as VDAC */
 368:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 369:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Init();
 370:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 371:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Init();
 372:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 373:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 374:.\Generated_Source\PSoC5/CapSense.c **** }
 320              		.loc 1 374 0
 321 01a2 07F10807 		add	r7, r7, #8
 322 01a6 BD46     		mov	sp, r7
 323 01a8 80BD     		pop	{r7, pc}
 324              		.cfi_endproc
 325              	.LFE0:
 326              		.size	CapSense_Init, .-CapSense_Init
 327 01aa 00BF     		.section	.text.CapSense_Enable,"ax",%progbits
 328              		.align	2
 329              		.global	CapSense_Enable
 330              		.thumb
 331              		.thumb_func
 332              		.type	CapSense_Enable, %function
 333              	CapSense_Enable:
 334              	.LFB1:
 375:.\Generated_Source\PSoC5/CapSense.c **** 
 376:.\Generated_Source\PSoC5/CapSense.c **** 
 377:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 378:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Enable
 379:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 380:.\Generated_Source\PSoC5/CapSense.c **** *
 381:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
 382:.\Generated_Source\PSoC5/CapSense.c **** *  Enables active mode power template bits for number of component used within 
 383:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense.
 384:.\Generated_Source\PSoC5/CapSense.c **** *
 385:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 386:.\Generated_Source\PSoC5/CapSense.c **** *  None
 387:.\Generated_Source\PSoC5/CapSense.c **** *
 388:.\Generated_Source\PSoC5/CapSense.c **** * Return:
 389:.\Generated_Source\PSoC5/CapSense.c **** *  None
 390:.\Generated_Source\PSoC5/CapSense.c **** *
 391:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 392:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_Enable(void) 
 393:.\Generated_Source\PSoC5/CapSense.c **** {
 335              		.loc 1 393 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 8
 338              		@ frame_needed = 1, uses_anonymous_args = 0
 339 0000 80B5     		push	{r7, lr}
 340              	.LCFI3:
 341              		.cfi_def_cfa_offset 8
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 14


 342 0002 82B0     		sub	sp, sp, #8
 343              	.LCFI4:
 344              		.cfi_def_cfa_offset 16
 345 0004 00AF     		add	r7, sp, #0
 346              		.cfi_offset 14, -4
 347              		.cfi_offset 7, -8
 348              	.LCFI5:
 349              		.cfi_def_cfa_register 7
 394:.\Generated_Source\PSoC5/CapSense.c ****     uint8 enableInterrupts;
 395:.\Generated_Source\PSoC5/CapSense.c ****     
 396:.\Generated_Source\PSoC5/CapSense.c ****     enableInterrupts = CyEnterCriticalSection();
 350              		.loc 1 396 0
 351 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 352 000a 0346     		mov	r3, r0
 353 000c FB71     		strb	r3, [r7, #7]
 397:.\Generated_Source\PSoC5/CapSense.c ****     
 398:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable Prescaler */
 399:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 400:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 401:.\Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 402:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  |= CapSense_PRESCALER_ACT_PWR_EN;
 403:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG |= CapSense_PRESCALER_STBY_PWR_EN;
 404:.\Generated_Source\PSoC5/CapSense.c ****         
 405:.\Generated_Source\PSoC5/CapSense.c ****     #else
 406:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 407:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 408:.\Generated_Source\PSoC5/CapSense.c ****     
 409:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable ScanSpeed */
 410:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG |= CapSense_SCANSPEED_CTRL_ENABLE;
 354              		.loc 1 410 0
 355 000e 46F29A43 		movw	r3, #:lower16:1073767578
 356 0012 C4F20003 		movt	r3, #:upper16:1073767578
 357 0016 46F29A42 		movw	r2, #:lower16:1073767578
 358 001a C4F20002 		movt	r2, #:upper16:1073767578
 359 001e 1278     		ldrb	r2, [r2, #0]
 360 0020 D2B2     		uxtb	r2, r2
 361 0022 42F02002 		orr	r2, r2, #32
 362 0026 D2B2     		uxtb	r2, r2
 363 0028 1A70     		strb	r2, [r3, #0]
 411:.\Generated_Source\PSoC5/CapSense.c ****     
 412:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH0 */
 413:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 414:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 415:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  |= CapSense_PWM_CH0_ACT_PWR_EN;
 416:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG |= CapSense_PWM_CH0_STBY_PWR_EN;
 417:.\Generated_Source\PSoC5/CapSense.c ****         
 418:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 419:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  |= CapSense_RAW_CH0_ACT_PWR_EN;
 420:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG |= CapSense_RAW_CH0_STBY_PWR_EN;
 421:.\Generated_Source\PSoC5/CapSense.c ****         
 422:.\Generated_Source\PSoC5/CapSense.c ****     #else
 423:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 424:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 425:.\Generated_Source\PSoC5/CapSense.c ****         
 426:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 427:.\Generated_Source\PSoC5/CapSense.c ****     
 428:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH1*/
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 15


 429:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 430:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 431:.\Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 432:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  |= CapSense_PWM_CH1_ACT_PWR_EN;
 433:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG |= CapSense_PWM_CH1_STBY_PWR_EN;
 434:.\Generated_Source\PSoC5/CapSense.c ****             
 435:.\Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 436:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  |= CapSense_RAW_CH1_ACT_PWR_EN;
 437:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG |= CapSense_RAW_CH1_STBY_PWR_EN;
 438:.\Generated_Source\PSoC5/CapSense.c ****            
 439:.\Generated_Source\PSoC5/CapSense.c ****         #else
 440:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 441:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 442:.\Generated_Source\PSoC5/CapSense.c ****         
 443:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 444:.\Generated_Source\PSoC5/CapSense.c ****     
 445:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 446:.\Generated_Source\PSoC5/CapSense.c ****     
 447:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable the Clock */
 448:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 449:.\Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Enable();
 450:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 451:.\Generated_Source\PSoC5/CapSense.c ****     
 452:.\Generated_Source\PSoC5/CapSense.c ****     /* Setup Cmp and Idac */
 453:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Enable();
 364              		.loc 1 453 0
 365 002a FFF7FEFF 		bl	CapSense_CompCH0_Enable
 454:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 455:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Enable();
 366              		.loc 1 455 0
 367 002e FFF7FEFF 		bl	CapSense_IdacCH0_Enable
 456:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 457:.\Generated_Source\PSoC5/CapSense.c ****     
 458:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 459:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Enable();
 460:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 461:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Enable();
 462:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 463:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 464:.\Generated_Source\PSoC5/CapSense.c ****     
 465:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable Vref */
 466:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 467:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Enable();
 468:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_SetValue(CapSense_VdacRefCH0_DEFAULT_DATA);
 469:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 470:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Enable();
 471:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_SetValue(CapSense_VdacRefCH1_DEFAULT_DATA);
 472:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 473:.\Generated_Source\PSoC5/CapSense.c ****     #else
 474:.\Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 475:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG |= CapSense_BufCH0_STBY_PWR_EN;
 368              		.loc 1 475 0
 369 0032 44F2BB33 		movw	r3, #:lower16:1073759163
 370 0036 C4F20003 		movt	r3, #:upper16:1073759163
 371 003a 44F2BB32 		movw	r2, #:lower16:1073759163
 372 003e C4F20002 		movt	r2, #:upper16:1073759163
 373 0042 1278     		ldrb	r2, [r2, #0]
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 16


 374 0044 D2B2     		uxtb	r2, r2
 375 0046 42F02002 		orr	r2, r2, #32
 376 004a D2B2     		uxtb	r2, r2
 377 004c 1A70     		strb	r2, [r3, #0]
 476:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG  |= CapSense_BufCH0_ACT_PWR_EN;
 378              		.loc 1 476 0
 379 004e 44F2AB33 		movw	r3, #:lower16:1073759147
 380 0052 C4F20003 		movt	r3, #:upper16:1073759147
 381 0056 44F2AB32 		movw	r2, #:lower16:1073759147
 382 005a C4F20002 		movt	r2, #:upper16:1073759147
 383 005e 1278     		ldrb	r2, [r2, #0]
 384 0060 D2B2     		uxtb	r2, r2
 385 0062 42F02002 		orr	r2, r2, #32
 386 0066 D2B2     		uxtb	r2, r2
 387 0068 1A70     		strb	r2, [r3, #0]
 477:.\Generated_Source\PSoC5/CapSense.c ****         
 478:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 479:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG |= CapSense_BufCH1_STBY_PWR_EN;
 480:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG  |= CapSense_BufCH1_ACT_PWR_EN;
 481:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 482:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 483:.\Generated_Source\PSoC5/CapSense.c ****     
 484:.\Generated_Source\PSoC5/CapSense.c ****     /* Set reference on AMux Bus */
 485:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 486:.\Generated_Source\PSoC5/CapSense.c ****         /* Connect Vdac to AMux Bus */
 487:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
 488:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 489:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
 490:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 491:.\Generated_Source\PSoC5/CapSense.c ****         
 492:.\Generated_Source\PSoC5/CapSense.c ****     #else
 493:.\Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 494:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 388              		.loc 1 494 0
 389 006a 45F67203 		movw	r3, #:lower16:1073764466
 390 006e C4F20003 		movt	r3, #:upper16:1073764466
 391 0072 45F67202 		movw	r2, #:lower16:1073764466
 392 0076 C4F20002 		movt	r2, #:upper16:1073764466
 393 007a 1278     		ldrb	r2, [r2, #0]
 394 007c D2B2     		uxtb	r2, r2
 395 007e 42F00102 		orr	r2, r2, #1
 396 0082 D2B2     		uxtb	r2, r2
 397 0084 1A70     		strb	r2, [r3, #0]
 495:.\Generated_Source\PSoC5/CapSense.c ****         
 496:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 497:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 498:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 499:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)*/
 500:.\Generated_Source\PSoC5/CapSense.c ****     
 501:.\Generated_Source\PSoC5/CapSense.c ****     CyExitCriticalSection(enableInterrupts);
 398              		.loc 1 501 0
 399 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 400 0088 1846     		mov	r0, r3
 401 008a FFF7FEFF 		bl	CyExitCriticalSection
 502:.\Generated_Source\PSoC5/CapSense.c ****     
 503:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable interrupt */
 504:.\Generated_Source\PSoC5/CapSense.c ****     CyIntEnable(CapSense_IsrCH0_ISR_NUMBER);
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 17


 402              		.loc 1 504 0
 403 008e 4EF20013 		movw	r3, #:lower16:-536813312
 404 0092 CEF20003 		movt	r3, #:upper16:-536813312
 405 0096 4FF00402 		mov	r2, #4
 406 009a 1A60     		str	r2, [r3, #0]
 505:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 506:.\Generated_Source\PSoC5/CapSense.c ****         CyIntEnable(CapSense_IsrCH1_ISR_NUMBER);
 507:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 508:.\Generated_Source\PSoC5/CapSense.c ****     
 509:.\Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Enable state */
 510:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_CAPSENSE_EN;
 407              		.loc 1 510 0
 408 009c 46F27B43 		movw	r3, #:lower16:1073767547
 409 00a0 C4F20003 		movt	r3, #:upper16:1073767547
 410 00a4 46F27B42 		movw	r2, #:lower16:1073767547
 411 00a8 C4F20002 		movt	r2, #:upper16:1073767547
 412 00ac 1278     		ldrb	r2, [r2, #0]
 413 00ae D2B2     		uxtb	r2, r2
 414 00b0 6FEA4262 		mvn	r2, r2, lsl #25
 415 00b4 6FEA5262 		mvn	r2, r2, lsr #25
 416 00b8 D2B2     		uxtb	r2, r2
 417 00ba 1A70     		strb	r2, [r3, #0]
 511:.\Generated_Source\PSoC5/CapSense.c **** }
 418              		.loc 1 511 0
 419 00bc 07F10807 		add	r7, r7, #8
 420 00c0 BD46     		mov	sp, r7
 421 00c2 80BD     		pop	{r7, pc}
 422              		.cfi_endproc
 423              	.LFE1:
 424              		.size	CapSense_Enable, .-CapSense_Enable
 425              		.section	.text.CapSense_Start,"ax",%progbits
 426              		.align	2
 427              		.global	CapSense_Start
 428              		.thumb
 429              		.thumb_func
 430              		.type	CapSense_Start, %function
 431              	CapSense_Start:
 432              	.LFB2:
 512:.\Generated_Source\PSoC5/CapSense.c **** 
 513:.\Generated_Source\PSoC5/CapSense.c **** 
 514:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 515:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Start
 516:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 517:.\Generated_Source\PSoC5/CapSense.c **** *
 518:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
 519:.\Generated_Source\PSoC5/CapSense.c **** *  Initializes registers and starts the CSD method of CapSense component. Reset 
 520:.\Generated_Source\PSoC5/CapSense.c **** *  all sensors to an inactive state. Enables interrupts for sensors scanning.
 521:.\Generated_Source\PSoC5/CapSense.c **** *  When Auto Tuning (SmartSense) mode is selected the tuning procedure is 
 522:.\Generated_Source\PSoC5/CapSense.c **** *  applied for all sensors.
 523:.\Generated_Source\PSoC5/CapSense.c **** *
 524:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 525:.\Generated_Source\PSoC5/CapSense.c **** *  None
 526:.\Generated_Source\PSoC5/CapSense.c **** *
 527:.\Generated_Source\PSoC5/CapSense.c **** * Return:
 528:.\Generated_Source\PSoC5/CapSense.c **** *  None
 529:.\Generated_Source\PSoC5/CapSense.c **** *
 530:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 18


 531:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_initVar - used to check initial configuration, modified on 
 532:.\Generated_Source\PSoC5/CapSense.c **** *  first function call.
 533:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_lowLevelTuningDone - used to notify the Tuner GUI that 
 534:.\Generated_Source\PSoC5/CapSense.c **** *  tuning of scanning parameters are done.
 535:.\Generated_Source\PSoC5/CapSense.c **** *
 536:.\Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 537:.\Generated_Source\PSoC5/CapSense.c **** *  No
 538:.\Generated_Source\PSoC5/CapSense.c **** *
 539:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 540:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_Start(void)  
 541:.\Generated_Source\PSoC5/CapSense.c **** {
 433              		.loc 1 541 0
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 0
 436              		@ frame_needed = 1, uses_anonymous_args = 0
 437 0000 80B5     		push	{r7, lr}
 438              	.LCFI6:
 439              		.cfi_def_cfa_offset 8
 440 0002 00AF     		add	r7, sp, #0
 441              		.cfi_offset 14, -4
 442              		.cfi_offset 7, -8
 443              	.LCFI7:
 444              		.cfi_def_cfa_register 7
 542:.\Generated_Source\PSoC5/CapSense.c ****     if (CapSense_initVar == 0u)
 445              		.loc 1 542 0
 446 0004 40F20003 		movw	r3, #:lower16:CapSense_initVar
 447 0008 C0F20003 		movt	r3, #:upper16:CapSense_initVar
 448 000c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 449 000e 002B     		cmp	r3, #0
 450 0010 08D1     		bne	.L6
 543:.\Generated_Source\PSoC5/CapSense.c ****     {
 544:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_Init();
 451              		.loc 1 544 0
 452 0012 FFF7FEFF 		bl	CapSense_Init
 545:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_initVar = 1u;
 453              		.loc 1 545 0
 454 0016 40F20003 		movw	r3, #:lower16:CapSense_initVar
 455 001a C0F20003 		movt	r3, #:upper16:CapSense_initVar
 456 001e 4FF00102 		mov	r2, #1
 457 0022 1A70     		strb	r2, [r3, #0]
 458              	.L6:
 546:.\Generated_Source\PSoC5/CapSense.c ****     }
 547:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_Enable();
 459              		.loc 1 547 0
 460 0024 FFF7FEFF 		bl	CapSense_Enable
 548:.\Generated_Source\PSoC5/CapSense.c ****     
 549:.\Generated_Source\PSoC5/CapSense.c ****     /* AutoTunning start */
 550:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 551:.\Generated_Source\PSoC5/CapSense.c ****         /* AutoTune by sensor or pair of sensor basis */
 552:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AutoTune();
 461              		.loc 1 552 0
 462 0028 FFF7FEFF 		bl	CapSense_AutoTune
 553:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_lowLevelTuningDone = 1u;
 463              		.loc 1 553 0
 464 002c 40F20003 		movw	r3, #:lower16:CapSense_lowLevelTuningDone
 465 0030 C0F20003 		movt	r3, #:upper16:CapSense_lowLevelTuningDone
 466 0034 4FF00102 		mov	r2, #1
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 19


 467 0038 1A70     		strb	r2, [r3, #0]
 554:.\Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 555:.\Generated_Source\PSoC5/CapSense.c **** }
 468              		.loc 1 555 0
 469 003a 80BD     		pop	{r7, pc}
 470              		.cfi_endproc
 471              	.LFE2:
 472              		.size	CapSense_Start, .-CapSense_Start
 473              		.section	.text.CapSense_Stop,"ax",%progbits
 474              		.align	2
 475              		.global	CapSense_Stop
 476              		.thumb
 477              		.thumb_func
 478              		.type	CapSense_Stop, %function
 479              	CapSense_Stop:
 480              	.LFB3:
 556:.\Generated_Source\PSoC5/CapSense.c **** 
 557:.\Generated_Source\PSoC5/CapSense.c **** 
 558:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 559:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Stop
 560:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 561:.\Generated_Source\PSoC5/CapSense.c **** *
 562:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
 563:.\Generated_Source\PSoC5/CapSense.c **** *  Stops the sensors scanner, disables internal interrupts, and resets all 
 564:.\Generated_Source\PSoC5/CapSense.c **** *  sensors to an inactive state. Disables Active mode power template bits for 
 565:.\Generated_Source\PSoC5/CapSense.c **** *  number of component used within CapSense.
 566:.\Generated_Source\PSoC5/CapSense.c **** *
 567:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 568:.\Generated_Source\PSoC5/CapSense.c **** *  None
 569:.\Generated_Source\PSoC5/CapSense.c **** *
 570:.\Generated_Source\PSoC5/CapSense.c **** * Return:
 571:.\Generated_Source\PSoC5/CapSense.c **** *  None
 572:.\Generated_Source\PSoC5/CapSense.c **** *
 573:.\Generated_Source\PSoC5/CapSense.c **** * Side Effects:
 574:.\Generated_Source\PSoC5/CapSense.c **** *  This function should be called after scans will be completed.
 575:.\Generated_Source\PSoC5/CapSense.c **** *
 576:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 577:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_Stop(void) 
 578:.\Generated_Source\PSoC5/CapSense.c **** {
 481              		.loc 1 578 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 1, uses_anonymous_args = 0
 485 0000 80B5     		push	{r7, lr}
 486              	.LCFI8:
 487              		.cfi_def_cfa_offset 8
 488 0002 00AF     		add	r7, sp, #0
 489              		.cfi_offset 14, -4
 490              		.cfi_offset 7, -8
 491              	.LCFI9:
 492              		.cfi_def_cfa_register 7
 579:.\Generated_Source\PSoC5/CapSense.c ****     /* Stop Capsensing */
 580:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= ~CapSense_CTRL_START;
 493              		.loc 1 580 0
 494 0004 46F27B43 		movw	r3, #:lower16:1073767547
 495 0008 C4F20003 		movt	r3, #:upper16:1073767547
 496 000c 46F27B42 		movw	r2, #:lower16:1073767547
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 20


 497 0010 C4F20002 		movt	r2, #:upper16:1073767547
 498 0014 1278     		ldrb	r2, [r2, #0]
 499 0016 D2B2     		uxtb	r2, r2
 500 0018 02F0FD02 		and	r2, r2, #253
 501 001c 1A70     		strb	r2, [r3, #0]
 581:.\Generated_Source\PSoC5/CapSense.c ****     
 582:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable interrupt */
 583:.\Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 502              		.loc 1 583 0
 503 001e 4EF28013 		movw	r3, #:lower16:-536813184
 504 0022 CEF20003 		movt	r3, #:upper16:-536813184
 505 0026 4FF00402 		mov	r2, #4
 506 002a 1A60     		str	r2, [r3, #0]
 584:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 585:.\Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 586:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 587:.\Generated_Source\PSoC5/CapSense.c ****     
 588:.\Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 589:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 507              		.loc 1 589 0
 508 002c FFF7FEFF 		bl	CapSense_ClearSensors
 590:.\Generated_Source\PSoC5/CapSense.c ****     
 591:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable Prescaler */
 592:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 593:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 594:.\Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)        
 595:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  &= ~CapSense_PRESCALER_ACT_PWR_EN;
 596:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_PRESCALER_STBY_PWR_EN;
 597:.\Generated_Source\PSoC5/CapSense.c ****         
 598:.\Generated_Source\PSoC5/CapSense.c ****     #else
 599:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 600:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 601:.\Generated_Source\PSoC5/CapSense.c ****     
 602:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable ScanSpeed */
 603:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG &= ~CapSense_SCANSPEED_CTRL_ENABLE;
 509              		.loc 1 603 0
 510 0030 46F29A43 		movw	r3, #:lower16:1073767578
 511 0034 C4F20003 		movt	r3, #:upper16:1073767578
 512 0038 46F29A42 		movw	r2, #:lower16:1073767578
 513 003c C4F20002 		movt	r2, #:upper16:1073767578
 514 0040 1278     		ldrb	r2, [r2, #0]
 515 0042 D2B2     		uxtb	r2, r2
 516 0044 02F0DF02 		and	r2, r2, #223
 517 0048 1A70     		strb	r2, [r3, #0]
 604:.\Generated_Source\PSoC5/CapSense.c ****     
 605:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH0 */
 606:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 607:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 608:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH0_ACT_PWR_EN;
 609:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG &= ~CapSense_PWM_CH0_STBY_PWR_EN;
 610:.\Generated_Source\PSoC5/CapSense.c **** 
 611:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 612:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH0_ACT_PWR_EN;
 613:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG &= ~CapSense_RAW_CH0_STBY_PWR_EN;
 614:.\Generated_Source\PSoC5/CapSense.c **** 
 615:.\Generated_Source\PSoC5/CapSense.c ****     #else
 616:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 21


 617:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 618:.\Generated_Source\PSoC5/CapSense.c ****         
 619:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 620:.\Generated_Source\PSoC5/CapSense.c ****     
 621:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH1 */
 622:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 623:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 624:.\Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 625:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH1_ACT_PWR_EN;
 626:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG &= ~CapSense_PWM_CH1_STBY_PWR_EN;
 627:.\Generated_Source\PSoC5/CapSense.c ****     
 628:.\Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 629:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH1_ACT_PWR_EN;
 630:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG &= ~CapSense_RAW_CH1_STBY_PWR_EN;
 631:.\Generated_Source\PSoC5/CapSense.c ****            
 632:.\Generated_Source\PSoC5/CapSense.c ****         #else
 633:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 634:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 635:.\Generated_Source\PSoC5/CapSense.c ****         
 636:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 637:.\Generated_Source\PSoC5/CapSense.c ****     
 638:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 639:.\Generated_Source\PSoC5/CapSense.c ****     
 640:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable the Clock */
 641:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 642:.\Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Stop();
 643:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 644:.\Generated_Source\PSoC5/CapSense.c ****     
 645:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable power from Cmp and Idac */
 646:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Stop();
 518              		.loc 1 646 0
 519 004a FFF7FEFF 		bl	CapSense_CompCH0_Stop
 647:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 648:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Stop();
 520              		.loc 1 648 0
 521 004e FFF7FEFF 		bl	CapSense_IdacCH0_Stop
 649:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 650:.\Generated_Source\PSoC5/CapSense.c ****     
 651:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 652:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Stop();
 653:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 654:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Stop();
 655:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 656:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */    
 657:.\Generated_Source\PSoC5/CapSense.c ****     
 658:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable Vref if as VDAC */
 659:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 660:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Stop();
 661:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 662:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Stop();
 663:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 664:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 665:.\Generated_Source\PSoC5/CapSense.c **** 
 666:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
 667:.\Generated_Source\PSoC5/CapSense.c ****         /* The Idac turn off before */
 668:.\Generated_Source\PSoC5/CapSense.c ****     #else
 669:.\Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 22


 670:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
 522              		.loc 1 670 0
 523 0052 45F67203 		movw	r3, #:lower16:1073764466
 524 0056 C4F20003 		movt	r3, #:upper16:1073764466
 525 005a 45F67202 		movw	r2, #:lower16:1073764466
 526 005e C4F20002 		movt	r2, #:upper16:1073764466
 527 0062 1278     		ldrb	r2, [r2, #0]
 528 0064 D2B2     		uxtb	r2, r2
 529 0066 02F0FE02 		and	r2, r2, #254
 530 006a 1A70     		strb	r2, [r3, #0]
 671:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG &= ~CapSense_BufCH0_ACT_PWR_EN;
 531              		.loc 1 671 0
 532 006c 44F2AB33 		movw	r3, #:lower16:1073759147
 533 0070 C4F20003 		movt	r3, #:upper16:1073759147
 534 0074 44F2AB32 		movw	r2, #:lower16:1073759147
 535 0078 C4F20002 		movt	r2, #:upper16:1073759147
 536 007c 1278     		ldrb	r2, [r2, #0]
 537 007e D2B2     		uxtb	r2, r2
 538 0080 02F0DF02 		and	r2, r2, #223
 539 0084 1A70     		strb	r2, [r3, #0]
 672:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG &= ~CapSense_BufCH0_STBY_PWR_EN;
 540              		.loc 1 672 0
 541 0086 44F2BB33 		movw	r3, #:lower16:1073759163
 542 008a C4F20003 		movt	r3, #:upper16:1073759163
 543 008e 44F2BB32 		movw	r2, #:lower16:1073759163
 544 0092 C4F20002 		movt	r2, #:upper16:1073759163
 545 0096 1278     		ldrb	r2, [r2, #0]
 546 0098 D2B2     		uxtb	r2, r2
 547 009a 02F0DF02 		and	r2, r2, #223
 548 009e 1A70     		strb	r2, [r3, #0]
 673:.\Generated_Source\PSoC5/CapSense.c ****         
 674:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 675:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
 676:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG &= ~CapSense_BufCH1_ACT_PWR_EN;
 677:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG &= ~CapSense_BufCH1_STBY_PWR_EN;
 678:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /*(CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 679:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 680:.\Generated_Source\PSoC5/CapSense.c ****     
 681:.\Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Disable state */
 682:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= ~CapSense_CTRL_CAPSENSE_EN;
 549              		.loc 1 682 0
 550 00a0 46F27B43 		movw	r3, #:lower16:1073767547
 551 00a4 C4F20003 		movt	r3, #:upper16:1073767547
 552 00a8 46F27B42 		movw	r2, #:lower16:1073767547
 553 00ac C4F20002 		movt	r2, #:upper16:1073767547
 554 00b0 1278     		ldrb	r2, [r2, #0]
 555 00b2 D2B2     		uxtb	r2, r2
 556 00b4 02F07F02 		and	r2, r2, #127
 557 00b8 1A70     		strb	r2, [r3, #0]
 683:.\Generated_Source\PSoC5/CapSense.c **** }
 558              		.loc 1 683 0
 559 00ba 80BD     		pop	{r7, pc}
 560              		.cfi_endproc
 561              	.LFE3:
 562              		.size	CapSense_Stop, .-CapSense_Stop
 563              		.section	.text.CapSense_FindNextSensor,"ax",%progbits
 564              		.align	2
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 23


 565              		.global	CapSense_FindNextSensor
 566              		.thumb
 567              		.thumb_func
 568              		.type	CapSense_FindNextSensor, %function
 569              	CapSense_FindNextSensor:
 570              	.LFB4:
 684:.\Generated_Source\PSoC5/CapSense.c **** 
 685:.\Generated_Source\PSoC5/CapSense.c **** 
 686:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 687:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 688:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextSensor
 689:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 690:.\Generated_Source\PSoC5/CapSense.c ****     *
 691:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
 692:.\Generated_Source\PSoC5/CapSense.c ****     *  Finds next sensor to scan. 
 693:.\Generated_Source\PSoC5/CapSense.c ****     *
 694:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 695:.\Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index of sensor.
 696:.\Generated_Source\PSoC5/CapSense.c ****     *
 697:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
 698:.\Generated_Source\PSoC5/CapSense.c ****     *  Returns the next sensor index to scan.
 699:.\Generated_Source\PSoC5/CapSense.c ****     *
 700:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 701:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_SensorEnableMask[ ] - used to store bit masks of enabled 
 702:.\Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 703:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_SensorEnableMask[0] contains the masked bits for sensors 0
 704:.\Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 705:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_SensorEnableMask[1] contains the masked bits for sensors 
 706:.\Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 707:.\Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 708:.\Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 709:.\Generated_Source\PSoC5/CapSense.c ****     *
 710:.\Generated_Source\PSoC5/CapSense.c ****     * Note: 
 711:.\Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on current scanning scanning and should not
 712:.\Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 713:.\Generated_Source\PSoC5/CapSense.c ****     *
 714:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 715:.\Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextSensor(uint8 snsIndex) CYREENTRANT
 716:.\Generated_Source\PSoC5/CapSense.c ****     {
 571              		.loc 1 716 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 16
 574              		@ frame_needed = 1, uses_anonymous_args = 0
 575              		@ link register save eliminated.
 576 0000 80B4     		push	{r7}
 577              	.LCFI10:
 578              		.cfi_def_cfa_offset 4
 579 0002 85B0     		sub	sp, sp, #20
 580              	.LCFI11:
 581              		.cfi_def_cfa_offset 24
 582 0004 00AF     		add	r7, sp, #0
 583              		.cfi_offset 7, -4
 584              	.LCFI12:
 585              		.cfi_def_cfa_register 7
 586 0006 0346     		mov	r3, r0
 587 0008 FB71     		strb	r3, [r7, #7]
 588              	.L13:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 24


 717:.\Generated_Source\PSoC5/CapSense.c ****         uint8 pos;
 718:.\Generated_Source\PSoC5/CapSense.c ****         uint8 enMask;
 719:.\Generated_Source\PSoC5/CapSense.c ****         
 720:.\Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor enabled */
 721:.\Generated_Source\PSoC5/CapSense.c ****         do
 722:.\Generated_Source\PSoC5/CapSense.c ****         {
 723:.\Generated_Source\PSoC5/CapSense.c ****             /* Proceed with the next sensor */
 724:.\Generated_Source\PSoC5/CapSense.c ****             snsIndex++;
 589              		.loc 1 724 0
 590 000a FB79     		ldrb	r3, [r7, #7]
 591 000c 03F10103 		add	r3, r3, #1
 592 0010 FB71     		strb	r3, [r7, #7]
 725:.\Generated_Source\PSoC5/CapSense.c ****             if(snsIndex == CapSense_TOTAL_SENSOR_COUNT)
 593              		.loc 1 725 0
 594 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 595 0014 072B     		cmp	r3, #7
 596 0016 18D0     		beq	.L15
 597              	.L11:
 726:.\Generated_Source\PSoC5/CapSense.c ****             {
 727:.\Generated_Source\PSoC5/CapSense.c ****                 break;
 728:.\Generated_Source\PSoC5/CapSense.c ****             }
 729:.\Generated_Source\PSoC5/CapSense.c ****             pos = (snsIndex >> 3u);
 598              		.loc 1 729 0
 599 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 600 001a 4FEAD303 		lsr	r3, r3, #3
 601 001e BB73     		strb	r3, [r7, #14]
 730:.\Generated_Source\PSoC5/CapSense.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 602              		.loc 1 730 0
 603 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 604 0022 03F00703 		and	r3, r3, #7
 605 0026 4FF00102 		mov	r2, #1
 606 002a 02FA03F3 		lsl	r3, r2, r3
 607 002e FB73     		strb	r3, [r7, #15]
 731:.\Generated_Source\PSoC5/CapSense.c ****         }    
 732:.\Generated_Source\PSoC5/CapSense.c ****         while((CapSense_SensorEnableMask[pos] & enMask) == 0u);
 608              		.loc 1 732 0
 609 0030 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 610 0032 40F20003 		movw	r3, #:lower16:CapSense_SensorEnableMask
 611 0036 C0F20003 		movt	r3, #:upper16:CapSense_SensorEnableMask
 612 003a 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 613 003c FB7B     		ldrb	r3, [r7, #15]
 614 003e 02EA0303 		and	r3, r2, r3
 615 0042 DBB2     		uxtb	r3, r3
 616 0044 002B     		cmp	r3, #0
 617 0046 E0D0     		beq	.L13
 618 0048 00E0     		b	.L12
 619              	.L15:
 620              		.loc 1 727 0
 621 004a 00BF     		nop
 622              	.L12:
 733:.\Generated_Source\PSoC5/CapSense.c ****         
 734:.\Generated_Source\PSoC5/CapSense.c ****         return snsIndex;
 623              		.loc 1 734 0
 624 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 735:.\Generated_Source\PSoC5/CapSense.c ****     }
 625              		.loc 1 735 0
 626 004e 1846     		mov	r0, r3
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 25


 627 0050 07F11407 		add	r7, r7, #20
 628 0054 BD46     		mov	sp, r7
 629 0056 80BC     		pop	{r7}
 630 0058 7047     		bx	lr
 631              		.cfi_endproc
 632              	.LFE4:
 633              		.size	CapSense_FindNextSensor, .-CapSense_FindNextSensor
 634 005a 00BF     		.section	.text.CapSense_SetScanSlotSettings,"ax",%progbits
 635              		.align	2
 636              		.global	CapSense_SetScanSlotSettings
 637              		.thumb
 638              		.thumb_func
 639              		.type	CapSense_SetScanSlotSettings, %function
 640              	CapSense_SetScanSlotSettings:
 641              	.LFB5:
 736:.\Generated_Source\PSoC5/CapSense.c ****  #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
 737:.\Generated_Source\PSoC5/CapSense.c ****  
 738:.\Generated_Source\PSoC5/CapSense.c ****  
 739:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 740:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 741:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextPair
 742:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 743:.\Generated_Source\PSoC5/CapSense.c ****     *
 744:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
 745:.\Generated_Source\PSoC5/CapSense.c ****     *  Finds next pair or sensor to scan. Sets condition bits to skip scanning.
 746:.\Generated_Source\PSoC5/CapSense.c ****     *  
 747:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 748:.\Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index pair of sensors.
 749:.\Generated_Source\PSoC5/CapSense.c ****     *
 750:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
 751:.\Generated_Source\PSoC5/CapSense.c ****     *  Returns the next pair of sensors index to scan.
 752:.\Generated_Source\PSoC5/CapSense.c ****     *
 753:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 754:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_SensorEnableMask[ ] - used to store bit masks of enabled 
 755:.\Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 756:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_SensorEnableMask[0] contains the masked bits for sensors 0
 757:.\Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 758:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_SensorEnableMask[1] contains the masked bits for sensors 
 759:.\Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 760:.\Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 761:.\Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 762:.\Generated_Source\PSoC5/CapSense.c ****     *
 763:.\Generated_Source\PSoC5/CapSense.c ****     * Note: 
 764:.\Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on control signals set for scanning and should not
 765:.\Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 766:.\Generated_Source\PSoC5/CapSense.c ****     *
 767:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 768:.\Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextPair(uint8 snsIndex) CYREENTRANT
 769:.\Generated_Source\PSoC5/CapSense.c ****     {
 770:.\Generated_Source\PSoC5/CapSense.c ****         uint8 posCh;
 771:.\Generated_Source\PSoC5/CapSense.c ****         uint8 enMaskCh;
 772:.\Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh0 = snsIndex;
 773:.\Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh1 = snsIndex + CapSense_TOTAL_SENSOR_COUNT__CH0;
 774:.\Generated_Source\PSoC5/CapSense.c ****         
 775:.\Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 0 */
 776:.\Generated_Source\PSoC5/CapSense.c ****         do
 777:.\Generated_Source\PSoC5/CapSense.c ****         {
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 26


 778:.\Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 779:.\Generated_Source\PSoC5/CapSense.c ****             indexCh0++;
 780:.\Generated_Source\PSoC5/CapSense.c ****             if (indexCh0 >= CapSense_TOTAL_SENSOR_COUNT__CH0)
 781:.\Generated_Source\PSoC5/CapSense.c ****             {
 782:.\Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH1 */
 783:.\Generated_Source\PSoC5/CapSense.c ****                 indexCh0 = CapSense_END_OF_SCAN__CH0;
 784:.\Generated_Source\PSoC5/CapSense.c ****                 break;
 785:.\Generated_Source\PSoC5/CapSense.c ****             }
 786:.\Generated_Source\PSoC5/CapSense.c ****             
 787:.\Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh0 >> 3u);
 788:.\Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh0 & 0x07u);
 789:.\Generated_Source\PSoC5/CapSense.c ****         }
 790:.\Generated_Source\PSoC5/CapSense.c ****         while((CapSense_SensorEnableMask[posCh] & enMaskCh) == 0u);
 791:.\Generated_Source\PSoC5/CapSense.c ****         
 792:.\Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 1 */
 793:.\Generated_Source\PSoC5/CapSense.c ****         do
 794:.\Generated_Source\PSoC5/CapSense.c ****         {
 795:.\Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 796:.\Generated_Source\PSoC5/CapSense.c ****             indexCh1++;        
 797:.\Generated_Source\PSoC5/CapSense.c ****             if (indexCh1 >= CapSense_TOTAL_SENSOR_COUNT)
 798:.\Generated_Source\PSoC5/CapSense.c ****             {
 799:.\Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH0 */
 800:.\Generated_Source\PSoC5/CapSense.c ****                 indexCh1 = CapSense_END_OF_SCAN__CH1;
 801:.\Generated_Source\PSoC5/CapSense.c ****                 break;
 802:.\Generated_Source\PSoC5/CapSense.c ****             }
 803:.\Generated_Source\PSoC5/CapSense.c ****             
 804:.\Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh1 >> 3u);
 805:.\Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh1 & 0x07u);
 806:.\Generated_Source\PSoC5/CapSense.c ****         } 
 807:.\Generated_Source\PSoC5/CapSense.c ****         while((CapSense_SensorEnableMask[posCh] & enMaskCh) == 0u);
 808:.\Generated_Source\PSoC5/CapSense.c ****         
 809:.\Generated_Source\PSoC5/CapSense.c ****         indexCh1 -= CapSense_TOTAL_SENSOR_COUNT__CH0;
 810:.\Generated_Source\PSoC5/CapSense.c ****         
 811:.\Generated_Source\PSoC5/CapSense.c ****         /* Find the pair to scan */
 812:.\Generated_Source\PSoC5/CapSense.c ****         if(indexCh0 == indexCh1)
 813:.\Generated_Source\PSoC5/CapSense.c ****         {
 814:.\Generated_Source\PSoC5/CapSense.c ****             /* Scans TWO Channels */
 815:.\Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh0;
 816:.\Generated_Source\PSoC5/CapSense.c ****             
 817:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 818:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 819:.\Generated_Source\PSoC5/CapSense.c ****         }
 820:.\Generated_Source\PSoC5/CapSense.c ****         else if(indexCh0 < indexCh1)
 821:.\Generated_Source\PSoC5/CapSense.c ****         {
 822:.\Generated_Source\PSoC5/CapSense.c ****            /* Scans Channel ONE only */
 823:.\Generated_Source\PSoC5/CapSense.c ****            snsIndex = indexCh0;
 824:.\Generated_Source\PSoC5/CapSense.c ****            
 825:.\Generated_Source\PSoC5/CapSense.c ****            CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 826:.\Generated_Source\PSoC5/CapSense.c ****            CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH1;
 827:.\Generated_Source\PSoC5/CapSense.c ****         }
 828:.\Generated_Source\PSoC5/CapSense.c ****         else
 829:.\Generated_Source\PSoC5/CapSense.c ****         {
 830:.\Generated_Source\PSoC5/CapSense.c ****             /* Scans Channel TWO only */
 831:.\Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh1;
 832:.\Generated_Source\PSoC5/CapSense.c ****             
 833:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 834:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH0;
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 27


 835:.\Generated_Source\PSoC5/CapSense.c ****         }
 836:.\Generated_Source\PSoC5/CapSense.c ****         
 837:.\Generated_Source\PSoC5/CapSense.c ****         return snsIndex;
 838:.\Generated_Source\PSoC5/CapSense.c ****     }
 839:.\Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN */
 840:.\Generated_Source\PSoC5/CapSense.c **** 
 841:.\Generated_Source\PSoC5/CapSense.c **** 
 842:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 843:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSlotSettings
 844:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 845:.\Generated_Source\PSoC5/CapSense.c **** *
 846:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
 847:.\Generated_Source\PSoC5/CapSense.c **** *  Sets the scan settings of the selected scan slot (sensor or pair of sensors). 
 848:.\Generated_Source\PSoC5/CapSense.c **** *  The scan settings incorporate IDAC value (for IDAC configurations) for every 
 849:.\Generated_Source\PSoC5/CapSense.c **** *  sensor and resolution. The resolution is the same for all sensors within 
 850:.\Generated_Source\PSoC5/CapSense.c **** *  widget.
 851:.\Generated_Source\PSoC5/CapSense.c **** *
 852:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 853:.\Generated_Source\PSoC5/CapSense.c **** *  slot:  Scan slot number (sensor or pair of sensors).
 854:.\Generated_Source\PSoC5/CapSense.c **** *
 855:.\Generated_Source\PSoC5/CapSense.c **** * Return:
 856:.\Generated_Source\PSoC5/CapSense.c **** *  None
 857:.\Generated_Source\PSoC5/CapSense.c **** *
 858:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 859:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_idacSettings[] - used to store idac value for every sensor.
 860:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_widgetResolution[] - used to store scan resolution of every 
 861:.\Generated_Source\PSoC5/CapSense.c **** *  widget.
 862:.\Generated_Source\PSoC5/CapSense.c **** *
 863:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 864:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSlotSettings(uint8 slot) CYREENTRANT
 865:.\Generated_Source\PSoC5/CapSense.c **** {
 642              		.loc 1 865 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 16
 645              		@ frame_needed = 1, uses_anonymous_args = 0
 646 0000 80B5     		push	{r7, lr}
 647              	.LCFI13:
 648              		.cfi_def_cfa_offset 8
 649 0002 84B0     		sub	sp, sp, #16
 650              	.LCFI14:
 651              		.cfi_def_cfa_offset 24
 652 0004 00AF     		add	r7, sp, #0
 653              		.cfi_offset 14, -4
 654              		.cfi_offset 7, -8
 655              	.LCFI15:
 656              		.cfi_def_cfa_register 7
 657 0006 0346     		mov	r3, r0
 658 0008 FB71     		strb	r3, [r7, #7]
 866:.\Generated_Source\PSoC5/CapSense.c ****     uint8 widget;
 867:.\Generated_Source\PSoC5/CapSense.c ****     
 868:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 869:.\Generated_Source\PSoC5/CapSense.c ****         /* Define widget sensor belongs to */
 870:.\Generated_Source\PSoC5/CapSense.c ****         widget = CapSense_widgetNumber[slot];
 659              		.loc 1 870 0
 660 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 661 000c 40F20003 		movw	r3, #:lower16:CapSense_widgetNumber
 662 0010 C0F20003 		movt	r3, #:upper16:CapSense_widgetNumber
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 28


 663 0014 9B5C     		ldrb	r3, [r3, r2]
 664 0016 FB73     		strb	r3, [r7, #15]
 871:.\Generated_Source\PSoC5/CapSense.c ****         
 872:.\Generated_Source\PSoC5/CapSense.c ****         /* Set Idac Value */
 873:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 874:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 665              		.loc 1 874 0
 666 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 667 001a 40F20003 		movw	r3, #:lower16:CapSense_idacSettings
 668 001e C0F20003 		movt	r3, #:upper16:CapSense_idacSettings
 669 0022 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 670 0024 1846     		mov	r0, r3
 671 0026 FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 875:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 876:.\Generated_Source\PSoC5/CapSense.c ****         
 877:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 878:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 879:.\Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 880:.\Generated_Source\PSoC5/CapSense.c ****                 ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_LO
 881:.\Generated_Source\PSoC5/CapSense.c ****         #else
 882:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 672              		.loc 1 882 0
 673 002a 46F25D43 		movw	r3, #:lower16:1073767517
 674 002e C4F20003 		movt	r3, #:upper16:1073767517
 675 0032 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 676 0034 40F20002 		movw	r2, #:lower16:CapSense_widgetResolution
 677 0038 C0F20002 		movt	r2, #:upper16:CapSense_widgetResolution
 678 003c 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 679 003e 1A70     		strb	r2, [r3, #0]
 883:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 884:.\Generated_Source\PSoC5/CapSense.c **** 
 885:.\Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 886:.\Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 887:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_AnalogSwitchDivider[slot]);
 680              		.loc 1 887 0
 681 0040 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 682 0042 40F20003 		movw	r3, #:lower16:CapSense_AnalogSwitchDivider
 683 0046 C0F20003 		movt	r3, #:upper16:CapSense_AnalogSwitchDivider
 684 004a 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 685 004c 1846     		mov	r0, r3
 686 004e FFF7FEFF 		bl	CapSense_SetPrescaler
 888:.\Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 889:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_AnalogSwitchDivider);
 890:.\Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 891:.\Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 892:.\Generated_Source\PSoC5/CapSense.c ****                */
 893:.\Generated_Source\PSoC5/CapSense.c **** 
 894:.\Generated_Source\PSoC5/CapSense.c ****     #else
 895:.\Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH0)
 896:.\Generated_Source\PSoC5/CapSense.c ****         {
 897:.\Generated_Source\PSoC5/CapSense.c ****             /* Define widget sensor belongs to */
 898:.\Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot];
 899:.\Generated_Source\PSoC5/CapSense.c ****             
 900:.\Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 901:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 902:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 903:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 29


 904:.\Generated_Source\PSoC5/CapSense.c ****             
 905:.\Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 906:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 907:.\Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 908:.\Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 909:.\Generated_Source\PSoC5/CapSense.c ****             #else
 910:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 911:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 912:.\Generated_Source\PSoC5/CapSense.c ****         }
 913:.\Generated_Source\PSoC5/CapSense.c ****         
 914:.\Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH1)
 915:.\Generated_Source\PSoC5/CapSense.c ****         {
 916:.\Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot+CapSense_TOTAL_SENSOR_COUNT__CH0];
 917:.\Generated_Source\PSoC5/CapSense.c ****         
 918:.\Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 919:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 920:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH1_SetValue(CapSense_idacSettings[slot+
 921:.\Generated_Source\PSoC5/CapSense.c ****                                                                              CapSense_TOTAL_SENSOR_
 922:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 923:.\Generated_Source\PSoC5/CapSense.c ****             
 924:.\Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 925:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 926:.\Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH1_PERIOD_PTR,
 927:.\Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 928:.\Generated_Source\PSoC5/CapSense.c ****             #else
 929:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH1_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 930:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 931:.\Generated_Source\PSoC5/CapSense.c ****         }
 932:.\Generated_Source\PSoC5/CapSense.c **** 
 933:.\Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 934:.\Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 935:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_AnalogSwitchDivider[slot]);
 936:.\Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 937:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_AnalogSwitchDivider);
 938:.\Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 939:.\Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 940:.\Generated_Source\PSoC5/CapSense.c ****                */
 941:.\Generated_Source\PSoC5/CapSense.c **** 
 942:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 943:.\Generated_Source\PSoC5/CapSense.c **** }
 687              		.loc 1 943 0
 688 0052 07F11007 		add	r7, r7, #16
 689 0056 BD46     		mov	sp, r7
 690 0058 80BD     		pop	{r7, pc}
 691              		.cfi_endproc
 692              	.LFE5:
 693              		.size	CapSense_SetScanSlotSettings, .-CapSense_SetScanSlotSettings
 694 005a 00BF     		.section	.text.CapSense_ScanSensor,"ax",%progbits
 695              		.align	2
 696              		.global	CapSense_ScanSensor
 697              		.thumb
 698              		.thumb_func
 699              		.type	CapSense_ScanSensor, %function
 700              	CapSense_ScanSensor:
 701              	.LFB6:
 944:.\Generated_Source\PSoC5/CapSense.c **** 
 945:.\Generated_Source\PSoC5/CapSense.c **** 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 30


 946:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 947:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanSensor
 948:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 949:.\Generated_Source\PSoC5/CapSense.c **** *
 950:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
 951:.\Generated_Source\PSoC5/CapSense.c **** *  Sets scan settings and starts scanning a sensor or pair of combined sensors
 952:.\Generated_Source\PSoC5/CapSense.c **** *  on each channel. If two channels are configured, two sensors may be scanned 
 953:.\Generated_Source\PSoC5/CapSense.c **** *  at the same time. After scanning is complete the isr copies the measured 
 954:.\Generated_Source\PSoC5/CapSense.c **** *  sensor raw data to the global array. Use of the isr ensures this function 
 955:.\Generated_Source\PSoC5/CapSense.c **** *  is non-blocking. Each sensor has a unique number within the sensor array. 
 956:.\Generated_Source\PSoC5/CapSense.c **** *  This number is assigned by the CapSense customizer in sequence.
 957:.\Generated_Source\PSoC5/CapSense.c **** *
 958:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 959:.\Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
 960:.\Generated_Source\PSoC5/CapSense.c **** *
 961:.\Generated_Source\PSoC5/CapSense.c **** * Return:
 962:.\Generated_Source\PSoC5/CapSense.c **** *  None
 963:.\Generated_Source\PSoC5/CapSense.c **** *
 964:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 965:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
 966:.\Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and mode of scan as single scan.
 967:.\Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
 968:.\Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one.
 969:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
 970:.\Generated_Source\PSoC5/CapSense.c **** *  Sets to provided sensor argument.
 971:.\Generated_Source\PSoC5/CapSense.c **** *
 972:.\Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 973:.\Generated_Source\PSoC5/CapSense.c **** *  No
 974:.\Generated_Source\PSoC5/CapSense.c **** *
 975:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 976:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanSensor(uint8 sensor)  
 977:.\Generated_Source\PSoC5/CapSense.c **** {
 702              		.loc 1 977 0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 8
 705              		@ frame_needed = 1, uses_anonymous_args = 0
 706 0000 80B5     		push	{r7, lr}
 707              	.LCFI16:
 708              		.cfi_def_cfa_offset 8
 709 0002 82B0     		sub	sp, sp, #8
 710              	.LCFI17:
 711              		.cfi_def_cfa_offset 16
 712 0004 00AF     		add	r7, sp, #0
 713              		.cfi_offset 14, -4
 714              		.cfi_offset 7, -8
 715              	.LCFI18:
 716              		.cfi_def_cfa_register 7
 717 0006 0346     		mov	r3, r0
 718 0008 FB71     		strb	r3, [r7, #7]
 978:.\Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 979:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
 719              		.loc 1 979 0
 720 000a 40F20003 		movw	r3, #:lower16:CapSense_csv
 721 000e C0F20003 		movt	r3, #:upper16:CapSense_csv
 722 0012 4FF00002 		mov	r2, #0
 723 0016 1A70     		strb	r2, [r3, #0]
 980:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = sensor;
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 31


 724              		.loc 1 980 0
 725 0018 40F20003 		movw	r3, #:lower16:CapSense_sensorIndex
 726 001c C0F20003 		movt	r3, #:upper16:CapSense_sensorIndex
 727 0020 FA79     		ldrb	r2, [r7, #7]
 728 0022 1A70     		strb	r2, [r3, #0]
 981:.\Generated_Source\PSoC5/CapSense.c ****     
 982:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 983:.\Generated_Source\PSoC5/CapSense.c ****         /* Start of sensor scan */
 984:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_csv = (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 729              		.loc 1 984 0
 730 0024 40F20003 		movw	r3, #:lower16:CapSense_csv
 731 0028 C0F20003 		movt	r3, #:upper16:CapSense_csv
 732 002c 6FF07E02 		mvn	r2, #126
 733 0030 1A70     		strb	r2, [r3, #0]
 985:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan(sensor);
 734              		.loc 1 985 0
 735 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 736 0034 1846     		mov	r0, r3
 737 0036 FFF7FEFF 		bl	CapSense_PreScan
 986:.\Generated_Source\PSoC5/CapSense.c ****         
 987:.\Generated_Source\PSoC5/CapSense.c ****     #else
 988:.\Generated_Source\PSoC5/CapSense.c ****         /* CH0: check end of scan conditions */
 989:.\Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
 990:.\Generated_Source\PSoC5/CapSense.c ****         {
 991:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 992:.\Generated_Source\PSoC5/CapSense.c ****         }
 993:.\Generated_Source\PSoC5/CapSense.c ****         else
 994:.\Generated_Source\PSoC5/CapSense.c ****         {
 995:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH0;
 996:.\Generated_Source\PSoC5/CapSense.c ****         }
 997:.\Generated_Source\PSoC5/CapSense.c ****         
 998:.\Generated_Source\PSoC5/CapSense.c ****         /* CH1: check end of scan conditions */
 999:.\Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
1000:.\Generated_Source\PSoC5/CapSense.c ****         {
1001:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
1002:.\Generated_Source\PSoC5/CapSense.c ****         }
1003:.\Generated_Source\PSoC5/CapSense.c ****         else
1004:.\Generated_Source\PSoC5/CapSense.c ****         {
1005:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH1;
1006:.\Generated_Source\PSoC5/CapSense.c ****         }
1007:.\Generated_Source\PSoC5/CapSense.c ****         
1008:.\Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
1009:.\Generated_Source\PSoC5/CapSense.c ****         if( ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u) || 
1010:.\Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u) )
1011:.\Generated_Source\PSoC5/CapSense.c ****         {
1012:.\Generated_Source\PSoC5/CapSense.c ****         
1013:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
1014:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(sensor);
1015:.\Generated_Source\PSoC5/CapSense.c ****         }
1016:.\Generated_Source\PSoC5/CapSense.c ****         
1017:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1018:.\Generated_Source\PSoC5/CapSense.c **** }
 738              		.loc 1 1018 0
 739 003a 07F10807 		add	r7, r7, #8
 740 003e BD46     		mov	sp, r7
 741 0040 80BD     		pop	{r7, pc}
 742              		.cfi_endproc
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 32


 743              	.LFE6:
 744              		.size	CapSense_ScanSensor, .-CapSense_ScanSensor
 745 0042 00BF     		.section	.text.CapSense_ScanEnabledWidgets,"ax",%progbits
 746              		.align	2
 747              		.global	CapSense_ScanEnabledWidgets
 748              		.thumb
 749              		.thumb_func
 750              		.type	CapSense_ScanEnabledWidgets, %function
 751              	CapSense_ScanEnabledWidgets:
 752              	.LFB7:
1019:.\Generated_Source\PSoC5/CapSense.c **** 
1020:.\Generated_Source\PSoC5/CapSense.c **** 
1021:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1022:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanEnableWidgets
1023:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1024:.\Generated_Source\PSoC5/CapSense.c **** *
1025:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1026:.\Generated_Source\PSoC5/CapSense.c **** *  Scans all of the enabled widgets. Starts scanning a sensor or pair of sensors 
1027:.\Generated_Source\PSoC5/CapSense.c **** *  within enabled widget. The isr proceeding scanning next sensor or pair till 
1028:.\Generated_Source\PSoC5/CapSense.c **** *  all enabled widgets will be scanned. Use of the isr ensures this function is 
1029:.\Generated_Source\PSoC5/CapSense.c **** *  non-blocking. All widgets are enabled by default except proximity widgets. 
1030:.\Generated_Source\PSoC5/CapSense.c **** *  Proximity widgets must be manually enabled as their long scan time is 
1031:.\Generated_Source\PSoC5/CapSense.c **** *  incompatible with fast response desired of other widget types.
1032:.\Generated_Source\PSoC5/CapSense.c **** *
1033:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1034:.\Generated_Source\PSoC5/CapSense.c **** *  None
1035:.\Generated_Source\PSoC5/CapSense.c **** *
1036:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1037:.\Generated_Source\PSoC5/CapSense.c **** *  None
1038:.\Generated_Source\PSoC5/CapSense.c **** *
1039:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1040:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
1041:.\Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and clears single scan mode.
1042:.\Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
1043:.\Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one. 
1044:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
1045:.\Generated_Source\PSoC5/CapSense.c **** *  Sets to 0xFF and provided to function CapSense_FindNextSensor or
1046:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_FindNextPair, these functions starts with sensor index
1047:.\Generated_Source\PSoC5/CapSense.c **** *  increment and overflow of uint8 gives desired index 0.
1048:.\Generated_Source\PSoC5/CapSense.c **** *
1049:.\Generated_Source\PSoC5/CapSense.c **** * Reentrant:
1050:.\Generated_Source\PSoC5/CapSense.c **** *  No
1051:.\Generated_Source\PSoC5/CapSense.c **** *
1052:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1053:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanEnabledWidgets(void) 
1054:.\Generated_Source\PSoC5/CapSense.c **** {
 753              		.loc 1 1054 0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 0
 756              		@ frame_needed = 1, uses_anonymous_args = 0
 757 0000 80B5     		push	{r7, lr}
 758              	.LCFI19:
 759              		.cfi_def_cfa_offset 8
 760 0002 00AF     		add	r7, sp, #0
 761              		.cfi_offset 14, -4
 762              		.cfi_offset 7, -8
 763              	.LCFI20:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 33


 764              		.cfi_def_cfa_register 7
1055:.\Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
1056:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
 765              		.loc 1 1056 0
 766 0004 40F20003 		movw	r3, #:lower16:CapSense_csv
 767 0008 C0F20003 		movt	r3, #:upper16:CapSense_csv
 768 000c 4FF00002 		mov	r2, #0
 769 0010 1A70     		strb	r2, [r3, #0]
1057:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
 770              		.loc 1 1057 0
 771 0012 40F20003 		movw	r3, #:lower16:CapSense_sensorIndex
 772 0016 C0F20003 		movt	r3, #:upper16:CapSense_sensorIndex
 773 001a 4FF0FF32 		mov	r2, #-1
 774 001e 1A70     		strb	r2, [r3, #0]
1058:.\Generated_Source\PSoC5/CapSense.c ****     
1059:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1060:.\Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor */
1061:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextSensor(CapSense_sensorIndex);
 775              		.loc 1 1061 0
 776 0020 40F20003 		movw	r3, #:lower16:CapSense_sensorIndex
 777 0024 C0F20003 		movt	r3, #:upper16:CapSense_sensorIndex
 778 0028 1B78     		ldrb	r3, [r3, #0]
 779 002a DBB2     		uxtb	r3, r3
 780 002c 1846     		mov	r0, r3
 781 002e FFF7FEFF 		bl	CapSense_FindNextSensor
 782 0032 0346     		mov	r3, r0
 783 0034 1A46     		mov	r2, r3
 784 0036 40F20003 		movw	r3, #:lower16:CapSense_sensorIndex
 785 003a C0F20003 		movt	r3, #:upper16:CapSense_sensorIndex
 786 003e 1A70     		strb	r2, [r3, #0]
1062:.\Generated_Source\PSoC5/CapSense.c **** 
1063:.\Generated_Source\PSoC5/CapSense.c ****         /* Check end of scan condition */
1064:.\Generated_Source\PSoC5/CapSense.c ****         if(CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT)
 787              		.loc 1 1064 0
 788 0040 40F20003 		movw	r3, #:lower16:CapSense_sensorIndex
 789 0044 C0F20003 		movt	r3, #:upper16:CapSense_sensorIndex
 790 0048 1B78     		ldrb	r3, [r3, #0]
 791 004a DBB2     		uxtb	r3, r3
 792 004c 062B     		cmp	r3, #6
 793 004e 16D8     		bhi	.L22
1065:.\Generated_Source\PSoC5/CapSense.c ****         {
1066:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
 794              		.loc 1 1066 0
 795 0050 40F20003 		movw	r3, #:lower16:CapSense_csv
 796 0054 C0F20003 		movt	r3, #:upper16:CapSense_csv
 797 0058 1B78     		ldrb	r3, [r3, #0]
 798 005a DBB2     		uxtb	r3, r3
 799 005c 43F00103 		orr	r3, r3, #1
 800 0060 DAB2     		uxtb	r2, r3
 801 0062 40F20003 		movw	r3, #:lower16:CapSense_csv
 802 0066 C0F20003 		movt	r3, #:upper16:CapSense_csv
 803 006a 1A70     		strb	r2, [r3, #0]
1067:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
 804              		.loc 1 1067 0
 805 006c 40F20003 		movw	r3, #:lower16:CapSense_sensorIndex
 806 0070 C0F20003 		movt	r3, #:upper16:CapSense_sensorIndex
 807 0074 1B78     		ldrb	r3, [r3, #0]
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 34


 808 0076 DBB2     		uxtb	r3, r3
 809 0078 1846     		mov	r0, r3
 810 007a FFF7FEFF 		bl	CapSense_PreScan
 811              	.L22:
1068:.\Generated_Source\PSoC5/CapSense.c ****         }
1069:.\Generated_Source\PSoC5/CapSense.c ****         
1070:.\Generated_Source\PSoC5/CapSense.c ****     #else
1071:.\Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor and set proper control register */
1072:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextPair(CapSense_sensorIndex);
1073:.\Generated_Source\PSoC5/CapSense.c ****         
1074:.\Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
1075:.\Generated_Source\PSoC5/CapSense.c ****         if((CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH0) || 
1076:.\Generated_Source\PSoC5/CapSense.c ****            (CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH1))
1077:.\Generated_Source\PSoC5/CapSense.c ****         {
1078:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
1079:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
1080:.\Generated_Source\PSoC5/CapSense.c ****         }
1081:.\Generated_Source\PSoC5/CapSense.c ****         
1082:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1083:.\Generated_Source\PSoC5/CapSense.c **** }
 812              		.loc 1 1083 0
 813 007e 80BD     		pop	{r7, pc}
 814              		.cfi_endproc
 815              	.LFE7:
 816              		.size	CapSense_ScanEnabledWidgets, .-CapSense_ScanEnabledWidgets
 817              		.section	.text.CapSense_IsBusy,"ax",%progbits
 818              		.align	2
 819              		.global	CapSense_IsBusy
 820              		.thumb
 821              		.thumb_func
 822              		.type	CapSense_IsBusy, %function
 823              	CapSense_IsBusy:
 824              	.LFB8:
1084:.\Generated_Source\PSoC5/CapSense.c **** 
1085:.\Generated_Source\PSoC5/CapSense.c **** 
1086:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1087:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_IsBusy
1088:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1089:.\Generated_Source\PSoC5/CapSense.c **** *
1090:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1091:.\Generated_Source\PSoC5/CapSense.c **** *  Returns the state of CapSense component. The 1 means that scanning in 
1092:.\Generated_Source\PSoC5/CapSense.c **** *  progress and 0 means that scanning is complete.
1093:.\Generated_Source\PSoC5/CapSense.c **** *
1094:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1095:.\Generated_Source\PSoC5/CapSense.c **** *  None
1096:.\Generated_Source\PSoC5/CapSense.c **** *
1097:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1098:.\Generated_Source\PSoC5/CapSense.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
1099:.\Generated_Source\PSoC5/CapSense.c **** *  completed.
1100:.\Generated_Source\PSoC5/CapSense.c **** *
1101:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1102:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
1103:.\Generated_Source\PSoC5/CapSense.c **** *  Checks the busy status.
1104:.\Generated_Source\PSoC5/CapSense.c **** *
1105:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1106:.\Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_IsBusy(void) 
1107:.\Generated_Source\PSoC5/CapSense.c **** {
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 35


 825              		.loc 1 1107 0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 0
 828              		@ frame_needed = 1, uses_anonymous_args = 0
 829              		@ link register save eliminated.
 830 0000 80B4     		push	{r7}
 831              	.LCFI21:
 832              		.cfi_def_cfa_offset 4
 833 0002 00AF     		add	r7, sp, #0
 834              		.cfi_offset 7, -4
 835              	.LCFI22:
 836              		.cfi_def_cfa_register 7
1108:.\Generated_Source\PSoC5/CapSense.c ****     return ((CapSense_csv & CapSense_SW_STS_BUSY) == 
 837              		.loc 1 1108 0
 838 0004 40F20003 		movw	r3, #:lower16:CapSense_csv
 839 0008 C0F20003 		movt	r3, #:upper16:CapSense_csv
 840 000c 1B78     		ldrb	r3, [r3, #0]
 841 000e DBB2     		uxtb	r3, r3
 842 0010 03F00103 		and	r3, r3, #1
 843 0014 DBB2     		uxtb	r3, r3
 844 0016 002B     		cmp	r3, #0
 845 0018 02D0     		beq	.L24
 846 001a 4FF00103 		mov	r3, #1
 847 001e 01E0     		b	.L25
 848              	.L24:
 849 0020 4FF00003 		mov	r3, #0
 850              	.L25:
1109:.\Generated_Source\PSoC5/CapSense.c ****              CapSense_SW_STS_BUSY) ? 1u : 0u;
1110:.\Generated_Source\PSoC5/CapSense.c **** }
 851              		.loc 1 1110 0
 852 0024 1846     		mov	r0, r3
 853 0026 BD46     		mov	sp, r7
 854 0028 80BC     		pop	{r7}
 855 002a 7047     		bx	lr
 856              		.cfi_endproc
 857              	.LFE8:
 858              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 859              		.section	.text.CapSense_ReadSensorRaw,"ax",%progbits
 860              		.align	2
 861              		.global	CapSense_ReadSensorRaw
 862              		.thumb
 863              		.thumb_func
 864              		.type	CapSense_ReadSensorRaw, %function
 865              	CapSense_ReadSensorRaw:
 866              	.LFB9:
1111:.\Generated_Source\PSoC5/CapSense.c **** 
1112:.\Generated_Source\PSoC5/CapSense.c **** 
1113:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1114:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ReadSensorRaw
1115:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1116:.\Generated_Source\PSoC5/CapSense.c **** *
1117:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1118:.\Generated_Source\PSoC5/CapSense.c **** *  Returns scan sensor raw data from the CapSense_SensorRaw[] array. 
1119:.\Generated_Source\PSoC5/CapSense.c **** *  Each scan sensor has a unique number within the sensor array. This number 
1120:.\Generated_Source\PSoC5/CapSense.c **** *  is assigned by the CapSense customizer in sequence.
1121:.\Generated_Source\PSoC5/CapSense.c **** *
1122:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 36


1123:.\Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1124:.\Generated_Source\PSoC5/CapSense.c **** *
1125:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1126:.\Generated_Source\PSoC5/CapSense.c **** *  Returns current raw data value for defined sensor number.
1127:.\Generated_Source\PSoC5/CapSense.c **** *
1128:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1129:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_SensorRaw[] - used to store sensors raw data.
1130:.\Generated_Source\PSoC5/CapSense.c **** *
1131:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1132:.\Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_ReadSensorRaw(uint8 sensor) 
1133:.\Generated_Source\PSoC5/CapSense.c **** {
 867              		.loc 1 1133 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 8
 870              		@ frame_needed = 1, uses_anonymous_args = 0
 871              		@ link register save eliminated.
 872 0000 80B4     		push	{r7}
 873              	.LCFI23:
 874              		.cfi_def_cfa_offset 4
 875 0002 83B0     		sub	sp, sp, #12
 876              	.LCFI24:
 877              		.cfi_def_cfa_offset 16
 878 0004 00AF     		add	r7, sp, #0
 879              		.cfi_offset 7, -4
 880              	.LCFI25:
 881              		.cfi_def_cfa_register 7
 882 0006 0346     		mov	r3, r0
 883 0008 FB71     		strb	r3, [r7, #7]
1134:.\Generated_Source\PSoC5/CapSense.c ****     return CapSense_SensorRaw[sensor];
 884              		.loc 1 1134 0
 885 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 886 000c 40F20003 		movw	r3, #:lower16:CapSense_SensorRaw
 887 0010 C0F20003 		movt	r3, #:upper16:CapSense_SensorRaw
 888 0014 33F81230 		ldrh	r3, [r3, r2, lsl #1]
1135:.\Generated_Source\PSoC5/CapSense.c **** }
 889              		.loc 1 1135 0
 890 0018 1846     		mov	r0, r3
 891 001a 07F10C07 		add	r7, r7, #12
 892 001e BD46     		mov	sp, r7
 893 0020 80BC     		pop	{r7}
 894 0022 7047     		bx	lr
 895              		.cfi_endproc
 896              	.LFE9:
 897              		.size	CapSense_ReadSensorRaw, .-CapSense_ReadSensorRaw
 898              		.section	.text.CapSense_ClearSensors,"ax",%progbits
 899              		.align	2
 900              		.global	CapSense_ClearSensors
 901              		.thumb
 902              		.thumb_func
 903              		.type	CapSense_ClearSensors, %function
 904              	CapSense_ClearSensors:
 905              	.LFB10:
1136:.\Generated_Source\PSoC5/CapSense.c **** 
1137:.\Generated_Source\PSoC5/CapSense.c **** 
1138:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1139:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ClearSensors
1140:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 37


1141:.\Generated_Source\PSoC5/CapSense.c **** *
1142:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1143:.\Generated_Source\PSoC5/CapSense.c **** *  Resets all sensors to the non-sampling state by sequentially disconnecting
1144:.\Generated_Source\PSoC5/CapSense.c **** *  all sensors from Analog MUX Bus and putting them to inactive state.
1145:.\Generated_Source\PSoC5/CapSense.c **** *
1146:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1147:.\Generated_Source\PSoC5/CapSense.c **** *  None
1148:.\Generated_Source\PSoC5/CapSense.c **** *
1149:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1150:.\Generated_Source\PSoC5/CapSense.c **** *  None
1151:.\Generated_Source\PSoC5/CapSense.c **** *
1152:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1153:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_ClearSensors(void) 
1154:.\Generated_Source\PSoC5/CapSense.c **** {
 906              		.loc 1 1154 0
 907              		.cfi_startproc
 908              		@ args = 0, pretend = 0, frame = 8
 909              		@ frame_needed = 1, uses_anonymous_args = 0
 910 0000 80B5     		push	{r7, lr}
 911              	.LCFI26:
 912              		.cfi_def_cfa_offset 8
 913 0002 82B0     		sub	sp, sp, #8
 914              	.LCFI27:
 915              		.cfi_def_cfa_offset 16
 916 0004 00AF     		add	r7, sp, #0
 917              		.cfi_offset 14, -4
 918              		.cfi_offset 7, -8
 919              	.LCFI28:
 920              		.cfi_def_cfa_register 7
1155:.\Generated_Source\PSoC5/CapSense.c ****     uint8 i;
1156:.\Generated_Source\PSoC5/CapSense.c ****    
1157:.\Generated_Source\PSoC5/CapSense.c ****     for (i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 921              		.loc 1 1157 0
 922 0006 4FF00003 		mov	r3, #0
 923 000a FB71     		strb	r3, [r7, #7]
 924 000c 07E0     		b	.L30
 925              	.L31:
1158:.\Generated_Source\PSoC5/CapSense.c ****     {
1159:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(i);
 926              		.loc 1 1159 0
 927 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 928 0010 1846     		mov	r0, r3
 929 0012 FFF7FEFF 		bl	CapSense_DisableSensor
 930              		.loc 1 1157 0
 931 0016 FB79     		ldrb	r3, [r7, #7]
 932 0018 03F10103 		add	r3, r3, #1
 933 001c FB71     		strb	r3, [r7, #7]
 934              	.L30:
 935 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 936 0020 062B     		cmp	r3, #6
 937 0022 F4D9     		bls	.L31
1160:.\Generated_Source\PSoC5/CapSense.c ****     }
1161:.\Generated_Source\PSoC5/CapSense.c **** }
 938              		.loc 1 1161 0
 939 0024 07F10807 		add	r7, r7, #8
 940 0028 BD46     		mov	sp, r7
 941 002a 80BD     		pop	{r7, pc}
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 38


 942              		.cfi_endproc
 943              	.LFE10:
 944              		.size	CapSense_ClearSensors, .-CapSense_ClearSensors
 945              		.section	.text.CapSense_EnableSensor,"ax",%progbits
 946              		.align	2
 947              		.global	CapSense_EnableSensor
 948              		.thumb
 949              		.thumb_func
 950              		.type	CapSense_EnableSensor, %function
 951              	CapSense_EnableSensor:
 952              	.LFB11:
1162:.\Generated_Source\PSoC5/CapSense.c **** 
1163:.\Generated_Source\PSoC5/CapSense.c **** 
1164:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_IS_COMPLEX_SCANSLOTS)
1165:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1166:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_EnableScanSlot
1167:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1168:.\Generated_Source\PSoC5/CapSense.c ****     *
1169:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1170:.\Generated_Source\PSoC5/CapSense.c ****     *  Configures the selected slot to measure during the next measurement 
1171:.\Generated_Source\PSoC5/CapSense.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
1172:.\Generated_Source\PSoC5/CapSense.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
1173:.\Generated_Source\PSoC5/CapSense.c ****     *
1174:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1175:.\Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1176:.\Generated_Source\PSoC5/CapSense.c ****     *
1177:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1178:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1179:.\Generated_Source\PSoC5/CapSense.c ****     *
1180:.\Generated_Source\PSoC5/CapSense.c ****     * Global Constants:
1181:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1182:.\Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1183:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1184:.\Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1185:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1186:.\Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1187:.\Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1188:.\Generated_Source\PSoC5/CapSense.c ****     *  The bit 7 (msb) is used to define the sensor type: single or complex.
1189:.\Generated_Source\PSoC5/CapSense.c ****     *
1190:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1191:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_EnableScanSlot(uint8 slot) CYREENTRANT
1192:.\Generated_Source\PSoC5/CapSense.c ****     {
1193:.\Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1194:.\Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1195:.\Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1196:.\Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1197:.\Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1198:.\Generated_Source\PSoC5/CapSense.c ****         
1199:.\Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1200:.\Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1201:.\Generated_Source\PSoC5/CapSense.c ****         {
1202:.\Generated_Source\PSoC5/CapSense.c ****             /* Enable sensor (signle) */
1203:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableSensor(slot);
1204:.\Generated_Source\PSoC5/CapSense.c ****         }
1205:.\Generated_Source\PSoC5/CapSense.c ****         else
1206:.\Generated_Source\PSoC5/CapSense.c ****         {
1207:.\Generated_Source\PSoC5/CapSense.c ****             /* Enable complex sensor */
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 39


1208:.\Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1209:.\Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1210:.\Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1211:.\Generated_Source\PSoC5/CapSense.c ****                         
1212:.\Generated_Source\PSoC5/CapSense.c ****             for (j=0; j < snsNumber; j++)
1213:.\Generated_Source\PSoC5/CapSense.c ****             {
1214:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableSensor(index[j]);
1215:.\Generated_Source\PSoC5/CapSense.c ****             }
1216:.\Generated_Source\PSoC5/CapSense.c ****         } 
1217:.\Generated_Source\PSoC5/CapSense.c ****     }
1218:.\Generated_Source\PSoC5/CapSense.c ****     
1219:.\Generated_Source\PSoC5/CapSense.c ****     
1220:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1221:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_DisableScanSlot
1222:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1223:.\Generated_Source\PSoC5/CapSense.c ****     *
1224:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1225:.\Generated_Source\PSoC5/CapSense.c ****     *  Disables the selected slot. The corresponding pin/pis is/are disconnected 
1226:.\Generated_Source\PSoC5/CapSense.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1227:.\Generated_Source\PSoC5/CapSense.c ****     *
1228:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1229:.\Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1230:.\Generated_Source\PSoC5/CapSense.c ****     *
1231:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1232:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1233:.\Generated_Source\PSoC5/CapSense.c ****     *
1234:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1235:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1236:.\Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1237:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1238:.\Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1239:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1240:.\Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1241:.\Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1242:.\Generated_Source\PSoC5/CapSense.c ****     *  The 7bit(msb) is used to define the sensor type: single or complex.
1243:.\Generated_Source\PSoC5/CapSense.c ****     *
1244:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1245:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_DisableScanSlot(uint8 slot) CYREENTRANT
1246:.\Generated_Source\PSoC5/CapSense.c ****     {
1247:.\Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1248:.\Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1249:.\Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1250:.\Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1251:.\Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1252:.\Generated_Source\PSoC5/CapSense.c ****         
1253:.\Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1254:.\Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1255:.\Generated_Source\PSoC5/CapSense.c ****         {
1256:.\Generated_Source\PSoC5/CapSense.c ****             /* Disable sensor (signle) */
1257:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_DisableSensor(slot);
1258:.\Generated_Source\PSoC5/CapSense.c ****         }
1259:.\Generated_Source\PSoC5/CapSense.c ****         else
1260:.\Generated_Source\PSoC5/CapSense.c ****         {
1261:.\Generated_Source\PSoC5/CapSense.c ****             /* Disable complex sensor */
1262:.\Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1263:.\Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1264:.\Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 40


1265:.\Generated_Source\PSoC5/CapSense.c ****                         
1266:.\Generated_Source\PSoC5/CapSense.c ****             for (j=0; j < snsNumber; j++)
1267:.\Generated_Source\PSoC5/CapSense.c ****             {
1268:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_DisableSensor(index[j]);
1269:.\Generated_Source\PSoC5/CapSense.c ****             }
1270:.\Generated_Source\PSoC5/CapSense.c ****         } 
1271:.\Generated_Source\PSoC5/CapSense.c ****     }
1272:.\Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1273:.\Generated_Source\PSoC5/CapSense.c **** 
1274:.\Generated_Source\PSoC5/CapSense.c **** 
1275:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1276:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_EnableSensor
1277:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1278:.\Generated_Source\PSoC5/CapSense.c **** *
1279:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1280:.\Generated_Source\PSoC5/CapSense.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1281:.\Generated_Source\PSoC5/CapSense.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1282:.\Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus. This also enables the comparator function.
1283:.\Generated_Source\PSoC5/CapSense.c **** *
1284:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1285:.\Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1286:.\Generated_Source\PSoC5/CapSense.c **** *
1287:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1288:.\Generated_Source\PSoC5/CapSense.c **** *  None
1289:.\Generated_Source\PSoC5/CapSense.c **** *
1290:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1291:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1292:.\Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1293:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1294:.\Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1295:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1296:.\Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1297:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1298:.\Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1299:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1300:.\Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1301:.\Generated_Source\PSoC5/CapSense.c **** *
1302:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1303:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_EnableSensor(uint8 sensor) CYREENTRANT
1304:.\Generated_Source\PSoC5/CapSense.c **** {
 953              		.loc 1 1304 0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 16
 956              		@ frame_needed = 1, uses_anonymous_args = 0
 957 0000 80B5     		push	{r7, lr}
 958              	.LCFI29:
 959              		.cfi_def_cfa_offset 8
 960 0002 84B0     		sub	sp, sp, #16
 961              	.LCFI30:
 962              		.cfi_def_cfa_offset 24
 963 0004 00AF     		add	r7, sp, #0
 964              		.cfi_offset 14, -4
 965              		.cfi_offset 7, -8
 966              	.LCFI31:
 967              		.cfi_def_cfa_register 7
 968 0006 0346     		mov	r3, r0
 969 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 41


1305:.\Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
 970              		.loc 1 1305 0
 971 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 972 000c 40F20003 		movw	r3, #:lower16:CapSense_portTable
 973 0010 C0F20003 		movt	r3, #:upper16:CapSense_portTable
 974 0014 9B5C     		ldrb	r3, [r3, r2]
 975 0016 BB73     		strb	r3, [r7, #14]
1306:.\Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
 976              		.loc 1 1306 0
 977 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 978 001a 40F20003 		movw	r3, #:lower16:CapSense_maskTable
 979 001e C0F20003 		movt	r3, #:upper16:CapSense_maskTable
 980 0022 9B5C     		ldrb	r3, [r3, r2]
 981 0024 FB73     		strb	r3, [r7, #15]
1307:.\Generated_Source\PSoC5/CapSense.c ****     
1308:.\Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1309:.\Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1310:.\Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1311:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1312:.\Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1313:.\Generated_Source\PSoC5/CapSense.c ****             */
1314:.\Generated_Source\PSoC5/CapSense.c ****     
1315:.\Generated_Source\PSoC5/CapSense.c ****     /* Make sensor High-Z */
1316:.\Generated_Source\PSoC5/CapSense.c ****     *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
 982              		.loc 1 1316 0
 983 0026 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 984 0028 40F20003 		movw	r3, #:lower16:CapSense_pcTable
 985 002c C0F20003 		movt	r3, #:upper16:CapSense_pcTable
 986 0030 53F82230 		ldr	r3, [r3, r2, lsl #2]
 987 0034 4FF00902 		mov	r2, #9
 988 0038 1A70     		strb	r2, [r3, #0]
1317:.\Generated_Source\PSoC5/CapSense.c ****     
1318:.\Generated_Source\PSoC5/CapSense.c ****     /* Connect to DSI output */
1319:.\Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
 989              		.loc 1 1319 0
 990 003a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 991 003c 0F2B     		cmp	r3, #15
 992 003e 02D1     		bne	.L34
1320:.\Generated_Source\PSoC5/CapSense.c **** 	{
1321:.\Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
 993              		.loc 1 1321 0
 994 0040 4FF00703 		mov	r3, #7
 995 0044 BB73     		strb	r3, [r7, #14]
 996              	.L34:
1322:.\Generated_Source\PSoC5/CapSense.c **** 	}
1323:.\Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] |= mask;
 997              		.loc 1 1323 0
 998 0046 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 999 0048 40F20003 		movw	r3, #:lower16:CapSense_csTable
 1000 004c C0F20003 		movt	r3, #:upper16:CapSense_csTable
 1001 0050 53F82220 		ldr	r2, [r3, r2, lsl #2]
 1002 0054 B97B     		ldrb	r1, [r7, #14]	@ zero_extendqisi2
 1003 0056 40F20003 		movw	r3, #:lower16:CapSense_csTable
 1004 005a C0F20003 		movt	r3, #:upper16:CapSense_csTable
 1005 005e 53F82130 		ldr	r3, [r3, r1, lsl #2]
 1006 0062 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 1007 0064 FB7B     		ldrb	r3, [r7, #15]
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 42


 1008 0066 41EA0303 		orr	r3, r1, r3
 1009 006a DBB2     		uxtb	r3, r3
 1010 006c 1370     		strb	r3, [r2, #0]
1324:.\Generated_Source\PSoC5/CapSense.c ****     
1325:.\Generated_Source\PSoC5/CapSense.c ****     /* Connect to AMUX */
1326:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1327:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1328:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_amuxIndex[sensor]);
1329:.\Generated_Source\PSoC5/CapSense.c ****         #else
1330:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(sensor);
 1011              		.loc 1 1330 0
 1012 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1013 0070 1846     		mov	r0, r3
 1014 0072 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
1331:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1332:.\Generated_Source\PSoC5/CapSense.c ****                 
1333:.\Generated_Source\PSoC5/CapSense.c ****     #else
1334:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1335:.\Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1336:.\Generated_Source\PSoC5/CapSense.c ****             {
1337:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(amuxCh);
1338:.\Generated_Source\PSoC5/CapSense.c ****             } 
1339:.\Generated_Source\PSoC5/CapSense.c ****             else
1340:.\Generated_Source\PSoC5/CapSense.c ****             {
1341:.\Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1342:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(amuxCh);
1343:.\Generated_Source\PSoC5/CapSense.c ****             }
1344:.\Generated_Source\PSoC5/CapSense.c ****             
1345:.\Generated_Source\PSoC5/CapSense.c ****         #else
1346:.\Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1347:.\Generated_Source\PSoC5/CapSense.c ****             {
1348:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(sensor);
1349:.\Generated_Source\PSoC5/CapSense.c ****             } 
1350:.\Generated_Source\PSoC5/CapSense.c ****             else
1351:.\Generated_Source\PSoC5/CapSense.c ****             {
1352:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1353:.\Generated_Source\PSoC5/CapSense.c ****             }
1354:.\Generated_Source\PSoC5/CapSense.c ****             
1355:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1356:.\Generated_Source\PSoC5/CapSense.c ****         
1357:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
1358:.\Generated_Source\PSoC5/CapSense.c **** }
 1015              		.loc 1 1358 0
 1016 0076 07F11007 		add	r7, r7, #16
 1017 007a BD46     		mov	sp, r7
 1018 007c 80BD     		pop	{r7, pc}
 1019              		.cfi_endproc
 1020              	.LFE11:
 1021              		.size	CapSense_EnableSensor, .-CapSense_EnableSensor
 1022 007e 00BF     		.section	.text.CapSense_DisableSensor,"ax",%progbits
 1023              		.align	2
 1024              		.global	CapSense_DisableSensor
 1025              		.thumb
 1026              		.thumb_func
 1027              		.type	CapSense_DisableSensor, %function
 1028              	CapSense_DisableSensor:
 1029              	.LFB12:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 43


1359:.\Generated_Source\PSoC5/CapSense.c **** 
1360:.\Generated_Source\PSoC5/CapSense.c **** 
1361:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1362:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_DisableSensor
1363:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1364:.\Generated_Source\PSoC5/CapSense.c **** *
1365:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1366:.\Generated_Source\PSoC5/CapSense.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1367:.\Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1368:.\Generated_Source\PSoC5/CapSense.c **** *
1369:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1370:.\Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number
1371:.\Generated_Source\PSoC5/CapSense.c **** *
1372:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1373:.\Generated_Source\PSoC5/CapSense.c **** *  None
1374:.\Generated_Source\PSoC5/CapSense.c **** *
1375:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1376:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1377:.\Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1378:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1379:.\Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1380:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1381:.\Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1382:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1383:.\Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1384:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1385:.\Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1386:.\Generated_Source\PSoC5/CapSense.c **** *
1387:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1388:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_DisableSensor(uint8 sensor) CYREENTRANT
1389:.\Generated_Source\PSoC5/CapSense.c **** {
 1030              		.loc 1 1389 0
 1031              		.cfi_startproc
 1032              		@ args = 0, pretend = 0, frame = 16
 1033              		@ frame_needed = 1, uses_anonymous_args = 0
 1034 0000 80B5     		push	{r7, lr}
 1035              	.LCFI32:
 1036              		.cfi_def_cfa_offset 8
 1037 0002 84B0     		sub	sp, sp, #16
 1038              	.LCFI33:
 1039              		.cfi_def_cfa_offset 24
 1040 0004 00AF     		add	r7, sp, #0
 1041              		.cfi_offset 14, -4
 1042              		.cfi_offset 7, -8
 1043              	.LCFI34:
 1044              		.cfi_def_cfa_register 7
 1045 0006 0346     		mov	r3, r0
 1046 0008 FB71     		strb	r3, [r7, #7]
1390:.\Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
 1047              		.loc 1 1390 0
 1048 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1049 000c 40F20003 		movw	r3, #:lower16:CapSense_portTable
 1050 0010 C0F20003 		movt	r3, #:upper16:CapSense_portTable
 1051 0014 9B5C     		ldrb	r3, [r3, r2]
 1052 0016 BB73     		strb	r3, [r7, #14]
1391:.\Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
 1053              		.loc 1 1391 0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 44


 1054 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1055 001a 40F20003 		movw	r3, #:lower16:CapSense_maskTable
 1056 001e C0F20003 		movt	r3, #:upper16:CapSense_maskTable
 1057 0022 9B5C     		ldrb	r3, [r3, r2]
 1058 0024 FB73     		strb	r3, [r7, #15]
1392:.\Generated_Source\PSoC5/CapSense.c ****     
1393:.\Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1394:.\Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1395:.\Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1396:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1397:.\Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1398:.\Generated_Source\PSoC5/CapSense.c ****             */
1399:.\Generated_Source\PSoC5/CapSense.c ****     
1400:.\Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from AMUX */
1401:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1402:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1403:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(CapSense_amuxIndex[sensor]);
1404:.\Generated_Source\PSoC5/CapSense.c ****         #else
1405:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(sensor);
 1059              		.loc 1 1405 0
 1060 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1061 0028 1846     		mov	r0, r3
 1062 002a FFF7FEFF 		bl	CapSense_AMuxCH0_Unset
1406:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1407:.\Generated_Source\PSoC5/CapSense.c ****                 
1408:.\Generated_Source\PSoC5/CapSense.c ****     #else
1409:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1410:.\Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1411:.\Generated_Source\PSoC5/CapSense.c ****             {
1412:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(amuxCh);
1413:.\Generated_Source\PSoC5/CapSense.c ****             } 
1414:.\Generated_Source\PSoC5/CapSense.c ****             else
1415:.\Generated_Source\PSoC5/CapSense.c ****             {
1416:.\Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1417:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(amuxCh);
1418:.\Generated_Source\PSoC5/CapSense.c ****             }
1419:.\Generated_Source\PSoC5/CapSense.c ****             
1420:.\Generated_Source\PSoC5/CapSense.c ****         #else
1421:.\Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1422:.\Generated_Source\PSoC5/CapSense.c ****             {
1423:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(sensor);
1424:.\Generated_Source\PSoC5/CapSense.c ****             } 
1425:.\Generated_Source\PSoC5/CapSense.c ****             else
1426:.\Generated_Source\PSoC5/CapSense.c ****             {
1427:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1428:.\Generated_Source\PSoC5/CapSense.c ****             }
1429:.\Generated_Source\PSoC5/CapSense.c ****             
1430:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1431:.\Generated_Source\PSoC5/CapSense.c ****         
1432:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1433:.\Generated_Source\PSoC5/CapSense.c ****     
1434:.\Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from DSI output */
1435:.\Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
 1063              		.loc 1 1435 0
 1064 002e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1065 0030 0F2B     		cmp	r3, #15
 1066 0032 02D1     		bne	.L37
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 45


1436:.\Generated_Source\PSoC5/CapSense.c **** 	{
1437:.\Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
 1067              		.loc 1 1437 0
 1068 0034 4FF00703 		mov	r3, #7
 1069 0038 BB73     		strb	r3, [r7, #14]
 1070              	.L37:
1438:.\Generated_Source\PSoC5/CapSense.c **** 	}
1439:.\Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] &= ~mask;
 1071              		.loc 1 1439 0
 1072 003a BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1073 003c 40F20003 		movw	r3, #:lower16:CapSense_csTable
 1074 0040 C0F20003 		movt	r3, #:upper16:CapSense_csTable
 1075 0044 53F82220 		ldr	r2, [r3, r2, lsl #2]
 1076 0048 B97B     		ldrb	r1, [r7, #14]	@ zero_extendqisi2
 1077 004a 40F20003 		movw	r3, #:lower16:CapSense_csTable
 1078 004e C0F20003 		movt	r3, #:upper16:CapSense_csTable
 1079 0052 53F82130 		ldr	r3, [r3, r1, lsl #2]
 1080 0056 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1081 0058 1946     		mov	r1, r3
 1082 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1083 005c 6FEA0303 		mvn	r3, r3
 1084 0060 DBB2     		uxtb	r3, r3
 1085 0062 01EA0303 		and	r3, r1, r3
 1086 0066 DBB2     		uxtb	r3, r3
 1087 0068 DBB2     		uxtb	r3, r3
 1088 006a 1370     		strb	r3, [r2, #0]
1440:.\Generated_Source\PSoC5/CapSense.c ****     
1441:.\Generated_Source\PSoC5/CapSense.c ****     /* Set sensor to inactive state */
1442:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND)
1443:.\Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_GND;
 1089              		.loc 1 1443 0
 1090 006c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1091 006e 40F20003 		movw	r3, #:lower16:CapSense_pcTable
 1092 0072 C0F20003 		movt	r3, #:upper16:CapSense_pcTable
 1093 0076 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1094 007a 4FF00802 		mov	r2, #8
 1095 007e 1A70     		strb	r2, [r3, #0]
1444:.\Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_HIGHZ)
1445:.\Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
1446:.\Generated_Source\PSoC5/CapSense.c ****     #else
1447:.\Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_SHIELD;
1448:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND) */
1449:.\Generated_Source\PSoC5/CapSense.c **** }
 1096              		.loc 1 1449 0
 1097 0080 07F11007 		add	r7, r7, #16
 1098 0084 BD46     		mov	sp, r7
 1099 0086 80BD     		pop	{r7, pc}
 1100              		.cfi_endproc
 1101              	.LFE12:
 1102              		.size	CapSense_DisableSensor, .-CapSense_DisableSensor
 1103              		.section	.text.CapSense_PreScan,"ax",%progbits
 1104              		.align	2
 1105              		.global	CapSense_PreScan
 1106              		.thumb
 1107              		.thumb_func
 1108              		.type	CapSense_PreScan, %function
 1109              	CapSense_PreScan:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 46


 1110              	.LFB13:
1450:.\Generated_Source\PSoC5/CapSense.c **** 
1451:.\Generated_Source\PSoC5/CapSense.c **** 
1452:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1453:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_PreScan
1454:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1455:.\Generated_Source\PSoC5/CapSense.c **** *
1456:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1457:.\Generated_Source\PSoC5/CapSense.c **** *  Set required settings, enable sensor, remove Vref from AMUX and start the 
1458:.\Generated_Source\PSoC5/CapSense.c **** *  scanning process of the sensor.
1459:.\Generated_Source\PSoC5/CapSense.c **** *
1460:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1461:.\Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1462:.\Generated_Source\PSoC5/CapSense.c **** *
1463:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1464:.\Generated_Source\PSoC5/CapSense.c **** *  None
1465:.\Generated_Source\PSoC5/CapSense.c **** *
1466:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1467:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_rbTable[] - used to store pointers to PC pin registers for 
1468:.\Generated_Source\PSoC5/CapSense.c **** *  every bleed resistor (Rb). Only available when Current Source is External 
1469:.\Generated_Source\PSoC5/CapSense.c **** *  resistor.
1470:.\Generated_Source\PSoC5/CapSense.c **** *
1471:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1472:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_PreScan(uint8 sensor) CYREENTRANT
1473:.\Generated_Source\PSoC5/CapSense.c **** {
 1111              		.loc 1 1473 0
 1112              		.cfi_startproc
 1113              		@ args = 0, pretend = 0, frame = 8
 1114              		@ frame_needed = 1, uses_anonymous_args = 0
 1115 0000 80B5     		push	{r7, lr}
 1116              	.LCFI35:
 1117              		.cfi_def_cfa_offset 8
 1118 0002 82B0     		sub	sp, sp, #8
 1119              	.LCFI36:
 1120              		.cfi_def_cfa_offset 16
 1121 0004 00AF     		add	r7, sp, #0
 1122              		.cfi_offset 14, -4
 1123              		.cfi_offset 7, -8
 1124              	.LCFI37:
 1125              		.cfi_def_cfa_register 7
 1126 0006 0346     		mov	r3, r0
 1127 0008 FB71     		strb	r3, [r7, #7]
1474:.\Generated_Source\PSoC5/CapSense.c ****     /* Set Sensor Settings */
1475:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_SetScanSlotSettings(sensor);
 1128              		.loc 1 1475 0
 1129 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1130 000c 1846     		mov	r0, r3
 1131 000e FFF7FEFF 		bl	CapSense_SetScanSlotSettings
1476:.\Generated_Source\PSoC5/CapSense.c ****     
1477:.\Generated_Source\PSoC5/CapSense.c ****     /* Place disable interrupts here to eliminate influence on start of scanning */
1478:.\Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_DisableInt` */
1479:.\Generated_Source\PSoC5/CapSense.c **** 
1480:.\Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1481:.\Generated_Source\PSoC5/CapSense.c ****     
1482:.\Generated_Source\PSoC5/CapSense.c ****     /* Resets digital and pre-charge clocks */
1483:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_SYNC_EN;
 1132              		.loc 1 1483 0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 47


 1133 0012 46F27B43 		movw	r3, #:lower16:1073767547
 1134 0016 C4F20003 		movt	r3, #:upper16:1073767547
 1135 001a 46F27B42 		movw	r2, #:lower16:1073767547
 1136 001e C4F20002 		movt	r2, #:upper16:1073767547
 1137 0022 1278     		ldrb	r2, [r2, #0]
 1138 0024 D2B2     		uxtb	r2, r2
 1139 0026 42F00102 		orr	r2, r2, #1
 1140 002a D2B2     		uxtb	r2, r2
 1141 002c 1A70     		strb	r2, [r3, #0]
1484:.\Generated_Source\PSoC5/CapSense.c ****         
1485:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1486:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1487:.\Generated_Source\PSoC5/CapSense.c ****             /* Disable Vref from AMux */
1488:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1489:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1490:.\Generated_Source\PSoC5/CapSense.c ****             #else
1491:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
 1142              		.loc 1 1491 0
 1143 002e 45F67203 		movw	r3, #:lower16:1073764466
 1144 0032 C4F20003 		movt	r3, #:upper16:1073764466
 1145 0036 45F67202 		movw	r2, #:lower16:1073764466
 1146 003a C4F20002 		movt	r2, #:upper16:1073764466
 1147 003e 1278     		ldrb	r2, [r2, #0]
 1148 0040 D2B2     		uxtb	r2, r2
 1149 0042 02F0FE02 		and	r2, r2, #254
 1150 0046 1A70     		strb	r2, [r3, #0]
1492:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1493:.\Generated_Source\PSoC5/CapSense.c **** 
1494:.\Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1495:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
 1151              		.loc 1 1495 0
 1152 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1153 004a 1846     		mov	r0, r3
 1154 004c FFF7FEFF 		bl	CapSense_EnableSensor
1496:.\Generated_Source\PSoC5/CapSense.c ****             
1497:.\Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1498:.\Generated_Source\PSoC5/CapSense.c ****             /* Connect IDAC */
1499:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1500:.\Generated_Source\PSoC5/CapSense.c ****             
1501:.\Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1502:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1503:.\Generated_Source\PSoC5/CapSense.c ****                 
1504:.\Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1505:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1506:.\Generated_Source\PSoC5/CapSense.c ****             
1507:.\Generated_Source\PSoC5/CapSense.c ****         #else
1508:.\Generated_Source\PSoC5/CapSense.c ****             /* Connect DSI output to Rb */
1509:.\Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_RbCh0_cur] |= CapSense_BYP_MASK;
1510:.\Generated_Source\PSoC5/CapSense.c ****             
1511:.\Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1512:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1513:.\Generated_Source\PSoC5/CapSense.c ****              
1514:.\Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1515:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1516:.\Generated_Source\PSoC5/CapSense.c ****         
1517:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1518:.\Generated_Source\PSoC5/CapSense.c ****         
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 48


1519:.\Generated_Source\PSoC5/CapSense.c ****     #else
1520:.\Generated_Source\PSoC5/CapSense.c **** 
1521:.\Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u)
1522:.\Generated_Source\PSoC5/CapSense.c ****         {
1523:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1524:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1525:.\Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1526:.\Generated_Source\PSoC5/CapSense.c ****                     CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1527:.\Generated_Source\PSoC5/CapSense.c ****                 #else
1528:.\Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1529:.\Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1530:.\Generated_Source\PSoC5/CapSense.c ****                 
1531:.\Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1532:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1533:.\Generated_Source\PSoC5/CapSense.c ****                 
1534:.\Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1535:.\Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1536:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1537:.\Generated_Source\PSoC5/CapSense.c ****                 
1538:.\Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1539:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1540:.\Generated_Source\PSoC5/CapSense.c ****                     
1541:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1542:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1543:.\Generated_Source\PSoC5/CapSense.c ****                 
1544:.\Generated_Source\PSoC5/CapSense.c ****             #else
1545:.\Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1546:.\Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_RbCh0_cur] |= CapSense_BYP_MASK;
1547:.\Generated_Source\PSoC5/CapSense.c ****                 
1548:.\Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1549:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1550:.\Generated_Source\PSoC5/CapSense.c ****                     
1551:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1552:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1553:.\Generated_Source\PSoC5/CapSense.c ****             
1554:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1555:.\Generated_Source\PSoC5/CapSense.c ****             
1556:.\Generated_Source\PSoC5/CapSense.c ****         }
1557:.\Generated_Source\PSoC5/CapSense.c ****         
1558:.\Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u)
1559:.\Generated_Source\PSoC5/CapSense.c ****         {
1560:.\Generated_Source\PSoC5/CapSense.c ****             sensor += CapSense_TOTAL_SENSOR_COUNT__CH0;
1561:.\Generated_Source\PSoC5/CapSense.c ****             
1562:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1563:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1564:.\Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1565:.\Generated_Source\PSoC5/CapSense.c ****                    CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_VREF_CHANNEL);
1566:.\Generated_Source\PSoC5/CapSense.c ****                 #else 
1567:.\Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1568:.\Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1569:.\Generated_Source\PSoC5/CapSense.c ****                 
1570:.\Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1571:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1572:.\Generated_Source\PSoC5/CapSense.c ****                 
1573:.\Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1574:.\Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1575:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 49


1576:.\Generated_Source\PSoC5/CapSense.c ****                 
1577:.\Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1578:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1579:.\Generated_Source\PSoC5/CapSense.c ****                     
1580:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1581:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1582:.\Generated_Source\PSoC5/CapSense.c ****                 
1583:.\Generated_Source\PSoC5/CapSense.c ****             #else
1584:.\Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1585:.\Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_RbCh1_cur] |= CapSense_BYP_MASK;
1586:.\Generated_Source\PSoC5/CapSense.c ****                 
1587:.\Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1588:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1589:.\Generated_Source\PSoC5/CapSense.c ****                 
1590:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1591:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1592:.\Generated_Source\PSoC5/CapSense.c ****             
1593:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1594:.\Generated_Source\PSoC5/CapSense.c ****         }
1595:.\Generated_Source\PSoC5/CapSense.c ****     
1596:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
1597:.\Generated_Source\PSoC5/CapSense.c ****     
1598:.\Generated_Source\PSoC5/CapSense.c ****     /* Start measurament, pre-charge clocks are running and PRS as well */
1599:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_START;
 1155              		.loc 1 1599 0
 1156 0050 46F27B43 		movw	r3, #:lower16:1073767547
 1157 0054 C4F20003 		movt	r3, #:upper16:1073767547
 1158 0058 46F27B42 		movw	r2, #:lower16:1073767547
 1159 005c C4F20002 		movt	r2, #:upper16:1073767547
 1160 0060 1278     		ldrb	r2, [r2, #0]
 1161 0062 D2B2     		uxtb	r2, r2
 1162 0064 42F00202 		orr	r2, r2, #2
 1163 0068 D2B2     		uxtb	r2, r2
 1164 006a 1A70     		strb	r2, [r3, #0]
1600:.\Generated_Source\PSoC5/CapSense.c ****     
1601:.\Generated_Source\PSoC5/CapSense.c ****     /* Place enable interrupts here to eliminate influence on start of scanning */
1602:.\Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_EnableInt` */
1603:.\Generated_Source\PSoC5/CapSense.c **** 
1604:.\Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1605:.\Generated_Source\PSoC5/CapSense.c **** }
 1165              		.loc 1 1605 0
 1166 006c 07F10807 		add	r7, r7, #8
 1167 0070 BD46     		mov	sp, r7
 1168 0072 80BD     		pop	{r7, pc}
 1169              		.cfi_endproc
 1170              	.LFE13:
 1171              		.size	CapSense_PreScan, .-CapSense_PreScan
 1172              		.section	.text.CapSense_PostScan,"ax",%progbits
 1173              		.align	2
 1174              		.global	CapSense_PostScan
 1175              		.thumb
 1176              		.thumb_func
 1177              		.type	CapSense_PostScan, %function
 1178              	CapSense_PostScan:
 1179              	.LFB14:
1606:.\Generated_Source\PSoC5/CapSense.c **** 
1607:.\Generated_Source\PSoC5/CapSense.c **** 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 50


1608:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1609:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1610:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1611:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1612:.\Generated_Source\PSoC5/CapSense.c ****     *
1613:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1614:.\Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1615:.\Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1616:.\Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1617:.\Generated_Source\PSoC5/CapSense.c ****     *  Only one channel designs.
1618:.\Generated_Source\PSoC5/CapSense.c ****     *
1619:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1620:.\Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1621:.\Generated_Source\PSoC5/CapSense.c ****     *
1622:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1623:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1624:.\Generated_Source\PSoC5/CapSense.c ****     *
1625:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1626:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_SensorRaw[] - used to store sensors raw data.
1627:.\Generated_Source\PSoC5/CapSense.c ****     *
1628:.\Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1629:.\Generated_Source\PSoC5/CapSense.c ****     *  No
1630:.\Generated_Source\PSoC5/CapSense.c ****     *
1631:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1632:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScan(uint8 sensor) CYREENTRANT
1633:.\Generated_Source\PSoC5/CapSense.c ****     {
 1180              		.loc 1 1633 0
 1181              		.cfi_startproc
 1182              		@ args = 0, pretend = 0, frame = 8
 1183              		@ frame_needed = 1, uses_anonymous_args = 0
 1184 0000 80B5     		push	{r7, lr}
 1185              	.LCFI38:
 1186              		.cfi_def_cfa_offset 8
 1187 0002 82B0     		sub	sp, sp, #8
 1188              	.LCFI39:
 1189              		.cfi_def_cfa_offset 16
 1190 0004 00AF     		add	r7, sp, #0
 1191              		.cfi_offset 14, -4
 1192              		.cfi_offset 7, -8
 1193              	.LCFI40:
 1194              		.cfi_def_cfa_register 7
 1195 0006 0346     		mov	r3, r0
 1196 0008 FB71     		strb	r3, [r7, #7]
1634:.\Generated_Source\PSoC5/CapSense.c ****         /* Stop Capsensing and rearm sync */
1635:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
 1197              		.loc 1 1635 0
 1198 000a 46F27B43 		movw	r3, #:lower16:1073767547
 1199 000e C4F20003 		movt	r3, #:upper16:1073767547
 1200 0012 46F27B42 		movw	r2, #:lower16:1073767547
 1201 0016 C4F20002 		movt	r2, #:upper16:1073767547
 1202 001a 1278     		ldrb	r2, [r2, #0]
 1203 001c D2B2     		uxtb	r2, r2
 1204 001e 02F0FC02 		and	r2, r2, #252
 1205 0022 1A70     		strb	r2, [r3, #0]
1636:.\Generated_Source\PSoC5/CapSense.c ****         
1637:.\Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1638:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 51


1639:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1640:.\Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1641:.\Generated_Source\PSoC5/CapSense.c ****         #else
1642:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
 1206              		.loc 1 1642 0
 1207 0024 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1208 0026 46F21C43 		movw	r3, #:lower16:1073767452
 1209 002a C4F20003 		movt	r3, #:upper16:1073767452
 1210 002e 1B78     		ldrb	r3, [r3, #0]
 1211 0030 DBB2     		uxtb	r3, r3
 1212 0032 4FEA0323 		lsl	r3, r3, #8
 1213 0036 99B2     		uxth	r1, r3
 1214 0038 40F20003 		movw	r3, #:lower16:CapSense_SensorRaw
 1215 003c C0F20003 		movt	r3, #:upper16:CapSense_SensorRaw
 1216 0040 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
1643:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
 1217              		.loc 1 1643 0
 1218 0044 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1219 0046 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1220 0048 40F20003 		movw	r3, #:lower16:CapSense_SensorRaw
 1221 004c C0F20003 		movt	r3, #:upper16:CapSense_SensorRaw
 1222 0050 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 1223 0054 46F20C43 		movw	r3, #:lower16:1073767436
 1224 0058 C4F20003 		movt	r3, #:upper16:1073767436
 1225 005c 1B78     		ldrb	r3, [r3, #0]
 1226 005e DBB2     		uxtb	r3, r3
 1227 0060 41EA0303 		orr	r3, r1, r3
 1228 0064 99B2     		uxth	r1, r3
 1229 0066 40F20003 		movw	r3, #:lower16:CapSense_SensorRaw
 1230 006a C0F20003 		movt	r3, #:upper16:CapSense_SensorRaw
 1231 006e 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
1644:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE -
 1232              		.loc 1 1644 0
 1233 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
1645:.\Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_SensorRaw[sensor];
 1234              		.loc 1 1645 0
 1235 0074 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1236 0076 40F20003 		movw	r3, #:lower16:CapSense_SensorRaw
 1237 007a C0F20003 		movt	r3, #:upper16:CapSense_SensorRaw
 1238 007e 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 1239              		.loc 1 1644 0
 1240 0082 6FEA0303 		mvn	r3, r3
 1241 0086 99B2     		uxth	r1, r3
 1242 0088 40F20003 		movw	r3, #:lower16:CapSense_SensorRaw
 1243 008c C0F20003 		movt	r3, #:upper16:CapSense_SensorRaw
 1244 0090 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
1646:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION == CapSense_MEASURE_IMPLEMENTATION_FF) */
1647:.\Generated_Source\PSoC5/CapSense.c ****         
1648:.\Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1649:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
 1245              		.loc 1 1649 0
 1246 0094 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1247 0096 1846     		mov	r0, r3
 1248 0098 FFF7FEFF 		bl	CapSense_DisableSensor
1650:.\Generated_Source\PSoC5/CapSense.c ****         
1651:.\Generated_Source\PSoC5/CapSense.c ****         #if(CapSense_CURRENT_SOURCE)
1652:.\Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 52


1653:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 1249              		.loc 1 1653 0
 1250 009c 4FF00000 		mov	r0, #0
 1251 00a0 FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
1654:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1655:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1656:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1657:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1658:.\Generated_Source\PSoC5/CapSense.c ****         #else
1659:.\Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1660:.\Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_RbCh0_cur] &= ~CapSense_BYP_MASK; 
1661:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1662:.\Generated_Source\PSoC5/CapSense.c ****             
1663:.\Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1664:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1665:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1666:.\Generated_Source\PSoC5/CapSense.c ****         #else
1667:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 1252              		.loc 1 1667 0
 1253 00a4 45F67203 		movw	r3, #:lower16:1073764466
 1254 00a8 C4F20003 		movt	r3, #:upper16:1073764466
 1255 00ac 45F67202 		movw	r2, #:lower16:1073764466
 1256 00b0 C4F20002 		movt	r2, #:upper16:1073764466
 1257 00b4 1278     		ldrb	r2, [r2, #0]
 1258 00b6 D2B2     		uxtb	r2, r2
 1259 00b8 42F00102 		orr	r2, r2, #1
 1260 00bc D2B2     		uxtb	r2, r2
 1261 00be 1A70     		strb	r2, [r3, #0]
1668:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1669:.\Generated_Source\PSoC5/CapSense.c ****     }
 1262              		.loc 1 1669 0
 1263 00c0 07F10807 		add	r7, r7, #8
 1264 00c4 BD46     		mov	sp, r7
 1265 00c6 80BD     		pop	{r7, pc}
 1266              		.cfi_endproc
 1267              	.LFE14:
 1268              		.size	CapSense_PostScan, .-CapSense_PostScan
 1269              		.section	.text.CapSense_SetPrescaler,"ax",%progbits
 1270              		.align	2
 1271              		.global	CapSense_SetPrescaler
 1272              		.thumb
 1273              		.thumb_func
 1274              		.type	CapSense_SetPrescaler, %function
 1275              	CapSense_SetPrescaler:
 1276              	.LFB15:
1670:.\Generated_Source\PSoC5/CapSense.c ****     
1671:.\Generated_Source\PSoC5/CapSense.c **** #else
1672:.\Generated_Source\PSoC5/CapSense.c **** 
1673:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1674:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1675:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1676:.\Generated_Source\PSoC5/CapSense.c ****     *
1677:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1678:.\Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1679:.\Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1680:.\Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1681:.\Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 0 in two channes designs.
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 53


1682:.\Generated_Source\PSoC5/CapSense.c ****     *
1683:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1684:.\Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1685:.\Generated_Source\PSoC5/CapSense.c ****     *
1686:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1687:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1688:.\Generated_Source\PSoC5/CapSense.c ****     *
1689:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1690:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_SensorRaw[] - used to store sensors raw data.
1691:.\Generated_Source\PSoC5/CapSense.c ****     *
1692:.\Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1693:.\Generated_Source\PSoC5/CapSense.c ****     *  No
1694:.\Generated_Source\PSoC5/CapSense.c ****     *
1695:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1696:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh0(uint8 sensor) CYREENTRANT
1697:.\Generated_Source\PSoC5/CapSense.c ****     {
1698:.\Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1699:.\Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u)) 
1700:.\Generated_Source\PSoC5/CapSense.c ****         {
1701:.\Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1702:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1703:.\Generated_Source\PSoC5/CapSense.c ****         }
1704:.\Generated_Source\PSoC5/CapSense.c ****         
1705:.\Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1706:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1707:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1708:.\Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1709:.\Generated_Source\PSoC5/CapSense.c ****         #else
1710:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
1711:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
1712:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1713:.\Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_SensorRaw[sensor];
1714:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1715:.\Generated_Source\PSoC5/CapSense.c ****         
1716:.\Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1717:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1718:.\Generated_Source\PSoC5/CapSense.c ****         
1719:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1720:.\Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1721:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
1722:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1723:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1724:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1725:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1726:.\Generated_Source\PSoC5/CapSense.c ****         #else
1727:.\Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1728:.\Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_RbCh0_cur] &= ~CapSense_BYP_MASK; 
1729:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1730:.\Generated_Source\PSoC5/CapSense.c ****         
1731:.\Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1732:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1733:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1734:.\Generated_Source\PSoC5/CapSense.c ****         #else
1735:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1736:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1737:.\Generated_Source\PSoC5/CapSense.c ****     }
1738:.\Generated_Source\PSoC5/CapSense.c ****     
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 54


1739:.\Generated_Source\PSoC5/CapSense.c ****     
1740:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1741:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScanCh1
1742:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1743:.\Generated_Source\PSoC5/CapSense.c ****     *
1744:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1745:.\Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1746:.\Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC), 
1747:.\Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1748:.\Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 1 in two channes designs.
1749:.\Generated_Source\PSoC5/CapSense.c ****     *
1750:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1751:.\Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1752:.\Generated_Source\PSoC5/CapSense.c ****     *
1753:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1754:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1755:.\Generated_Source\PSoC5/CapSense.c ****     *
1756:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1757:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_SensorRaw[] - used to store sensors raw data.
1758:.\Generated_Source\PSoC5/CapSense.c ****     *
1759:.\Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1760:.\Generated_Source\PSoC5/CapSense.c ****     *  No
1761:.\Generated_Source\PSoC5/CapSense.c ****     *
1762:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1763:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh1(uint8 sensor) CYREENTRANT
1764:.\Generated_Source\PSoC5/CapSense.c ****     {
1765:.\Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1766:.\Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u))
1767:.\Generated_Source\PSoC5/CapSense.c ****         {
1768:.\Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1769:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1770:.\Generated_Source\PSoC5/CapSense.c ****         }
1771:.\Generated_Source\PSoC5/CapSense.c ****         
1772:.\Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1773:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
1774:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1775:.\Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH1_COUNTER_PTR);
1776:.\Generated_Source\PSoC5/CapSense.c ****         #else
1777:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SensorRaw[sensor]  = ((uint16) CapSense_RAW_CH1_COUNTER_HI_REG << 8u);
1778:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SensorRaw[sensor] |= (uint16) CapSense_RAW_CH1_COUNTER_LO_REG;
1779:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1780:.\Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_SensorRaw[sensor];
1781:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1782:.\Generated_Source\PSoC5/CapSense.c ****         
1783:.\Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1784:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1785:.\Generated_Source\PSoC5/CapSense.c ****         
1786:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1787:.\Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1788:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
1789:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1790:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1791:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_IDAC_CHANNEL);
1792:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1793:.\Generated_Source\PSoC5/CapSense.c ****         #else
1794:.\Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1795:.\Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_RbCh1_cur] &= ~CapSense_BYP_MASK; 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 55


1796:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1797:.\Generated_Source\PSoC5/CapSense.c **** 
1798:.\Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1799:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1800:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
1801:.\Generated_Source\PSoC5/CapSense.c ****         #else
1802:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1803:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1804:.\Generated_Source\PSoC5/CapSense.c ****     }
1805:.\Generated_Source\PSoC5/CapSense.c ****     
1806:.\Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE */
1807:.\Generated_Source\PSoC5/CapSense.c **** 
1808:.\Generated_Source\PSoC5/CapSense.c **** 
1809:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
1810:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1811:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name:  CapSense_InitRb
1812:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1813:.\Generated_Source\PSoC5/CapSense.c ****     *
1814:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1815:.\Generated_Source\PSoC5/CapSense.c ****     *  Sets all Rbleed resistor to High-Z mode. The first Rbleed resistor is active
1816:.\Generated_Source\PSoC5/CapSense.c ****     *  while next measure.
1817:.\Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1818:.\Generated_Source\PSoC5/CapSense.c ****     *
1819:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1820:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1821:.\Generated_Source\PSoC5/CapSense.c ****     *
1822:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1823:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1824:.\Generated_Source\PSoC5/CapSense.c ****     *
1825:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************/
1826:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_InitRb(void) 
1827:.\Generated_Source\PSoC5/CapSense.c ****     {
1828:.\Generated_Source\PSoC5/CapSense.c ****         uint8 i;
1829:.\Generated_Source\PSoC5/CapSense.c ****         
1830:.\Generated_Source\PSoC5/CapSense.c ****         /* Disable all Rb */
1831:.\Generated_Source\PSoC5/CapSense.c ****         for(i=0; i < CapSense_TOTAL_RB_NUMBER; i++)
1832:.\Generated_Source\PSoC5/CapSense.c ****         {
1833:.\Generated_Source\PSoC5/CapSense.c ****             /* Make High-Z */
1834:.\Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[i] = CapSense_PRT_PC_HIGHZ;
1835:.\Generated_Source\PSoC5/CapSense.c ****         }
1836:.\Generated_Source\PSoC5/CapSense.c ****     }
1837:.\Generated_Source\PSoC5/CapSense.c ****     
1838:.\Generated_Source\PSoC5/CapSense.c ****     
1839:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1840:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetRBleed
1841:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1842:.\Generated_Source\PSoC5/CapSense.c ****     *
1843:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1844:.\Generated_Source\PSoC5/CapSense.c ****     *  Sets the pin to use for the bleed resistor (Rb) connection. This function
1845:.\Generated_Source\PSoC5/CapSense.c ****     *  can be called at runtime to select the current Rb pin setting from those 
1846:.\Generated_Source\PSoC5/CapSense.c ****     *  defined customizer. The function overwrites the component parameter setting. 
1847:.\Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1848:.\Generated_Source\PSoC5/CapSense.c ****     * 
1849:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1850:.\Generated_Source\PSoC5/CapSense.c ****     *  rbleed:  Ordering number for bleed resistor terminal defined in CapSense
1851:.\Generated_Source\PSoC5/CapSense.c ****     *  customizer.
1852:.\Generated_Source\PSoC5/CapSense.c ****     *
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 56


1853:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1854:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1855:.\Generated_Source\PSoC5/CapSense.c ****     *
1856:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1857:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_RbCh0_cur - used to store current number of active 
1858:.\Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 0.
1859:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_RbCh1_cur - used to store current number of active 
1860:.\Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 1.
1861:.\Generated_Source\PSoC5/CapSense.c ****     *  The active bleed resistor (Rb) pin will be used while next measurement  
1862:.\Generated_Source\PSoC5/CapSense.c ****     *  cycle.
1863:.\Generated_Source\PSoC5/CapSense.c ****     *
1864:.\Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1865:.\Generated_Source\PSoC5/CapSense.c ****     *  No
1866:.\Generated_Source\PSoC5/CapSense.c ****     *
1867:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1868:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetRBleed(uint8 rbleed) 
1869:.\Generated_Source\PSoC5/CapSense.c ****     {
1870:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1871:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RbCh0_cur = rbleed;
1872:.\Generated_Source\PSoC5/CapSense.c ****             
1873:.\Generated_Source\PSoC5/CapSense.c ****         #else
1874:.\Generated_Source\PSoC5/CapSense.c ****             if(rbleed < CapSense_TOTAL_RB_NUMBER__CH0)
1875:.\Generated_Source\PSoC5/CapSense.c ****             {
1876:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_RbCh0_cur = rbleed;
1877:.\Generated_Source\PSoC5/CapSense.c ****             }
1878:.\Generated_Source\PSoC5/CapSense.c ****             else
1879:.\Generated_Source\PSoC5/CapSense.c ****             {
1880:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_RbCh1_cur = (rbleed - CapSense_TOTAL_RB_NUMBER__CH0);   
1881:.\Generated_Source\PSoC5/CapSense.c ****             }
1882:.\Generated_Source\PSoC5/CapSense.c ****     
1883:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */ 
1884:.\Generated_Source\PSoC5/CapSense.c ****     }
1885:.\Generated_Source\PSoC5/CapSense.c **** #endif /* CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB */ 
1886:.\Generated_Source\PSoC5/CapSense.c **** 
1887:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRESCALER_OPTIONS)
1888:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1889:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetPrescaler
1890:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1891:.\Generated_Source\PSoC5/CapSense.c ****     *
1892:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1893:.\Generated_Source\PSoC5/CapSense.c ****     *  Sets analog switch divider.
1894:.\Generated_Source\PSoC5/CapSense.c ****     *
1895:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1896:.\Generated_Source\PSoC5/CapSense.c ****     *  prescaler:  Sets prescaler divider values.
1897:.\Generated_Source\PSoC5/CapSense.c ****     *
1898:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1899:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1900:.\Generated_Source\PSoC5/CapSense.c ****     *
1901:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1902:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetPrescaler(uint8 prescaler) CYREENTRANT
1903:.\Generated_Source\PSoC5/CapSense.c ****     {
 1277              		.loc 1 1903 0
 1278              		.cfi_startproc
 1279              		@ args = 0, pretend = 0, frame = 8
 1280              		@ frame_needed = 1, uses_anonymous_args = 0
 1281              		@ link register save eliminated.
 1282 0000 80B4     		push	{r7}
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 57


 1283              	.LCFI41:
 1284              		.cfi_def_cfa_offset 4
 1285 0002 83B0     		sub	sp, sp, #12
 1286              	.LCFI42:
 1287              		.cfi_def_cfa_offset 16
 1288 0004 00AF     		add	r7, sp, #0
 1289              		.cfi_offset 7, -4
 1290              	.LCFI43:
 1291              		.cfi_def_cfa_register 7
 1292 0006 0346     		mov	r3, r0
 1293 0008 FB71     		strb	r3, [r7, #7]
1904:.\Generated_Source\PSoC5/CapSense.c ****         /* Set Prescaler */
1905:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1906:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_PERIOD_REG = prescaler;
 1294              		.loc 1 1906 0
 1295 000a 46F22853 		movw	r3, #:lower16:1073767720
 1296 000e C4F20003 		movt	r3, #:upper16:1073767720
 1297 0012 FA79     		ldrb	r2, [r7, #7]
 1298 0014 1A70     		strb	r2, [r3, #0]
1907:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_COMPARE_REG = (prescaler >> 0x01u);
 1299              		.loc 1 1907 0
 1300 0016 46F23853 		movw	r3, #:lower16:1073767736
 1301 001a C4F20003 		movt	r3, #:upper16:1073767736
 1302 001e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1303 0020 4FEA5202 		lsr	r2, r2, #1
 1304 0024 D2B2     		uxtb	r2, r2
 1305 0026 1A70     		strb	r2, [r3, #0]
1908:.\Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1909:.\Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_PERIOD_PTR, (uint16) prescaler);
1910:.\Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_COMPARE_PTR, (uint16) (prescaler >> 0x01u));
1911:.\Generated_Source\PSoC5/CapSense.c ****         #else
1912:.\Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1913:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1914:.\Generated_Source\PSoC5/CapSense.c ****     }
 1306              		.loc 1 1914 0
 1307 0028 07F10C07 		add	r7, r7, #12
 1308 002c BD46     		mov	sp, r7
 1309 002e 80BC     		pop	{r7}
 1310 0030 7047     		bx	lr
 1311              		.cfi_endproc
 1312              	.LFE15:
 1313              		.size	CapSense_SetPrescaler, .-CapSense_SetPrescaler
 1314 0032 00BF     		.section	.text.CapSense_GetPrescaler,"ax",%progbits
 1315              		.align	2
 1316              		.global	CapSense_GetPrescaler
 1317              		.thumb
 1318              		.thumb_func
 1319              		.type	CapSense_GetPrescaler, %function
 1320              	CapSense_GetPrescaler:
 1321              	.LFB16:
1915:.\Generated_Source\PSoC5/CapSense.c **** 
1916:.\Generated_Source\PSoC5/CapSense.c **** 
1917:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1918:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_GetPrescaler
1919:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1920:.\Generated_Source\PSoC5/CapSense.c ****     *
1921:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 58


1922:.\Generated_Source\PSoC5/CapSense.c ****     *  Gets analog switch divider.
1923:.\Generated_Source\PSoC5/CapSense.c ****     *
1924:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1925:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1926:.\Generated_Source\PSoC5/CapSense.c ****     *
1927:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1928:.\Generated_Source\PSoC5/CapSense.c ****     *   Returns the prescaler divider value.
1929:.\Generated_Source\PSoC5/CapSense.c ****     *
1930:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1931:.\Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_GetPrescaler(void) 
1932:.\Generated_Source\PSoC5/CapSense.c ****     {
 1322              		.loc 1 1932 0
 1323              		.cfi_startproc
 1324              		@ args = 0, pretend = 0, frame = 8
 1325              		@ frame_needed = 1, uses_anonymous_args = 0
 1326              		@ link register save eliminated.
 1327 0000 80B4     		push	{r7}
 1328              	.LCFI44:
 1329              		.cfi_def_cfa_offset 4
 1330 0002 83B0     		sub	sp, sp, #12
 1331              	.LCFI45:
 1332              		.cfi_def_cfa_offset 16
 1333 0004 00AF     		add	r7, sp, #0
 1334              		.cfi_offset 7, -4
 1335              	.LCFI46:
 1336              		.cfi_def_cfa_register 7
1933:.\Generated_Source\PSoC5/CapSense.c ****         uint8 prescaler = 0u;
 1337              		.loc 1 1933 0
 1338 0006 4FF00003 		mov	r3, #0
 1339 000a FB71     		strb	r3, [r7, #7]
1934:.\Generated_Source\PSoC5/CapSense.c **** 
1935:.\Generated_Source\PSoC5/CapSense.c ****         /* Get Prescaler */
1936:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1937:.\Generated_Source\PSoC5/CapSense.c ****             prescaler = CapSense_PRESCALER_PERIOD_REG;
 1340              		.loc 1 1937 0
 1341 000c 46F22853 		movw	r3, #:lower16:1073767720
 1342 0010 C4F20003 		movt	r3, #:upper16:1073767720
 1343 0014 1B78     		ldrb	r3, [r3, #0]
 1344 0016 FB71     		strb	r3, [r7, #7]
1938:.\Generated_Source\PSoC5/CapSense.c ****             
1939:.\Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1940:.\Generated_Source\PSoC5/CapSense.c ****             prescaler = (uint8) CY_GET_REG16(CapSense_PRESCALER_PERIOD_PTR);
1941:.\Generated_Source\PSoC5/CapSense.c ****             
1942:.\Generated_Source\PSoC5/CapSense.c ****         #else
1943:.\Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1944:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1945:.\Generated_Source\PSoC5/CapSense.c ****         
1946:.\Generated_Source\PSoC5/CapSense.c ****         return prescaler;
 1345              		.loc 1 1946 0
 1346 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1947:.\Generated_Source\PSoC5/CapSense.c ****     }
 1347              		.loc 1 1947 0
 1348 001a 1846     		mov	r0, r3
 1349 001c 07F10C07 		add	r7, r7, #12
 1350 0020 BD46     		mov	sp, r7
 1351 0022 80BC     		pop	{r7}
 1352 0024 7047     		bx	lr
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 59


 1353              		.cfi_endproc
 1354              	.LFE16:
 1355              		.size	CapSense_GetPrescaler, .-CapSense_GetPrescaler
 1356 0026 00BF     		.section	.text.CapSense_SetScanSpeed,"ax",%progbits
 1357              		.align	2
 1358              		.global	CapSense_SetScanSpeed
 1359              		.thumb
 1360              		.thumb_func
 1361              		.type	CapSense_SetScanSpeed, %function
 1362              	CapSense_SetScanSpeed:
 1363              	.LFB17:
1948:.\Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_PRESCALER_OPTIONS */
1949:.\Generated_Source\PSoC5/CapSense.c **** 
1950:.\Generated_Source\PSoC5/CapSense.c **** 
1951:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1952:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSpeed
1953:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1954:.\Generated_Source\PSoC5/CapSense.c **** *
1955:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1956:.\Generated_Source\PSoC5/CapSense.c **** *  Sets ScanSpeed divider.
1957:.\Generated_Source\PSoC5/CapSense.c **** *
1958:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1959:.\Generated_Source\PSoC5/CapSense.c **** *  scanspeed:  Sets ScanSpeed divider.
1960:.\Generated_Source\PSoC5/CapSense.c **** *
1961:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1962:.\Generated_Source\PSoC5/CapSense.c **** *  None
1963:.\Generated_Source\PSoC5/CapSense.c **** *
1964:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1965:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSpeed(uint8 scanspeed) 
1966:.\Generated_Source\PSoC5/CapSense.c **** {
 1364              		.loc 1 1966 0
 1365              		.cfi_startproc
 1366              		@ args = 0, pretend = 0, frame = 8
 1367              		@ frame_needed = 1, uses_anonymous_args = 0
 1368              		@ link register save eliminated.
 1369 0000 80B4     		push	{r7}
 1370              	.LCFI47:
 1371              		.cfi_def_cfa_offset 4
 1372 0002 83B0     		sub	sp, sp, #12
 1373              	.LCFI48:
 1374              		.cfi_def_cfa_offset 16
 1375 0004 00AF     		add	r7, sp, #0
 1376              		.cfi_offset 7, -4
 1377              	.LCFI49:
 1378              		.cfi_def_cfa_register 7
 1379 0006 0346     		mov	r3, r0
 1380 0008 FB71     		strb	r3, [r7, #7]
1967:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = scanspeed; 
 1381              		.loc 1 1967 0
 1382 000a 46F28A43 		movw	r3, #:lower16:1073767562
 1383 000e C4F20003 		movt	r3, #:upper16:1073767562
 1384 0012 FA79     		ldrb	r2, [r7, #7]
 1385 0014 1A70     		strb	r2, [r3, #0]
1968:.\Generated_Source\PSoC5/CapSense.c **** }
 1386              		.loc 1 1968 0
 1387 0016 07F10C07 		add	r7, r7, #12
 1388 001a BD46     		mov	sp, r7
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 60


 1389 001c 80BC     		pop	{r7}
 1390 001e 7047     		bx	lr
 1391              		.cfi_endproc
 1392              	.LFE17:
 1393              		.size	CapSense_SetScanSpeed, .-CapSense_SetScanSpeed
 1394              		.section	.text.CapSense_SetAnalogSwitchesSource,"ax",%progbits
 1395              		.align	2
 1396              		.global	CapSense_SetAnalogSwitchesSource
 1397              		.thumb
 1398              		.thumb_func
 1399              		.type	CapSense_SetAnalogSwitchesSource, %function
 1400              	CapSense_SetAnalogSwitchesSource:
 1401              	.LFB18:
1969:.\Generated_Source\PSoC5/CapSense.c **** 
1970:.\Generated_Source\PSoC5/CapSense.c **** 
1971:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRS_OPTIONS)
1972:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1973:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetAnalogSwitchesSource
1974:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1975:.\Generated_Source\PSoC5/CapSense.c ****     *
1976:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1977:.\Generated_Source\PSoC5/CapSense.c ****     *  Selects the Analog switches source between PRS and prescaler. It is useful
1978:.\Generated_Source\PSoC5/CapSense.c ****     *  for sensor capacitance determination for sensors with low self-capacitance.
1979:.\Generated_Source\PSoC5/CapSense.c ****     *  This function is used in auto-tuning procedure.
1980:.\Generated_Source\PSoC5/CapSense.c ****     *
1981:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1982:.\Generated_Source\PSoC5/CapSense.c ****     *  src:  analog switches source:
1983:.\Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRESCALER - selects prescaler
1984:.\Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRS - selects PRS
1985:.\Generated_Source\PSoC5/CapSense.c ****     *
1986:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1987:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1988:.\Generated_Source\PSoC5/CapSense.c ****     *
1989:.\Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1990:.\Generated_Source\PSoC5/CapSense.c ****     *  No
1991:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1992:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetAnalogSwitchesSource(uint8 src)
1993:.\Generated_Source\PSoC5/CapSense.c ****                       
1994:.\Generated_Source\PSoC5/CapSense.c ****     {
 1402              		.loc 1 1994 0
 1403              		.cfi_startproc
 1404              		@ args = 0, pretend = 0, frame = 8
 1405              		@ frame_needed = 1, uses_anonymous_args = 0
 1406              		@ link register save eliminated.
 1407 0000 80B4     		push	{r7}
 1408              	.LCFI50:
 1409              		.cfi_def_cfa_offset 4
 1410 0002 83B0     		sub	sp, sp, #12
 1411              	.LCFI51:
 1412              		.cfi_def_cfa_offset 16
 1413 0004 00AF     		add	r7, sp, #0
 1414              		.cfi_offset 7, -4
 1415              	.LCFI52:
 1416              		.cfi_def_cfa_register 7
 1417 0006 0346     		mov	r3, r0
 1418 0008 FB71     		strb	r3, [r7, #7]
1995:.\Generated_Source\PSoC5/CapSense.c ****         if(src == CapSense_ANALOG_SWITCHES_SRC_PRESCALER)
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 61


 1419              		.loc 1 1995 0
 1420 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1421 000c 012B     		cmp	r3, #1
 1422 000e 0DD1     		bne	.L50
1996:.\Generated_Source\PSoC5/CapSense.c ****         {
1997:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~0x10u;
 1423              		.loc 1 1997 0
 1424 0010 46F27B43 		movw	r3, #:lower16:1073767547
 1425 0014 C4F20003 		movt	r3, #:upper16:1073767547
 1426 0018 46F27B42 		movw	r2, #:lower16:1073767547
 1427 001c C4F20002 		movt	r2, #:upper16:1073767547
 1428 0020 1278     		ldrb	r2, [r2, #0]
 1429 0022 D2B2     		uxtb	r2, r2
 1430 0024 02F0EF02 		and	r2, r2, #239
 1431 0028 1A70     		strb	r2, [r3, #0]
 1432 002a 0DE0     		b	.L52
 1433              	.L50:
1998:.\Generated_Source\PSoC5/CapSense.c ****         }
1999:.\Generated_Source\PSoC5/CapSense.c ****         else
2000:.\Generated_Source\PSoC5/CapSense.c ****         {
2001:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= 0x10u;
 1434              		.loc 1 2001 0
 1435 002c 46F27B43 		movw	r3, #:lower16:1073767547
 1436 0030 C4F20003 		movt	r3, #:upper16:1073767547
 1437 0034 46F27B42 		movw	r2, #:lower16:1073767547
 1438 0038 C4F20002 		movt	r2, #:upper16:1073767547
 1439 003c 1278     		ldrb	r2, [r2, #0]
 1440 003e D2B2     		uxtb	r2, r2
 1441 0040 42F01002 		orr	r2, r2, #16
 1442 0044 D2B2     		uxtb	r2, r2
 1443 0046 1A70     		strb	r2, [r3, #0]
 1444              	.L52:
2002:.\Generated_Source\PSoC5/CapSense.c ****         }
2003:.\Generated_Source\PSoC5/CapSense.c ****     }
 1445              		.loc 1 2003 0
 1446 0048 07F10C07 		add	r7, r7, #12
 1447 004c BD46     		mov	sp, r7
 1448 004e 80BC     		pop	{r7}
 1449 0050 7047     		bx	lr
 1450              		.cfi_endproc
 1451              	.LFE18:
 1452              		.size	CapSense_SetAnalogSwitchesSource, .-CapSense_SetAnalogSwitchesSource
 1453 0052 00BF     		.text
 1454              	.Letext0:
 1455              		.section	.debug_loc,"",%progbits
 1456              	.Ldebug_loc0:
 1457              	.LLST0:
 1458 0000 00000000 		.4byte	.LFB0
 1459 0004 02000000 		.4byte	.LCFI0
 1460 0008 0100     		.2byte	0x1
 1461 000a 5D       		.byte	0x5d
 1462 000b 02000000 		.4byte	.LCFI0
 1463 000f 04000000 		.4byte	.LCFI1
 1464 0013 0200     		.2byte	0x2
 1465 0015 7D       		.byte	0x7d
 1466 0016 08       		.sleb128 8
 1467 0017 04000000 		.4byte	.LCFI1
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 62


 1468 001b 06000000 		.4byte	.LCFI2
 1469 001f 0200     		.2byte	0x2
 1470 0021 7D       		.byte	0x7d
 1471 0022 10       		.sleb128 16
 1472 0023 06000000 		.4byte	.LCFI2
 1473 0027 AA010000 		.4byte	.LFE0
 1474 002b 0200     		.2byte	0x2
 1475 002d 77       		.byte	0x77
 1476 002e 10       		.sleb128 16
 1477 002f 00000000 		.4byte	0x0
 1478 0033 00000000 		.4byte	0x0
 1479              	.LLST1:
 1480 0037 00000000 		.4byte	.LFB1
 1481 003b 02000000 		.4byte	.LCFI3
 1482 003f 0100     		.2byte	0x1
 1483 0041 5D       		.byte	0x5d
 1484 0042 02000000 		.4byte	.LCFI3
 1485 0046 04000000 		.4byte	.LCFI4
 1486 004a 0200     		.2byte	0x2
 1487 004c 7D       		.byte	0x7d
 1488 004d 08       		.sleb128 8
 1489 004e 04000000 		.4byte	.LCFI4
 1490 0052 06000000 		.4byte	.LCFI5
 1491 0056 0200     		.2byte	0x2
 1492 0058 7D       		.byte	0x7d
 1493 0059 10       		.sleb128 16
 1494 005a 06000000 		.4byte	.LCFI5
 1495 005e C4000000 		.4byte	.LFE1
 1496 0062 0200     		.2byte	0x2
 1497 0064 77       		.byte	0x77
 1498 0065 10       		.sleb128 16
 1499 0066 00000000 		.4byte	0x0
 1500 006a 00000000 		.4byte	0x0
 1501              	.LLST2:
 1502 006e 00000000 		.4byte	.LFB2
 1503 0072 02000000 		.4byte	.LCFI6
 1504 0076 0100     		.2byte	0x1
 1505 0078 5D       		.byte	0x5d
 1506 0079 02000000 		.4byte	.LCFI6
 1507 007d 04000000 		.4byte	.LCFI7
 1508 0081 0200     		.2byte	0x2
 1509 0083 7D       		.byte	0x7d
 1510 0084 08       		.sleb128 8
 1511 0085 04000000 		.4byte	.LCFI7
 1512 0089 3C000000 		.4byte	.LFE2
 1513 008d 0200     		.2byte	0x2
 1514 008f 77       		.byte	0x77
 1515 0090 08       		.sleb128 8
 1516 0091 00000000 		.4byte	0x0
 1517 0095 00000000 		.4byte	0x0
 1518              	.LLST3:
 1519 0099 00000000 		.4byte	.LFB3
 1520 009d 02000000 		.4byte	.LCFI8
 1521 00a1 0100     		.2byte	0x1
 1522 00a3 5D       		.byte	0x5d
 1523 00a4 02000000 		.4byte	.LCFI8
 1524 00a8 04000000 		.4byte	.LCFI9
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 63


 1525 00ac 0200     		.2byte	0x2
 1526 00ae 7D       		.byte	0x7d
 1527 00af 08       		.sleb128 8
 1528 00b0 04000000 		.4byte	.LCFI9
 1529 00b4 BC000000 		.4byte	.LFE3
 1530 00b8 0200     		.2byte	0x2
 1531 00ba 77       		.byte	0x77
 1532 00bb 08       		.sleb128 8
 1533 00bc 00000000 		.4byte	0x0
 1534 00c0 00000000 		.4byte	0x0
 1535              	.LLST4:
 1536 00c4 00000000 		.4byte	.LFB4
 1537 00c8 02000000 		.4byte	.LCFI10
 1538 00cc 0100     		.2byte	0x1
 1539 00ce 5D       		.byte	0x5d
 1540 00cf 02000000 		.4byte	.LCFI10
 1541 00d3 04000000 		.4byte	.LCFI11
 1542 00d7 0200     		.2byte	0x2
 1543 00d9 7D       		.byte	0x7d
 1544 00da 04       		.sleb128 4
 1545 00db 04000000 		.4byte	.LCFI11
 1546 00df 06000000 		.4byte	.LCFI12
 1547 00e3 0200     		.2byte	0x2
 1548 00e5 7D       		.byte	0x7d
 1549 00e6 18       		.sleb128 24
 1550 00e7 06000000 		.4byte	.LCFI12
 1551 00eb 5A000000 		.4byte	.LFE4
 1552 00ef 0200     		.2byte	0x2
 1553 00f1 77       		.byte	0x77
 1554 00f2 18       		.sleb128 24
 1555 00f3 00000000 		.4byte	0x0
 1556 00f7 00000000 		.4byte	0x0
 1557              	.LLST5:
 1558 00fb 00000000 		.4byte	.LFB5
 1559 00ff 02000000 		.4byte	.LCFI13
 1560 0103 0100     		.2byte	0x1
 1561 0105 5D       		.byte	0x5d
 1562 0106 02000000 		.4byte	.LCFI13
 1563 010a 04000000 		.4byte	.LCFI14
 1564 010e 0200     		.2byte	0x2
 1565 0110 7D       		.byte	0x7d
 1566 0111 08       		.sleb128 8
 1567 0112 04000000 		.4byte	.LCFI14
 1568 0116 06000000 		.4byte	.LCFI15
 1569 011a 0200     		.2byte	0x2
 1570 011c 7D       		.byte	0x7d
 1571 011d 18       		.sleb128 24
 1572 011e 06000000 		.4byte	.LCFI15
 1573 0122 5A000000 		.4byte	.LFE5
 1574 0126 0200     		.2byte	0x2
 1575 0128 77       		.byte	0x77
 1576 0129 18       		.sleb128 24
 1577 012a 00000000 		.4byte	0x0
 1578 012e 00000000 		.4byte	0x0
 1579              	.LLST6:
 1580 0132 00000000 		.4byte	.LFB6
 1581 0136 02000000 		.4byte	.LCFI16
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 64


 1582 013a 0100     		.2byte	0x1
 1583 013c 5D       		.byte	0x5d
 1584 013d 02000000 		.4byte	.LCFI16
 1585 0141 04000000 		.4byte	.LCFI17
 1586 0145 0200     		.2byte	0x2
 1587 0147 7D       		.byte	0x7d
 1588 0148 08       		.sleb128 8
 1589 0149 04000000 		.4byte	.LCFI17
 1590 014d 06000000 		.4byte	.LCFI18
 1591 0151 0200     		.2byte	0x2
 1592 0153 7D       		.byte	0x7d
 1593 0154 10       		.sleb128 16
 1594 0155 06000000 		.4byte	.LCFI18
 1595 0159 42000000 		.4byte	.LFE6
 1596 015d 0200     		.2byte	0x2
 1597 015f 77       		.byte	0x77
 1598 0160 10       		.sleb128 16
 1599 0161 00000000 		.4byte	0x0
 1600 0165 00000000 		.4byte	0x0
 1601              	.LLST7:
 1602 0169 00000000 		.4byte	.LFB7
 1603 016d 02000000 		.4byte	.LCFI19
 1604 0171 0100     		.2byte	0x1
 1605 0173 5D       		.byte	0x5d
 1606 0174 02000000 		.4byte	.LCFI19
 1607 0178 04000000 		.4byte	.LCFI20
 1608 017c 0200     		.2byte	0x2
 1609 017e 7D       		.byte	0x7d
 1610 017f 08       		.sleb128 8
 1611 0180 04000000 		.4byte	.LCFI20
 1612 0184 80000000 		.4byte	.LFE7
 1613 0188 0200     		.2byte	0x2
 1614 018a 77       		.byte	0x77
 1615 018b 08       		.sleb128 8
 1616 018c 00000000 		.4byte	0x0
 1617 0190 00000000 		.4byte	0x0
 1618              	.LLST8:
 1619 0194 00000000 		.4byte	.LFB8
 1620 0198 02000000 		.4byte	.LCFI21
 1621 019c 0100     		.2byte	0x1
 1622 019e 5D       		.byte	0x5d
 1623 019f 02000000 		.4byte	.LCFI21
 1624 01a3 04000000 		.4byte	.LCFI22
 1625 01a7 0200     		.2byte	0x2
 1626 01a9 7D       		.byte	0x7d
 1627 01aa 04       		.sleb128 4
 1628 01ab 04000000 		.4byte	.LCFI22
 1629 01af 2C000000 		.4byte	.LFE8
 1630 01b3 0200     		.2byte	0x2
 1631 01b5 77       		.byte	0x77
 1632 01b6 04       		.sleb128 4
 1633 01b7 00000000 		.4byte	0x0
 1634 01bb 00000000 		.4byte	0x0
 1635              	.LLST9:
 1636 01bf 00000000 		.4byte	.LFB9
 1637 01c3 02000000 		.4byte	.LCFI23
 1638 01c7 0100     		.2byte	0x1
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 65


 1639 01c9 5D       		.byte	0x5d
 1640 01ca 02000000 		.4byte	.LCFI23
 1641 01ce 04000000 		.4byte	.LCFI24
 1642 01d2 0200     		.2byte	0x2
 1643 01d4 7D       		.byte	0x7d
 1644 01d5 04       		.sleb128 4
 1645 01d6 04000000 		.4byte	.LCFI24
 1646 01da 06000000 		.4byte	.LCFI25
 1647 01de 0200     		.2byte	0x2
 1648 01e0 7D       		.byte	0x7d
 1649 01e1 10       		.sleb128 16
 1650 01e2 06000000 		.4byte	.LCFI25
 1651 01e6 24000000 		.4byte	.LFE9
 1652 01ea 0200     		.2byte	0x2
 1653 01ec 77       		.byte	0x77
 1654 01ed 10       		.sleb128 16
 1655 01ee 00000000 		.4byte	0x0
 1656 01f2 00000000 		.4byte	0x0
 1657              	.LLST10:
 1658 01f6 00000000 		.4byte	.LFB10
 1659 01fa 02000000 		.4byte	.LCFI26
 1660 01fe 0100     		.2byte	0x1
 1661 0200 5D       		.byte	0x5d
 1662 0201 02000000 		.4byte	.LCFI26
 1663 0205 04000000 		.4byte	.LCFI27
 1664 0209 0200     		.2byte	0x2
 1665 020b 7D       		.byte	0x7d
 1666 020c 08       		.sleb128 8
 1667 020d 04000000 		.4byte	.LCFI27
 1668 0211 06000000 		.4byte	.LCFI28
 1669 0215 0200     		.2byte	0x2
 1670 0217 7D       		.byte	0x7d
 1671 0218 10       		.sleb128 16
 1672 0219 06000000 		.4byte	.LCFI28
 1673 021d 2C000000 		.4byte	.LFE10
 1674 0221 0200     		.2byte	0x2
 1675 0223 77       		.byte	0x77
 1676 0224 10       		.sleb128 16
 1677 0225 00000000 		.4byte	0x0
 1678 0229 00000000 		.4byte	0x0
 1679              	.LLST11:
 1680 022d 00000000 		.4byte	.LFB11
 1681 0231 02000000 		.4byte	.LCFI29
 1682 0235 0100     		.2byte	0x1
 1683 0237 5D       		.byte	0x5d
 1684 0238 02000000 		.4byte	.LCFI29
 1685 023c 04000000 		.4byte	.LCFI30
 1686 0240 0200     		.2byte	0x2
 1687 0242 7D       		.byte	0x7d
 1688 0243 08       		.sleb128 8
 1689 0244 04000000 		.4byte	.LCFI30
 1690 0248 06000000 		.4byte	.LCFI31
 1691 024c 0200     		.2byte	0x2
 1692 024e 7D       		.byte	0x7d
 1693 024f 18       		.sleb128 24
 1694 0250 06000000 		.4byte	.LCFI31
 1695 0254 7E000000 		.4byte	.LFE11
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 66


 1696 0258 0200     		.2byte	0x2
 1697 025a 77       		.byte	0x77
 1698 025b 18       		.sleb128 24
 1699 025c 00000000 		.4byte	0x0
 1700 0260 00000000 		.4byte	0x0
 1701              	.LLST12:
 1702 0264 00000000 		.4byte	.LFB12
 1703 0268 02000000 		.4byte	.LCFI32
 1704 026c 0100     		.2byte	0x1
 1705 026e 5D       		.byte	0x5d
 1706 026f 02000000 		.4byte	.LCFI32
 1707 0273 04000000 		.4byte	.LCFI33
 1708 0277 0200     		.2byte	0x2
 1709 0279 7D       		.byte	0x7d
 1710 027a 08       		.sleb128 8
 1711 027b 04000000 		.4byte	.LCFI33
 1712 027f 06000000 		.4byte	.LCFI34
 1713 0283 0200     		.2byte	0x2
 1714 0285 7D       		.byte	0x7d
 1715 0286 18       		.sleb128 24
 1716 0287 06000000 		.4byte	.LCFI34
 1717 028b 88000000 		.4byte	.LFE12
 1718 028f 0200     		.2byte	0x2
 1719 0291 77       		.byte	0x77
 1720 0292 18       		.sleb128 24
 1721 0293 00000000 		.4byte	0x0
 1722 0297 00000000 		.4byte	0x0
 1723              	.LLST13:
 1724 029b 00000000 		.4byte	.LFB13
 1725 029f 02000000 		.4byte	.LCFI35
 1726 02a3 0100     		.2byte	0x1
 1727 02a5 5D       		.byte	0x5d
 1728 02a6 02000000 		.4byte	.LCFI35
 1729 02aa 04000000 		.4byte	.LCFI36
 1730 02ae 0200     		.2byte	0x2
 1731 02b0 7D       		.byte	0x7d
 1732 02b1 08       		.sleb128 8
 1733 02b2 04000000 		.4byte	.LCFI36
 1734 02b6 06000000 		.4byte	.LCFI37
 1735 02ba 0200     		.2byte	0x2
 1736 02bc 7D       		.byte	0x7d
 1737 02bd 10       		.sleb128 16
 1738 02be 06000000 		.4byte	.LCFI37
 1739 02c2 74000000 		.4byte	.LFE13
 1740 02c6 0200     		.2byte	0x2
 1741 02c8 77       		.byte	0x77
 1742 02c9 10       		.sleb128 16
 1743 02ca 00000000 		.4byte	0x0
 1744 02ce 00000000 		.4byte	0x0
 1745              	.LLST14:
 1746 02d2 00000000 		.4byte	.LFB14
 1747 02d6 02000000 		.4byte	.LCFI38
 1748 02da 0100     		.2byte	0x1
 1749 02dc 5D       		.byte	0x5d
 1750 02dd 02000000 		.4byte	.LCFI38
 1751 02e1 04000000 		.4byte	.LCFI39
 1752 02e5 0200     		.2byte	0x2
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 67


 1753 02e7 7D       		.byte	0x7d
 1754 02e8 08       		.sleb128 8
 1755 02e9 04000000 		.4byte	.LCFI39
 1756 02ed 06000000 		.4byte	.LCFI40
 1757 02f1 0200     		.2byte	0x2
 1758 02f3 7D       		.byte	0x7d
 1759 02f4 10       		.sleb128 16
 1760 02f5 06000000 		.4byte	.LCFI40
 1761 02f9 C8000000 		.4byte	.LFE14
 1762 02fd 0200     		.2byte	0x2
 1763 02ff 77       		.byte	0x77
 1764 0300 10       		.sleb128 16
 1765 0301 00000000 		.4byte	0x0
 1766 0305 00000000 		.4byte	0x0
 1767              	.LLST15:
 1768 0309 00000000 		.4byte	.LFB15
 1769 030d 02000000 		.4byte	.LCFI41
 1770 0311 0100     		.2byte	0x1
 1771 0313 5D       		.byte	0x5d
 1772 0314 02000000 		.4byte	.LCFI41
 1773 0318 04000000 		.4byte	.LCFI42
 1774 031c 0200     		.2byte	0x2
 1775 031e 7D       		.byte	0x7d
 1776 031f 04       		.sleb128 4
 1777 0320 04000000 		.4byte	.LCFI42
 1778 0324 06000000 		.4byte	.LCFI43
 1779 0328 0200     		.2byte	0x2
 1780 032a 7D       		.byte	0x7d
 1781 032b 10       		.sleb128 16
 1782 032c 06000000 		.4byte	.LCFI43
 1783 0330 32000000 		.4byte	.LFE15
 1784 0334 0200     		.2byte	0x2
 1785 0336 77       		.byte	0x77
 1786 0337 10       		.sleb128 16
 1787 0338 00000000 		.4byte	0x0
 1788 033c 00000000 		.4byte	0x0
 1789              	.LLST16:
 1790 0340 00000000 		.4byte	.LFB16
 1791 0344 02000000 		.4byte	.LCFI44
 1792 0348 0100     		.2byte	0x1
 1793 034a 5D       		.byte	0x5d
 1794 034b 02000000 		.4byte	.LCFI44
 1795 034f 04000000 		.4byte	.LCFI45
 1796 0353 0200     		.2byte	0x2
 1797 0355 7D       		.byte	0x7d
 1798 0356 04       		.sleb128 4
 1799 0357 04000000 		.4byte	.LCFI45
 1800 035b 06000000 		.4byte	.LCFI46
 1801 035f 0200     		.2byte	0x2
 1802 0361 7D       		.byte	0x7d
 1803 0362 10       		.sleb128 16
 1804 0363 06000000 		.4byte	.LCFI46
 1805 0367 26000000 		.4byte	.LFE16
 1806 036b 0200     		.2byte	0x2
 1807 036d 77       		.byte	0x77
 1808 036e 10       		.sleb128 16
 1809 036f 00000000 		.4byte	0x0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 68


 1810 0373 00000000 		.4byte	0x0
 1811              	.LLST17:
 1812 0377 00000000 		.4byte	.LFB17
 1813 037b 02000000 		.4byte	.LCFI47
 1814 037f 0100     		.2byte	0x1
 1815 0381 5D       		.byte	0x5d
 1816 0382 02000000 		.4byte	.LCFI47
 1817 0386 04000000 		.4byte	.LCFI48
 1818 038a 0200     		.2byte	0x2
 1819 038c 7D       		.byte	0x7d
 1820 038d 04       		.sleb128 4
 1821 038e 04000000 		.4byte	.LCFI48
 1822 0392 06000000 		.4byte	.LCFI49
 1823 0396 0200     		.2byte	0x2
 1824 0398 7D       		.byte	0x7d
 1825 0399 10       		.sleb128 16
 1826 039a 06000000 		.4byte	.LCFI49
 1827 039e 20000000 		.4byte	.LFE17
 1828 03a2 0200     		.2byte	0x2
 1829 03a4 77       		.byte	0x77
 1830 03a5 10       		.sleb128 16
 1831 03a6 00000000 		.4byte	0x0
 1832 03aa 00000000 		.4byte	0x0
 1833              	.LLST18:
 1834 03ae 00000000 		.4byte	.LFB18
 1835 03b2 02000000 		.4byte	.LCFI50
 1836 03b6 0100     		.2byte	0x1
 1837 03b8 5D       		.byte	0x5d
 1838 03b9 02000000 		.4byte	.LCFI50
 1839 03bd 04000000 		.4byte	.LCFI51
 1840 03c1 0200     		.2byte	0x2
 1841 03c3 7D       		.byte	0x7d
 1842 03c4 04       		.sleb128 4
 1843 03c5 04000000 		.4byte	.LCFI51
 1844 03c9 06000000 		.4byte	.LCFI52
 1845 03cd 0200     		.2byte	0x2
 1846 03cf 7D       		.byte	0x7d
 1847 03d0 10       		.sleb128 16
 1848 03d1 06000000 		.4byte	.LCFI52
 1849 03d5 52000000 		.4byte	.LFE18
 1850 03d9 0200     		.2byte	0x2
 1851 03db 77       		.byte	0x77
 1852 03dc 10       		.sleb128 16
 1853 03dd 00000000 		.4byte	0x0
 1854 03e1 00000000 		.4byte	0x0
 1855              		.file 2 ".\\Generated_Source\\PSoC5\\/cytypes.h"
 1856              		.section	.debug_info
 1857 0000 5D050000 		.4byte	0x55d
 1858 0004 0200     		.2byte	0x2
 1859 0006 00000000 		.4byte	.Ldebug_abbrev0
 1860 000a 04       		.byte	0x4
 1861 000b 01       		.uleb128 0x1
 1862 000c 9A000000 		.4byte	.LASF56
 1863 0010 01       		.byte	0x1
 1864 0011 E0030000 		.4byte	.LASF57
 1865 0015 00000000 		.4byte	.LASF58
 1866 0019 00000000 		.4byte	0x0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 69


 1867 001d 00000000 		.4byte	0x0
 1868 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 1869 0025 00000000 		.4byte	.Ldebug_line0
 1870 0029 02       		.uleb128 0x2
 1871 002a 01       		.byte	0x1
 1872 002b 06       		.byte	0x6
 1873 002c DA000000 		.4byte	.LASF0
 1874 0030 02       		.uleb128 0x2
 1875 0031 01       		.byte	0x1
 1876 0032 08       		.byte	0x8
 1877 0033 C8020000 		.4byte	.LASF1
 1878 0037 02       		.uleb128 0x2
 1879 0038 02       		.byte	0x2
 1880 0039 05       		.byte	0x5
 1881 003a FA020000 		.4byte	.LASF2
 1882 003e 02       		.uleb128 0x2
 1883 003f 02       		.byte	0x2
 1884 0040 07       		.byte	0x7
 1885 0041 1E020000 		.4byte	.LASF3
 1886 0045 02       		.uleb128 0x2
 1887 0046 04       		.byte	0x4
 1888 0047 05       		.byte	0x5
 1889 0048 1A010000 		.4byte	.LASF4
 1890 004c 02       		.uleb128 0x2
 1891 004d 04       		.byte	0x4
 1892 004e 07       		.byte	0x7
 1893 004f E6010000 		.4byte	.LASF5
 1894 0053 02       		.uleb128 0x2
 1895 0054 08       		.byte	0x8
 1896 0055 05       		.byte	0x5
 1897 0056 CC000000 		.4byte	.LASF6
 1898 005a 02       		.uleb128 0x2
 1899 005b 08       		.byte	0x8
 1900 005c 07       		.byte	0x7
 1901 005d 83000000 		.4byte	.LASF7
 1902 0061 03       		.uleb128 0x3
 1903 0062 04       		.byte	0x4
 1904 0063 05       		.byte	0x5
 1905 0064 696E7400 		.ascii	"int\000"
 1906 0068 02       		.uleb128 0x2
 1907 0069 04       		.byte	0x4
 1908 006a 07       		.byte	0x7
 1909 006b A6010000 		.4byte	.LASF8
 1910 006f 04       		.uleb128 0x4
 1911 0070 23010000 		.4byte	.LASF9
 1912 0074 02       		.byte	0x2
 1913 0075 4C       		.byte	0x4c
 1914 0076 30000000 		.4byte	0x30
 1915 007a 04       		.uleb128 0x4
 1916 007b 28000000 		.4byte	.LASF10
 1917 007f 02       		.byte	0x2
 1918 0080 4D       		.byte	0x4d
 1919 0081 3E000000 		.4byte	0x3e
 1920 0085 02       		.uleb128 0x2
 1921 0086 04       		.byte	0x4
 1922 0087 04       		.byte	0x4
 1923 0088 89020000 		.4byte	.LASF11
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 70


 1924 008c 02       		.uleb128 0x2
 1925 008d 08       		.byte	0x8
 1926 008e 04       		.byte	0x4
 1927 008f 29010000 		.4byte	.LASF12
 1928 0093 02       		.uleb128 0x2
 1929 0094 01       		.byte	0x1
 1930 0095 08       		.byte	0x8
 1931 0096 21030000 		.4byte	.LASF13
 1932 009a 05       		.uleb128 0x5
 1933 009b 6F000000 		.4byte	0x6f
 1934 009f 06       		.uleb128 0x6
 1935 00a0 04       		.byte	0x4
 1936 00a1 07       		.byte	0x7
 1937 00a2 07       		.uleb128 0x7
 1938 00a3 01       		.byte	0x1
 1939 00a4 B6030000 		.4byte	.LASF14
 1940 00a8 01       		.byte	0x1
 1941 00a9 A7       		.byte	0xa7
 1942 00aa 01       		.byte	0x1
 1943 00ab 00000000 		.4byte	.LFB0
 1944 00af AA010000 		.4byte	.LFE0
 1945 00b3 00000000 		.4byte	.LLST0
 1946 00b7 CA000000 		.4byte	0xca
 1947 00bb 08       		.uleb128 0x8
 1948 00bc 77030000 		.4byte	.LASF16
 1949 00c0 01       		.byte	0x1
 1950 00c1 AE       		.byte	0xae
 1951 00c2 6F000000 		.4byte	0x6f
 1952 00c6 02       		.byte	0x2
 1953 00c7 91       		.byte	0x91
 1954 00c8 77       		.sleb128 -9
 1955 00c9 00       		.byte	0x0
 1956 00ca 09       		.uleb128 0x9
 1957 00cb 01       		.byte	0x1
 1958 00cc A6000000 		.4byte	.LASF15
 1959 00d0 01       		.byte	0x1
 1960 00d1 8801     		.2byte	0x188
 1961 00d3 01       		.byte	0x1
 1962 00d4 00000000 		.4byte	.LFB1
 1963 00d8 C4000000 		.4byte	.LFE1
 1964 00dc 37000000 		.4byte	.LLST1
 1965 00e0 F4000000 		.4byte	0xf4
 1966 00e4 0A       		.uleb128 0xa
 1967 00e5 77030000 		.4byte	.LASF16
 1968 00e9 01       		.byte	0x1
 1969 00ea 8A01     		.2byte	0x18a
 1970 00ec 6F000000 		.4byte	0x6f
 1971 00f0 02       		.byte	0x2
 1972 00f1 91       		.byte	0x91
 1973 00f2 77       		.sleb128 -9
 1974 00f3 00       		.byte	0x0
 1975 00f4 0B       		.uleb128 0xb
 1976 00f5 01       		.byte	0x1
 1977 00f6 56030000 		.4byte	.LASF17
 1978 00fa 01       		.byte	0x1
 1979 00fb 1C02     		.2byte	0x21c
 1980 00fd 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 71


 1981 00fe 00000000 		.4byte	.LFB2
 1982 0102 3C000000 		.4byte	.LFE2
 1983 0106 6E000000 		.4byte	.LLST2
 1984 010a 0B       		.uleb128 0xb
 1985 010b 01       		.byte	0x1
 1986 010c 5E020000 		.4byte	.LASF18
 1987 0110 01       		.byte	0x1
 1988 0111 4102     		.2byte	0x241
 1989 0113 01       		.byte	0x1
 1990 0114 00000000 		.4byte	.LFB3
 1991 0118 BC000000 		.4byte	.LFE3
 1992 011c 99000000 		.4byte	.LLST3
 1993 0120 0C       		.uleb128 0xc
 1994 0121 01       		.byte	0x1
 1995 0122 99020000 		.4byte	.LASF27
 1996 0126 01       		.byte	0x1
 1997 0127 CB02     		.2byte	0x2cb
 1998 0129 01       		.byte	0x1
 1999 012a 6F000000 		.4byte	0x6f
 2000 012e 00000000 		.4byte	.LFB4
 2001 0132 5A000000 		.4byte	.LFE4
 2002 0136 C4000000 		.4byte	.LLST4
 2003 013a 6C010000 		.4byte	0x16c
 2004 013e 0D       		.uleb128 0xd
 2005 013f 7A000000 		.4byte	.LASF21
 2006 0143 01       		.byte	0x1
 2007 0144 CB02     		.2byte	0x2cb
 2008 0146 6F000000 		.4byte	0x6f
 2009 014a 02       		.byte	0x2
 2010 014b 91       		.byte	0x91
 2011 014c 6F       		.sleb128 -17
 2012 014d 0E       		.uleb128 0xe
 2013 014e 706F7300 		.ascii	"pos\000"
 2014 0152 01       		.byte	0x1
 2015 0153 CD02     		.2byte	0x2cd
 2016 0155 6F000000 		.4byte	0x6f
 2017 0159 02       		.byte	0x2
 2018 015a 91       		.byte	0x91
 2019 015b 76       		.sleb128 -10
 2020 015c 0A       		.uleb128 0xa
 2021 015d 6C020000 		.4byte	.LASF19
 2022 0161 01       		.byte	0x1
 2023 0162 CE02     		.2byte	0x2ce
 2024 0164 6F000000 		.4byte	0x6f
 2025 0168 02       		.byte	0x2
 2026 0169 91       		.byte	0x91
 2027 016a 77       		.sleb128 -9
 2028 016b 00       		.byte	0x0
 2029 016c 09       		.uleb128 0x9
 2030 016d 01       		.byte	0x1
 2031 016e 88030000 		.4byte	.LASF20
 2032 0172 01       		.byte	0x1
 2033 0173 6003     		.2byte	0x360
 2034 0175 01       		.byte	0x1
 2035 0176 00000000 		.4byte	.LFB5
 2036 017a 5A000000 		.4byte	.LFE5
 2037 017e FB000000 		.4byte	.LLST5
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 72


 2038 0182 A5010000 		.4byte	0x1a5
 2039 0186 0D       		.uleb128 0xd
 2040 0187 38020000 		.4byte	.LASF22
 2041 018b 01       		.byte	0x1
 2042 018c 6003     		.2byte	0x360
 2043 018e 6F000000 		.4byte	0x6f
 2044 0192 02       		.byte	0x2
 2045 0193 91       		.byte	0x91
 2046 0194 6F       		.sleb128 -17
 2047 0195 0A       		.uleb128 0xa
 2048 0196 04030000 		.4byte	.LASF23
 2049 019a 01       		.byte	0x1
 2050 019b 6203     		.2byte	0x362
 2051 019d 6F000000 		.4byte	0x6f
 2052 01a1 02       		.byte	0x2
 2053 01a2 91       		.byte	0x91
 2054 01a3 77       		.sleb128 -9
 2055 01a4 00       		.byte	0x0
 2056 01a5 09       		.uleb128 0x9
 2057 01a6 01       		.byte	0x1
 2058 01a7 92010000 		.4byte	.LASF24
 2059 01ab 01       		.byte	0x1
 2060 01ac D003     		.2byte	0x3d0
 2061 01ae 01       		.byte	0x1
 2062 01af 00000000 		.4byte	.LFB6
 2063 01b3 42000000 		.4byte	.LFE6
 2064 01b7 32010000 		.4byte	.LLST6
 2065 01bb CF010000 		.4byte	0x1cf
 2066 01bf 0D       		.uleb128 0xd
 2067 01c0 31020000 		.4byte	.LASF25
 2068 01c4 01       		.byte	0x1
 2069 01c5 D003     		.2byte	0x3d0
 2070 01c7 6F000000 		.4byte	0x6f
 2071 01cb 02       		.byte	0x2
 2072 01cc 91       		.byte	0x91
 2073 01cd 77       		.sleb128 -9
 2074 01ce 00       		.byte	0x0
 2075 01cf 0B       		.uleb128 0xb
 2076 01d0 01       		.byte	0x1
 2077 01d1 C4030000 		.4byte	.LASF26
 2078 01d5 01       		.byte	0x1
 2079 01d6 1D04     		.2byte	0x41d
 2080 01d8 01       		.byte	0x1
 2081 01d9 00000000 		.4byte	.LFB7
 2082 01dd 80000000 		.4byte	.LFE7
 2083 01e1 69010000 		.4byte	.LLST7
 2084 01e5 0F       		.uleb128 0xf
 2085 01e6 01       		.byte	0x1
 2086 01e7 3D020000 		.4byte	.LASF59
 2087 01eb 01       		.byte	0x1
 2088 01ec 5204     		.2byte	0x452
 2089 01ee 01       		.byte	0x1
 2090 01ef 6F000000 		.4byte	0x6f
 2091 01f3 00000000 		.4byte	.LFB8
 2092 01f7 2C000000 		.4byte	.LFE8
 2093 01fb 94010000 		.4byte	.LLST8
 2094 01ff 0C       		.uleb128 0xc
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 73


 2095 0200 01       		.byte	0x1
 2096 0201 5C010000 		.4byte	.LASF28
 2097 0205 01       		.byte	0x1
 2098 0206 6C04     		.2byte	0x46c
 2099 0208 01       		.byte	0x1
 2100 0209 7A000000 		.4byte	0x7a
 2101 020d 00000000 		.4byte	.LFB9
 2102 0211 24000000 		.4byte	.LFE9
 2103 0215 BF010000 		.4byte	.LLST9
 2104 0219 2D020000 		.4byte	0x22d
 2105 021d 0D       		.uleb128 0xd
 2106 021e 31020000 		.4byte	.LASF25
 2107 0222 01       		.byte	0x1
 2108 0223 6C04     		.2byte	0x46c
 2109 0225 6F000000 		.4byte	0x6f
 2110 0229 02       		.byte	0x2
 2111 022a 91       		.byte	0x91
 2112 022b 77       		.sleb128 -9
 2113 022c 00       		.byte	0x0
 2114 022d 09       		.uleb128 0x9
 2115 022e 01       		.byte	0x1
 2116 022f B3010000 		.4byte	.LASF29
 2117 0233 01       		.byte	0x1
 2118 0234 8104     		.2byte	0x481
 2119 0236 01       		.byte	0x1
 2120 0237 00000000 		.4byte	.LFB10
 2121 023b 2C000000 		.4byte	.LFE10
 2122 023f F6010000 		.4byte	.LLST10
 2123 0243 55020000 		.4byte	0x255
 2124 0247 0E       		.uleb128 0xe
 2125 0248 6900     		.ascii	"i\000"
 2126 024a 01       		.byte	0x1
 2127 024b 8304     		.2byte	0x483
 2128 024d 6F000000 		.4byte	0x6f
 2129 0251 02       		.byte	0x2
 2130 0252 91       		.byte	0x91
 2131 0253 77       		.sleb128 -9
 2132 0254 00       		.byte	0x0
 2133 0255 09       		.uleb128 0x9
 2134 0256 01       		.byte	0x1
 2135 0257 30010000 		.4byte	.LASF30
 2136 025b 01       		.byte	0x1
 2137 025c 1705     		.2byte	0x517
 2138 025e 01       		.byte	0x1
 2139 025f 00000000 		.4byte	.LFB11
 2140 0263 7E000000 		.4byte	.LFE11
 2141 0267 2D020000 		.4byte	.LLST11
 2142 026b 9D020000 		.4byte	0x29d
 2143 026f 0D       		.uleb128 0xd
 2144 0270 31020000 		.4byte	.LASF25
 2145 0274 01       		.byte	0x1
 2146 0275 1705     		.2byte	0x517
 2147 0277 6F000000 		.4byte	0x6f
 2148 027b 02       		.byte	0x2
 2149 027c 91       		.byte	0x91
 2150 027d 6F       		.sleb128 -17
 2151 027e 0A       		.uleb128 0xa
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 74


 2152 027f 78010000 		.4byte	.LASF31
 2153 0283 01       		.byte	0x1
 2154 0284 1905     		.2byte	0x519
 2155 0286 6F000000 		.4byte	0x6f
 2156 028a 02       		.byte	0x2
 2157 028b 91       		.byte	0x91
 2158 028c 76       		.sleb128 -10
 2159 028d 0A       		.uleb128 0xa
 2160 028e 73010000 		.4byte	.LASF32
 2161 0292 01       		.byte	0x1
 2162 0293 1A05     		.2byte	0x51a
 2163 0295 6F000000 		.4byte	0x6f
 2164 0299 02       		.byte	0x2
 2165 029a 91       		.byte	0x91
 2166 029b 77       		.sleb128 -9
 2167 029c 00       		.byte	0x0
 2168 029d 09       		.uleb128 0x9
 2169 029e 01       		.byte	0x1
 2170 029f B1020000 		.4byte	.LASF33
 2171 02a3 01       		.byte	0x1
 2172 02a4 6C05     		.2byte	0x56c
 2173 02a6 01       		.byte	0x1
 2174 02a7 00000000 		.4byte	.LFB12
 2175 02ab 88000000 		.4byte	.LFE12
 2176 02af 64020000 		.4byte	.LLST12
 2177 02b3 E5020000 		.4byte	0x2e5
 2178 02b7 0D       		.uleb128 0xd
 2179 02b8 31020000 		.4byte	.LASF25
 2180 02bc 01       		.byte	0x1
 2181 02bd 6C05     		.2byte	0x56c
 2182 02bf 6F000000 		.4byte	0x6f
 2183 02c3 02       		.byte	0x2
 2184 02c4 91       		.byte	0x91
 2185 02c5 6F       		.sleb128 -17
 2186 02c6 0A       		.uleb128 0xa
 2187 02c7 78010000 		.4byte	.LASF31
 2188 02cb 01       		.byte	0x1
 2189 02cc 6E05     		.2byte	0x56e
 2190 02ce 6F000000 		.4byte	0x6f
 2191 02d2 02       		.byte	0x2
 2192 02d3 91       		.byte	0x91
 2193 02d4 76       		.sleb128 -10
 2194 02d5 0A       		.uleb128 0xa
 2195 02d6 73010000 		.4byte	.LASF32
 2196 02da 01       		.byte	0x1
 2197 02db 6F05     		.2byte	0x56f
 2198 02dd 6F000000 		.4byte	0x6f
 2199 02e1 02       		.byte	0x2
 2200 02e2 91       		.byte	0x91
 2201 02e3 77       		.sleb128 -9
 2202 02e4 00       		.byte	0x0
 2203 02e5 09       		.uleb128 0x9
 2204 02e6 01       		.byte	0x1
 2205 02e7 A5030000 		.4byte	.LASF34
 2206 02eb 01       		.byte	0x1
 2207 02ec C005     		.2byte	0x5c0
 2208 02ee 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 75


 2209 02ef 00000000 		.4byte	.LFB13
 2210 02f3 74000000 		.4byte	.LFE13
 2211 02f7 9B020000 		.4byte	.LLST13
 2212 02fb 0F030000 		.4byte	0x30f
 2213 02ff 0D       		.uleb128 0xd
 2214 0300 31020000 		.4byte	.LASF25
 2215 0304 01       		.byte	0x1
 2216 0305 C005     		.2byte	0x5c0
 2217 0307 6F000000 		.4byte	0x6f
 2218 030b 02       		.byte	0x2
 2219 030c 91       		.byte	0x91
 2220 030d 77       		.sleb128 -9
 2221 030e 00       		.byte	0x0
 2222 030f 09       		.uleb128 0x9
 2223 0310 01       		.byte	0x1
 2224 0311 65030000 		.4byte	.LASF35
 2225 0315 01       		.byte	0x1
 2226 0316 6006     		.2byte	0x660
 2227 0318 01       		.byte	0x1
 2228 0319 00000000 		.4byte	.LFB14
 2229 031d C8000000 		.4byte	.LFE14
 2230 0321 D2020000 		.4byte	.LLST14
 2231 0325 39030000 		.4byte	0x339
 2232 0329 0D       		.uleb128 0xd
 2233 032a 31020000 		.4byte	.LASF25
 2234 032e 01       		.byte	0x1
 2235 032f 6006     		.2byte	0x660
 2236 0331 6F000000 		.4byte	0x6f
 2237 0335 02       		.byte	0x2
 2238 0336 91       		.byte	0x91
 2239 0337 77       		.sleb128 -9
 2240 0338 00       		.byte	0x0
 2241 0339 09       		.uleb128 0x9
 2242 033a 01       		.byte	0x1
 2243 033b B6000000 		.4byte	.LASF36
 2244 033f 01       		.byte	0x1
 2245 0340 6E07     		.2byte	0x76e
 2246 0342 01       		.byte	0x1
 2247 0343 00000000 		.4byte	.LFB15
 2248 0347 32000000 		.4byte	.LFE15
 2249 034b 09030000 		.4byte	.LLST15
 2250 034f 63030000 		.4byte	0x363
 2251 0353 0D       		.uleb128 0xd
 2252 0354 8F020000 		.4byte	.LASF37
 2253 0358 01       		.byte	0x1
 2254 0359 6E07     		.2byte	0x76e
 2255 035b 6F000000 		.4byte	0x6f
 2256 035f 02       		.byte	0x2
 2257 0360 91       		.byte	0x91
 2258 0361 77       		.sleb128 -9
 2259 0362 00       		.byte	0x0
 2260 0363 0C       		.uleb128 0xc
 2261 0364 01       		.byte	0x1
 2262 0365 0B030000 		.4byte	.LASF38
 2263 0369 01       		.byte	0x1
 2264 036a 8B07     		.2byte	0x78b
 2265 036c 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 76


 2266 036d 6F000000 		.4byte	0x6f
 2267 0371 00000000 		.4byte	.LFB16
 2268 0375 26000000 		.4byte	.LFE16
 2269 0379 40030000 		.4byte	.LLST16
 2270 037d 91030000 		.4byte	0x391
 2271 0381 0A       		.uleb128 0xa
 2272 0382 8F020000 		.4byte	.LASF37
 2273 0386 01       		.byte	0x1
 2274 0387 8D07     		.2byte	0x78d
 2275 0389 6F000000 		.4byte	0x6f
 2276 038d 02       		.byte	0x2
 2277 038e 91       		.byte	0x91
 2278 038f 77       		.sleb128 -9
 2279 0390 00       		.byte	0x0
 2280 0391 09       		.uleb128 0x9
 2281 0392 01       		.byte	0x1
 2282 0393 26030000 		.4byte	.LASF39
 2283 0397 01       		.byte	0x1
 2284 0398 AD07     		.2byte	0x7ad
 2285 039a 01       		.byte	0x1
 2286 039b 00000000 		.4byte	.LFB17
 2287 039f 20000000 		.4byte	.LFE17
 2288 03a3 77030000 		.4byte	.LLST17
 2289 03a7 BB030000 		.4byte	0x3bb
 2290 03ab 0D       		.uleb128 0xd
 2291 03ac D6020000 		.4byte	.LASF40
 2292 03b0 01       		.byte	0x1
 2293 03b1 AD07     		.2byte	0x7ad
 2294 03b3 6F000000 		.4byte	0x6f
 2295 03b7 02       		.byte	0x2
 2296 03b8 91       		.byte	0x91
 2297 03b9 77       		.sleb128 -9
 2298 03ba 00       		.byte	0x0
 2299 03bb 09       		.uleb128 0x9
 2300 03bc 01       		.byte	0x1
 2301 03bd F9000000 		.4byte	.LASF41
 2302 03c1 01       		.byte	0x1
 2303 03c2 C807     		.2byte	0x7c8
 2304 03c4 01       		.byte	0x1
 2305 03c5 00000000 		.4byte	.LFB18
 2306 03c9 52000000 		.4byte	.LFE18
 2307 03cd AE030000 		.4byte	.LLST18
 2308 03d1 E5030000 		.4byte	0x3e5
 2309 03d5 10       		.uleb128 0x10
 2310 03d6 73726300 		.ascii	"src\000"
 2311 03da 01       		.byte	0x1
 2312 03db C807     		.2byte	0x7c8
 2313 03dd 6F000000 		.4byte	0x6f
 2314 03e1 02       		.byte	0x2
 2315 03e2 91       		.byte	0x91
 2316 03e3 77       		.sleb128 -9
 2317 03e4 00       		.byte	0x0
 2318 03e5 11       		.uleb128 0x11
 2319 03e6 5E000000 		.4byte	.LASF42
 2320 03ea 01       		.byte	0x1
 2321 03eb 40       		.byte	0x40
 2322 03ec 6F000000 		.4byte	0x6f
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 77


 2323 03f0 01       		.byte	0x1
 2324 03f1 05       		.byte	0x5
 2325 03f2 03       		.byte	0x3
 2326 03f3 00000000 		.4byte	CapSense_lowLevelTuningDone
 2327 03f7 11       		.uleb128 0x11
 2328 03f8 3C000000 		.4byte	.LASF43
 2329 03fc 01       		.byte	0x1
 2330 03fd 44       		.byte	0x44
 2331 03fe 6F000000 		.4byte	0x6f
 2332 0402 01       		.byte	0x1
 2333 0403 05       		.byte	0x5
 2334 0404 03       		.byte	0x3
 2335 0405 00000000 		.4byte	CapSense_initVar
 2336 0409 11       		.uleb128 0x11
 2337 040a 2F000000 		.4byte	.LASF44
 2338 040e 01       		.byte	0x1
 2339 040f 47       		.byte	0x47
 2340 0410 9A000000 		.4byte	0x9a
 2341 0414 01       		.byte	0x1
 2342 0415 05       		.byte	0x5
 2343 0416 03       		.byte	0x3
 2344 0417 00000000 		.4byte	CapSense_csv
 2345 041b 11       		.uleb128 0x11
 2346 041c 7D010000 		.4byte	.LASF45
 2347 0420 01       		.byte	0x1
 2348 0421 48       		.byte	0x48
 2349 0422 9A000000 		.4byte	0x9a
 2350 0426 01       		.byte	0x1
 2351 0427 05       		.byte	0x5
 2352 0428 03       		.byte	0x3
 2353 0429 00000000 		.4byte	CapSense_sensorIndex
 2354 042d 12       		.uleb128 0x12
 2355 042e 7A000000 		.4byte	0x7a
 2356 0432 3D040000 		.4byte	0x43d
 2357 0436 13       		.uleb128 0x13
 2358 0437 9F000000 		.4byte	0x9f
 2359 043b 06       		.byte	0x6
 2360 043c 00       		.byte	0x0
 2361 043d 11       		.uleb128 0x11
 2362 043e E6000000 		.4byte	.LASF46
 2363 0442 01       		.byte	0x1
 2364 0443 5A       		.byte	0x5a
 2365 0444 2D040000 		.4byte	0x42d
 2366 0448 01       		.byte	0x1
 2367 0449 05       		.byte	0x5
 2368 044a 03       		.byte	0x3
 2369 044b 00000000 		.4byte	CapSense_SensorRaw
 2370 044f 12       		.uleb128 0x12
 2371 0450 6F000000 		.4byte	0x6f
 2372 0454 5F040000 		.4byte	0x45f
 2373 0458 13       		.uleb128 0x13
 2374 0459 9F000000 		.4byte	0x9f
 2375 045d 00       		.byte	0x0
 2376 045e 00       		.byte	0x0
 2377 045f 11       		.uleb128 0x11
 2378 0460 3C030000 		.4byte	.LASF47
 2379 0464 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 78


 2380 0465 5C       		.byte	0x5c
 2381 0466 4F040000 		.4byte	0x44f
 2382 046a 01       		.byte	0x1
 2383 046b 05       		.byte	0x5
 2384 046c 03       		.byte	0x3
 2385 046d 00000000 		.4byte	CapSense_SensorEnableMask
 2386 0471 12       		.uleb128 0x12
 2387 0472 81040000 		.4byte	0x481
 2388 0476 81040000 		.4byte	0x481
 2389 047a 13       		.uleb128 0x13
 2390 047b 9F000000 		.4byte	0x9f
 2391 047f 06       		.byte	0x6
 2392 0480 00       		.byte	0x0
 2393 0481 14       		.uleb128 0x14
 2394 0482 04       		.byte	0x4
 2395 0483 6F000000 		.4byte	0x6f
 2396 0487 11       		.uleb128 0x11
 2397 0488 4D000000 		.4byte	.LASF48
 2398 048c 01       		.byte	0x1
 2399 048d 5F       		.byte	0x5f
 2400 048e 99040000 		.4byte	0x499
 2401 0492 01       		.byte	0x1
 2402 0493 05       		.byte	0x5
 2403 0494 03       		.byte	0x3
 2404 0495 00000000 		.4byte	CapSense_pcTable
 2405 0499 15       		.uleb128 0x15
 2406 049a 71040000 		.4byte	0x471
 2407 049e 12       		.uleb128 0x12
 2408 049f 6F000000 		.4byte	0x6f
 2409 04a3 AE040000 		.4byte	0x4ae
 2410 04a7 13       		.uleb128 0x13
 2411 04a8 9F000000 		.4byte	0x9f
 2412 04ac 06       		.byte	0x6
 2413 04ad 00       		.byte	0x0
 2414 04ae 11       		.uleb128 0x11
 2415 04af 0B020000 		.4byte	.LASF49
 2416 04b3 01       		.byte	0x1
 2417 04b4 69       		.byte	0x69
 2418 04b5 C0040000 		.4byte	0x4c0
 2419 04b9 01       		.byte	0x1
 2420 04ba 05       		.byte	0x5
 2421 04bb 03       		.byte	0x3
 2422 04bc 00000000 		.4byte	CapSense_portTable
 2423 04c0 15       		.uleb128 0x15
 2424 04c1 9E040000 		.4byte	0x49e
 2425 04c5 11       		.uleb128 0x11
 2426 04c6 F8010000 		.4byte	.LASF50
 2427 04ca 01       		.byte	0x1
 2428 04cb 73       		.byte	0x73
 2429 04cc D7040000 		.4byte	0x4d7
 2430 04d0 01       		.byte	0x1
 2431 04d1 05       		.byte	0x5
 2432 04d2 03       		.byte	0x3
 2433 04d3 00000000 		.4byte	CapSense_maskTable
 2434 04d7 15       		.uleb128 0x15
 2435 04d8 9E040000 		.4byte	0x49e
 2436 04dc 12       		.uleb128 0x12
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 79


 2437 04dd 81040000 		.4byte	0x481
 2438 04e1 EC040000 		.4byte	0x4ec
 2439 04e5 13       		.uleb128 0x13
 2440 04e6 9F000000 		.4byte	0x9f
 2441 04ea 07       		.byte	0x7
 2442 04eb 00       		.byte	0x0
 2443 04ec 11       		.uleb128 0x11
 2444 04ed 4D020000 		.4byte	.LASF51
 2445 04f1 01       		.byte	0x1
 2446 04f2 7D       		.byte	0x7d
 2447 04f3 FE040000 		.4byte	0x4fe
 2448 04f7 01       		.byte	0x1
 2449 04f8 05       		.byte	0x5
 2450 04f9 03       		.byte	0x3
 2451 04fa 00000000 		.4byte	CapSense_csTable
 2452 04fe 15       		.uleb128 0x15
 2453 04ff DC040000 		.4byte	0x4dc
 2454 0503 11       		.uleb128 0x11
 2455 0504 73020000 		.4byte	.LASF52
 2456 0508 01       		.byte	0x1
 2457 0509 83       		.byte	0x83
 2458 050a 9E040000 		.4byte	0x49e
 2459 050e 01       		.byte	0x1
 2460 050f 05       		.byte	0x5
 2461 0510 03       		.byte	0x3
 2462 0511 00000000 		.4byte	CapSense_idacSettings
 2463 0515 12       		.uleb128 0x12
 2464 0516 6F000000 		.4byte	0x6f
 2465 051a 25050000 		.4byte	0x525
 2466 051e 13       		.uleb128 0x13
 2467 051f 9F000000 		.4byte	0x9f
 2468 0523 02       		.byte	0x2
 2469 0524 00       		.byte	0x0
 2470 0525 11       		.uleb128 0x11
 2471 0526 E0020000 		.4byte	.LASF53
 2472 052a 01       		.byte	0x1
 2473 052b 87       		.byte	0x87
 2474 052c 15050000 		.4byte	0x515
 2475 0530 01       		.byte	0x1
 2476 0531 05       		.byte	0x5
 2477 0532 03       		.byte	0x3
 2478 0533 00000000 		.4byte	CapSense_widgetResolution
 2479 0537 11       		.uleb128 0x11
 2480 0538 C9010000 		.4byte	.LASF54
 2481 053c 01       		.byte	0x1
 2482 053d 8D       		.byte	0x8d
 2483 053e 9E040000 		.4byte	0x49e
 2484 0542 01       		.byte	0x1
 2485 0543 05       		.byte	0x5
 2486 0544 03       		.byte	0x3
 2487 0545 00000000 		.4byte	CapSense_AnalogSwitchDivider
 2488 0549 11       		.uleb128 0x11
 2489 054a 46010000 		.4byte	.LASF55
 2490 054e 01       		.byte	0x1
 2491 054f 8E       		.byte	0x8e
 2492 0550 5B050000 		.4byte	0x55b
 2493 0554 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 80


 2494 0555 05       		.byte	0x5
 2495 0556 03       		.byte	0x3
 2496 0557 00000000 		.4byte	CapSense_widgetNumber
 2497 055b 15       		.uleb128 0x15
 2498 055c 9E040000 		.4byte	0x49e
 2499 0560 00       		.byte	0x0
 2500              		.section	.debug_abbrev
 2501 0000 01       		.uleb128 0x1
 2502 0001 11       		.uleb128 0x11
 2503 0002 01       		.byte	0x1
 2504 0003 25       		.uleb128 0x25
 2505 0004 0E       		.uleb128 0xe
 2506 0005 13       		.uleb128 0x13
 2507 0006 0B       		.uleb128 0xb
 2508 0007 03       		.uleb128 0x3
 2509 0008 0E       		.uleb128 0xe
 2510 0009 1B       		.uleb128 0x1b
 2511 000a 0E       		.uleb128 0xe
 2512 000b 11       		.uleb128 0x11
 2513 000c 01       		.uleb128 0x1
 2514 000d 52       		.uleb128 0x52
 2515 000e 01       		.uleb128 0x1
 2516 000f 55       		.uleb128 0x55
 2517 0010 06       		.uleb128 0x6
 2518 0011 10       		.uleb128 0x10
 2519 0012 06       		.uleb128 0x6
 2520 0013 00       		.byte	0x0
 2521 0014 00       		.byte	0x0
 2522 0015 02       		.uleb128 0x2
 2523 0016 24       		.uleb128 0x24
 2524 0017 00       		.byte	0x0
 2525 0018 0B       		.uleb128 0xb
 2526 0019 0B       		.uleb128 0xb
 2527 001a 3E       		.uleb128 0x3e
 2528 001b 0B       		.uleb128 0xb
 2529 001c 03       		.uleb128 0x3
 2530 001d 0E       		.uleb128 0xe
 2531 001e 00       		.byte	0x0
 2532 001f 00       		.byte	0x0
 2533 0020 03       		.uleb128 0x3
 2534 0021 24       		.uleb128 0x24
 2535 0022 00       		.byte	0x0
 2536 0023 0B       		.uleb128 0xb
 2537 0024 0B       		.uleb128 0xb
 2538 0025 3E       		.uleb128 0x3e
 2539 0026 0B       		.uleb128 0xb
 2540 0027 03       		.uleb128 0x3
 2541 0028 08       		.uleb128 0x8
 2542 0029 00       		.byte	0x0
 2543 002a 00       		.byte	0x0
 2544 002b 04       		.uleb128 0x4
 2545 002c 16       		.uleb128 0x16
 2546 002d 00       		.byte	0x0
 2547 002e 03       		.uleb128 0x3
 2548 002f 0E       		.uleb128 0xe
 2549 0030 3A       		.uleb128 0x3a
 2550 0031 0B       		.uleb128 0xb
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 81


 2551 0032 3B       		.uleb128 0x3b
 2552 0033 0B       		.uleb128 0xb
 2553 0034 49       		.uleb128 0x49
 2554 0035 13       		.uleb128 0x13
 2555 0036 00       		.byte	0x0
 2556 0037 00       		.byte	0x0
 2557 0038 05       		.uleb128 0x5
 2558 0039 35       		.uleb128 0x35
 2559 003a 00       		.byte	0x0
 2560 003b 49       		.uleb128 0x49
 2561 003c 13       		.uleb128 0x13
 2562 003d 00       		.byte	0x0
 2563 003e 00       		.byte	0x0
 2564 003f 06       		.uleb128 0x6
 2565 0040 24       		.uleb128 0x24
 2566 0041 00       		.byte	0x0
 2567 0042 0B       		.uleb128 0xb
 2568 0043 0B       		.uleb128 0xb
 2569 0044 3E       		.uleb128 0x3e
 2570 0045 0B       		.uleb128 0xb
 2571 0046 00       		.byte	0x0
 2572 0047 00       		.byte	0x0
 2573 0048 07       		.uleb128 0x7
 2574 0049 2E       		.uleb128 0x2e
 2575 004a 01       		.byte	0x1
 2576 004b 3F       		.uleb128 0x3f
 2577 004c 0C       		.uleb128 0xc
 2578 004d 03       		.uleb128 0x3
 2579 004e 0E       		.uleb128 0xe
 2580 004f 3A       		.uleb128 0x3a
 2581 0050 0B       		.uleb128 0xb
 2582 0051 3B       		.uleb128 0x3b
 2583 0052 0B       		.uleb128 0xb
 2584 0053 27       		.uleb128 0x27
 2585 0054 0C       		.uleb128 0xc
 2586 0055 11       		.uleb128 0x11
 2587 0056 01       		.uleb128 0x1
 2588 0057 12       		.uleb128 0x12
 2589 0058 01       		.uleb128 0x1
 2590 0059 40       		.uleb128 0x40
 2591 005a 06       		.uleb128 0x6
 2592 005b 01       		.uleb128 0x1
 2593 005c 13       		.uleb128 0x13
 2594 005d 00       		.byte	0x0
 2595 005e 00       		.byte	0x0
 2596 005f 08       		.uleb128 0x8
 2597 0060 34       		.uleb128 0x34
 2598 0061 00       		.byte	0x0
 2599 0062 03       		.uleb128 0x3
 2600 0063 0E       		.uleb128 0xe
 2601 0064 3A       		.uleb128 0x3a
 2602 0065 0B       		.uleb128 0xb
 2603 0066 3B       		.uleb128 0x3b
 2604 0067 0B       		.uleb128 0xb
 2605 0068 49       		.uleb128 0x49
 2606 0069 13       		.uleb128 0x13
 2607 006a 02       		.uleb128 0x2
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 82


 2608 006b 0A       		.uleb128 0xa
 2609 006c 00       		.byte	0x0
 2610 006d 00       		.byte	0x0
 2611 006e 09       		.uleb128 0x9
 2612 006f 2E       		.uleb128 0x2e
 2613 0070 01       		.byte	0x1
 2614 0071 3F       		.uleb128 0x3f
 2615 0072 0C       		.uleb128 0xc
 2616 0073 03       		.uleb128 0x3
 2617 0074 0E       		.uleb128 0xe
 2618 0075 3A       		.uleb128 0x3a
 2619 0076 0B       		.uleb128 0xb
 2620 0077 3B       		.uleb128 0x3b
 2621 0078 05       		.uleb128 0x5
 2622 0079 27       		.uleb128 0x27
 2623 007a 0C       		.uleb128 0xc
 2624 007b 11       		.uleb128 0x11
 2625 007c 01       		.uleb128 0x1
 2626 007d 12       		.uleb128 0x12
 2627 007e 01       		.uleb128 0x1
 2628 007f 40       		.uleb128 0x40
 2629 0080 06       		.uleb128 0x6
 2630 0081 01       		.uleb128 0x1
 2631 0082 13       		.uleb128 0x13
 2632 0083 00       		.byte	0x0
 2633 0084 00       		.byte	0x0
 2634 0085 0A       		.uleb128 0xa
 2635 0086 34       		.uleb128 0x34
 2636 0087 00       		.byte	0x0
 2637 0088 03       		.uleb128 0x3
 2638 0089 0E       		.uleb128 0xe
 2639 008a 3A       		.uleb128 0x3a
 2640 008b 0B       		.uleb128 0xb
 2641 008c 3B       		.uleb128 0x3b
 2642 008d 05       		.uleb128 0x5
 2643 008e 49       		.uleb128 0x49
 2644 008f 13       		.uleb128 0x13
 2645 0090 02       		.uleb128 0x2
 2646 0091 0A       		.uleb128 0xa
 2647 0092 00       		.byte	0x0
 2648 0093 00       		.byte	0x0
 2649 0094 0B       		.uleb128 0xb
 2650 0095 2E       		.uleb128 0x2e
 2651 0096 00       		.byte	0x0
 2652 0097 3F       		.uleb128 0x3f
 2653 0098 0C       		.uleb128 0xc
 2654 0099 03       		.uleb128 0x3
 2655 009a 0E       		.uleb128 0xe
 2656 009b 3A       		.uleb128 0x3a
 2657 009c 0B       		.uleb128 0xb
 2658 009d 3B       		.uleb128 0x3b
 2659 009e 05       		.uleb128 0x5
 2660 009f 27       		.uleb128 0x27
 2661 00a0 0C       		.uleb128 0xc
 2662 00a1 11       		.uleb128 0x11
 2663 00a2 01       		.uleb128 0x1
 2664 00a3 12       		.uleb128 0x12
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 83


 2665 00a4 01       		.uleb128 0x1
 2666 00a5 40       		.uleb128 0x40
 2667 00a6 06       		.uleb128 0x6
 2668 00a7 00       		.byte	0x0
 2669 00a8 00       		.byte	0x0
 2670 00a9 0C       		.uleb128 0xc
 2671 00aa 2E       		.uleb128 0x2e
 2672 00ab 01       		.byte	0x1
 2673 00ac 3F       		.uleb128 0x3f
 2674 00ad 0C       		.uleb128 0xc
 2675 00ae 03       		.uleb128 0x3
 2676 00af 0E       		.uleb128 0xe
 2677 00b0 3A       		.uleb128 0x3a
 2678 00b1 0B       		.uleb128 0xb
 2679 00b2 3B       		.uleb128 0x3b
 2680 00b3 05       		.uleb128 0x5
 2681 00b4 27       		.uleb128 0x27
 2682 00b5 0C       		.uleb128 0xc
 2683 00b6 49       		.uleb128 0x49
 2684 00b7 13       		.uleb128 0x13
 2685 00b8 11       		.uleb128 0x11
 2686 00b9 01       		.uleb128 0x1
 2687 00ba 12       		.uleb128 0x12
 2688 00bb 01       		.uleb128 0x1
 2689 00bc 40       		.uleb128 0x40
 2690 00bd 06       		.uleb128 0x6
 2691 00be 01       		.uleb128 0x1
 2692 00bf 13       		.uleb128 0x13
 2693 00c0 00       		.byte	0x0
 2694 00c1 00       		.byte	0x0
 2695 00c2 0D       		.uleb128 0xd
 2696 00c3 05       		.uleb128 0x5
 2697 00c4 00       		.byte	0x0
 2698 00c5 03       		.uleb128 0x3
 2699 00c6 0E       		.uleb128 0xe
 2700 00c7 3A       		.uleb128 0x3a
 2701 00c8 0B       		.uleb128 0xb
 2702 00c9 3B       		.uleb128 0x3b
 2703 00ca 05       		.uleb128 0x5
 2704 00cb 49       		.uleb128 0x49
 2705 00cc 13       		.uleb128 0x13
 2706 00cd 02       		.uleb128 0x2
 2707 00ce 0A       		.uleb128 0xa
 2708 00cf 00       		.byte	0x0
 2709 00d0 00       		.byte	0x0
 2710 00d1 0E       		.uleb128 0xe
 2711 00d2 34       		.uleb128 0x34
 2712 00d3 00       		.byte	0x0
 2713 00d4 03       		.uleb128 0x3
 2714 00d5 08       		.uleb128 0x8
 2715 00d6 3A       		.uleb128 0x3a
 2716 00d7 0B       		.uleb128 0xb
 2717 00d8 3B       		.uleb128 0x3b
 2718 00d9 05       		.uleb128 0x5
 2719 00da 49       		.uleb128 0x49
 2720 00db 13       		.uleb128 0x13
 2721 00dc 02       		.uleb128 0x2
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 84


 2722 00dd 0A       		.uleb128 0xa
 2723 00de 00       		.byte	0x0
 2724 00df 00       		.byte	0x0
 2725 00e0 0F       		.uleb128 0xf
 2726 00e1 2E       		.uleb128 0x2e
 2727 00e2 00       		.byte	0x0
 2728 00e3 3F       		.uleb128 0x3f
 2729 00e4 0C       		.uleb128 0xc
 2730 00e5 03       		.uleb128 0x3
 2731 00e6 0E       		.uleb128 0xe
 2732 00e7 3A       		.uleb128 0x3a
 2733 00e8 0B       		.uleb128 0xb
 2734 00e9 3B       		.uleb128 0x3b
 2735 00ea 05       		.uleb128 0x5
 2736 00eb 27       		.uleb128 0x27
 2737 00ec 0C       		.uleb128 0xc
 2738 00ed 49       		.uleb128 0x49
 2739 00ee 13       		.uleb128 0x13
 2740 00ef 11       		.uleb128 0x11
 2741 00f0 01       		.uleb128 0x1
 2742 00f1 12       		.uleb128 0x12
 2743 00f2 01       		.uleb128 0x1
 2744 00f3 40       		.uleb128 0x40
 2745 00f4 06       		.uleb128 0x6
 2746 00f5 00       		.byte	0x0
 2747 00f6 00       		.byte	0x0
 2748 00f7 10       		.uleb128 0x10
 2749 00f8 05       		.uleb128 0x5
 2750 00f9 00       		.byte	0x0
 2751 00fa 03       		.uleb128 0x3
 2752 00fb 08       		.uleb128 0x8
 2753 00fc 3A       		.uleb128 0x3a
 2754 00fd 0B       		.uleb128 0xb
 2755 00fe 3B       		.uleb128 0x3b
 2756 00ff 05       		.uleb128 0x5
 2757 0100 49       		.uleb128 0x49
 2758 0101 13       		.uleb128 0x13
 2759 0102 02       		.uleb128 0x2
 2760 0103 0A       		.uleb128 0xa
 2761 0104 00       		.byte	0x0
 2762 0105 00       		.byte	0x0
 2763 0106 11       		.uleb128 0x11
 2764 0107 34       		.uleb128 0x34
 2765 0108 00       		.byte	0x0
 2766 0109 03       		.uleb128 0x3
 2767 010a 0E       		.uleb128 0xe
 2768 010b 3A       		.uleb128 0x3a
 2769 010c 0B       		.uleb128 0xb
 2770 010d 3B       		.uleb128 0x3b
 2771 010e 0B       		.uleb128 0xb
 2772 010f 49       		.uleb128 0x49
 2773 0110 13       		.uleb128 0x13
 2774 0111 3F       		.uleb128 0x3f
 2775 0112 0C       		.uleb128 0xc
 2776 0113 02       		.uleb128 0x2
 2777 0114 0A       		.uleb128 0xa
 2778 0115 00       		.byte	0x0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 85


 2779 0116 00       		.byte	0x0
 2780 0117 12       		.uleb128 0x12
 2781 0118 01       		.uleb128 0x1
 2782 0119 01       		.byte	0x1
 2783 011a 49       		.uleb128 0x49
 2784 011b 13       		.uleb128 0x13
 2785 011c 01       		.uleb128 0x1
 2786 011d 13       		.uleb128 0x13
 2787 011e 00       		.byte	0x0
 2788 011f 00       		.byte	0x0
 2789 0120 13       		.uleb128 0x13
 2790 0121 21       		.uleb128 0x21
 2791 0122 00       		.byte	0x0
 2792 0123 49       		.uleb128 0x49
 2793 0124 13       		.uleb128 0x13
 2794 0125 2F       		.uleb128 0x2f
 2795 0126 0B       		.uleb128 0xb
 2796 0127 00       		.byte	0x0
 2797 0128 00       		.byte	0x0
 2798 0129 14       		.uleb128 0x14
 2799 012a 0F       		.uleb128 0xf
 2800 012b 00       		.byte	0x0
 2801 012c 0B       		.uleb128 0xb
 2802 012d 0B       		.uleb128 0xb
 2803 012e 49       		.uleb128 0x49
 2804 012f 13       		.uleb128 0x13
 2805 0130 00       		.byte	0x0
 2806 0131 00       		.byte	0x0
 2807 0132 15       		.uleb128 0x15
 2808 0133 26       		.uleb128 0x26
 2809 0134 00       		.byte	0x0
 2810 0135 49       		.uleb128 0x49
 2811 0136 13       		.uleb128 0x13
 2812 0137 00       		.byte	0x0
 2813 0138 00       		.byte	0x0
 2814 0139 00       		.byte	0x0
 2815              		.section	.debug_pubnames,"",%progbits
 2816 0000 49030000 		.4byte	0x349
 2817 0004 0200     		.2byte	0x2
 2818 0006 00000000 		.4byte	.Ldebug_info0
 2819 000a 61050000 		.4byte	0x561
 2820 000e A2000000 		.4byte	0xa2
 2821 0012 43617053 		.ascii	"CapSense_Init\000"
 2821      656E7365 
 2821      5F496E69 
 2821      7400
 2822 0020 CA000000 		.4byte	0xca
 2823 0024 43617053 		.ascii	"CapSense_Enable\000"
 2823      656E7365 
 2823      5F456E61 
 2823      626C6500 
 2824 0034 F4000000 		.4byte	0xf4
 2825 0038 43617053 		.ascii	"CapSense_Start\000"
 2825      656E7365 
 2825      5F537461 
 2825      727400
 2826 0047 0A010000 		.4byte	0x10a
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 86


 2827 004b 43617053 		.ascii	"CapSense_Stop\000"
 2827      656E7365 
 2827      5F53746F 
 2827      7000
 2828 0059 20010000 		.4byte	0x120
 2829 005d 43617053 		.ascii	"CapSense_FindNextSensor\000"
 2829      656E7365 
 2829      5F46696E 
 2829      644E6578 
 2829      7453656E 
 2830 0075 6C010000 		.4byte	0x16c
 2831 0079 43617053 		.ascii	"CapSense_SetScanSlotSettings\000"
 2831      656E7365 
 2831      5F536574 
 2831      5363616E 
 2831      536C6F74 
 2832 0096 A5010000 		.4byte	0x1a5
 2833 009a 43617053 		.ascii	"CapSense_ScanSensor\000"
 2833      656E7365 
 2833      5F536361 
 2833      6E53656E 
 2833      736F7200 
 2834 00ae CF010000 		.4byte	0x1cf
 2835 00b2 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 2835      656E7365 
 2835      5F536361 
 2835      6E456E61 
 2835      626C6564 
 2836 00ce E5010000 		.4byte	0x1e5
 2837 00d2 43617053 		.ascii	"CapSense_IsBusy\000"
 2837      656E7365 
 2837      5F497342 
 2837      75737900 
 2838 00e2 FF010000 		.4byte	0x1ff
 2839 00e6 43617053 		.ascii	"CapSense_ReadSensorRaw\000"
 2839      656E7365 
 2839      5F526561 
 2839      6453656E 
 2839      736F7252 
 2840 00fd 2D020000 		.4byte	0x22d
 2841 0101 43617053 		.ascii	"CapSense_ClearSensors\000"
 2841      656E7365 
 2841      5F436C65 
 2841      61725365 
 2841      6E736F72 
 2842 0117 55020000 		.4byte	0x255
 2843 011b 43617053 		.ascii	"CapSense_EnableSensor\000"
 2843      656E7365 
 2843      5F456E61 
 2843      626C6553 
 2843      656E736F 
 2844 0131 9D020000 		.4byte	0x29d
 2845 0135 43617053 		.ascii	"CapSense_DisableSensor\000"
 2845      656E7365 
 2845      5F446973 
 2845      61626C65 
 2845      53656E73 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 87


 2846 014c E5020000 		.4byte	0x2e5
 2847 0150 43617053 		.ascii	"CapSense_PreScan\000"
 2847      656E7365 
 2847      5F507265 
 2847      5363616E 
 2847      00
 2848 0161 0F030000 		.4byte	0x30f
 2849 0165 43617053 		.ascii	"CapSense_PostScan\000"
 2849      656E7365 
 2849      5F506F73 
 2849      74536361 
 2849      6E00
 2850 0177 39030000 		.4byte	0x339
 2851 017b 43617053 		.ascii	"CapSense_SetPrescaler\000"
 2851      656E7365 
 2851      5F536574 
 2851      50726573 
 2851      63616C65 
 2852 0191 63030000 		.4byte	0x363
 2853 0195 43617053 		.ascii	"CapSense_GetPrescaler\000"
 2853      656E7365 
 2853      5F476574 
 2853      50726573 
 2853      63616C65 
 2854 01ab 91030000 		.4byte	0x391
 2855 01af 43617053 		.ascii	"CapSense_SetScanSpeed\000"
 2855      656E7365 
 2855      5F536574 
 2855      5363616E 
 2855      53706565 
 2856 01c5 BB030000 		.4byte	0x3bb
 2857 01c9 43617053 		.ascii	"CapSense_SetAnalogSwitchesSource\000"
 2857      656E7365 
 2857      5F536574 
 2857      416E616C 
 2857      6F675377 
 2858 01ea E5030000 		.4byte	0x3e5
 2859 01ee 43617053 		.ascii	"CapSense_lowLevelTuningDone\000"
 2859      656E7365 
 2859      5F6C6F77 
 2859      4C657665 
 2859      6C54756E 
 2860 020a F7030000 		.4byte	0x3f7
 2861 020e 43617053 		.ascii	"CapSense_initVar\000"
 2861      656E7365 
 2861      5F696E69 
 2861      74566172 
 2861      00
 2862 021f 09040000 		.4byte	0x409
 2863 0223 43617053 		.ascii	"CapSense_csv\000"
 2863      656E7365 
 2863      5F637376 
 2863      00
 2864 0230 1B040000 		.4byte	0x41b
 2865 0234 43617053 		.ascii	"CapSense_sensorIndex\000"
 2865      656E7365 
 2865      5F73656E 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 88


 2865      736F7249 
 2865      6E646578 
 2866 0249 3D040000 		.4byte	0x43d
 2867 024d 43617053 		.ascii	"CapSense_SensorRaw\000"
 2867      656E7365 
 2867      5F53656E 
 2867      736F7252 
 2867      617700
 2868 0260 5F040000 		.4byte	0x45f
 2869 0264 43617053 		.ascii	"CapSense_SensorEnableMask\000"
 2869      656E7365 
 2869      5F53656E 
 2869      736F7245 
 2869      6E61626C 
 2870 027e 87040000 		.4byte	0x487
 2871 0282 43617053 		.ascii	"CapSense_pcTable\000"
 2871      656E7365 
 2871      5F706354 
 2871      61626C65 
 2871      00
 2872 0293 AE040000 		.4byte	0x4ae
 2873 0297 43617053 		.ascii	"CapSense_portTable\000"
 2873      656E7365 
 2873      5F706F72 
 2873      74546162 
 2873      6C6500
 2874 02aa C5040000 		.4byte	0x4c5
 2875 02ae 43617053 		.ascii	"CapSense_maskTable\000"
 2875      656E7365 
 2875      5F6D6173 
 2875      6B546162 
 2875      6C6500
 2876 02c1 EC040000 		.4byte	0x4ec
 2877 02c5 43617053 		.ascii	"CapSense_csTable\000"
 2877      656E7365 
 2877      5F637354 
 2877      61626C65 
 2877      00
 2878 02d6 03050000 		.4byte	0x503
 2879 02da 43617053 		.ascii	"CapSense_idacSettings\000"
 2879      656E7365 
 2879      5F696461 
 2879      63536574 
 2879      74696E67 
 2880 02f0 25050000 		.4byte	0x525
 2881 02f4 43617053 		.ascii	"CapSense_widgetResolution\000"
 2881      656E7365 
 2881      5F776964 
 2881      67657452 
 2881      65736F6C 
 2882 030e 37050000 		.4byte	0x537
 2883 0312 43617053 		.ascii	"CapSense_AnalogSwitchDivider\000"
 2883      656E7365 
 2883      5F416E61 
 2883      6C6F6753 
 2883      77697463 
 2884 032f 49050000 		.4byte	0x549
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 89


 2885 0333 43617053 		.ascii	"CapSense_widgetNumber\000"
 2885      656E7365 
 2885      5F776964 
 2885      6765744E 
 2885      756D6265 
 2886 0349 00000000 		.4byte	0x0
 2887              		.section	.debug_aranges,"",%progbits
 2888 0000 AC000000 		.4byte	0xac
 2889 0004 0200     		.2byte	0x2
 2890 0006 00000000 		.4byte	.Ldebug_info0
 2891 000a 04       		.byte	0x4
 2892 000b 00       		.byte	0x0
 2893 000c 0000     		.2byte	0x0
 2894 000e 0000     		.2byte	0x0
 2895 0010 00000000 		.4byte	.LFB0
 2896 0014 AA010000 		.4byte	.LFE0-.LFB0
 2897 0018 00000000 		.4byte	.LFB1
 2898 001c C4000000 		.4byte	.LFE1-.LFB1
 2899 0020 00000000 		.4byte	.LFB2
 2900 0024 3C000000 		.4byte	.LFE2-.LFB2
 2901 0028 00000000 		.4byte	.LFB3
 2902 002c BC000000 		.4byte	.LFE3-.LFB3
 2903 0030 00000000 		.4byte	.LFB4
 2904 0034 5A000000 		.4byte	.LFE4-.LFB4
 2905 0038 00000000 		.4byte	.LFB5
 2906 003c 5A000000 		.4byte	.LFE5-.LFB5
 2907 0040 00000000 		.4byte	.LFB6
 2908 0044 42000000 		.4byte	.LFE6-.LFB6
 2909 0048 00000000 		.4byte	.LFB7
 2910 004c 80000000 		.4byte	.LFE7-.LFB7
 2911 0050 00000000 		.4byte	.LFB8
 2912 0054 2C000000 		.4byte	.LFE8-.LFB8
 2913 0058 00000000 		.4byte	.LFB9
 2914 005c 24000000 		.4byte	.LFE9-.LFB9
 2915 0060 00000000 		.4byte	.LFB10
 2916 0064 2C000000 		.4byte	.LFE10-.LFB10
 2917 0068 00000000 		.4byte	.LFB11
 2918 006c 7E000000 		.4byte	.LFE11-.LFB11
 2919 0070 00000000 		.4byte	.LFB12
 2920 0074 88000000 		.4byte	.LFE12-.LFB12
 2921 0078 00000000 		.4byte	.LFB13
 2922 007c 74000000 		.4byte	.LFE13-.LFB13
 2923 0080 00000000 		.4byte	.LFB14
 2924 0084 C8000000 		.4byte	.LFE14-.LFB14
 2925 0088 00000000 		.4byte	.LFB15
 2926 008c 32000000 		.4byte	.LFE15-.LFB15
 2927 0090 00000000 		.4byte	.LFB16
 2928 0094 26000000 		.4byte	.LFE16-.LFB16
 2929 0098 00000000 		.4byte	.LFB17
 2930 009c 20000000 		.4byte	.LFE17-.LFB17
 2931 00a0 00000000 		.4byte	.LFB18
 2932 00a4 52000000 		.4byte	.LFE18-.LFB18
 2933 00a8 00000000 		.4byte	0x0
 2934 00ac 00000000 		.4byte	0x0
 2935              		.section	.debug_ranges,"",%progbits
 2936              	.Ldebug_ranges0:
 2937 0000 00000000 		.4byte	.Ltext0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 90


 2938 0004 00000000 		.4byte	.Letext0
 2939 0008 00000000 		.4byte	.LFB0
 2940 000c AA010000 		.4byte	.LFE0
 2941 0010 00000000 		.4byte	.LFB1
 2942 0014 C4000000 		.4byte	.LFE1
 2943 0018 00000000 		.4byte	.LFB2
 2944 001c 3C000000 		.4byte	.LFE2
 2945 0020 00000000 		.4byte	.LFB3
 2946 0024 BC000000 		.4byte	.LFE3
 2947 0028 00000000 		.4byte	.LFB4
 2948 002c 5A000000 		.4byte	.LFE4
 2949 0030 00000000 		.4byte	.LFB5
 2950 0034 5A000000 		.4byte	.LFE5
 2951 0038 00000000 		.4byte	.LFB6
 2952 003c 42000000 		.4byte	.LFE6
 2953 0040 00000000 		.4byte	.LFB7
 2954 0044 80000000 		.4byte	.LFE7
 2955 0048 00000000 		.4byte	.LFB8
 2956 004c 2C000000 		.4byte	.LFE8
 2957 0050 00000000 		.4byte	.LFB9
 2958 0054 24000000 		.4byte	.LFE9
 2959 0058 00000000 		.4byte	.LFB10
 2960 005c 2C000000 		.4byte	.LFE10
 2961 0060 00000000 		.4byte	.LFB11
 2962 0064 7E000000 		.4byte	.LFE11
 2963 0068 00000000 		.4byte	.LFB12
 2964 006c 88000000 		.4byte	.LFE12
 2965 0070 00000000 		.4byte	.LFB13
 2966 0074 74000000 		.4byte	.LFE13
 2967 0078 00000000 		.4byte	.LFB14
 2968 007c C8000000 		.4byte	.LFE14
 2969 0080 00000000 		.4byte	.LFB15
 2970 0084 32000000 		.4byte	.LFE15
 2971 0088 00000000 		.4byte	.LFB16
 2972 008c 26000000 		.4byte	.LFE16
 2973 0090 00000000 		.4byte	.LFB17
 2974 0094 20000000 		.4byte	.LFE17
 2975 0098 00000000 		.4byte	.LFB18
 2976 009c 52000000 		.4byte	.LFE18
 2977 00a0 00000000 		.4byte	0x0
 2978 00a4 00000000 		.4byte	0x0
 2979              		.section	.debug_str,"MS",%progbits,1
 2980              	.LASF58:
 2981 0000 453A5C50 		.ascii	"E:\\PSoC Creator\\connect4\\connect4.cydsn\000"
 2981      536F4320 
 2981      43726561 
 2981      746F725C 
 2981      636F6E6E 
 2982              	.LASF10:
 2983 0028 75696E74 		.ascii	"uint16\000"
 2983      313600
 2984              	.LASF44:
 2985 002f 43617053 		.ascii	"CapSense_csv\000"
 2985      656E7365 
 2985      5F637376 
 2985      00
 2986              	.LASF43:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 91


 2987 003c 43617053 		.ascii	"CapSense_initVar\000"
 2987      656E7365 
 2987      5F696E69 
 2987      74566172 
 2987      00
 2988              	.LASF48:
 2989 004d 43617053 		.ascii	"CapSense_pcTable\000"
 2989      656E7365 
 2989      5F706354 
 2989      61626C65 
 2989      00
 2990              	.LASF42:
 2991 005e 43617053 		.ascii	"CapSense_lowLevelTuningDone\000"
 2991      656E7365 
 2991      5F6C6F77 
 2991      4C657665 
 2991      6C54756E 
 2992              	.LASF21:
 2993 007a 736E7349 		.ascii	"snsIndex\000"
 2993      6E646578 
 2993      00
 2994              	.LASF7:
 2995 0083 6C6F6E67 		.ascii	"long long unsigned int\000"
 2995      206C6F6E 
 2995      6720756E 
 2995      7369676E 
 2995      65642069 
 2996              	.LASF56:
 2997 009a 474E5520 		.ascii	"GNU C 4.4.1\000"
 2997      4320342E 
 2997      342E3100 
 2998              	.LASF15:
 2999 00a6 43617053 		.ascii	"CapSense_Enable\000"
 2999      656E7365 
 2999      5F456E61 
 2999      626C6500 
 3000              	.LASF36:
 3001 00b6 43617053 		.ascii	"CapSense_SetPrescaler\000"
 3001      656E7365 
 3001      5F536574 
 3001      50726573 
 3001      63616C65 
 3002              	.LASF6:
 3003 00cc 6C6F6E67 		.ascii	"long long int\000"
 3003      206C6F6E 
 3003      6720696E 
 3003      7400
 3004              	.LASF0:
 3005 00da 7369676E 		.ascii	"signed char\000"
 3005      65642063 
 3005      68617200 
 3006              	.LASF46:
 3007 00e6 43617053 		.ascii	"CapSense_SensorRaw\000"
 3007      656E7365 
 3007      5F53656E 
 3007      736F7252 
 3007      617700
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 92


 3008              	.LASF41:
 3009 00f9 43617053 		.ascii	"CapSense_SetAnalogSwitchesSource\000"
 3009      656E7365 
 3009      5F536574 
 3009      416E616C 
 3009      6F675377 
 3010              	.LASF4:
 3011 011a 6C6F6E67 		.ascii	"long int\000"
 3011      20696E74 
 3011      00
 3012              	.LASF9:
 3013 0123 75696E74 		.ascii	"uint8\000"
 3013      3800
 3014              	.LASF12:
 3015 0129 646F7562 		.ascii	"double\000"
 3015      6C6500
 3016              	.LASF30:
 3017 0130 43617053 		.ascii	"CapSense_EnableSensor\000"
 3017      656E7365 
 3017      5F456E61 
 3017      626C6553 
 3017      656E736F 
 3018              	.LASF55:
 3019 0146 43617053 		.ascii	"CapSense_widgetNumber\000"
 3019      656E7365 
 3019      5F776964 
 3019      6765744E 
 3019      756D6265 
 3020              	.LASF28:
 3021 015c 43617053 		.ascii	"CapSense_ReadSensorRaw\000"
 3021      656E7365 
 3021      5F526561 
 3021      6453656E 
 3021      736F7252 
 3022              	.LASF32:
 3023 0173 6D61736B 		.ascii	"mask\000"
 3023      00
 3024              	.LASF31:
 3025 0178 706F7274 		.ascii	"port\000"
 3025      00
 3026              	.LASF45:
 3027 017d 43617053 		.ascii	"CapSense_sensorIndex\000"
 3027      656E7365 
 3027      5F73656E 
 3027      736F7249 
 3027      6E646578 
 3028              	.LASF24:
 3029 0192 43617053 		.ascii	"CapSense_ScanSensor\000"
 3029      656E7365 
 3029      5F536361 
 3029      6E53656E 
 3029      736F7200 
 3030              	.LASF8:
 3031 01a6 756E7369 		.ascii	"unsigned int\000"
 3031      676E6564 
 3031      20696E74 
 3031      00
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 93


 3032              	.LASF29:
 3033 01b3 43617053 		.ascii	"CapSense_ClearSensors\000"
 3033      656E7365 
 3033      5F436C65 
 3033      61725365 
 3033      6E736F72 
 3034              	.LASF54:
 3035 01c9 43617053 		.ascii	"CapSense_AnalogSwitchDivider\000"
 3035      656E7365 
 3035      5F416E61 
 3035      6C6F6753 
 3035      77697463 
 3036              	.LASF5:
 3037 01e6 6C6F6E67 		.ascii	"long unsigned int\000"
 3037      20756E73 
 3037      69676E65 
 3037      6420696E 
 3037      7400
 3038              	.LASF50:
 3039 01f8 43617053 		.ascii	"CapSense_maskTable\000"
 3039      656E7365 
 3039      5F6D6173 
 3039      6B546162 
 3039      6C6500
 3040              	.LASF49:
 3041 020b 43617053 		.ascii	"CapSense_portTable\000"
 3041      656E7365 
 3041      5F706F72 
 3041      74546162 
 3041      6C6500
 3042              	.LASF3:
 3043 021e 73686F72 		.ascii	"short unsigned int\000"
 3043      7420756E 
 3043      7369676E 
 3043      65642069 
 3043      6E7400
 3044              	.LASF25:
 3045 0231 73656E73 		.ascii	"sensor\000"
 3045      6F7200
 3046              	.LASF22:
 3047 0238 736C6F74 		.ascii	"slot\000"
 3047      00
 3048              	.LASF59:
 3049 023d 43617053 		.ascii	"CapSense_IsBusy\000"
 3049      656E7365 
 3049      5F497342 
 3049      75737900 
 3050              	.LASF51:
 3051 024d 43617053 		.ascii	"CapSense_csTable\000"
 3051      656E7365 
 3051      5F637354 
 3051      61626C65 
 3051      00
 3052              	.LASF18:
 3053 025e 43617053 		.ascii	"CapSense_Stop\000"
 3053      656E7365 
 3053      5F53746F 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 94


 3053      7000
 3054              	.LASF19:
 3055 026c 656E4D61 		.ascii	"enMask\000"
 3055      736B00
 3056              	.LASF52:
 3057 0273 43617053 		.ascii	"CapSense_idacSettings\000"
 3057      656E7365 
 3057      5F696461 
 3057      63536574 
 3057      74696E67 
 3058              	.LASF11:
 3059 0289 666C6F61 		.ascii	"float\000"
 3059      7400
 3060              	.LASF37:
 3061 028f 70726573 		.ascii	"prescaler\000"
 3061      63616C65 
 3061      7200
 3062              	.LASF27:
 3063 0299 43617053 		.ascii	"CapSense_FindNextSensor\000"
 3063      656E7365 
 3063      5F46696E 
 3063      644E6578 
 3063      7453656E 
 3064              	.LASF33:
 3065 02b1 43617053 		.ascii	"CapSense_DisableSensor\000"
 3065      656E7365 
 3065      5F446973 
 3065      61626C65 
 3065      53656E73 
 3066              	.LASF1:
 3067 02c8 756E7369 		.ascii	"unsigned char\000"
 3067      676E6564 
 3067      20636861 
 3067      7200
 3068              	.LASF40:
 3069 02d6 7363616E 		.ascii	"scanspeed\000"
 3069      73706565 
 3069      6400
 3070              	.LASF53:
 3071 02e0 43617053 		.ascii	"CapSense_widgetResolution\000"
 3071      656E7365 
 3071      5F776964 
 3071      67657452 
 3071      65736F6C 
 3072              	.LASF2:
 3073 02fa 73686F72 		.ascii	"short int\000"
 3073      7420696E 
 3073      7400
 3074              	.LASF23:
 3075 0304 77696467 		.ascii	"widget\000"
 3075      657400
 3076              	.LASF38:
 3077 030b 43617053 		.ascii	"CapSense_GetPrescaler\000"
 3077      656E7365 
 3077      5F476574 
 3077      50726573 
 3077      63616C65 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 95


 3078              	.LASF13:
 3079 0321 63686172 		.ascii	"char\000"
 3079      00
 3080              	.LASF39:
 3081 0326 43617053 		.ascii	"CapSense_SetScanSpeed\000"
 3081      656E7365 
 3081      5F536574 
 3081      5363616E 
 3081      53706565 
 3082              	.LASF47:
 3083 033c 43617053 		.ascii	"CapSense_SensorEnableMask\000"
 3083      656E7365 
 3083      5F53656E 
 3083      736F7245 
 3083      6E61626C 
 3084              	.LASF17:
 3085 0356 43617053 		.ascii	"CapSense_Start\000"
 3085      656E7365 
 3085      5F537461 
 3085      727400
 3086              	.LASF35:
 3087 0365 43617053 		.ascii	"CapSense_PostScan\000"
 3087      656E7365 
 3087      5F506F73 
 3087      74536361 
 3087      6E00
 3088              	.LASF16:
 3089 0377 656E6162 		.ascii	"enableInterrupts\000"
 3089      6C65496E 
 3089      74657272 
 3089      75707473 
 3089      00
 3090              	.LASF20:
 3091 0388 43617053 		.ascii	"CapSense_SetScanSlotSettings\000"
 3091      656E7365 
 3091      5F536574 
 3091      5363616E 
 3091      536C6F74 
 3092              	.LASF34:
 3093 03a5 43617053 		.ascii	"CapSense_PreScan\000"
 3093      656E7365 
 3093      5F507265 
 3093      5363616E 
 3093      00
 3094              	.LASF14:
 3095 03b6 43617053 		.ascii	"CapSense_Init\000"
 3095      656E7365 
 3095      5F496E69 
 3095      7400
 3096              	.LASF26:
 3097 03c4 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 3097      656E7365 
 3097      5F536361 
 3097      6E456E61 
 3097      626C6564 
 3098              	.LASF57:
 3099 03e0 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\CapSense.c\000"
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccPKb5BA.s 			page 96


 3099      6E657261 
 3099      7465645F 
 3099      536F7572 
 3099      63655C50 
 3100              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"

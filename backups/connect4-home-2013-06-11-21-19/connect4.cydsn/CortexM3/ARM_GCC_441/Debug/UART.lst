ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"UART.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 13030000 		.text
  20      02005D00 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.global	UART_initVar
  24              		.bss
  25              		.type	UART_initVar, %object
  26              		.size	UART_initVar, 1
  27              	UART_initVar:
  28 0000 00       		.space	1
  29              		.comm	UART_rxBuffer,64,4
  30              		.global	UART_rxBufferRead
  31              		.type	UART_rxBufferRead, %object
  32              		.size	UART_rxBufferRead, 1
  33              	UART_rxBufferRead:
  34 0001 00       		.space	1
  35              		.global	UART_rxBufferWrite
  36              		.type	UART_rxBufferWrite, %object
  37              		.size	UART_rxBufferWrite, 1
  38              	UART_rxBufferWrite:
  39 0002 00       		.space	1
  40              		.global	UART_rxBufferLoopDetect
  41              		.type	UART_rxBufferLoopDetect, %object
  42              		.size	UART_rxBufferLoopDetect, 1
  43              	UART_rxBufferLoopDetect:
  44 0003 00       		.space	1
  45              		.global	UART_rxBufferOverflow
  46              		.type	UART_rxBufferOverflow, %object
  47              		.size	UART_rxBufferOverflow, 1
  48              	UART_rxBufferOverflow:
  49 0004 00       		.space	1
  50              		.section	.text.UART_Start,"ax",%progbits
  51              		.align	2
  52              		.global	UART_Start
  53              		.thumb
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 2


  54              		.thumb_func
  55              		.type	UART_Start, %function
  56              	UART_Start:
  57              	.LFB0:
  58              		.file 1 ".\\Generated_Source\\PSoC5\\UART.c"
   1:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/UART.c **** * File Name: UART.c
   3:.\Generated_Source\PSoC5/UART.c **** * Version 2.30
   4:.\Generated_Source\PSoC5/UART.c **** *
   5:.\Generated_Source\PSoC5/UART.c **** * Description:
   6:.\Generated_Source\PSoC5/UART.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC5/UART.c **** *
   8:.\Generated_Source\PSoC5/UART.c **** * Note:
   9:.\Generated_Source\PSoC5/UART.c **** *
  10:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/UART.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/UART.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/UART.c **** 
  17:.\Generated_Source\PSoC5/UART.c **** #include "UART.h"
  18:.\Generated_Source\PSoC5/UART.c **** #include "CyLib.h"
  19:.\Generated_Source\PSoC5/UART.c **** #if(UART_INTERNAL_CLOCK_USED)
  20:.\Generated_Source\PSoC5/UART.c ****     #include "UART_IntClock.h"
  21:.\Generated_Source\PSoC5/UART.c **** #endif /* End UART_INTERNAL_CLOCK_USED */
  22:.\Generated_Source\PSoC5/UART.c **** 
  23:.\Generated_Source\PSoC5/UART.c **** 
  24:.\Generated_Source\PSoC5/UART.c **** /***************************************
  25:.\Generated_Source\PSoC5/UART.c **** * Global data allocation
  26:.\Generated_Source\PSoC5/UART.c **** ***************************************/
  27:.\Generated_Source\PSoC5/UART.c **** 
  28:.\Generated_Source\PSoC5/UART.c **** uint8 UART_initVar = 0u;
  29:.\Generated_Source\PSoC5/UART.c **** #if( UART_TX_ENABLED && (UART_TXBUFFERSIZE > UART_FIFO_LENGTH))
  30:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBuffer[UART_TXBUFFERSIZE];
  31:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBufferRead = 0u;
  32:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC5/UART.c **** #endif /* End UART_TX_ENABLED */
  34:.\Generated_Source\PSoC5/UART.c **** #if( ( UART_RX_ENABLED || UART_HD_ENABLED ) && \
  35:.\Generated_Source\PSoC5/UART.c ****      (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
  36:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBuffer[UART_RXBUFFERSIZE];
  37:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferRead = 0u;
  38:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferWrite = 0u;
  39:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferLoopDetect = 0u;
  40:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferOverflow = 0u;
  41:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RXHW_ADDRESS_ENABLED)
  42:.\Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressMode = UART_RXADDRESSMODE;
  43:.\Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressDetected = 0u;
  44:.\Generated_Source\PSoC5/UART.c ****     #endif /* End EnableHWAddress */
  45:.\Generated_Source\PSoC5/UART.c **** #endif /* End UART_RX_ENABLED */
  46:.\Generated_Source\PSoC5/UART.c **** 
  47:.\Generated_Source\PSoC5/UART.c **** 
  48:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  49:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Start
  50:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
  51:.\Generated_Source\PSoC5/UART.c **** *
  52:.\Generated_Source\PSoC5/UART.c **** * Summary:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 3


  53:.\Generated_Source\PSoC5/UART.c **** *  Initialize and Enable the UART component.
  54:.\Generated_Source\PSoC5/UART.c **** *  Enable the clock input to enable operation.
  55:.\Generated_Source\PSoC5/UART.c **** *
  56:.\Generated_Source\PSoC5/UART.c **** * Parameters:
  57:.\Generated_Source\PSoC5/UART.c **** *  None.
  58:.\Generated_Source\PSoC5/UART.c **** *
  59:.\Generated_Source\PSoC5/UART.c **** * Return:
  60:.\Generated_Source\PSoC5/UART.c **** *  None.
  61:.\Generated_Source\PSoC5/UART.c **** *
  62:.\Generated_Source\PSoC5/UART.c **** * Global variables:
  63:.\Generated_Source\PSoC5/UART.c **** *  The UART_intiVar variable is used to indicate initial
  64:.\Generated_Source\PSoC5/UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  65:.\Generated_Source\PSoC5/UART.c **** *  and set to one (1u) the first time UART_Start() is called. This allows for
  66:.\Generated_Source\PSoC5/UART.c **** *  component initialization without re-initialization in all subsequent calls
  67:.\Generated_Source\PSoC5/UART.c **** *  to the UART_Start() routine.
  68:.\Generated_Source\PSoC5/UART.c **** *
  69:.\Generated_Source\PSoC5/UART.c **** * Reentrant:
  70:.\Generated_Source\PSoC5/UART.c **** *  No.
  71:.\Generated_Source\PSoC5/UART.c **** *
  72:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  73:.\Generated_Source\PSoC5/UART.c **** void UART_Start(void) 
  74:.\Generated_Source\PSoC5/UART.c **** {
  59              		.loc 1 74 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 1, uses_anonymous_args = 0
  63 0000 80B5     		push	{r7, lr}
  64              	.LCFI0:
  65              		.cfi_def_cfa_offset 8
  66 0002 00AF     		add	r7, sp, #0
  67              		.cfi_offset 14, -4
  68              		.cfi_offset 7, -8
  69              	.LCFI1:
  70              		.cfi_def_cfa_register 7
  75:.\Generated_Source\PSoC5/UART.c ****     /* If not Initialized then initialize all required hardware and software */
  76:.\Generated_Source\PSoC5/UART.c ****     if(UART_initVar == 0u)
  71              		.loc 1 76 0
  72 0004 40F20003 		movw	r3, #:lower16:UART_initVar
  73 0008 C0F20003 		movt	r3, #:upper16:UART_initVar
  74 000c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  75 000e 002B     		cmp	r3, #0
  76 0010 08D1     		bne	.L2
  77:.\Generated_Source\PSoC5/UART.c ****     {
  78:.\Generated_Source\PSoC5/UART.c ****         UART_Init();
  77              		.loc 1 78 0
  78 0012 FFF7FEFF 		bl	UART_Init
  79:.\Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
  79              		.loc 1 79 0
  80 0016 40F20003 		movw	r3, #:lower16:UART_initVar
  81 001a C0F20003 		movt	r3, #:upper16:UART_initVar
  82 001e 4FF00102 		mov	r2, #1
  83 0022 1A70     		strb	r2, [r3, #0]
  84              	.L2:
  80:.\Generated_Source\PSoC5/UART.c ****     }
  81:.\Generated_Source\PSoC5/UART.c ****     UART_Enable();
  85              		.loc 1 81 0
  86 0024 FFF7FEFF 		bl	UART_Enable
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 4


  82:.\Generated_Source\PSoC5/UART.c **** }
  87              		.loc 1 82 0
  88 0028 80BD     		pop	{r7, pc}
  89              		.cfi_endproc
  90              	.LFE0:
  91              		.size	UART_Start, .-UART_Start
  92 002a 00BF     		.section	.text.UART_Init,"ax",%progbits
  93              		.align	2
  94              		.global	UART_Init
  95              		.thumb
  96              		.thumb_func
  97              		.type	UART_Init, %function
  98              	UART_Init:
  99              	.LFB1:
  83:.\Generated_Source\PSoC5/UART.c **** 
  84:.\Generated_Source\PSoC5/UART.c **** 
  85:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  86:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Init
  87:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
  88:.\Generated_Source\PSoC5/UART.c **** *
  89:.\Generated_Source\PSoC5/UART.c **** * Summary:
  90:.\Generated_Source\PSoC5/UART.c **** *  Initialize component's parameters to the parameters set by user in the
  91:.\Generated_Source\PSoC5/UART.c **** *  customizer of the component placed onto schematic. Usually called in
  92:.\Generated_Source\PSoC5/UART.c **** *  UART_Start().
  93:.\Generated_Source\PSoC5/UART.c **** *
  94:.\Generated_Source\PSoC5/UART.c **** * Parameters:
  95:.\Generated_Source\PSoC5/UART.c **** *  None.
  96:.\Generated_Source\PSoC5/UART.c **** *
  97:.\Generated_Source\PSoC5/UART.c **** * Return:
  98:.\Generated_Source\PSoC5/UART.c **** *  None.
  99:.\Generated_Source\PSoC5/UART.c **** *
 100:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 101:.\Generated_Source\PSoC5/UART.c **** void UART_Init(void) 
 102:.\Generated_Source\PSoC5/UART.c **** {
 100              		.loc 1 102 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104 0000 80B5     		push	{r7, lr}
 105              	.LCFI2:
 106              		.cfi_def_cfa_offset 8
 107 0002 00AF     		add	r7, sp, #0
 108              		.cfi_offset 14, -4
 109              		.cfi_offset 7, -8
 110              	.LCFI3:
 111              		.cfi_def_cfa_register 7
 103:.\Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 104:.\Generated_Source\PSoC5/UART.c **** 
 105:.\Generated_Source\PSoC5/UART.c ****         #if(UART_RX_INTERRUPT_ENABLED && (UART_RXBUFFERSIZE > UART_FIFO_LENGTH))
 106:.\Generated_Source\PSoC5/UART.c ****             /* Set the RX Interrupt. */
 107:.\Generated_Source\PSoC5/UART.c ****             (void)CyIntSetVector(UART_RX_VECT_NUM, &UART_RXISR);
 112              		.loc 1 107 0
 113 0004 4FF00300 		mov	r0, #3
 114 0008 40F20001 		movw	r1, #:lower16:UART_RXISR
 115 000c C0F20001 		movt	r1, #:upper16:UART_RXISR
 116 0010 FFF7FEFF 		bl	CyIntSetVector
 108:.\Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_RX_VECT_NUM, UART_RX_PRIOR_NUM);
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 5


 117              		.loc 1 108 0
 118 0014 4FF00300 		mov	r0, #3
 119 0018 4FF00701 		mov	r1, #7
 120 001c FFF7FEFF 		bl	CyIntSetPriority
 109:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RX_INTERRUPT_ENABLED */
 110:.\Generated_Source\PSoC5/UART.c **** 
 111:.\Generated_Source\PSoC5/UART.c ****         #if (UART_RXHW_ADDRESS_ENABLED)
 112:.\Generated_Source\PSoC5/UART.c ****             UART_SetRxAddressMode(UART_RXAddressMode);
 113:.\Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress1(UART_RXHWADDRESS1);
 114:.\Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress2(UART_RXHWADDRESS2);
 115:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 116:.\Generated_Source\PSoC5/UART.c **** 
 117:.\Generated_Source\PSoC5/UART.c ****         /* Init Count7 period */
 118:.\Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_RXBITCTR_INIT;
 121              		.loc 1 118 0
 122 0020 46F28843 		movw	r3, #:lower16:1073767560
 123 0024 C4F20003 		movt	r3, #:upper16:1073767560
 124 0028 4FF07602 		mov	r2, #118
 125 002c 1A70     		strb	r2, [r3, #0]
 119:.\Generated_Source\PSoC5/UART.c ****         /* Configure the Initial RX interrupt mask */
 120:.\Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = UART_INIT_RX_INTERRUPTS_MASK;
 126              		.loc 1 120 0
 127 002e 46F28D43 		movw	r3, #:lower16:1073767565
 128 0032 C4F20003 		movt	r3, #:upper16:1073767565
 129 0036 4FF02002 		mov	r2, #32
 130 003a 1A70     		strb	r2, [r3, #0]
 121:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 122:.\Generated_Source\PSoC5/UART.c **** 
 123:.\Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 124:.\Generated_Source\PSoC5/UART.c ****         #if(UART_TX_INTERRUPT_ENABLED && (UART_TXBUFFERSIZE > UART_FIFO_LENGTH))
 125:.\Generated_Source\PSoC5/UART.c ****             /* Set the TX Interrupt. */
 126:.\Generated_Source\PSoC5/UART.c ****             (void)CyIntSetVector(UART_TX_VECT_NUM, &UART_TXISR);
 127:.\Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
 128:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TX_INTERRUPT_ENABLED */
 129:.\Generated_Source\PSoC5/UART.c **** 
 130:.\Generated_Source\PSoC5/UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 131:.\Generated_Source\PSoC5/UART.c ****         #if(UART_TXCLKGEN_DP)
 132:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKGEN_CTR_REG = UART_BIT_CENTER;
 131              		.loc 1 132 0
 132 003c 46F22943 		movw	r3, #:lower16:1073767465
 133 0040 C4F20003 		movt	r3, #:upper16:1073767465
 134 0044 4FF00F02 		mov	r2, #15
 135 0048 1A70     		strb	r2, [r3, #0]
 133:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = (UART_NUMBER_OF_DATA_BITS +
 136              		.loc 1 133 0
 137 004a 46F23943 		movw	r3, #:lower16:1073767481
 138 004e C4F20003 		movt	r3, #:upper16:1073767481
 139 0052 6FF06F02 		mvn	r2, #111
 140 0056 1A70     		strb	r2, [r3, #0]
 134:.\Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT;
 135:.\Generated_Source\PSoC5/UART.c ****         #else
 136:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_PERIOD_REG = ((UART_NUMBER_OF_DATA_BITS +
 137:.\Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_8) - 1u;
 138:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 139:.\Generated_Source\PSoC5/UART.c **** 
 140:.\Generated_Source\PSoC5/UART.c ****         /* Configure the Initial TX interrupt mask */
 141:.\Generated_Source\PSoC5/UART.c ****         #if(UART_TX_INTERRUPT_ENABLED && (UART_TXBUFFERSIZE > UART_FIFO_LENGTH))
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 6


 142:.\Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_TX_STS_FIFO_EMPTY;
 143:.\Generated_Source\PSoC5/UART.c ****         #else
 144:.\Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_INIT_TX_INTERRUPTS_MASK;
 141              		.loc 1 144 0
 142 0058 46F28953 		movw	r3, #:lower16:1073767817
 143 005c C4F20003 		movt	r3, #:upper16:1073767817
 144 0060 4FF00002 		mov	r2, #0
 145 0064 1A70     		strb	r2, [r3, #0]
 145:.\Generated_Source\PSoC5/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 146:.\Generated_Source\PSoC5/UART.c **** 
 147:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_TX_ENABLED */
 148:.\Generated_Source\PSoC5/UART.c **** 
 149:.\Generated_Source\PSoC5/UART.c ****     #if(UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 150:.\Generated_Source\PSoC5/UART.c ****         UART_WriteControlRegister( \
 151:.\Generated_Source\PSoC5/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
 152:.\Generated_Source\PSoC5/UART.c ****             (uint8)(UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 153:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_PARITY_TYPE_SW */
 154:.\Generated_Source\PSoC5/UART.c **** }
 146              		.loc 1 154 0
 147 0066 80BD     		pop	{r7, pc}
 148              		.cfi_endproc
 149              	.LFE1:
 150              		.size	UART_Init, .-UART_Init
 151              		.section	.text.UART_Enable,"ax",%progbits
 152              		.align	2
 153              		.global	UART_Enable
 154              		.thumb
 155              		.thumb_func
 156              		.type	UART_Enable, %function
 157              	UART_Enable:
 158              	.LFB2:
 155:.\Generated_Source\PSoC5/UART.c **** 
 156:.\Generated_Source\PSoC5/UART.c **** 
 157:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 158:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Enable
 159:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 160:.\Generated_Source\PSoC5/UART.c **** *
 161:.\Generated_Source\PSoC5/UART.c **** * Summary:
 162:.\Generated_Source\PSoC5/UART.c **** *  Enables the UART block operation
 163:.\Generated_Source\PSoC5/UART.c **** *
 164:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 165:.\Generated_Source\PSoC5/UART.c **** *  None.
 166:.\Generated_Source\PSoC5/UART.c **** *
 167:.\Generated_Source\PSoC5/UART.c **** * Return:
 168:.\Generated_Source\PSoC5/UART.c **** *  None.
 169:.\Generated_Source\PSoC5/UART.c **** *
 170:.\Generated_Source\PSoC5/UART.c **** * Global Variables:
 171:.\Generated_Source\PSoC5/UART.c **** *  UART_rxAddressDetected - set to initial state (0).
 172:.\Generated_Source\PSoC5/UART.c **** *
 173:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 174:.\Generated_Source\PSoC5/UART.c **** void UART_Enable(void) 
 175:.\Generated_Source\PSoC5/UART.c **** {
 159              		.loc 1 175 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 8
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163 0000 80B5     		push	{r7, lr}
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 7


 164              	.LCFI4:
 165              		.cfi_def_cfa_offset 8
 166 0002 82B0     		sub	sp, sp, #8
 167              	.LCFI5:
 168              		.cfi_def_cfa_offset 16
 169 0004 00AF     		add	r7, sp, #0
 170              		.cfi_offset 14, -4
 171              		.cfi_offset 7, -8
 172              	.LCFI6:
 173              		.cfi_def_cfa_register 7
 176:.\Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 177:.\Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 174              		.loc 1 177 0
 175 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 176 000a 0346     		mov	r3, r0
 177 000c FB71     		strb	r3, [r7, #7]
 178:.\Generated_Source\PSoC5/UART.c **** 
 179:.\Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 180:.\Generated_Source\PSoC5/UART.c ****         /*RX Counter (Count7) Enable */
 181:.\Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 178              		.loc 1 181 0
 179 000e 46F29843 		movw	r3, #:lower16:1073767576
 180 0012 C4F20003 		movt	r3, #:upper16:1073767576
 181 0016 46F29842 		movw	r2, #:lower16:1073767576
 182 001a C4F20002 		movt	r2, #:upper16:1073767576
 183 001e 1278     		ldrb	r2, [r2, #0]
 184 0020 D2B2     		uxtb	r2, r2
 185 0022 42F02002 		orr	r2, r2, #32
 186 0026 D2B2     		uxtb	r2, r2
 187 0028 1A70     		strb	r2, [r3, #0]
 182:.\Generated_Source\PSoC5/UART.c ****         /* Enable the RX Interrupt. */
 183:.\Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  |= UART_INT_ENABLE;
 188              		.loc 1 183 0
 189 002a 46F29D43 		movw	r3, #:lower16:1073767581
 190 002e C4F20003 		movt	r3, #:upper16:1073767581
 191 0032 46F29D42 		movw	r2, #:lower16:1073767581
 192 0036 C4F20002 		movt	r2, #:upper16:1073767581
 193 003a 1278     		ldrb	r2, [r2, #0]
 194 003c D2B2     		uxtb	r2, r2
 195 003e 42F01002 		orr	r2, r2, #16
 196 0042 D2B2     		uxtb	r2, r2
 197 0044 1A70     		strb	r2, [r3, #0]
 184:.\Generated_Source\PSoC5/UART.c ****         #if(UART_RX_INTERRUPT_ENABLED && (UART_RXBUFFERSIZE > UART_FIFO_LENGTH))
 185:.\Generated_Source\PSoC5/UART.c ****             CyIntEnable(UART_RX_VECT_NUM);
 198              		.loc 1 185 0
 199 0046 4EF20013 		movw	r3, #:lower16:-536813312
 200 004a CEF20003 		movt	r3, #:upper16:-536813312
 201 004e 4FF00802 		mov	r2, #8
 202 0052 1A60     		str	r2, [r3, #0]
 186:.\Generated_Source\PSoC5/UART.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 187:.\Generated_Source\PSoC5/UART.c ****                 UART_rxAddressDetected = 0u;
 188:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_RXHW_ADDRESS_ENABLED */
 189:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RX_INTERRUPT_ENABLED */
 190:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 191:.\Generated_Source\PSoC5/UART.c **** 
 192:.\Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 193:.\Generated_Source\PSoC5/UART.c ****         /*TX Counter (DP/Count7) Enable */
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 8


 194:.\Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 195:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 196:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 197:.\Generated_Source\PSoC5/UART.c ****         /* Enable the TX Interrupt. */
 198:.\Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG |= UART_INT_ENABLE;
 203              		.loc 1 198 0
 204 0054 46F29953 		movw	r3, #:lower16:1073767833
 205 0058 C4F20003 		movt	r3, #:upper16:1073767833
 206 005c 46F29952 		movw	r2, #:lower16:1073767833
 207 0060 C4F20002 		movt	r2, #:upper16:1073767833
 208 0064 1278     		ldrb	r2, [r2, #0]
 209 0066 D2B2     		uxtb	r2, r2
 210 0068 42F01002 		orr	r2, r2, #16
 211 006c D2B2     		uxtb	r2, r2
 212 006e 1A70     		strb	r2, [r3, #0]
 199:.\Generated_Source\PSoC5/UART.c ****         #if(UART_TX_INTERRUPT_ENABLED && (UART_TXBUFFERSIZE > UART_FIFO_LENGTH))
 200:.\Generated_Source\PSoC5/UART.c ****             CyIntEnable(UART_TX_VECT_NUM);
 201:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TX_INTERRUPT_ENABLED*/
 202:.\Generated_Source\PSoC5/UART.c ****      #endif /* End UART_TX_ENABLED */
 203:.\Generated_Source\PSoC5/UART.c **** 
 204:.\Generated_Source\PSoC5/UART.c ****     #if(UART_INTERNAL_CLOCK_USED)
 205:.\Generated_Source\PSoC5/UART.c ****         /* Enable the clock. */
 206:.\Generated_Source\PSoC5/UART.c ****         UART_IntClock_Start();
 213              		.loc 1 206 0
 214 0070 FFF7FEFF 		bl	UART_IntClock_Start
 207:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_INTERNAL_CLOCK_USED */
 208:.\Generated_Source\PSoC5/UART.c **** 
 209:.\Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 215              		.loc 1 209 0
 216 0074 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 217 0076 1846     		mov	r0, r3
 218 0078 FFF7FEFF 		bl	CyExitCriticalSection
 210:.\Generated_Source\PSoC5/UART.c **** }
 219              		.loc 1 210 0
 220 007c 07F10807 		add	r7, r7, #8
 221 0080 BD46     		mov	sp, r7
 222 0082 80BD     		pop	{r7, pc}
 223              		.cfi_endproc
 224              	.LFE2:
 225              		.size	UART_Enable, .-UART_Enable
 226              		.section	.text.UART_Stop,"ax",%progbits
 227              		.align	2
 228              		.global	UART_Stop
 229              		.thumb
 230              		.thumb_func
 231              		.type	UART_Stop, %function
 232              	UART_Stop:
 233              	.LFB3:
 211:.\Generated_Source\PSoC5/UART.c **** 
 212:.\Generated_Source\PSoC5/UART.c **** 
 213:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 214:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Stop
 215:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 216:.\Generated_Source\PSoC5/UART.c **** *
 217:.\Generated_Source\PSoC5/UART.c **** * Summary:
 218:.\Generated_Source\PSoC5/UART.c **** *  Disable the UART component
 219:.\Generated_Source\PSoC5/UART.c **** *
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 9


 220:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 221:.\Generated_Source\PSoC5/UART.c **** *  None.
 222:.\Generated_Source\PSoC5/UART.c **** *
 223:.\Generated_Source\PSoC5/UART.c **** * Return:
 224:.\Generated_Source\PSoC5/UART.c **** *  None.
 225:.\Generated_Source\PSoC5/UART.c **** *
 226:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 227:.\Generated_Source\PSoC5/UART.c **** void UART_Stop(void) 
 228:.\Generated_Source\PSoC5/UART.c **** {
 234              		.loc 1 228 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 8
 237              		@ frame_needed = 1, uses_anonymous_args = 0
 238 0000 80B5     		push	{r7, lr}
 239              	.LCFI7:
 240              		.cfi_def_cfa_offset 8
 241 0002 82B0     		sub	sp, sp, #8
 242              	.LCFI8:
 243              		.cfi_def_cfa_offset 16
 244 0004 00AF     		add	r7, sp, #0
 245              		.cfi_offset 14, -4
 246              		.cfi_offset 7, -8
 247              	.LCFI9:
 248              		.cfi_def_cfa_register 7
 229:.\Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 230:.\Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 249              		.loc 1 230 0
 250 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 251 000a 0346     		mov	r3, r0
 252 000c FB71     		strb	r3, [r7, #7]
 231:.\Generated_Source\PSoC5/UART.c **** 
 232:.\Generated_Source\PSoC5/UART.c ****     /* Write Bit Counter Disable */
 233:.\Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 234:.\Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG &= (uint8)~UART_CNTR_ENABLE;
 253              		.loc 1 234 0
 254 000e 46F29843 		movw	r3, #:lower16:1073767576
 255 0012 C4F20003 		movt	r3, #:upper16:1073767576
 256 0016 46F29842 		movw	r2, #:lower16:1073767576
 257 001a C4F20002 		movt	r2, #:upper16:1073767576
 258 001e 1278     		ldrb	r2, [r2, #0]
 259 0020 D2B2     		uxtb	r2, r2
 260 0022 02F0DF02 		and	r2, r2, #223
 261 0026 1A70     		strb	r2, [r3, #0]
 235:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED */
 236:.\Generated_Source\PSoC5/UART.c **** 
 237:.\Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 238:.\Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 239:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG &= (uint8)~UART_CNTR_ENABLE;
 240:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 241:.\Generated_Source\PSoC5/UART.c ****     #endif /* UART_TX_ENABLED */
 242:.\Generated_Source\PSoC5/UART.c **** 
 243:.\Generated_Source\PSoC5/UART.c ****     #if(UART_INTERNAL_CLOCK_USED)
 244:.\Generated_Source\PSoC5/UART.c ****         /* Disable the clock. */
 245:.\Generated_Source\PSoC5/UART.c ****         UART_IntClock_Stop();
 262              		.loc 1 245 0
 263 0028 FFF7FEFF 		bl	UART_IntClock_Stop
 246:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_INTERNAL_CLOCK_USED */
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 10


 247:.\Generated_Source\PSoC5/UART.c **** 
 248:.\Generated_Source\PSoC5/UART.c ****     /* Disable internal interrupt component */
 249:.\Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 250:.\Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  &= (uint8)~UART_INT_ENABLE;
 264              		.loc 1 250 0
 265 002c 46F29D43 		movw	r3, #:lower16:1073767581
 266 0030 C4F20003 		movt	r3, #:upper16:1073767581
 267 0034 46F29D42 		movw	r2, #:lower16:1073767581
 268 0038 C4F20002 		movt	r2, #:upper16:1073767581
 269 003c 1278     		ldrb	r2, [r2, #0]
 270 003e D2B2     		uxtb	r2, r2
 271 0040 02F0EF02 		and	r2, r2, #239
 272 0044 1A70     		strb	r2, [r3, #0]
 251:.\Generated_Source\PSoC5/UART.c ****         #if(UART_RX_INTERRUPT_ENABLED && (UART_RXBUFFERSIZE > UART_FIFO_LENGTH))
 252:.\Generated_Source\PSoC5/UART.c ****             UART_DisableRxInt();
 273              		.loc 1 252 0
 274 0046 FFF7FEFF 		bl	UART_DisableRxInt
 253:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RX_INTERRUPT_ENABLED */
 254:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED */
 255:.\Generated_Source\PSoC5/UART.c **** 
 256:.\Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 257:.\Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG &= (uint8)~UART_INT_ENABLE;
 275              		.loc 1 257 0
 276 004a 46F29953 		movw	r3, #:lower16:1073767833
 277 004e C4F20003 		movt	r3, #:upper16:1073767833
 278 0052 46F29952 		movw	r2, #:lower16:1073767833
 279 0056 C4F20002 		movt	r2, #:upper16:1073767833
 280 005a 1278     		ldrb	r2, [r2, #0]
 281 005c D2B2     		uxtb	r2, r2
 282 005e 02F0EF02 		and	r2, r2, #239
 283 0062 1A70     		strb	r2, [r3, #0]
 258:.\Generated_Source\PSoC5/UART.c ****         #if(UART_TX_INTERRUPT_ENABLED && (UART_TXBUFFERSIZE > UART_FIFO_LENGTH))
 259:.\Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 260:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TX_INTERRUPT_ENABLED */
 261:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_TX_ENABLED */
 262:.\Generated_Source\PSoC5/UART.c **** 
 263:.\Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 284              		.loc 1 263 0
 285 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 286 0066 1846     		mov	r0, r3
 287 0068 FFF7FEFF 		bl	CyExitCriticalSection
 264:.\Generated_Source\PSoC5/UART.c **** }
 288              		.loc 1 264 0
 289 006c 07F10807 		add	r7, r7, #8
 290 0070 BD46     		mov	sp, r7
 291 0072 80BD     		pop	{r7, pc}
 292              		.cfi_endproc
 293              	.LFE3:
 294              		.size	UART_Stop, .-UART_Stop
 295              		.section	.text.UART_ReadControlRegister,"ax",%progbits
 296              		.align	2
 297              		.global	UART_ReadControlRegister
 298              		.thumb
 299              		.thumb_func
 300              		.type	UART_ReadControlRegister, %function
 301              	UART_ReadControlRegister:
 302              	.LFB4:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 11


 265:.\Generated_Source\PSoC5/UART.c **** 
 266:.\Generated_Source\PSoC5/UART.c **** 
 267:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 268:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_ReadControlRegister
 269:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 270:.\Generated_Source\PSoC5/UART.c **** *
 271:.\Generated_Source\PSoC5/UART.c **** * Summary:
 272:.\Generated_Source\PSoC5/UART.c **** *  Read the current state of the control register
 273:.\Generated_Source\PSoC5/UART.c **** *
 274:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 275:.\Generated_Source\PSoC5/UART.c **** *  None.
 276:.\Generated_Source\PSoC5/UART.c **** *
 277:.\Generated_Source\PSoC5/UART.c **** * Return:
 278:.\Generated_Source\PSoC5/UART.c **** *  Current state of the control register.
 279:.\Generated_Source\PSoC5/UART.c **** *
 280:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 281:.\Generated_Source\PSoC5/UART.c **** uint8 UART_ReadControlRegister(void) 
 282:.\Generated_Source\PSoC5/UART.c **** {
 303              		.loc 1 282 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 1, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 308 0000 80B4     		push	{r7}
 309              	.LCFI10:
 310              		.cfi_def_cfa_offset 4
 311 0002 00AF     		add	r7, sp, #0
 312              		.cfi_offset 7, -4
 313              	.LCFI11:
 314              		.cfi_def_cfa_register 7
 283:.\Generated_Source\PSoC5/UART.c ****     #if( UART_CONTROL_REG_REMOVED )
 284:.\Generated_Source\PSoC5/UART.c ****         return(0u);
 315              		.loc 1 284 0
 316 0004 4FF00003 		mov	r3, #0
 285:.\Generated_Source\PSoC5/UART.c ****     #else
 286:.\Generated_Source\PSoC5/UART.c ****         return(UART_CONTROL_REG);
 287:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_CONTROL_REG_REMOVED */
 288:.\Generated_Source\PSoC5/UART.c **** }
 317              		.loc 1 288 0
 318 0008 1846     		mov	r0, r3
 319 000a BD46     		mov	sp, r7
 320 000c 80BC     		pop	{r7}
 321 000e 7047     		bx	lr
 322              		.cfi_endproc
 323              	.LFE4:
 324              		.size	UART_ReadControlRegister, .-UART_ReadControlRegister
 325              		.section	.text.UART_WriteControlRegister,"ax",%progbits
 326              		.align	2
 327              		.global	UART_WriteControlRegister
 328              		.thumb
 329              		.thumb_func
 330              		.type	UART_WriteControlRegister, %function
 331              	UART_WriteControlRegister:
 332              	.LFB5:
 289:.\Generated_Source\PSoC5/UART.c **** 
 290:.\Generated_Source\PSoC5/UART.c **** 
 291:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 12


 292:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_WriteControlRegister
 293:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 294:.\Generated_Source\PSoC5/UART.c **** *
 295:.\Generated_Source\PSoC5/UART.c **** * Summary:
 296:.\Generated_Source\PSoC5/UART.c **** *  Writes an 8-bit value into the control register
 297:.\Generated_Source\PSoC5/UART.c **** *
 298:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 299:.\Generated_Source\PSoC5/UART.c **** *  control:  control register value
 300:.\Generated_Source\PSoC5/UART.c **** *
 301:.\Generated_Source\PSoC5/UART.c **** * Return:
 302:.\Generated_Source\PSoC5/UART.c **** *  None.
 303:.\Generated_Source\PSoC5/UART.c **** *
 304:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 305:.\Generated_Source\PSoC5/UART.c **** void  UART_WriteControlRegister(uint8 control) 
 306:.\Generated_Source\PSoC5/UART.c **** {
 333              		.loc 1 306 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 8
 336              		@ frame_needed = 1, uses_anonymous_args = 0
 337              		@ link register save eliminated.
 338 0000 80B4     		push	{r7}
 339              	.LCFI12:
 340              		.cfi_def_cfa_offset 4
 341 0002 83B0     		sub	sp, sp, #12
 342              	.LCFI13:
 343              		.cfi_def_cfa_offset 16
 344 0004 00AF     		add	r7, sp, #0
 345              		.cfi_offset 7, -4
 346              	.LCFI14:
 347              		.cfi_def_cfa_register 7
 348 0006 0346     		mov	r3, r0
 349 0008 FB71     		strb	r3, [r7, #7]
 307:.\Generated_Source\PSoC5/UART.c ****     #if( UART_CONTROL_REG_REMOVED )
 308:.\Generated_Source\PSoC5/UART.c ****         if(control != 0u) { }      /* release compiler warning */
 309:.\Generated_Source\PSoC5/UART.c ****     #else
 310:.\Generated_Source\PSoC5/UART.c ****        UART_CONTROL_REG = control;
 311:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_CONTROL_REG_REMOVED */
 312:.\Generated_Source\PSoC5/UART.c **** }
 350              		.loc 1 312 0
 351 000a 07F10C07 		add	r7, r7, #12
 352 000e BD46     		mov	sp, r7
 353 0010 80BC     		pop	{r7}
 354 0012 7047     		bx	lr
 355              		.cfi_endproc
 356              	.LFE5:
 357              		.size	UART_WriteControlRegister, .-UART_WriteControlRegister
 358              		.section	.text.UART_EnableRxInt,"ax",%progbits
 359              		.align	2
 360              		.global	UART_EnableRxInt
 361              		.thumb
 362              		.thumb_func
 363              		.type	UART_EnableRxInt, %function
 364              	UART_EnableRxInt:
 365              	.LFB6:
 313:.\Generated_Source\PSoC5/UART.c **** 
 314:.\Generated_Source\PSoC5/UART.c **** 
 315:.\Generated_Source\PSoC5/UART.c **** #if(UART_RX_ENABLED || UART_HD_ENABLED)
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 13


 316:.\Generated_Source\PSoC5/UART.c **** 
 317:.\Generated_Source\PSoC5/UART.c ****     #if(UART_RX_INTERRUPT_ENABLED)
 318:.\Generated_Source\PSoC5/UART.c **** 
 319:.\Generated_Source\PSoC5/UART.c ****         /*******************************************************************************
 320:.\Generated_Source\PSoC5/UART.c ****         * Function Name: UART_EnableRxInt
 321:.\Generated_Source\PSoC5/UART.c ****         ********************************************************************************
 322:.\Generated_Source\PSoC5/UART.c ****         *
 323:.\Generated_Source\PSoC5/UART.c ****         * Summary:
 324:.\Generated_Source\PSoC5/UART.c ****         *  Enable RX interrupt generation
 325:.\Generated_Source\PSoC5/UART.c ****         *
 326:.\Generated_Source\PSoC5/UART.c ****         * Parameters:
 327:.\Generated_Source\PSoC5/UART.c ****         *  None.
 328:.\Generated_Source\PSoC5/UART.c ****         *
 329:.\Generated_Source\PSoC5/UART.c ****         * Return:
 330:.\Generated_Source\PSoC5/UART.c ****         *  None.
 331:.\Generated_Source\PSoC5/UART.c ****         *
 332:.\Generated_Source\PSoC5/UART.c ****         * Theory:
 333:.\Generated_Source\PSoC5/UART.c ****         *  Enable the interrupt output -or- the interrupt component itself
 334:.\Generated_Source\PSoC5/UART.c ****         *
 335:.\Generated_Source\PSoC5/UART.c ****         *******************************************************************************/
 336:.\Generated_Source\PSoC5/UART.c ****         void UART_EnableRxInt(void) 
 337:.\Generated_Source\PSoC5/UART.c ****         {
 366              		.loc 1 337 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 1, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 371 0000 80B4     		push	{r7}
 372              	.LCFI15:
 373              		.cfi_def_cfa_offset 4
 374 0002 00AF     		add	r7, sp, #0
 375              		.cfi_offset 7, -4
 376              	.LCFI16:
 377              		.cfi_def_cfa_register 7
 338:.\Generated_Source\PSoC5/UART.c ****             CyIntEnable(UART_RX_VECT_NUM);
 378              		.loc 1 338 0
 379 0004 4EF20013 		movw	r3, #:lower16:-536813312
 380 0008 CEF20003 		movt	r3, #:upper16:-536813312
 381 000c 4FF00802 		mov	r2, #8
 382 0010 1A60     		str	r2, [r3, #0]
 339:.\Generated_Source\PSoC5/UART.c ****         }
 383              		.loc 1 339 0
 384 0012 BD46     		mov	sp, r7
 385 0014 80BC     		pop	{r7}
 386 0016 7047     		bx	lr
 387              		.cfi_endproc
 388              	.LFE6:
 389              		.size	UART_EnableRxInt, .-UART_EnableRxInt
 390              		.section	.text.UART_DisableRxInt,"ax",%progbits
 391              		.align	2
 392              		.global	UART_DisableRxInt
 393              		.thumb
 394              		.thumb_func
 395              		.type	UART_DisableRxInt, %function
 396              	UART_DisableRxInt:
 397              	.LFB7:
 340:.\Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 14


 341:.\Generated_Source\PSoC5/UART.c **** 
 342:.\Generated_Source\PSoC5/UART.c ****         /*******************************************************************************
 343:.\Generated_Source\PSoC5/UART.c ****         * Function Name: UART_DisableRxInt
 344:.\Generated_Source\PSoC5/UART.c ****         ********************************************************************************
 345:.\Generated_Source\PSoC5/UART.c ****         *
 346:.\Generated_Source\PSoC5/UART.c ****         * Summary:
 347:.\Generated_Source\PSoC5/UART.c ****         *  Disable RX interrupt generation
 348:.\Generated_Source\PSoC5/UART.c ****         *
 349:.\Generated_Source\PSoC5/UART.c ****         * Parameters:
 350:.\Generated_Source\PSoC5/UART.c ****         *  None.
 351:.\Generated_Source\PSoC5/UART.c ****         *
 352:.\Generated_Source\PSoC5/UART.c ****         * Return:
 353:.\Generated_Source\PSoC5/UART.c ****         *  None.
 354:.\Generated_Source\PSoC5/UART.c ****         *
 355:.\Generated_Source\PSoC5/UART.c ****         * Theory:
 356:.\Generated_Source\PSoC5/UART.c ****         *  Disable the interrupt output -or- the interrupt component itself
 357:.\Generated_Source\PSoC5/UART.c ****         *
 358:.\Generated_Source\PSoC5/UART.c ****         *******************************************************************************/
 359:.\Generated_Source\PSoC5/UART.c ****         void UART_DisableRxInt(void) 
 360:.\Generated_Source\PSoC5/UART.c ****         {
 398              		.loc 1 360 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 1, uses_anonymous_args = 0
 402              		@ link register save eliminated.
 403 0000 80B4     		push	{r7}
 404              	.LCFI17:
 405              		.cfi_def_cfa_offset 4
 406 0002 00AF     		add	r7, sp, #0
 407              		.cfi_offset 7, -4
 408              	.LCFI18:
 409              		.cfi_def_cfa_register 7
 361:.\Generated_Source\PSoC5/UART.c ****             CyIntDisable(UART_RX_VECT_NUM);
 410              		.loc 1 361 0
 411 0004 4EF28013 		movw	r3, #:lower16:-536813184
 412 0008 CEF20003 		movt	r3, #:upper16:-536813184
 413 000c 4FF00802 		mov	r2, #8
 414 0010 1A60     		str	r2, [r3, #0]
 362:.\Generated_Source\PSoC5/UART.c ****         }
 415              		.loc 1 362 0
 416 0012 BD46     		mov	sp, r7
 417 0014 80BC     		pop	{r7}
 418 0016 7047     		bx	lr
 419              		.cfi_endproc
 420              	.LFE7:
 421              		.size	UART_DisableRxInt, .-UART_DisableRxInt
 422              		.section	.text.UART_SetRxInterruptMode,"ax",%progbits
 423              		.align	2
 424              		.global	UART_SetRxInterruptMode
 425              		.thumb
 426              		.thumb_func
 427              		.type	UART_SetRxInterruptMode, %function
 428              	UART_SetRxInterruptMode:
 429              	.LFB8:
 363:.\Generated_Source\PSoC5/UART.c **** 
 364:.\Generated_Source\PSoC5/UART.c ****     #endif /* UART_RX_INTERRUPT_ENABLED */
 365:.\Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 15


 366:.\Generated_Source\PSoC5/UART.c **** 
 367:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 368:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxInterruptMode
 369:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 370:.\Generated_Source\PSoC5/UART.c ****     *
 371:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 372:.\Generated_Source\PSoC5/UART.c ****     *  Configure which status bits trigger an interrupt event
 373:.\Generated_Source\PSoC5/UART.c ****     *
 374:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 375:.\Generated_Source\PSoC5/UART.c ****     *  IntSrc:  An or'd combination of the desired status bit masks (defined in
 376:.\Generated_Source\PSoC5/UART.c ****     *           the header file)
 377:.\Generated_Source\PSoC5/UART.c ****     *
 378:.\Generated_Source\PSoC5/UART.c ****     * Return:
 379:.\Generated_Source\PSoC5/UART.c ****     *  None.
 380:.\Generated_Source\PSoC5/UART.c ****     *
 381:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 382:.\Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 383:.\Generated_Source\PSoC5/UART.c ****     *
 384:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 385:.\Generated_Source\PSoC5/UART.c ****     void UART_SetRxInterruptMode(uint8 intSrc) 
 386:.\Generated_Source\PSoC5/UART.c ****     {
 430              		.loc 1 386 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 8
 433              		@ frame_needed = 1, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 435 0000 80B4     		push	{r7}
 436              	.LCFI19:
 437              		.cfi_def_cfa_offset 4
 438 0002 83B0     		sub	sp, sp, #12
 439              	.LCFI20:
 440              		.cfi_def_cfa_offset 16
 441 0004 00AF     		add	r7, sp, #0
 442              		.cfi_offset 7, -4
 443              	.LCFI21:
 444              		.cfi_def_cfa_register 7
 445 0006 0346     		mov	r3, r0
 446 0008 FB71     		strb	r3, [r7, #7]
 387:.\Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 447              		.loc 1 387 0
 448 000a 46F28D43 		movw	r3, #:lower16:1073767565
 449 000e C4F20003 		movt	r3, #:upper16:1073767565
 450 0012 FA79     		ldrb	r2, [r7, #7]
 451 0014 1A70     		strb	r2, [r3, #0]
 388:.\Generated_Source\PSoC5/UART.c ****     }
 452              		.loc 1 388 0
 453 0016 07F10C07 		add	r7, r7, #12
 454 001a BD46     		mov	sp, r7
 455 001c 80BC     		pop	{r7}
 456 001e 7047     		bx	lr
 457              		.cfi_endproc
 458              	.LFE8:
 459              		.size	UART_SetRxInterruptMode, .-UART_SetRxInterruptMode
 460              		.section	.text.UART_ReadRxData,"ax",%progbits
 461              		.align	2
 462              		.global	UART_ReadRxData
 463              		.thumb
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 16


 464              		.thumb_func
 465              		.type	UART_ReadRxData, %function
 466              	UART_ReadRxData:
 467              	.LFB9:
 389:.\Generated_Source\PSoC5/UART.c **** 
 390:.\Generated_Source\PSoC5/UART.c **** 
 391:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 392:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxData
 393:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 394:.\Generated_Source\PSoC5/UART.c ****     *
 395:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 396:.\Generated_Source\PSoC5/UART.c ****     *  Returns data in RX Data register without checking status register to
 397:.\Generated_Source\PSoC5/UART.c ****     *  determine if data is valid
 398:.\Generated_Source\PSoC5/UART.c ****     *
 399:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 400:.\Generated_Source\PSoC5/UART.c ****     *  None.
 401:.\Generated_Source\PSoC5/UART.c ****     *
 402:.\Generated_Source\PSoC5/UART.c ****     * Return:
 403:.\Generated_Source\PSoC5/UART.c ****     *  Received data from RX register
 404:.\Generated_Source\PSoC5/UART.c ****     *
 405:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 406:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 407:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 408:.\Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 409:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 410:.\Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 411:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - creared if loop condition was detected
 412:.\Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 413:.\Generated_Source\PSoC5/UART.c ****     *
 414:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 415:.\Generated_Source\PSoC5/UART.c ****     *  No.
 416:.\Generated_Source\PSoC5/UART.c ****     *
 417:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 418:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxData(void) 
 419:.\Generated_Source\PSoC5/UART.c ****     {
 468              		.loc 1 419 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 8
 471              		@ frame_needed = 1, uses_anonymous_args = 0
 472 0000 80B5     		push	{r7, lr}
 473              	.LCFI22:
 474              		.cfi_def_cfa_offset 8
 475 0002 82B0     		sub	sp, sp, #8
 476              	.LCFI23:
 477              		.cfi_def_cfa_offset 16
 478 0004 00AF     		add	r7, sp, #0
 479              		.cfi_offset 14, -4
 480              		.cfi_offset 7, -8
 481              	.LCFI24:
 482              		.cfi_def_cfa_register 7
 420:.\Generated_Source\PSoC5/UART.c ****         uint8 rxData;
 421:.\Generated_Source\PSoC5/UART.c **** 
 422:.\Generated_Source\PSoC5/UART.c ****         #if(UART_RXBUFFERSIZE > UART_FIFO_LENGTH)
 423:.\Generated_Source\PSoC5/UART.c ****             uint8 loc_rxBufferRead;
 424:.\Generated_Source\PSoC5/UART.c ****             uint8 loc_rxBufferWrite;
 425:.\Generated_Source\PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 426:.\Generated_Source\PSoC5/UART.c ****             /* Disable Rx interrupt. */
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 17


 427:.\Generated_Source\PSoC5/UART.c ****             #if(UART_RX_INTERRUPT_ENABLED)
 428:.\Generated_Source\PSoC5/UART.c ****                 UART_DisableRxInt();
 483              		.loc 1 428 0
 484 0006 FFF7FEFF 		bl	UART_DisableRxInt
 429:.\Generated_Source\PSoC5/UART.c ****             #endif /* UART_RX_INTERRUPT_ENABLED */
 430:.\Generated_Source\PSoC5/UART.c ****             loc_rxBufferRead = UART_rxBufferRead;
 485              		.loc 1 430 0
 486 000a 40F20003 		movw	r3, #:lower16:UART_rxBufferRead
 487 000e C0F20003 		movt	r3, #:upper16:UART_rxBufferRead
 488 0012 1B78     		ldrb	r3, [r3, #0]
 489 0014 BB71     		strb	r3, [r7, #6]
 431:.\Generated_Source\PSoC5/UART.c ****             loc_rxBufferWrite = UART_rxBufferWrite;
 490              		.loc 1 431 0
 491 0016 40F20003 		movw	r3, #:lower16:UART_rxBufferWrite
 492 001a C0F20003 		movt	r3, #:upper16:UART_rxBufferWrite
 493 001e 1B78     		ldrb	r3, [r3, #0]
 494 0020 FB71     		strb	r3, [r7, #7]
 432:.\Generated_Source\PSoC5/UART.c **** 
 433:.\Generated_Source\PSoC5/UART.c ****             if( (UART_rxBufferLoopDetect != 0u) || (loc_rxBufferRead != loc_rxBufferWrite) )
 495              		.loc 1 433 0
 496 0022 40F20003 		movw	r3, #:lower16:UART_rxBufferLoopDetect
 497 0026 C0F20003 		movt	r3, #:upper16:UART_rxBufferLoopDetect
 498 002a 1B78     		ldrb	r3, [r3, #0]
 499 002c DBB2     		uxtb	r3, r3
 500 002e 002B     		cmp	r3, #0
 501 0030 03D1     		bne	.L21
 502 0032 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 503 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 504 0036 9A42     		cmp	r2, r3
 505 0038 26D0     		beq	.L22
 506              	.L21:
 434:.\Generated_Source\PSoC5/UART.c ****             {
 435:.\Generated_Source\PSoC5/UART.c ****                 rxData = UART_rxBuffer[loc_rxBufferRead];
 507              		.loc 1 435 0
 508 003a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 509 003c 40F20003 		movw	r3, #:lower16:UART_rxBuffer
 510 0040 C0F20003 		movt	r3, #:upper16:UART_rxBuffer
 511 0044 9B5C     		ldrb	r3, [r3, r2]
 512 0046 7B71     		strb	r3, [r7, #5]
 436:.\Generated_Source\PSoC5/UART.c ****                 loc_rxBufferRead++;
 513              		.loc 1 436 0
 514 0048 BB79     		ldrb	r3, [r7, #6]
 515 004a 03F10103 		add	r3, r3, #1
 516 004e BB71     		strb	r3, [r7, #6]
 437:.\Generated_Source\PSoC5/UART.c **** 
 438:.\Generated_Source\PSoC5/UART.c ****                 if(loc_rxBufferRead >= UART_RXBUFFERSIZE)
 517              		.loc 1 438 0
 518 0050 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 519 0052 3F2B     		cmp	r3, #63
 520 0054 02D9     		bls	.L23
 439:.\Generated_Source\PSoC5/UART.c ****                 {
 440:.\Generated_Source\PSoC5/UART.c ****                     loc_rxBufferRead = 0u;
 521              		.loc 1 440 0
 522 0056 4FF00003 		mov	r3, #0
 523 005a BB71     		strb	r3, [r7, #6]
 524              	.L23:
 441:.\Generated_Source\PSoC5/UART.c ****                 }
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 18


 442:.\Generated_Source\PSoC5/UART.c ****                 /* Update the real pointer */
 443:.\Generated_Source\PSoC5/UART.c ****                 UART_rxBufferRead = loc_rxBufferRead;
 525              		.loc 1 443 0
 526 005c 40F20003 		movw	r3, #:lower16:UART_rxBufferRead
 527 0060 C0F20003 		movt	r3, #:upper16:UART_rxBufferRead
 528 0064 BA79     		ldrb	r2, [r7, #6]
 529 0066 1A70     		strb	r2, [r3, #0]
 444:.\Generated_Source\PSoC5/UART.c **** 
 445:.\Generated_Source\PSoC5/UART.c ****                 if(UART_rxBufferLoopDetect != 0u )
 530              		.loc 1 445 0
 531 0068 40F20003 		movw	r3, #:lower16:UART_rxBufferLoopDetect
 532 006c C0F20003 		movt	r3, #:upper16:UART_rxBufferLoopDetect
 533 0070 1B78     		ldrb	r3, [r3, #0]
 534 0072 DBB2     		uxtb	r3, r3
 535 0074 002B     		cmp	r3, #0
 536 0076 0ED0     		beq	.L27
 446:.\Generated_Source\PSoC5/UART.c ****                 {
 447:.\Generated_Source\PSoC5/UART.c ****                     UART_rxBufferLoopDetect = 0u;
 537              		.loc 1 447 0
 538 0078 40F20003 		movw	r3, #:lower16:UART_rxBufferLoopDetect
 539 007c C0F20003 		movt	r3, #:upper16:UART_rxBufferLoopDetect
 540 0080 4FF00002 		mov	r2, #0
 541 0084 1A70     		strb	r2, [r3, #0]
 542              		.loc 1 433 0
 543 0086 07E0     		b	.L25
 544              	.L22:
 448:.\Generated_Source\PSoC5/UART.c ****                     #if( (UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u) && \
 449:.\Generated_Source\PSoC5/UART.c ****                          (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
 450:.\Generated_Source\PSoC5/UART.c ****                         /* When Hardware Flow Control selected - return RX mask */
 451:.\Generated_Source\PSoC5/UART.c ****                         #if( UART_HD_ENABLED )
 452:.\Generated_Source\PSoC5/UART.c ****                             if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 453:.\Generated_Source\PSoC5/UART.c ****                             {   /* In Half duplex mode return RX mask only in RX
 454:.\Generated_Source\PSoC5/UART.c ****                                 *  configuration set, otherwise
 455:.\Generated_Source\PSoC5/UART.c ****                                 *  mask will be returned in LoadRxConfig() API.
 456:.\Generated_Source\PSoC5/UART.c ****                                 */
 457:.\Generated_Source\PSoC5/UART.c ****                                 UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 458:.\Generated_Source\PSoC5/UART.c ****                             }
 459:.\Generated_Source\PSoC5/UART.c ****                         #else
 460:.\Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 461:.\Generated_Source\PSoC5/UART.c ****                         #endif /* end UART_HD_ENABLED */
 462:.\Generated_Source\PSoC5/UART.c ****                     #endif /* UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 463:.\Generated_Source\PSoC5/UART.c ****                 }
 464:.\Generated_Source\PSoC5/UART.c ****             }
 465:.\Generated_Source\PSoC5/UART.c ****             else
 466:.\Generated_Source\PSoC5/UART.c ****             {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit*/
 467:.\Generated_Source\PSoC5/UART.c ****                 rxData = UART_RXDATA_REG;
 545              		.loc 1 467 0
 546 0088 46F24843 		movw	r3, #:lower16:1073767496
 547 008c C4F20003 		movt	r3, #:upper16:1073767496
 548 0090 1B78     		ldrb	r3, [r3, #0]
 549 0092 7B71     		strb	r3, [r7, #5]
 550 0094 00E0     		b	.L25
 551              	.L27:
 552              		.loc 1 433 0
 553 0096 00BF     		nop
 554              	.L25:
 468:.\Generated_Source\PSoC5/UART.c ****             }
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 19


 469:.\Generated_Source\PSoC5/UART.c **** 
 470:.\Generated_Source\PSoC5/UART.c ****             /* Enable Rx interrupt. */
 471:.\Generated_Source\PSoC5/UART.c ****             #if(UART_RX_INTERRUPT_ENABLED)
 472:.\Generated_Source\PSoC5/UART.c ****                 UART_EnableRxInt();
 555              		.loc 1 472 0
 556 0098 FFF7FEFF 		bl	UART_EnableRxInt
 473:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_RX_INTERRUPT_ENABLED */
 474:.\Generated_Source\PSoC5/UART.c **** 
 475:.\Generated_Source\PSoC5/UART.c ****         #else /* UART_RXBUFFERSIZE > UART_FIFO_LENGTH */
 476:.\Generated_Source\PSoC5/UART.c **** 
 477:.\Generated_Source\PSoC5/UART.c ****             /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit*/
 478:.\Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 479:.\Generated_Source\PSoC5/UART.c **** 
 480:.\Generated_Source\PSoC5/UART.c ****         #endif /* UART_RXBUFFERSIZE > UART_FIFO_LENGTH */
 481:.\Generated_Source\PSoC5/UART.c **** 
 482:.\Generated_Source\PSoC5/UART.c ****         return(rxData);
 557              		.loc 1 482 0
 558 009c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 483:.\Generated_Source\PSoC5/UART.c ****     }
 559              		.loc 1 483 0
 560 009e 1846     		mov	r0, r3
 561 00a0 07F10807 		add	r7, r7, #8
 562 00a4 BD46     		mov	sp, r7
 563 00a6 80BD     		pop	{r7, pc}
 564              		.cfi_endproc
 565              	.LFE9:
 566              		.size	UART_ReadRxData, .-UART_ReadRxData
 567              		.section	.text.UART_ReadRxStatus,"ax",%progbits
 568              		.align	2
 569              		.global	UART_ReadRxStatus
 570              		.thumb
 571              		.thumb_func
 572              		.type	UART_ReadRxStatus, %function
 573              	UART_ReadRxStatus:
 574              	.LFB10:
 484:.\Generated_Source\PSoC5/UART.c **** 
 485:.\Generated_Source\PSoC5/UART.c **** 
 486:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 487:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxStatus
 488:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 489:.\Generated_Source\PSoC5/UART.c ****     *
 490:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 491:.\Generated_Source\PSoC5/UART.c ****     *  Read the current state of the status register
 492:.\Generated_Source\PSoC5/UART.c ****     *  And detect software buffer overflow.
 493:.\Generated_Source\PSoC5/UART.c ****     *
 494:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 495:.\Generated_Source\PSoC5/UART.c ****     *  None.
 496:.\Generated_Source\PSoC5/UART.c ****     *
 497:.\Generated_Source\PSoC5/UART.c ****     * Return:
 498:.\Generated_Source\PSoC5/UART.c ****     *  Current state of the status register.
 499:.\Generated_Source\PSoC5/UART.c ****     *
 500:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 501:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - used to indicate overload condition.
 502:.\Generated_Source\PSoC5/UART.c ****     *   It set to one in RX interrupt when there isn?t free space in
 503:.\Generated_Source\PSoC5/UART.c ****     *   UART_rxBufferRead to write new data. This condition returned
 504:.\Generated_Source\PSoC5/UART.c ****     *   and cleared to zero by this API as an
 505:.\Generated_Source\PSoC5/UART.c ****     *   UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 20


 506:.\Generated_Source\PSoC5/UART.c ****     *   bits.
 507:.\Generated_Source\PSoC5/UART.c ****     *
 508:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 509:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxStatus(void) 
 510:.\Generated_Source\PSoC5/UART.c ****     {
 575              		.loc 1 510 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 8
 578              		@ frame_needed = 1, uses_anonymous_args = 0
 579              		@ link register save eliminated.
 580 0000 80B4     		push	{r7}
 581              	.LCFI25:
 582              		.cfi_def_cfa_offset 4
 583 0002 83B0     		sub	sp, sp, #12
 584              	.LCFI26:
 585              		.cfi_def_cfa_offset 16
 586 0004 00AF     		add	r7, sp, #0
 587              		.cfi_offset 7, -4
 588              	.LCFI27:
 589              		.cfi_def_cfa_register 7
 511:.\Generated_Source\PSoC5/UART.c ****         uint8 status;
 512:.\Generated_Source\PSoC5/UART.c **** 
 513:.\Generated_Source\PSoC5/UART.c ****         status = UART_RXSTATUS_REG & UART_RX_HW_MASK;
 590              		.loc 1 513 0
 591 0006 46F26D43 		movw	r3, #:lower16:1073767533
 592 000a C4F20003 		movt	r3, #:upper16:1073767533
 593 000e 1B78     		ldrb	r3, [r3, #0]
 594 0010 DBB2     		uxtb	r3, r3
 595 0012 03F07F03 		and	r3, r3, #127
 596 0016 FB71     		strb	r3, [r7, #7]
 514:.\Generated_Source\PSoC5/UART.c **** 
 515:.\Generated_Source\PSoC5/UART.c ****         #if(UART_RXBUFFERSIZE > UART_FIFO_LENGTH)
 516:.\Generated_Source\PSoC5/UART.c ****             if( UART_rxBufferOverflow != 0u )
 597              		.loc 1 516 0
 598 0018 40F20003 		movw	r3, #:lower16:UART_rxBufferOverflow
 599 001c C0F20003 		movt	r3, #:upper16:UART_rxBufferOverflow
 600 0020 1B78     		ldrb	r3, [r3, #0]
 601 0022 DBB2     		uxtb	r3, r3
 602 0024 002B     		cmp	r3, #0
 603 0026 0CD0     		beq	.L29
 517:.\Generated_Source\PSoC5/UART.c ****             {
 518:.\Generated_Source\PSoC5/UART.c ****                 status |= UART_RX_STS_SOFT_BUFF_OVER;
 604              		.loc 1 518 0
 605 0028 FB79     		ldrb	r3, [r7, #7]
 606 002a 6FEA4363 		mvn	r3, r3, lsl #25
 607 002e 6FEA5363 		mvn	r3, r3, lsr #25
 608 0032 FB71     		strb	r3, [r7, #7]
 519:.\Generated_Source\PSoC5/UART.c ****                 UART_rxBufferOverflow = 0u;
 609              		.loc 1 519 0
 610 0034 40F20003 		movw	r3, #:lower16:UART_rxBufferOverflow
 611 0038 C0F20003 		movt	r3, #:upper16:UART_rxBufferOverflow
 612 003c 4FF00002 		mov	r2, #0
 613 0040 1A70     		strb	r2, [r3, #0]
 614              	.L29:
 520:.\Generated_Source\PSoC5/UART.c ****             }
 521:.\Generated_Source\PSoC5/UART.c ****         #endif /* UART_RXBUFFERSIZE */
 522:.\Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 21


 523:.\Generated_Source\PSoC5/UART.c ****         return(status);
 615              		.loc 1 523 0
 616 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 524:.\Generated_Source\PSoC5/UART.c ****     }
 617              		.loc 1 524 0
 618 0044 1846     		mov	r0, r3
 619 0046 07F10C07 		add	r7, r7, #12
 620 004a BD46     		mov	sp, r7
 621 004c 80BC     		pop	{r7}
 622 004e 7047     		bx	lr
 623              		.cfi_endproc
 624              	.LFE10:
 625              		.size	UART_ReadRxStatus, .-UART_ReadRxStatus
 626              		.section	.text.UART_GetChar,"ax",%progbits
 627              		.align	2
 628              		.global	UART_GetChar
 629              		.thumb
 630              		.thumb_func
 631              		.type	UART_GetChar, %function
 632              	UART_GetChar:
 633              	.LFB11:
 525:.\Generated_Source\PSoC5/UART.c **** 
 526:.\Generated_Source\PSoC5/UART.c **** 
 527:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 528:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetChar
 529:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 530:.\Generated_Source\PSoC5/UART.c ****     *
 531:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 532:.\Generated_Source\PSoC5/UART.c ****     *  Reads UART RX buffer immediately, if data is not available or an error
 533:.\Generated_Source\PSoC5/UART.c ****     *  condition exists, zero is returned; otherwise, character is read and
 534:.\Generated_Source\PSoC5/UART.c ****     *  returned.
 535:.\Generated_Source\PSoC5/UART.c ****     *
 536:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 537:.\Generated_Source\PSoC5/UART.c ****     *  None.
 538:.\Generated_Source\PSoC5/UART.c ****     *
 539:.\Generated_Source\PSoC5/UART.c ****     * Return:
 540:.\Generated_Source\PSoC5/UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 541:.\Generated_Source\PSoC5/UART.c ****     *  A returned zero signifies an error condition or no data available.
 542:.\Generated_Source\PSoC5/UART.c ****     *
 543:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 544:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 545:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 546:.\Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 547:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 548:.\Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 549:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - creared if loop condition was detected
 550:.\Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 551:.\Generated_Source\PSoC5/UART.c ****     *
 552:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 553:.\Generated_Source\PSoC5/UART.c ****     *  No.
 554:.\Generated_Source\PSoC5/UART.c ****     *
 555:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 556:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_GetChar(void) 
 557:.\Generated_Source\PSoC5/UART.c ****     {
 634              		.loc 1 557 0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 22


 637              		@ frame_needed = 1, uses_anonymous_args = 0
 638 0000 80B5     		push	{r7, lr}
 639              	.LCFI28:
 640              		.cfi_def_cfa_offset 8
 641 0002 82B0     		sub	sp, sp, #8
 642              	.LCFI29:
 643              		.cfi_def_cfa_offset 16
 644 0004 00AF     		add	r7, sp, #0
 645              		.cfi_offset 14, -4
 646              		.cfi_offset 7, -8
 647              	.LCFI30:
 648              		.cfi_def_cfa_register 7
 558:.\Generated_Source\PSoC5/UART.c ****         uint8 rxData = 0u;
 649              		.loc 1 558 0
 650 0006 4FF00003 		mov	r3, #0
 651 000a 3B71     		strb	r3, [r7, #4]
 559:.\Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 560:.\Generated_Source\PSoC5/UART.c **** 
 561:.\Generated_Source\PSoC5/UART.c ****         #if(UART_RXBUFFERSIZE > UART_FIFO_LENGTH)
 562:.\Generated_Source\PSoC5/UART.c ****             uint8 loc_rxBufferRead;
 563:.\Generated_Source\PSoC5/UART.c ****             uint8 loc_rxBufferWrite;
 564:.\Generated_Source\PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 565:.\Generated_Source\PSoC5/UART.c ****             /* Disable Rx interrupt. */
 566:.\Generated_Source\PSoC5/UART.c ****             #if(UART_RX_INTERRUPT_ENABLED)
 567:.\Generated_Source\PSoC5/UART.c ****                 UART_DisableRxInt();
 652              		.loc 1 567 0
 653 000c FFF7FEFF 		bl	UART_DisableRxInt
 568:.\Generated_Source\PSoC5/UART.c ****             #endif /* UART_RX_INTERRUPT_ENABLED */
 569:.\Generated_Source\PSoC5/UART.c ****             loc_rxBufferRead = UART_rxBufferRead;
 654              		.loc 1 569 0
 655 0010 40F20003 		movw	r3, #:lower16:UART_rxBufferRead
 656 0014 C0F20003 		movt	r3, #:upper16:UART_rxBufferRead
 657 0018 1B78     		ldrb	r3, [r3, #0]
 658 001a BB71     		strb	r3, [r7, #6]
 570:.\Generated_Source\PSoC5/UART.c ****             loc_rxBufferWrite = UART_rxBufferWrite;
 659              		.loc 1 570 0
 660 001c 40F20003 		movw	r3, #:lower16:UART_rxBufferWrite
 661 0020 C0F20003 		movt	r3, #:upper16:UART_rxBufferWrite
 662 0024 1B78     		ldrb	r3, [r3, #0]
 663 0026 FB71     		strb	r3, [r7, #7]
 571:.\Generated_Source\PSoC5/UART.c **** 
 572:.\Generated_Source\PSoC5/UART.c ****             if( (UART_rxBufferLoopDetect != 0u) || (loc_rxBufferRead != loc_rxBufferWrite) )
 664              		.loc 1 572 0
 665 0028 40F20003 		movw	r3, #:lower16:UART_rxBufferLoopDetect
 666 002c C0F20003 		movt	r3, #:upper16:UART_rxBufferLoopDetect
 667 0030 1B78     		ldrb	r3, [r3, #0]
 668 0032 DBB2     		uxtb	r3, r3
 669 0034 002B     		cmp	r3, #0
 670 0036 03D1     		bne	.L32
 671 0038 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 672 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 673 003c 9A42     		cmp	r2, r3
 674 003e 26D0     		beq	.L33
 675              	.L32:
 573:.\Generated_Source\PSoC5/UART.c ****             {
 574:.\Generated_Source\PSoC5/UART.c ****                 rxData = UART_rxBuffer[loc_rxBufferRead];
 676              		.loc 1 574 0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 23


 677 0040 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 678 0042 40F20003 		movw	r3, #:lower16:UART_rxBuffer
 679 0046 C0F20003 		movt	r3, #:upper16:UART_rxBuffer
 680 004a 9B5C     		ldrb	r3, [r3, r2]
 681 004c 3B71     		strb	r3, [r7, #4]
 575:.\Generated_Source\PSoC5/UART.c ****                 loc_rxBufferRead++;
 682              		.loc 1 575 0
 683 004e BB79     		ldrb	r3, [r7, #6]
 684 0050 03F10103 		add	r3, r3, #1
 685 0054 BB71     		strb	r3, [r7, #6]
 576:.\Generated_Source\PSoC5/UART.c ****                 if(loc_rxBufferRead >= UART_RXBUFFERSIZE)
 686              		.loc 1 576 0
 687 0056 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 688 0058 3F2B     		cmp	r3, #63
 689 005a 02D9     		bls	.L34
 577:.\Generated_Source\PSoC5/UART.c ****                 {
 578:.\Generated_Source\PSoC5/UART.c ****                     loc_rxBufferRead = 0u;
 690              		.loc 1 578 0
 691 005c 4FF00003 		mov	r3, #0
 692 0060 BB71     		strb	r3, [r7, #6]
 693              	.L34:
 579:.\Generated_Source\PSoC5/UART.c ****                 }
 580:.\Generated_Source\PSoC5/UART.c ****                 /* Update the real pointer */
 581:.\Generated_Source\PSoC5/UART.c ****                 UART_rxBufferRead = loc_rxBufferRead;
 694              		.loc 1 581 0
 695 0062 40F20003 		movw	r3, #:lower16:UART_rxBufferRead
 696 0066 C0F20003 		movt	r3, #:upper16:UART_rxBufferRead
 697 006a BA79     		ldrb	r2, [r7, #6]
 698 006c 1A70     		strb	r2, [r3, #0]
 582:.\Generated_Source\PSoC5/UART.c **** 
 583:.\Generated_Source\PSoC5/UART.c ****                 if(UART_rxBufferLoopDetect > 0u )
 699              		.loc 1 583 0
 700 006e 40F20003 		movw	r3, #:lower16:UART_rxBufferLoopDetect
 701 0072 C0F20003 		movt	r3, #:upper16:UART_rxBufferLoopDetect
 702 0076 1B78     		ldrb	r3, [r3, #0]
 703 0078 DBB2     		uxtb	r3, r3
 704 007a 002B     		cmp	r3, #0
 705 007c 21D0     		beq	.L38
 584:.\Generated_Source\PSoC5/UART.c ****                 {
 585:.\Generated_Source\PSoC5/UART.c ****                     UART_rxBufferLoopDetect = 0u;
 706              		.loc 1 585 0
 707 007e 40F20003 		movw	r3, #:lower16:UART_rxBufferLoopDetect
 708 0082 C0F20003 		movt	r3, #:upper16:UART_rxBufferLoopDetect
 709 0086 4FF00002 		mov	r2, #0
 710 008a 1A70     		strb	r2, [r3, #0]
 711              		.loc 1 572 0
 712 008c 1AE0     		b	.L36
 713              	.L33:
 586:.\Generated_Source\PSoC5/UART.c ****                     #if( (UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u) )
 587:.\Generated_Source\PSoC5/UART.c ****                         /* When Hardware Flow Control selected - return RX mask */
 588:.\Generated_Source\PSoC5/UART.c ****                         #if( UART_HD_ENABLED )
 589:.\Generated_Source\PSoC5/UART.c ****                             if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 590:.\Generated_Source\PSoC5/UART.c ****                             {   /* In Half duplex mode return RX mask only if
 591:.\Generated_Source\PSoC5/UART.c ****                                 *  RX configuration set, otherwise
 592:.\Generated_Source\PSoC5/UART.c ****                                 *  mask will be returned in LoadRxConfig() API.
 593:.\Generated_Source\PSoC5/UART.c ****                                 */
 594:.\Generated_Source\PSoC5/UART.c ****                                 UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 24


 595:.\Generated_Source\PSoC5/UART.c ****                             }
 596:.\Generated_Source\PSoC5/UART.c ****                         #else
 597:.\Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 598:.\Generated_Source\PSoC5/UART.c ****                         #endif /* end UART_HD_ENABLED */
 599:.\Generated_Source\PSoC5/UART.c ****                     #endif /* UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 600:.\Generated_Source\PSoC5/UART.c ****                 }
 601:.\Generated_Source\PSoC5/UART.c **** 
 602:.\Generated_Source\PSoC5/UART.c ****             }
 603:.\Generated_Source\PSoC5/UART.c ****             else
 604:.\Generated_Source\PSoC5/UART.c ****             {   rxStatus = UART_RXSTATUS_REG;
 714              		.loc 1 604 0
 715 008e 46F26D43 		movw	r3, #:lower16:1073767533
 716 0092 C4F20003 		movt	r3, #:upper16:1073767533
 717 0096 1B78     		ldrb	r3, [r3, #0]
 718 0098 7B71     		strb	r3, [r7, #5]
 605:.\Generated_Source\PSoC5/UART.c ****                 if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 719              		.loc 1 605 0
 720 009a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 721 009c 03F02003 		and	r3, r3, #32
 722 00a0 002B     		cmp	r3, #0
 723 00a2 0FD0     		beq	.L36
 606:.\Generated_Source\PSoC5/UART.c ****                 {   /* Read received data from FIFO*/
 607:.\Generated_Source\PSoC5/UART.c ****                     rxData = UART_RXDATA_REG;
 724              		.loc 1 607 0
 725 00a4 46F24843 		movw	r3, #:lower16:1073767496
 726 00a8 C4F20003 		movt	r3, #:upper16:1073767496
 727 00ac 1B78     		ldrb	r3, [r3, #0]
 728 00ae 3B71     		strb	r3, [r7, #4]
 608:.\Generated_Source\PSoC5/UART.c ****                     /*Check status on error*/
 609:.\Generated_Source\PSoC5/UART.c ****                     if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 729              		.loc 1 609 0
 730 00b0 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 731 00b2 03F01E03 		and	r3, r3, #30
 732 00b6 002B     		cmp	r3, #0
 733 00b8 04D0     		beq	.L36
 610:.\Generated_Source\PSoC5/UART.c ****                                    UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 611:.\Generated_Source\PSoC5/UART.c ****                     {
 612:.\Generated_Source\PSoC5/UART.c ****                         rxData = 0u;
 734              		.loc 1 612 0
 735 00ba 4FF00003 		mov	r3, #0
 736 00be 3B71     		strb	r3, [r7, #4]
 737 00c0 00E0     		b	.L36
 738              	.L38:
 739              		.loc 1 572 0
 740 00c2 00BF     		nop
 741              	.L36:
 613:.\Generated_Source\PSoC5/UART.c ****                     }
 614:.\Generated_Source\PSoC5/UART.c ****                 }
 615:.\Generated_Source\PSoC5/UART.c ****             }
 616:.\Generated_Source\PSoC5/UART.c **** 
 617:.\Generated_Source\PSoC5/UART.c ****             /* Enable Rx interrupt. */
 618:.\Generated_Source\PSoC5/UART.c ****             #if(UART_RX_INTERRUPT_ENABLED)
 619:.\Generated_Source\PSoC5/UART.c ****                 UART_EnableRxInt();
 742              		.loc 1 619 0
 743 00c4 FFF7FEFF 		bl	UART_EnableRxInt
 620:.\Generated_Source\PSoC5/UART.c ****             #endif /* UART_RX_INTERRUPT_ENABLED */
 621:.\Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 25


 622:.\Generated_Source\PSoC5/UART.c ****         #else /* UART_RXBUFFERSIZE > UART_FIFO_LENGTH */
 623:.\Generated_Source\PSoC5/UART.c **** 
 624:.\Generated_Source\PSoC5/UART.c ****             rxStatus =UART_RXSTATUS_REG;
 625:.\Generated_Source\PSoC5/UART.c ****             if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 626:.\Generated_Source\PSoC5/UART.c ****             {   /* Read received data from FIFO*/
 627:.\Generated_Source\PSoC5/UART.c ****                 rxData = UART_RXDATA_REG;
 628:.\Generated_Source\PSoC5/UART.c ****                 /*Check status on error*/
 629:.\Generated_Source\PSoC5/UART.c ****                 if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 630:.\Generated_Source\PSoC5/UART.c ****                                UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 631:.\Generated_Source\PSoC5/UART.c ****                 {
 632:.\Generated_Source\PSoC5/UART.c ****                     rxData = 0u;
 633:.\Generated_Source\PSoC5/UART.c ****                 }
 634:.\Generated_Source\PSoC5/UART.c ****             }
 635:.\Generated_Source\PSoC5/UART.c ****         #endif /* UART_RXBUFFERSIZE > UART_FIFO_LENGTH */
 636:.\Generated_Source\PSoC5/UART.c **** 
 637:.\Generated_Source\PSoC5/UART.c ****         return(rxData);
 744              		.loc 1 637 0
 745 00c8 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 638:.\Generated_Source\PSoC5/UART.c ****     }
 746              		.loc 1 638 0
 747 00ca 1846     		mov	r0, r3
 748 00cc 07F10807 		add	r7, r7, #8
 749 00d0 BD46     		mov	sp, r7
 750 00d2 80BD     		pop	{r7, pc}
 751              		.cfi_endproc
 752              	.LFE11:
 753              		.size	UART_GetChar, .-UART_GetChar
 754              		.section	.text.UART_GetByte,"ax",%progbits
 755              		.align	2
 756              		.global	UART_GetByte
 757              		.thumb
 758              		.thumb_func
 759              		.type	UART_GetByte, %function
 760              	UART_GetByte:
 761              	.LFB12:
 639:.\Generated_Source\PSoC5/UART.c **** 
 640:.\Generated_Source\PSoC5/UART.c **** 
 641:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 642:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetByte
 643:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 644:.\Generated_Source\PSoC5/UART.c ****     *
 645:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 646:.\Generated_Source\PSoC5/UART.c ****     *  Grab the next available byte of data from the recieve FIFO
 647:.\Generated_Source\PSoC5/UART.c ****     *
 648:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 649:.\Generated_Source\PSoC5/UART.c ****     *  None.
 650:.\Generated_Source\PSoC5/UART.c ****     *
 651:.\Generated_Source\PSoC5/UART.c ****     * Return:
 652:.\Generated_Source\PSoC5/UART.c ****     *  MSB contains Status Register and LSB contains UART RX data
 653:.\Generated_Source\PSoC5/UART.c ****     *
 654:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 655:.\Generated_Source\PSoC5/UART.c ****     *  No.
 656:.\Generated_Source\PSoC5/UART.c ****     *
 657:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 658:.\Generated_Source\PSoC5/UART.c ****     uint16 UART_GetByte(void) 
 659:.\Generated_Source\PSoC5/UART.c ****     {
 762              		.loc 1 659 0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 26


 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 0
 765              		@ frame_needed = 1, uses_anonymous_args = 0
 766 0000 98B5     		push	{r3, r4, r7, lr}
 767              	.LCFI31:
 768              		.cfi_def_cfa_offset 16
 769 0002 00AF     		add	r7, sp, #0
 770              		.cfi_offset 14, -4
 771              		.cfi_offset 7, -8
 772              		.cfi_offset 4, -12
 773              		.cfi_offset 3, -16
 774              	.LCFI32:
 775              		.cfi_def_cfa_register 7
 660:.\Generated_Source\PSoC5/UART.c ****         return ( ((uint16)UART_ReadRxStatus() << 8u) | UART_ReadRxData() );
 776              		.loc 1 660 0
 777 0004 FFF7FEFF 		bl	UART_ReadRxStatus
 778 0008 0346     		mov	r3, r0
 779 000a 4FEA0323 		lsl	r3, r3, #8
 780 000e 9CB2     		uxth	r4, r3
 781 0010 FFF7FEFF 		bl	UART_ReadRxData
 782 0014 0346     		mov	r3, r0
 783 0016 2246     		mov	r2, r4	@ movhi
 784 0018 42EA0303 		orr	r3, r2, r3
 785 001c 9BB2     		uxth	r3, r3
 786 001e 9BB2     		uxth	r3, r3
 661:.\Generated_Source\PSoC5/UART.c ****     }
 787              		.loc 1 661 0
 788 0020 1846     		mov	r0, r3
 789 0022 98BD     		pop	{r3, r4, r7, pc}
 790              		.cfi_endproc
 791              	.LFE12:
 792              		.size	UART_GetByte, .-UART_GetByte
 793              		.section	.text.UART_GetRxBufferSize,"ax",%progbits
 794              		.align	2
 795              		.global	UART_GetRxBufferSize
 796              		.thumb
 797              		.thumb_func
 798              		.type	UART_GetRxBufferSize, %function
 799              	UART_GetRxBufferSize:
 800              	.LFB13:
 662:.\Generated_Source\PSoC5/UART.c **** 
 663:.\Generated_Source\PSoC5/UART.c **** 
 664:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 665:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetRxBufferSize
 666:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 667:.\Generated_Source\PSoC5/UART.c ****     *
 668:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 669:.\Generated_Source\PSoC5/UART.c ****     *  Determine the amount of bytes left in the RX buffer and return the count in
 670:.\Generated_Source\PSoC5/UART.c ****     *  bytes
 671:.\Generated_Source\PSoC5/UART.c ****     *
 672:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 673:.\Generated_Source\PSoC5/UART.c ****     *  None.
 674:.\Generated_Source\PSoC5/UART.c ****     *
 675:.\Generated_Source\PSoC5/UART.c ****     * Return:
 676:.\Generated_Source\PSoC5/UART.c ****     *  uint8: Integer count of the number of bytes left
 677:.\Generated_Source\PSoC5/UART.c ****     *  in the RX buffer
 678:.\Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 27


 679:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 680:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - used to calculate left bytes.
 681:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - used to calculate left bytes.
 682:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - checked to decide left bytes amount.
 683:.\Generated_Source\PSoC5/UART.c ****     *
 684:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 685:.\Generated_Source\PSoC5/UART.c ****     *  No.
 686:.\Generated_Source\PSoC5/UART.c ****     *
 687:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 688:.\Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 689:.\Generated_Source\PSoC5/UART.c ****     *
 690:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 691:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_GetRxBufferSize(void)
 692:.\Generated_Source\PSoC5/UART.c ****                                                             
 693:.\Generated_Source\PSoC5/UART.c ****     {
 801              		.loc 1 693 0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 8
 804              		@ frame_needed = 1, uses_anonymous_args = 0
 805 0000 80B5     		push	{r7, lr}
 806              	.LCFI33:
 807              		.cfi_def_cfa_offset 8
 808 0002 82B0     		sub	sp, sp, #8
 809              	.LCFI34:
 810              		.cfi_def_cfa_offset 16
 811 0004 00AF     		add	r7, sp, #0
 812              		.cfi_offset 14, -4
 813              		.cfi_offset 7, -8
 814              	.LCFI35:
 815              		.cfi_def_cfa_register 7
 694:.\Generated_Source\PSoC5/UART.c ****         uint8 size;
 695:.\Generated_Source\PSoC5/UART.c **** 
 696:.\Generated_Source\PSoC5/UART.c ****         #if(UART_RXBUFFERSIZE > UART_FIFO_LENGTH)
 697:.\Generated_Source\PSoC5/UART.c **** 
 698:.\Generated_Source\PSoC5/UART.c ****             /* Disable Rx interrupt. */
 699:.\Generated_Source\PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 700:.\Generated_Source\PSoC5/UART.c ****             #if(UART_RX_INTERRUPT_ENABLED)
 701:.\Generated_Source\PSoC5/UART.c ****                 UART_DisableRxInt();
 816              		.loc 1 701 0
 817 0006 FFF7FEFF 		bl	UART_DisableRxInt
 702:.\Generated_Source\PSoC5/UART.c ****             #endif /* UART_RX_INTERRUPT_ENABLED */
 703:.\Generated_Source\PSoC5/UART.c **** 
 704:.\Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferRead == UART_rxBufferWrite)
 818              		.loc 1 704 0
 819 000a 40F20003 		movw	r3, #:lower16:UART_rxBufferRead
 820 000e C0F20003 		movt	r3, #:upper16:UART_rxBufferRead
 821 0012 1B78     		ldrb	r3, [r3, #0]
 822 0014 DAB2     		uxtb	r2, r3
 823 0016 40F20003 		movw	r3, #:lower16:UART_rxBufferWrite
 824 001a C0F20003 		movt	r3, #:upper16:UART_rxBufferWrite
 825 001e 1B78     		ldrb	r3, [r3, #0]
 826 0020 DBB2     		uxtb	r3, r3
 827 0022 9A42     		cmp	r2, r3
 828 0024 0FD1     		bne	.L42
 705:.\Generated_Source\PSoC5/UART.c ****             {
 706:.\Generated_Source\PSoC5/UART.c ****                 if(UART_rxBufferLoopDetect > 0u)
 829              		.loc 1 706 0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 28


 830 0026 40F20003 		movw	r3, #:lower16:UART_rxBufferLoopDetect
 831 002a C0F20003 		movt	r3, #:upper16:UART_rxBufferLoopDetect
 832 002e 1B78     		ldrb	r3, [r3, #0]
 833 0030 DBB2     		uxtb	r3, r3
 834 0032 002B     		cmp	r3, #0
 835 0034 03D0     		beq	.L43
 707:.\Generated_Source\PSoC5/UART.c ****                 {
 708:.\Generated_Source\PSoC5/UART.c ****                     size = UART_RXBUFFERSIZE;
 836              		.loc 1 708 0
 837 0036 4FF04003 		mov	r3, #64
 838 003a FB71     		strb	r3, [r7, #7]
 709:.\Generated_Source\PSoC5/UART.c ****                 }
 710:.\Generated_Source\PSoC5/UART.c ****                 else
 711:.\Generated_Source\PSoC5/UART.c ****                 {
 712:.\Generated_Source\PSoC5/UART.c ****                     size = 0u;
 839              		.loc 1 712 0
 840 003c 33E0     		b	.L45
 841              	.L43:
 842 003e 4FF00003 		mov	r3, #0
 843 0042 FB71     		strb	r3, [r7, #7]
 844 0044 2FE0     		b	.L45
 845              	.L42:
 713:.\Generated_Source\PSoC5/UART.c ****                 }
 714:.\Generated_Source\PSoC5/UART.c ****             }
 715:.\Generated_Source\PSoC5/UART.c ****             else if(UART_rxBufferRead < UART_rxBufferWrite)
 846              		.loc 1 715 0
 847 0046 40F20003 		movw	r3, #:lower16:UART_rxBufferRead
 848 004a C0F20003 		movt	r3, #:upper16:UART_rxBufferRead
 849 004e 1B78     		ldrb	r3, [r3, #0]
 850 0050 DAB2     		uxtb	r2, r3
 851 0052 40F20003 		movw	r3, #:lower16:UART_rxBufferWrite
 852 0056 C0F20003 		movt	r3, #:upper16:UART_rxBufferWrite
 853 005a 1B78     		ldrb	r3, [r3, #0]
 854 005c DBB2     		uxtb	r3, r3
 855 005e 9A42     		cmp	r2, r3
 856 0060 0FD2     		bcs	.L46
 716:.\Generated_Source\PSoC5/UART.c ****             {
 717:.\Generated_Source\PSoC5/UART.c ****                 size = (UART_rxBufferWrite - UART_rxBufferRead);
 857              		.loc 1 717 0
 858 0062 40F20003 		movw	r3, #:lower16:UART_rxBufferWrite
 859 0066 C0F20003 		movt	r3, #:upper16:UART_rxBufferWrite
 860 006a 1B78     		ldrb	r3, [r3, #0]
 861 006c DAB2     		uxtb	r2, r3
 862 006e 40F20003 		movw	r3, #:lower16:UART_rxBufferRead
 863 0072 C0F20003 		movt	r3, #:upper16:UART_rxBufferRead
 864 0076 1B78     		ldrb	r3, [r3, #0]
 865 0078 DBB2     		uxtb	r3, r3
 866 007a C3EB0203 		rsb	r3, r3, r2
 867 007e FB71     		strb	r3, [r7, #7]
 868 0080 11E0     		b	.L45
 869              	.L46:
 718:.\Generated_Source\PSoC5/UART.c ****             }
 719:.\Generated_Source\PSoC5/UART.c ****             else
 720:.\Generated_Source\PSoC5/UART.c ****             {
 721:.\Generated_Source\PSoC5/UART.c ****                 size = (UART_RXBUFFERSIZE - UART_rxBufferRead) + UART_rxBufferWrite;
 870              		.loc 1 721 0
 871 0082 40F20003 		movw	r3, #:lower16:UART_rxBufferWrite
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 29


 872 0086 C0F20003 		movt	r3, #:upper16:UART_rxBufferWrite
 873 008a 1B78     		ldrb	r3, [r3, #0]
 874 008c DAB2     		uxtb	r2, r3
 875 008e 40F20003 		movw	r3, #:lower16:UART_rxBufferRead
 876 0092 C0F20003 		movt	r3, #:upper16:UART_rxBufferRead
 877 0096 1B78     		ldrb	r3, [r3, #0]
 878 0098 DBB2     		uxtb	r3, r3
 879 009a C3EB0203 		rsb	r3, r3, r2
 880 009e DBB2     		uxtb	r3, r3
 881 00a0 03F14003 		add	r3, r3, #64
 882 00a4 FB71     		strb	r3, [r7, #7]
 883              	.L45:
 722:.\Generated_Source\PSoC5/UART.c ****             }
 723:.\Generated_Source\PSoC5/UART.c **** 
 724:.\Generated_Source\PSoC5/UART.c ****             /* Enable Rx interrupt. */
 725:.\Generated_Source\PSoC5/UART.c ****             #if(UART_RX_INTERRUPT_ENABLED)
 726:.\Generated_Source\PSoC5/UART.c ****                 UART_EnableRxInt();
 884              		.loc 1 726 0
 885 00a6 FFF7FEFF 		bl	UART_EnableRxInt
 727:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_RX_INTERRUPT_ENABLED */
 728:.\Generated_Source\PSoC5/UART.c **** 
 729:.\Generated_Source\PSoC5/UART.c ****         #else /* UART_RXBUFFERSIZE > UART_FIFO_LENGTH */
 730:.\Generated_Source\PSoC5/UART.c **** 
 731:.\Generated_Source\PSoC5/UART.c ****             /* We can only know if there is data in the fifo. */
 732:.\Generated_Source\PSoC5/UART.c ****             size = ((UART_RXSTATUS_REG & UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 733:.\Generated_Source\PSoC5/UART.c **** 
 734:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH */
 735:.\Generated_Source\PSoC5/UART.c **** 
 736:.\Generated_Source\PSoC5/UART.c ****         return(size);
 886              		.loc 1 736 0
 887 00aa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 737:.\Generated_Source\PSoC5/UART.c ****     }
 888              		.loc 1 737 0
 889 00ac 1846     		mov	r0, r3
 890 00ae 07F10807 		add	r7, r7, #8
 891 00b2 BD46     		mov	sp, r7
 892 00b4 80BD     		pop	{r7, pc}
 893              		.cfi_endproc
 894              	.LFE13:
 895              		.size	UART_GetRxBufferSize, .-UART_GetRxBufferSize
 896 00b6 00BF     		.section	.text.UART_ClearRxBuffer,"ax",%progbits
 897              		.align	2
 898              		.global	UART_ClearRxBuffer
 899              		.thumb
 900              		.thumb_func
 901              		.type	UART_ClearRxBuffer, %function
 902              	UART_ClearRxBuffer:
 903              	.LFB14:
 738:.\Generated_Source\PSoC5/UART.c **** 
 739:.\Generated_Source\PSoC5/UART.c **** 
 740:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 741:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearRxBuffer
 742:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 743:.\Generated_Source\PSoC5/UART.c ****     *
 744:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 745:.\Generated_Source\PSoC5/UART.c ****     *  Clears the RX RAM buffer by setting the read and write pointers both to zero.
 746:.\Generated_Source\PSoC5/UART.c ****     *  Clears hardware RX FIFO.
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 30


 747:.\Generated_Source\PSoC5/UART.c ****     *
 748:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 749:.\Generated_Source\PSoC5/UART.c ****     *  None.
 750:.\Generated_Source\PSoC5/UART.c ****     *
 751:.\Generated_Source\PSoC5/UART.c ****     * Return:
 752:.\Generated_Source\PSoC5/UART.c ****     *  None.
 753:.\Generated_Source\PSoC5/UART.c ****     *
 754:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 755:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cleared to zero.
 756:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cleared to zero.
 757:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared to zero.
 758:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - cleared to zero.
 759:.\Generated_Source\PSoC5/UART.c ****     *
 760:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 761:.\Generated_Source\PSoC5/UART.c ****     *  No.
 762:.\Generated_Source\PSoC5/UART.c ****     *
 763:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 764:.\Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 765:.\Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 766:.\Generated_Source\PSoC5/UART.c ****     *  have remained in the RAM.
 767:.\Generated_Source\PSoC5/UART.c ****     *
 768:.\Generated_Source\PSoC5/UART.c ****     * Side Effects:
 769:.\Generated_Source\PSoC5/UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 770:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 771:.\Generated_Source\PSoC5/UART.c ****     void UART_ClearRxBuffer(void) 
 772:.\Generated_Source\PSoC5/UART.c ****     {
 904              		.loc 1 772 0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 8
 907              		@ frame_needed = 1, uses_anonymous_args = 0
 908 0000 80B5     		push	{r7, lr}
 909              	.LCFI36:
 910              		.cfi_def_cfa_offset 8
 911 0002 82B0     		sub	sp, sp, #8
 912              	.LCFI37:
 913              		.cfi_def_cfa_offset 16
 914 0004 00AF     		add	r7, sp, #0
 915              		.cfi_offset 14, -4
 916              		.cfi_offset 7, -8
 917              	.LCFI38:
 918              		.cfi_def_cfa_register 7
 773:.\Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
 774:.\Generated_Source\PSoC5/UART.c **** 
 775:.\Generated_Source\PSoC5/UART.c ****         /* clear the HW FIFO */
 776:.\Generated_Source\PSoC5/UART.c ****         /* Enter critical section */
 777:.\Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 919              		.loc 1 777 0
 920 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 921 000a 0346     		mov	r3, r0
 922 000c FB71     		strb	r3, [r7, #7]
 778:.\Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG |=  UART_RX_FIFO_CLR;
 923              		.loc 1 778 0
 924 000e 46F29843 		movw	r3, #:lower16:1073767576
 925 0012 C4F20003 		movt	r3, #:upper16:1073767576
 926 0016 46F29842 		movw	r2, #:lower16:1073767576
 927 001a C4F20002 		movt	r2, #:upper16:1073767576
 928 001e 1278     		ldrb	r2, [r2, #0]
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 31


 929 0020 D2B2     		uxtb	r2, r2
 930 0022 42F00102 		orr	r2, r2, #1
 931 0026 D2B2     		uxtb	r2, r2
 932 0028 1A70     		strb	r2, [r3, #0]
 779:.\Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG &= (uint8)~UART_RX_FIFO_CLR;
 933              		.loc 1 779 0
 934 002a 46F29843 		movw	r3, #:lower16:1073767576
 935 002e C4F20003 		movt	r3, #:upper16:1073767576
 936 0032 46F29842 		movw	r2, #:lower16:1073767576
 937 0036 C4F20002 		movt	r2, #:upper16:1073767576
 938 003a 1278     		ldrb	r2, [r2, #0]
 939 003c D2B2     		uxtb	r2, r2
 940 003e 02F0FE02 		and	r2, r2, #254
 941 0042 1A70     		strb	r2, [r3, #0]
 780:.\Generated_Source\PSoC5/UART.c ****         /* Exit critical section */
 781:.\Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 942              		.loc 1 781 0
 943 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 944 0046 1846     		mov	r0, r3
 945 0048 FFF7FEFF 		bl	CyExitCriticalSection
 782:.\Generated_Source\PSoC5/UART.c **** 
 783:.\Generated_Source\PSoC5/UART.c ****         #if(UART_RXBUFFERSIZE > UART_FIFO_LENGTH)
 784:.\Generated_Source\PSoC5/UART.c ****             /* Disable Rx interrupt. */
 785:.\Generated_Source\PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 786:.\Generated_Source\PSoC5/UART.c ****             #if(UART_RX_INTERRUPT_ENABLED)
 787:.\Generated_Source\PSoC5/UART.c ****                 UART_DisableRxInt();
 946              		.loc 1 787 0
 947 004c FFF7FEFF 		bl	UART_DisableRxInt
 788:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_RX_INTERRUPT_ENABLED */
 789:.\Generated_Source\PSoC5/UART.c **** 
 790:.\Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = 0u;
 948              		.loc 1 790 0
 949 0050 40F20003 		movw	r3, #:lower16:UART_rxBufferRead
 950 0054 C0F20003 		movt	r3, #:upper16:UART_rxBufferRead
 951 0058 4FF00002 		mov	r2, #0
 952 005c 1A70     		strb	r2, [r3, #0]
 791:.\Generated_Source\PSoC5/UART.c ****             UART_rxBufferWrite = 0u;
 953              		.loc 1 791 0
 954 005e 40F20003 		movw	r3, #:lower16:UART_rxBufferWrite
 955 0062 C0F20003 		movt	r3, #:upper16:UART_rxBufferWrite
 956 0066 4FF00002 		mov	r2, #0
 957 006a 1A70     		strb	r2, [r3, #0]
 792:.\Generated_Source\PSoC5/UART.c ****             UART_rxBufferLoopDetect = 0u;
 958              		.loc 1 792 0
 959 006c 40F20003 		movw	r3, #:lower16:UART_rxBufferLoopDetect
 960 0070 C0F20003 		movt	r3, #:upper16:UART_rxBufferLoopDetect
 961 0074 4FF00002 		mov	r2, #0
 962 0078 1A70     		strb	r2, [r3, #0]
 793:.\Generated_Source\PSoC5/UART.c ****             UART_rxBufferOverflow = 0u;
 963              		.loc 1 793 0
 964 007a 40F20003 		movw	r3, #:lower16:UART_rxBufferOverflow
 965 007e C0F20003 		movt	r3, #:upper16:UART_rxBufferOverflow
 966 0082 4FF00002 		mov	r2, #0
 967 0086 1A70     		strb	r2, [r3, #0]
 794:.\Generated_Source\PSoC5/UART.c **** 
 795:.\Generated_Source\PSoC5/UART.c ****             /* Enable Rx interrupt. */
 796:.\Generated_Source\PSoC5/UART.c ****             #if(UART_RX_INTERRUPT_ENABLED)
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 32


 797:.\Generated_Source\PSoC5/UART.c ****                 UART_EnableRxInt();
 968              		.loc 1 797 0
 969 0088 FFF7FEFF 		bl	UART_EnableRxInt
 798:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_RX_INTERRUPT_ENABLED */
 799:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH */
 800:.\Generated_Source\PSoC5/UART.c **** 
 801:.\Generated_Source\PSoC5/UART.c ****     }
 970              		.loc 1 801 0
 971 008c 07F10807 		add	r7, r7, #8
 972 0090 BD46     		mov	sp, r7
 973 0092 80BD     		pop	{r7, pc}
 974              		.cfi_endproc
 975              	.LFE14:
 976              		.size	UART_ClearRxBuffer, .-UART_ClearRxBuffer
 977              		.section	.text.UART_SetRxAddressMode,"ax",%progbits
 978              		.align	2
 979              		.global	UART_SetRxAddressMode
 980              		.thumb
 981              		.thumb_func
 982              		.type	UART_SetRxAddressMode, %function
 983              	UART_SetRxAddressMode:
 984              	.LFB15:
 802:.\Generated_Source\PSoC5/UART.c **** 
 803:.\Generated_Source\PSoC5/UART.c **** 
 804:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 805:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddressMode
 806:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 807:.\Generated_Source\PSoC5/UART.c ****     *
 808:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 809:.\Generated_Source\PSoC5/UART.c ****     *  Set the receive addressing mode
 810:.\Generated_Source\PSoC5/UART.c ****     *
 811:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 812:.\Generated_Source\PSoC5/UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 813:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 814:.\Generated_Source\PSoC5/UART.c ****     *                                               detection
 815:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 816:.\Generated_Source\PSoC5/UART.c ****     *                                               address detection
 817:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 818:.\Generated_Source\PSoC5/UART.c ****     *                                               detection
 819:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 820:.\Generated_Source\PSoC5/UART.c ****     *                                               address detection
 821:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_NONE - No address detection
 822:.\Generated_Source\PSoC5/UART.c ****     *
 823:.\Generated_Source\PSoC5/UART.c ****     * Return:
 824:.\Generated_Source\PSoC5/UART.c ****     *  None.
 825:.\Generated_Source\PSoC5/UART.c ****     *
 826:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 827:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressMode - the parameter stored in this variable for
 828:.\Generated_Source\PSoC5/UART.c ****     *   the farther usage in RX ISR.
 829:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressDetected - set to initial state (0).
 830:.\Generated_Source\PSoC5/UART.c ****     *
 831:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 832:.\Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddressMode(uint8 addressMode)
 833:.\Generated_Source\PSoC5/UART.c ****                                                         
 834:.\Generated_Source\PSoC5/UART.c ****     {
 985              		.loc 1 834 0
 986              		.cfi_startproc
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 33


 987              		@ args = 0, pretend = 0, frame = 8
 988              		@ frame_needed = 1, uses_anonymous_args = 0
 989              		@ link register save eliminated.
 990 0000 80B4     		push	{r7}
 991              	.LCFI39:
 992              		.cfi_def_cfa_offset 4
 993 0002 83B0     		sub	sp, sp, #12
 994              	.LCFI40:
 995              		.cfi_def_cfa_offset 16
 996 0004 00AF     		add	r7, sp, #0
 997              		.cfi_offset 7, -4
 998              	.LCFI41:
 999              		.cfi_def_cfa_register 7
 1000 0006 0346     		mov	r3, r0
 1001 0008 FB71     		strb	r3, [r7, #7]
 835:.\Generated_Source\PSoC5/UART.c ****         #if(UART_RXHW_ADDRESS_ENABLED)
 836:.\Generated_Source\PSoC5/UART.c ****             #if(UART_CONTROL_REG_REMOVED)
 837:.\Generated_Source\PSoC5/UART.c ****                 if(addressMode != 0u) { }     /* release compiler warning */
 838:.\Generated_Source\PSoC5/UART.c ****             #else /* UART_CONTROL_REG_REMOVED */
 839:.\Generated_Source\PSoC5/UART.c ****                 uint8 tmpCtrl;
 840:.\Generated_Source\PSoC5/UART.c ****                 tmpCtrl = UART_CONTROL_REG & (uint8)~UART_CTRL_RXADDR_MODE_MASK;
 841:.\Generated_Source\PSoC5/UART.c ****                 tmpCtrl |= (uint8)(addressMode << UART_CTRL_RXADDR_MODE0_SHIFT);
 842:.\Generated_Source\PSoC5/UART.c ****                 UART_CONTROL_REG = tmpCtrl;
 843:.\Generated_Source\PSoC5/UART.c ****                 #if(UART_RX_INTERRUPT_ENABLED && \
 844:.\Generated_Source\PSoC5/UART.c ****                    (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
 845:.\Generated_Source\PSoC5/UART.c ****                     UART_rxAddressMode = addressMode;
 846:.\Generated_Source\PSoC5/UART.c ****                     UART_rxAddressDetected = 0u;
 847:.\Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH*/
 848:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED */
 849:.\Generated_Source\PSoC5/UART.c ****         #else /* UART_RXHW_ADDRESS_ENABLED */
 850:.\Generated_Source\PSoC5/UART.c ****             if(addressMode != 0u) { }     /* release compiler warning */
 851:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 852:.\Generated_Source\PSoC5/UART.c ****     }
 1002              		.loc 1 852 0
 1003 000a 07F10C07 		add	r7, r7, #12
 1004 000e BD46     		mov	sp, r7
 1005 0010 80BC     		pop	{r7}
 1006 0012 7047     		bx	lr
 1007              		.cfi_endproc
 1008              	.LFE15:
 1009              		.size	UART_SetRxAddressMode, .-UART_SetRxAddressMode
 1010              		.section	.text.UART_SetRxAddress1,"ax",%progbits
 1011              		.align	2
 1012              		.global	UART_SetRxAddress1
 1013              		.thumb
 1014              		.thumb_func
 1015              		.type	UART_SetRxAddress1, %function
 1016              	UART_SetRxAddress1:
 1017              	.LFB16:
 853:.\Generated_Source\PSoC5/UART.c **** 
 854:.\Generated_Source\PSoC5/UART.c **** 
 855:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 856:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress1
 857:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 858:.\Generated_Source\PSoC5/UART.c ****     *
 859:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 860:.\Generated_Source\PSoC5/UART.c ****     *  Set the first hardware address compare value
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 34


 861:.\Generated_Source\PSoC5/UART.c ****     *
 862:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 863:.\Generated_Source\PSoC5/UART.c ****     *  address
 864:.\Generated_Source\PSoC5/UART.c ****     *
 865:.\Generated_Source\PSoC5/UART.c ****     * Return:
 866:.\Generated_Source\PSoC5/UART.c ****     *  None.
 867:.\Generated_Source\PSoC5/UART.c ****     *
 868:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 869:.\Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress1(uint8 address) 
 870:.\Generated_Source\PSoC5/UART.c **** 
 871:.\Generated_Source\PSoC5/UART.c ****     {
 1018              		.loc 1 871 0
 1019              		.cfi_startproc
 1020              		@ args = 0, pretend = 0, frame = 8
 1021              		@ frame_needed = 1, uses_anonymous_args = 0
 1022              		@ link register save eliminated.
 1023 0000 80B4     		push	{r7}
 1024              	.LCFI42:
 1025              		.cfi_def_cfa_offset 4
 1026 0002 83B0     		sub	sp, sp, #12
 1027              	.LCFI43:
 1028              		.cfi_def_cfa_offset 16
 1029 0004 00AF     		add	r7, sp, #0
 1030              		.cfi_offset 7, -4
 1031              	.LCFI44:
 1032              		.cfi_def_cfa_register 7
 1033 0006 0346     		mov	r3, r0
 1034 0008 FB71     		strb	r3, [r7, #7]
 872:.\Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS1_REG = address;
 1035              		.loc 1 872 0
 1036 000a 46F22843 		movw	r3, #:lower16:1073767464
 1037 000e C4F20003 		movt	r3, #:upper16:1073767464
 1038 0012 FA79     		ldrb	r2, [r7, #7]
 1039 0014 1A70     		strb	r2, [r3, #0]
 873:.\Generated_Source\PSoC5/UART.c ****     }
 1040              		.loc 1 873 0
 1041 0016 07F10C07 		add	r7, r7, #12
 1042 001a BD46     		mov	sp, r7
 1043 001c 80BC     		pop	{r7}
 1044 001e 7047     		bx	lr
 1045              		.cfi_endproc
 1046              	.LFE16:
 1047              		.size	UART_SetRxAddress1, .-UART_SetRxAddress1
 1048              		.section	.text.UART_SetRxAddress2,"ax",%progbits
 1049              		.align	2
 1050              		.global	UART_SetRxAddress2
 1051              		.thumb
 1052              		.thumb_func
 1053              		.type	UART_SetRxAddress2, %function
 1054              	UART_SetRxAddress2:
 1055              	.LFB17:
 874:.\Generated_Source\PSoC5/UART.c **** 
 875:.\Generated_Source\PSoC5/UART.c **** 
 876:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 877:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress2
 878:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 879:.\Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 35


 880:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 881:.\Generated_Source\PSoC5/UART.c ****     *  Set the second hardware address compare value
 882:.\Generated_Source\PSoC5/UART.c ****     *
 883:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 884:.\Generated_Source\PSoC5/UART.c ****     *  address
 885:.\Generated_Source\PSoC5/UART.c ****     *
 886:.\Generated_Source\PSoC5/UART.c ****     * Return:
 887:.\Generated_Source\PSoC5/UART.c ****     *  None.
 888:.\Generated_Source\PSoC5/UART.c ****     *
 889:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 890:.\Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress2(uint8 address) 
 891:.\Generated_Source\PSoC5/UART.c ****     {
 1056              		.loc 1 891 0
 1057              		.cfi_startproc
 1058              		@ args = 0, pretend = 0, frame = 8
 1059              		@ frame_needed = 1, uses_anonymous_args = 0
 1060              		@ link register save eliminated.
 1061 0000 80B4     		push	{r7}
 1062              	.LCFI45:
 1063              		.cfi_def_cfa_offset 4
 1064 0002 83B0     		sub	sp, sp, #12
 1065              	.LCFI46:
 1066              		.cfi_def_cfa_offset 16
 1067 0004 00AF     		add	r7, sp, #0
 1068              		.cfi_offset 7, -4
 1069              	.LCFI47:
 1070              		.cfi_def_cfa_register 7
 1071 0006 0346     		mov	r3, r0
 1072 0008 FB71     		strb	r3, [r7, #7]
 892:.\Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS2_REG = address;
 1073              		.loc 1 892 0
 1074 000a 46F23843 		movw	r3, #:lower16:1073767480
 1075 000e C4F20003 		movt	r3, #:upper16:1073767480
 1076 0012 FA79     		ldrb	r2, [r7, #7]
 1077 0014 1A70     		strb	r2, [r3, #0]
 893:.\Generated_Source\PSoC5/UART.c ****     }
 1078              		.loc 1 893 0
 1079 0016 07F10C07 		add	r7, r7, #12
 1080 001a BD46     		mov	sp, r7
 1081 001c 80BC     		pop	{r7}
 1082 001e 7047     		bx	lr
 1083              		.cfi_endproc
 1084              	.LFE17:
 1085              		.size	UART_SetRxAddress2, .-UART_SetRxAddress2
 1086              		.section	.text.UART_SetTxInterruptMode,"ax",%progbits
 1087              		.align	2
 1088              		.global	UART_SetTxInterruptMode
 1089              		.thumb
 1090              		.thumb_func
 1091              		.type	UART_SetTxInterruptMode, %function
 1092              	UART_SetTxInterruptMode:
 1093              	.LFB18:
 894:.\Generated_Source\PSoC5/UART.c **** 
 895:.\Generated_Source\PSoC5/UART.c **** #endif  /* UART_RX_ENABLED || UART_HD_ENABLED*/
 896:.\Generated_Source\PSoC5/UART.c **** 
 897:.\Generated_Source\PSoC5/UART.c **** 
 898:.\Generated_Source\PSoC5/UART.c **** #if( (UART_TX_ENABLED) || (UART_HD_ENABLED) )
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 36


 899:.\Generated_Source\PSoC5/UART.c **** 
 900:.\Generated_Source\PSoC5/UART.c ****     #if(UART_TX_INTERRUPT_ENABLED)
 901:.\Generated_Source\PSoC5/UART.c **** 
 902:.\Generated_Source\PSoC5/UART.c ****         /*******************************************************************************
 903:.\Generated_Source\PSoC5/UART.c ****         * Function Name: UART_EnableTxInt
 904:.\Generated_Source\PSoC5/UART.c ****         ********************************************************************************
 905:.\Generated_Source\PSoC5/UART.c ****         *
 906:.\Generated_Source\PSoC5/UART.c ****         * Summary:
 907:.\Generated_Source\PSoC5/UART.c ****         *  Enable TX interrupt generation
 908:.\Generated_Source\PSoC5/UART.c ****         *
 909:.\Generated_Source\PSoC5/UART.c ****         * Parameters:
 910:.\Generated_Source\PSoC5/UART.c ****         *  None.
 911:.\Generated_Source\PSoC5/UART.c ****         *
 912:.\Generated_Source\PSoC5/UART.c ****         * Return:
 913:.\Generated_Source\PSoC5/UART.c ****         *  None.
 914:.\Generated_Source\PSoC5/UART.c ****         *
 915:.\Generated_Source\PSoC5/UART.c ****         * Theory:
 916:.\Generated_Source\PSoC5/UART.c ****         *  Enable the interrupt output -or- the interrupt component itself
 917:.\Generated_Source\PSoC5/UART.c ****         *
 918:.\Generated_Source\PSoC5/UART.c ****         *******************************************************************************/
 919:.\Generated_Source\PSoC5/UART.c ****         void UART_EnableTxInt(void) 
 920:.\Generated_Source\PSoC5/UART.c ****         {
 921:.\Generated_Source\PSoC5/UART.c ****             CyIntEnable(UART_TX_VECT_NUM);
 922:.\Generated_Source\PSoC5/UART.c ****         }
 923:.\Generated_Source\PSoC5/UART.c **** 
 924:.\Generated_Source\PSoC5/UART.c **** 
 925:.\Generated_Source\PSoC5/UART.c ****         /*******************************************************************************
 926:.\Generated_Source\PSoC5/UART.c ****         * Function Name: UART_DisableTxInt
 927:.\Generated_Source\PSoC5/UART.c ****         ********************************************************************************
 928:.\Generated_Source\PSoC5/UART.c ****         *
 929:.\Generated_Source\PSoC5/UART.c ****         * Summary:
 930:.\Generated_Source\PSoC5/UART.c ****         *  Disable TX interrupt generation
 931:.\Generated_Source\PSoC5/UART.c ****         *
 932:.\Generated_Source\PSoC5/UART.c ****         * Parameters:
 933:.\Generated_Source\PSoC5/UART.c ****         *  None.
 934:.\Generated_Source\PSoC5/UART.c ****         *
 935:.\Generated_Source\PSoC5/UART.c ****         * Return:
 936:.\Generated_Source\PSoC5/UART.c ****         *  None.
 937:.\Generated_Source\PSoC5/UART.c ****         *
 938:.\Generated_Source\PSoC5/UART.c ****         * Theory:
 939:.\Generated_Source\PSoC5/UART.c ****         *  Disable the interrupt output -or- the interrupt component itself
 940:.\Generated_Source\PSoC5/UART.c ****         *
 941:.\Generated_Source\PSoC5/UART.c ****         *******************************************************************************/
 942:.\Generated_Source\PSoC5/UART.c ****         void UART_DisableTxInt(void) 
 943:.\Generated_Source\PSoC5/UART.c ****         {
 944:.\Generated_Source\PSoC5/UART.c ****             CyIntDisable(UART_TX_VECT_NUM);
 945:.\Generated_Source\PSoC5/UART.c ****         }
 946:.\Generated_Source\PSoC5/UART.c **** 
 947:.\Generated_Source\PSoC5/UART.c ****     #endif /* UART_TX_INTERRUPT_ENABLED */
 948:.\Generated_Source\PSoC5/UART.c **** 
 949:.\Generated_Source\PSoC5/UART.c **** 
 950:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 951:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxInterruptMode
 952:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 953:.\Generated_Source\PSoC5/UART.c ****     *
 954:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 955:.\Generated_Source\PSoC5/UART.c ****     *  Configure which status bits trigger an interrupt event
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 37


 956:.\Generated_Source\PSoC5/UART.c ****     *
 957:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 958:.\Generated_Source\PSoC5/UART.c ****     *  intSrc: An or'd combination of the desired status bit masks (defined in
 959:.\Generated_Source\PSoC5/UART.c ****     *          the header file)
 960:.\Generated_Source\PSoC5/UART.c ****     *
 961:.\Generated_Source\PSoC5/UART.c ****     * Return:
 962:.\Generated_Source\PSoC5/UART.c ****     *  None.
 963:.\Generated_Source\PSoC5/UART.c ****     *
 964:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 965:.\Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 966:.\Generated_Source\PSoC5/UART.c ****     *
 967:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 968:.\Generated_Source\PSoC5/UART.c ****     void UART_SetTxInterruptMode(uint8 intSrc) 
 969:.\Generated_Source\PSoC5/UART.c ****     {
 1094              		.loc 1 969 0
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 8
 1097              		@ frame_needed = 1, uses_anonymous_args = 0
 1098              		@ link register save eliminated.
 1099 0000 80B4     		push	{r7}
 1100              	.LCFI48:
 1101              		.cfi_def_cfa_offset 4
 1102 0002 83B0     		sub	sp, sp, #12
 1103              	.LCFI49:
 1104              		.cfi_def_cfa_offset 16
 1105 0004 00AF     		add	r7, sp, #0
 1106              		.cfi_offset 7, -4
 1107              	.LCFI50:
 1108              		.cfi_def_cfa_register 7
 1109 0006 0346     		mov	r3, r0
 1110 0008 FB71     		strb	r3, [r7, #7]
 970:.\Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_MASK_REG = intSrc;
 1111              		.loc 1 970 0
 1112 000a 46F28953 		movw	r3, #:lower16:1073767817
 1113 000e C4F20003 		movt	r3, #:upper16:1073767817
 1114 0012 FA79     		ldrb	r2, [r7, #7]
 1115 0014 1A70     		strb	r2, [r3, #0]
 971:.\Generated_Source\PSoC5/UART.c ****     }
 1116              		.loc 1 971 0
 1117 0016 07F10C07 		add	r7, r7, #12
 1118 001a BD46     		mov	sp, r7
 1119 001c 80BC     		pop	{r7}
 1120 001e 7047     		bx	lr
 1121              		.cfi_endproc
 1122              	.LFE18:
 1123              		.size	UART_SetTxInterruptMode, .-UART_SetTxInterruptMode
 1124              		.section	.text.UART_WriteTxData,"ax",%progbits
 1125              		.align	2
 1126              		.global	UART_WriteTxData
 1127              		.thumb
 1128              		.thumb_func
 1129              		.type	UART_WriteTxData, %function
 1130              	UART_WriteTxData:
 1131              	.LFB19:
 972:.\Generated_Source\PSoC5/UART.c **** 
 973:.\Generated_Source\PSoC5/UART.c **** 
 974:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 38


 975:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_WriteTxData
 976:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 977:.\Generated_Source\PSoC5/UART.c ****     *
 978:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 979:.\Generated_Source\PSoC5/UART.c ****     *  Write a byte of data to the Transmit FIFO or TX buffer to be sent when the
 980:.\Generated_Source\PSoC5/UART.c ****     *  bus is available. WriteTxData sends a byte without checking for buffer room
 981:.\Generated_Source\PSoC5/UART.c ****     *  or status. It is up to the user to separately check status.
 982:.\Generated_Source\PSoC5/UART.c ****     *
 983:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 984:.\Generated_Source\PSoC5/UART.c ****     *  TXDataByte: byte of data to place in the transmit FIFO
 985:.\Generated_Source\PSoC5/UART.c ****     *
 986:.\Generated_Source\PSoC5/UART.c ****     * Return:
 987:.\Generated_Source\PSoC5/UART.c ****     * void
 988:.\Generated_Source\PSoC5/UART.c ****     *
 989:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 990:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
 991:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
 992:.\Generated_Source\PSoC5/UART.c ****     *    incremented after each byte saved to buffer.
 993:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
 994:.\Generated_Source\PSoC5/UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 995:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
 996:.\Generated_Source\PSoC5/UART.c ****     *    initialized.
 997:.\Generated_Source\PSoC5/UART.c ****     *
 998:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 999:.\Generated_Source\PSoC5/UART.c ****     *  No.
1000:.\Generated_Source\PSoC5/UART.c ****     *
1001:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1002:.\Generated_Source\PSoC5/UART.c ****     void UART_WriteTxData(uint8 txDataByte) 
1003:.\Generated_Source\PSoC5/UART.c ****     {
 1132              		.loc 1 1003 0
 1133              		.cfi_startproc
 1134              		@ args = 0, pretend = 0, frame = 8
 1135              		@ frame_needed = 1, uses_anonymous_args = 0
 1136              		@ link register save eliminated.
 1137 0000 80B4     		push	{r7}
 1138              	.LCFI51:
 1139              		.cfi_def_cfa_offset 4
 1140 0002 83B0     		sub	sp, sp, #12
 1141              	.LCFI52:
 1142              		.cfi_def_cfa_offset 16
 1143 0004 00AF     		add	r7, sp, #0
 1144              		.cfi_offset 7, -4
 1145              	.LCFI53:
 1146              		.cfi_def_cfa_register 7
 1147 0006 0346     		mov	r3, r0
 1148 0008 FB71     		strb	r3, [r7, #7]
1004:.\Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1005:.\Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1149              		.loc 1 1005 0
 1150 000a 40F20003 		movw	r3, #:lower16:UART_initVar
 1151 000e C0F20003 		movt	r3, #:upper16:UART_initVar
 1152 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1153 0014 002B     		cmp	r3, #0
 1154 0016 05D0     		beq	.L60
1006:.\Generated_Source\PSoC5/UART.c ****         {
1007:.\Generated_Source\PSoC5/UART.c ****             #if(UART_TXBUFFERSIZE > UART_FIFO_LENGTH)
1008:.\Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 39


1009:.\Generated_Source\PSoC5/UART.c ****                 /* Disable Tx interrupt. */
1010:.\Generated_Source\PSoC5/UART.c ****                 /* Protect variables that could change on interrupt. */
1011:.\Generated_Source\PSoC5/UART.c ****                 #if(UART_TX_INTERRUPT_ENABLED)
1012:.\Generated_Source\PSoC5/UART.c ****                     UART_DisableTxInt();
1013:.\Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_TX_INTERRUPT_ENABLED */
1014:.\Generated_Source\PSoC5/UART.c **** 
1015:.\Generated_Source\PSoC5/UART.c ****                 if( (UART_txBufferRead == UART_txBufferWrite) &&
1016:.\Generated_Source\PSoC5/UART.c ****                     ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
1017:.\Generated_Source\PSoC5/UART.c ****                 {
1018:.\Generated_Source\PSoC5/UART.c ****                     /* Add directly to the FIFO. */
1019:.\Generated_Source\PSoC5/UART.c ****                     UART_TXDATA_REG = txDataByte;
1020:.\Generated_Source\PSoC5/UART.c ****                 }
1021:.\Generated_Source\PSoC5/UART.c ****                 else
1022:.\Generated_Source\PSoC5/UART.c ****                 {
1023:.\Generated_Source\PSoC5/UART.c ****                     if(UART_txBufferWrite >= UART_TXBUFFERSIZE)
1024:.\Generated_Source\PSoC5/UART.c ****                     {
1025:.\Generated_Source\PSoC5/UART.c ****                         UART_txBufferWrite = 0u;
1026:.\Generated_Source\PSoC5/UART.c ****                     }
1027:.\Generated_Source\PSoC5/UART.c **** 
1028:.\Generated_Source\PSoC5/UART.c ****                     UART_txBuffer[UART_txBufferWrite] = txDataByte;
1029:.\Generated_Source\PSoC5/UART.c **** 
1030:.\Generated_Source\PSoC5/UART.c ****                     /* Add to the software buffer. */
1031:.\Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite++;
1032:.\Generated_Source\PSoC5/UART.c **** 
1033:.\Generated_Source\PSoC5/UART.c ****                 }
1034:.\Generated_Source\PSoC5/UART.c **** 
1035:.\Generated_Source\PSoC5/UART.c ****                 /* Enable Tx interrupt. */
1036:.\Generated_Source\PSoC5/UART.c ****                 #if(UART_TX_INTERRUPT_ENABLED)
1037:.\Generated_Source\PSoC5/UART.c ****                     UART_EnableTxInt();
1038:.\Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_TX_INTERRUPT_ENABLED */
1039:.\Generated_Source\PSoC5/UART.c **** 
1040:.\Generated_Source\PSoC5/UART.c ****             #else /* UART_TXBUFFERSIZE > UART_FIFO_LENGTH */
1041:.\Generated_Source\PSoC5/UART.c **** 
1042:.\Generated_Source\PSoC5/UART.c ****                 /* Add directly to the FIFO. */
1043:.\Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = txDataByte;
 1155              		.loc 1 1043 0
 1156 0018 46F24D43 		movw	r3, #:lower16:1073767501
 1157 001c C4F20003 		movt	r3, #:upper16:1073767501
 1158 0020 FA79     		ldrb	r2, [r7, #7]
 1159 0022 1A70     		strb	r2, [r3, #0]
 1160              	.L60:
1044:.\Generated_Source\PSoC5/UART.c **** 
1045:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_TXBUFFERSIZE > UART_FIFO_LENGTH */
1046:.\Generated_Source\PSoC5/UART.c ****         }
1047:.\Generated_Source\PSoC5/UART.c ****     }
 1161              		.loc 1 1047 0
 1162 0024 07F10C07 		add	r7, r7, #12
 1163 0028 BD46     		mov	sp, r7
 1164 002a 80BC     		pop	{r7}
 1165 002c 7047     		bx	lr
 1166              		.cfi_endproc
 1167              	.LFE19:
 1168              		.size	UART_WriteTxData, .-UART_WriteTxData
 1169 002e 00BF     		.section	.text.UART_ReadTxStatus,"ax",%progbits
 1170              		.align	2
 1171              		.global	UART_ReadTxStatus
 1172              		.thumb
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 40


 1173              		.thumb_func
 1174              		.type	UART_ReadTxStatus, %function
 1175              	UART_ReadTxStatus:
 1176              	.LFB20:
1048:.\Generated_Source\PSoC5/UART.c **** 
1049:.\Generated_Source\PSoC5/UART.c **** 
1050:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1051:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadTxStatus
1052:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1053:.\Generated_Source\PSoC5/UART.c ****     *
1054:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1055:.\Generated_Source\PSoC5/UART.c ****     *  Read the status register for the component
1056:.\Generated_Source\PSoC5/UART.c ****     *
1057:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1058:.\Generated_Source\PSoC5/UART.c ****     *  None.
1059:.\Generated_Source\PSoC5/UART.c ****     *
1060:.\Generated_Source\PSoC5/UART.c ****     * Return:
1061:.\Generated_Source\PSoC5/UART.c ****     *  Contents of the status register
1062:.\Generated_Source\PSoC5/UART.c ****     *
1063:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1064:.\Generated_Source\PSoC5/UART.c ****     *  This function reads the status register which is clear on read. It is up to
1065:.\Generated_Source\PSoC5/UART.c ****     *  the user to handle all bits in this return value accordingly, even if the bit
1066:.\Generated_Source\PSoC5/UART.c ****     *  was not enabled as an interrupt source the event happened and must be handled
1067:.\Generated_Source\PSoC5/UART.c ****     *  accordingly.
1068:.\Generated_Source\PSoC5/UART.c ****     *
1069:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1070:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadTxStatus(void) 
1071:.\Generated_Source\PSoC5/UART.c ****     {
 1177              		.loc 1 1071 0
 1178              		.cfi_startproc
 1179              		@ args = 0, pretend = 0, frame = 0
 1180              		@ frame_needed = 1, uses_anonymous_args = 0
 1181              		@ link register save eliminated.
 1182 0000 80B4     		push	{r7}
 1183              	.LCFI54:
 1184              		.cfi_def_cfa_offset 4
 1185 0002 00AF     		add	r7, sp, #0
 1186              		.cfi_offset 7, -4
 1187              	.LCFI55:
 1188              		.cfi_def_cfa_register 7
1072:.\Generated_Source\PSoC5/UART.c ****         return(UART_TXSTATUS_REG);
 1189              		.loc 1 1072 0
 1190 0004 46F26953 		movw	r3, #:lower16:1073767785
 1191 0008 C4F20003 		movt	r3, #:upper16:1073767785
 1192 000c 1B78     		ldrb	r3, [r3, #0]
 1193 000e DBB2     		uxtb	r3, r3
1073:.\Generated_Source\PSoC5/UART.c ****     }
 1194              		.loc 1 1073 0
 1195 0010 1846     		mov	r0, r3
 1196 0012 BD46     		mov	sp, r7
 1197 0014 80BC     		pop	{r7}
 1198 0016 7047     		bx	lr
 1199              		.cfi_endproc
 1200              	.LFE20:
 1201              		.size	UART_ReadTxStatus, .-UART_ReadTxStatus
 1202              		.section	.text.UART_PutChar,"ax",%progbits
 1203              		.align	2
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 41


 1204              		.global	UART_PutChar
 1205              		.thumb
 1206              		.thumb_func
 1207              		.type	UART_PutChar, %function
 1208              	UART_PutChar:
 1209              	.LFB21:
1074:.\Generated_Source\PSoC5/UART.c **** 
1075:.\Generated_Source\PSoC5/UART.c **** 
1076:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1077:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutChar
1078:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1079:.\Generated_Source\PSoC5/UART.c ****     *
1080:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1081:.\Generated_Source\PSoC5/UART.c ****     *  Wait to send byte until TX register or buffer has room.
1082:.\Generated_Source\PSoC5/UART.c ****     *
1083:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1084:.\Generated_Source\PSoC5/UART.c ****     *  txDataByte: The 8-bit data value to send across the UART.
1085:.\Generated_Source\PSoC5/UART.c ****     *
1086:.\Generated_Source\PSoC5/UART.c ****     * Return:
1087:.\Generated_Source\PSoC5/UART.c ****     *  None.
1088:.\Generated_Source\PSoC5/UART.c ****     *
1089:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1090:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
1091:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
1092:.\Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1093:.\Generated_Source\PSoC5/UART.c ****     *     saved to buffer.
1094:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
1095:.\Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer.
1096:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1097:.\Generated_Source\PSoC5/UART.c ****     *     initialized.
1098:.\Generated_Source\PSoC5/UART.c ****     *
1099:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1100:.\Generated_Source\PSoC5/UART.c ****     *  No.
1101:.\Generated_Source\PSoC5/UART.c ****     *
1102:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1103:.\Generated_Source\PSoC5/UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1104:.\Generated_Source\PSoC5/UART.c ****     *
1105:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1106:.\Generated_Source\PSoC5/UART.c ****     void UART_PutChar(uint8 txDataByte) 
1107:.\Generated_Source\PSoC5/UART.c ****     {
 1210              		.loc 1 1107 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 8
 1213              		@ frame_needed = 1, uses_anonymous_args = 0
 1214              		@ link register save eliminated.
 1215 0000 80B4     		push	{r7}
 1216              	.LCFI56:
 1217              		.cfi_def_cfa_offset 4
 1218 0002 83B0     		sub	sp, sp, #12
 1219              	.LCFI57:
 1220              		.cfi_def_cfa_offset 16
 1221 0004 00AF     		add	r7, sp, #0
 1222              		.cfi_offset 7, -4
 1223              	.LCFI58:
 1224              		.cfi_def_cfa_register 7
 1225 0006 0346     		mov	r3, r0
 1226 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 42


 1227              	.L64:
1108:.\Generated_Source\PSoC5/UART.c ****             #if(UART_TXBUFFERSIZE > UART_FIFO_LENGTH)
1109:.\Generated_Source\PSoC5/UART.c ****                 /* The temporary output pointer is used since it takes two instructions
1110:.\Generated_Source\PSoC5/UART.c ****                 *  to increment with a wrap, and we can't risk doing that with the real
1111:.\Generated_Source\PSoC5/UART.c ****                 *  pointer and getting an interrupt in between instructions.
1112:.\Generated_Source\PSoC5/UART.c ****                 */
1113:.\Generated_Source\PSoC5/UART.c ****                 uint8 loc_txBufferWrite;
1114:.\Generated_Source\PSoC5/UART.c ****                 uint8 loc_txBufferRead;
1115:.\Generated_Source\PSoC5/UART.c **** 
1116:.\Generated_Source\PSoC5/UART.c ****                 do{
1117:.\Generated_Source\PSoC5/UART.c ****                     /* Block if software buffer is full, so we don't overwrite. */
1118:.\Generated_Source\PSoC5/UART.c ****                     #if ((UART_TXBUFFERSIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1119:.\Generated_Source\PSoC5/UART.c ****                         /* Disable TX interrupt to protect variables that could change on interrupt
1120:.\Generated_Source\PSoC5/UART.c ****                         CyIntDisable(UART_TX_VECT_NUM);
1121:.\Generated_Source\PSoC5/UART.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1122:.\Generated_Source\PSoC5/UART.c ****                     loc_txBufferWrite = UART_txBufferWrite;
1123:.\Generated_Source\PSoC5/UART.c ****                     loc_txBufferRead = UART_txBufferRead;
1124:.\Generated_Source\PSoC5/UART.c ****                     #if ((UART_TXBUFFERSIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1125:.\Generated_Source\PSoC5/UART.c ****                         /* Enable interrupt to continue transmission */
1126:.\Generated_Source\PSoC5/UART.c ****                         CyIntEnable(UART_TX_VECT_NUM);
1127:.\Generated_Source\PSoC5/UART.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1128:.\Generated_Source\PSoC5/UART.c ****                 }while( (loc_txBufferWrite < loc_txBufferRead) ? (loc_txBufferWrite == (loc_txBuffe
1129:.\Generated_Source\PSoC5/UART.c ****                                         ((loc_txBufferWrite - loc_txBufferRead) ==
1130:.\Generated_Source\PSoC5/UART.c ****                                         (uint8)(UART_TXBUFFERSIZE - 1u)) );
1131:.\Generated_Source\PSoC5/UART.c **** 
1132:.\Generated_Source\PSoC5/UART.c ****                 if( (loc_txBufferRead == loc_txBufferWrite) &&
1133:.\Generated_Source\PSoC5/UART.c ****                     ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
1134:.\Generated_Source\PSoC5/UART.c ****                 {
1135:.\Generated_Source\PSoC5/UART.c ****                     /* Add directly to the FIFO. */
1136:.\Generated_Source\PSoC5/UART.c ****                     UART_TXDATA_REG = txDataByte;
1137:.\Generated_Source\PSoC5/UART.c ****                 }
1138:.\Generated_Source\PSoC5/UART.c ****                 else
1139:.\Generated_Source\PSoC5/UART.c ****                 {
1140:.\Generated_Source\PSoC5/UART.c ****                     if(loc_txBufferWrite >= UART_TXBUFFERSIZE)
1141:.\Generated_Source\PSoC5/UART.c ****                     {
1142:.\Generated_Source\PSoC5/UART.c ****                         loc_txBufferWrite = 0u;
1143:.\Generated_Source\PSoC5/UART.c ****                     }
1144:.\Generated_Source\PSoC5/UART.c ****                     /* Add to the software buffer. */
1145:.\Generated_Source\PSoC5/UART.c ****                     UART_txBuffer[loc_txBufferWrite] = txDataByte;
1146:.\Generated_Source\PSoC5/UART.c ****                     loc_txBufferWrite++;
1147:.\Generated_Source\PSoC5/UART.c **** 
1148:.\Generated_Source\PSoC5/UART.c ****                     /* Finally, update the real output pointer */
1149:.\Generated_Source\PSoC5/UART.c ****                     #if ((UART_TXBUFFERSIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1150:.\Generated_Source\PSoC5/UART.c ****                         CyIntDisable(UART_TX_VECT_NUM);
1151:.\Generated_Source\PSoC5/UART.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1152:.\Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite = loc_txBufferWrite;
1153:.\Generated_Source\PSoC5/UART.c ****                     #if ((UART_TXBUFFERSIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1154:.\Generated_Source\PSoC5/UART.c ****                         CyIntEnable(UART_TX_VECT_NUM);
1155:.\Generated_Source\PSoC5/UART.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1156:.\Generated_Source\PSoC5/UART.c ****                 }
1157:.\Generated_Source\PSoC5/UART.c **** 
1158:.\Generated_Source\PSoC5/UART.c ****             #else /* UART_TXBUFFERSIZE > UART_FIFO_LENGTH */
1159:.\Generated_Source\PSoC5/UART.c **** 
1160:.\Generated_Source\PSoC5/UART.c ****                 while((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) != 0u)
 1228              		.loc 1 1160 0
 1229 000a 46F26953 		movw	r3, #:lower16:1073767785
 1230 000e C4F20003 		movt	r3, #:upper16:1073767785
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 43


 1231 0012 1B78     		ldrb	r3, [r3, #0]
 1232 0014 DBB2     		uxtb	r3, r3
 1233 0016 03F00403 		and	r3, r3, #4
 1234 001a 002B     		cmp	r3, #0
 1235 001c F5D1     		bne	.L64
1161:.\Generated_Source\PSoC5/UART.c ****                 {
1162:.\Generated_Source\PSoC5/UART.c ****                     ; /* Wait for room in the FIFO. */
1163:.\Generated_Source\PSoC5/UART.c ****                 }
1164:.\Generated_Source\PSoC5/UART.c **** 
1165:.\Generated_Source\PSoC5/UART.c ****                 /* Add directly to the FIFO. */
1166:.\Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = txDataByte;
 1236              		.loc 1 1166 0
 1237 001e 46F24D43 		movw	r3, #:lower16:1073767501
 1238 0022 C4F20003 		movt	r3, #:upper16:1073767501
 1239 0026 FA79     		ldrb	r2, [r7, #7]
 1240 0028 1A70     		strb	r2, [r3, #0]
1167:.\Generated_Source\PSoC5/UART.c **** 
1168:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_TXBUFFERSIZE > UART_FIFO_LENGTH */
1169:.\Generated_Source\PSoC5/UART.c ****     }
 1241              		.loc 1 1169 0
 1242 002a 07F10C07 		add	r7, r7, #12
 1243 002e BD46     		mov	sp, r7
 1244 0030 80BC     		pop	{r7}
 1245 0032 7047     		bx	lr
 1246              		.cfi_endproc
 1247              	.LFE21:
 1248              		.size	UART_PutChar, .-UART_PutChar
 1249              		.section	.text.UART_PutString,"ax",%progbits
 1250              		.align	2
 1251              		.global	UART_PutString
 1252              		.thumb
 1253              		.thumb_func
 1254              		.type	UART_PutString, %function
 1255              	UART_PutString:
 1256              	.LFB22:
1170:.\Generated_Source\PSoC5/UART.c **** 
1171:.\Generated_Source\PSoC5/UART.c **** 
1172:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1173:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutString
1174:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1175:.\Generated_Source\PSoC5/UART.c ****     *
1176:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1177:.\Generated_Source\PSoC5/UART.c ****     *  Write a Sequence of bytes on the Transmit line. Data comes from RAM or ROM.
1178:.\Generated_Source\PSoC5/UART.c ****     *
1179:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1180:.\Generated_Source\PSoC5/UART.c ****     *  string: char pointer to character string of Data to Send.
1181:.\Generated_Source\PSoC5/UART.c ****     *
1182:.\Generated_Source\PSoC5/UART.c ****     * Return:
1183:.\Generated_Source\PSoC5/UART.c ****     *  None.
1184:.\Generated_Source\PSoC5/UART.c ****     *
1185:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1186:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1187:.\Generated_Source\PSoC5/UART.c ****     *     initialized.
1188:.\Generated_Source\PSoC5/UART.c ****     *
1189:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1190:.\Generated_Source\PSoC5/UART.c ****     *  No.
1191:.\Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 44


1192:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1193:.\Generated_Source\PSoC5/UART.c ****     *  This function will block if there is not enough memory to place the whole
1194:.\Generated_Source\PSoC5/UART.c ****     *  string, it will block until the entire string has been written to the
1195:.\Generated_Source\PSoC5/UART.c ****     *  transmit buffer.
1196:.\Generated_Source\PSoC5/UART.c ****     *
1197:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1198:.\Generated_Source\PSoC5/UART.c ****     void UART_PutString(const char8 string[]) 
1199:.\Generated_Source\PSoC5/UART.c ****     {
 1257              		.loc 1 1199 0
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 16
 1260              		@ frame_needed = 1, uses_anonymous_args = 0
 1261 0000 80B5     		push	{r7, lr}
 1262              	.LCFI59:
 1263              		.cfi_def_cfa_offset 8
 1264 0002 84B0     		sub	sp, sp, #16
 1265              	.LCFI60:
 1266              		.cfi_def_cfa_offset 24
 1267 0004 00AF     		add	r7, sp, #0
 1268              		.cfi_offset 14, -4
 1269              		.cfi_offset 7, -8
 1270              	.LCFI61:
 1271              		.cfi_def_cfa_register 7
 1272 0006 7860     		str	r0, [r7, #4]
1200:.\Generated_Source\PSoC5/UART.c ****         uint16 buf_index = 0u;
 1273              		.loc 1 1200 0
 1274 0008 4FF00003 		mov	r3, #0
 1275 000c FB81     		strh	r3, [r7, #14]	@ movhi
1201:.\Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1202:.\Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1276              		.loc 1 1202 0
 1277 000e 40F20003 		movw	r3, #:lower16:UART_initVar
 1278 0012 C0F20003 		movt	r3, #:upper16:UART_initVar
 1279 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1280 0018 002B     		cmp	r3, #0
 1281 001a 11D0     		beq	.L70
1203:.\Generated_Source\PSoC5/UART.c ****         {
1204:.\Generated_Source\PSoC5/UART.c ****             /* This is a blocking function, it will not exit until all data is sent*/
1205:.\Generated_Source\PSoC5/UART.c ****             while(string[buf_index] != (char8)0)
 1282              		.loc 1 1205 0
 1283 001c 0AE0     		b	.L68
 1284              	.L69:
1206:.\Generated_Source\PSoC5/UART.c ****             {
1207:.\Generated_Source\PSoC5/UART.c ****                 UART_PutChar((uint8)string[buf_index]);
 1285              		.loc 1 1207 0
 1286 001e FA89     		ldrh	r2, [r7, #14]
 1287 0020 7B68     		ldr	r3, [r7, #4]
 1288 0022 1344     		add	r3, r2, r3
 1289 0024 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1290 0026 1846     		mov	r0, r3
 1291 0028 FFF7FEFF 		bl	UART_PutChar
1208:.\Generated_Source\PSoC5/UART.c ****                 buf_index++;
 1292              		.loc 1 1208 0
 1293 002c FB89     		ldrh	r3, [r7, #14]	@ movhi
 1294 002e 03F10103 		add	r3, r3, #1
 1295 0032 FB81     		strh	r3, [r7, #14]	@ movhi
 1296              	.L68:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 45


 1297              		.loc 1 1205 0
 1298 0034 FA89     		ldrh	r2, [r7, #14]
 1299 0036 7B68     		ldr	r3, [r7, #4]
 1300 0038 1344     		add	r3, r2, r3
 1301 003a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1302 003c 002B     		cmp	r3, #0
 1303 003e EED1     		bne	.L69
 1304              	.L70:
1209:.\Generated_Source\PSoC5/UART.c ****             }
1210:.\Generated_Source\PSoC5/UART.c ****         }
1211:.\Generated_Source\PSoC5/UART.c ****     }
 1305              		.loc 1 1211 0
 1306 0040 07F11007 		add	r7, r7, #16
 1307 0044 BD46     		mov	sp, r7
 1308 0046 80BD     		pop	{r7, pc}
 1309              		.cfi_endproc
 1310              	.LFE22:
 1311              		.size	UART_PutString, .-UART_PutString
 1312              		.section	.text.UART_PutArray,"ax",%progbits
 1313              		.align	2
 1314              		.global	UART_PutArray
 1315              		.thumb
 1316              		.thumb_func
 1317              		.type	UART_PutArray, %function
 1318              	UART_PutArray:
 1319              	.LFB23:
1212:.\Generated_Source\PSoC5/UART.c **** 
1213:.\Generated_Source\PSoC5/UART.c **** 
1214:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1215:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutArray
1216:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1217:.\Generated_Source\PSoC5/UART.c ****     *
1218:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1219:.\Generated_Source\PSoC5/UART.c ****     *  Write a Sequence of bytes on the Transmit line. Data comes from RAM or ROM.
1220:.\Generated_Source\PSoC5/UART.c ****     *
1221:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1222:.\Generated_Source\PSoC5/UART.c ****     *  string: Address of the memory array residing in RAM or ROM.
1223:.\Generated_Source\PSoC5/UART.c ****     *  byteCount: Number of Bytes to be transmitted.
1224:.\Generated_Source\PSoC5/UART.c ****     *
1225:.\Generated_Source\PSoC5/UART.c ****     * Return:
1226:.\Generated_Source\PSoC5/UART.c ****     *  None.
1227:.\Generated_Source\PSoC5/UART.c ****     *
1228:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1229:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1230:.\Generated_Source\PSoC5/UART.c ****     *     initialized.
1231:.\Generated_Source\PSoC5/UART.c ****     *
1232:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1233:.\Generated_Source\PSoC5/UART.c ****     *  No.
1234:.\Generated_Source\PSoC5/UART.c ****     *
1235:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1236:.\Generated_Source\PSoC5/UART.c ****     void UART_PutArray(const uint8 string[], uint8 byteCount)
1237:.\Generated_Source\PSoC5/UART.c ****                                                                     
1238:.\Generated_Source\PSoC5/UART.c ****     {
 1320              		.loc 1 1238 0
 1321              		.cfi_startproc
 1322              		@ args = 0, pretend = 0, frame = 16
 1323              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 46


 1324 0000 80B5     		push	{r7, lr}
 1325              	.LCFI62:
 1326              		.cfi_def_cfa_offset 8
 1327 0002 84B0     		sub	sp, sp, #16
 1328              	.LCFI63:
 1329              		.cfi_def_cfa_offset 24
 1330 0004 00AF     		add	r7, sp, #0
 1331              		.cfi_offset 14, -4
 1332              		.cfi_offset 7, -8
 1333              	.LCFI64:
 1334              		.cfi_def_cfa_register 7
 1335 0006 7860     		str	r0, [r7, #4]
 1336 0008 0B46     		mov	r3, r1
 1337 000a FB70     		strb	r3, [r7, #3]
1239:.\Generated_Source\PSoC5/UART.c ****         uint8 buf_index = 0u;
 1338              		.loc 1 1239 0
 1339 000c 4FF00003 		mov	r3, #0
 1340 0010 FB73     		strb	r3, [r7, #15]
1240:.\Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1241:.\Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1341              		.loc 1 1241 0
 1342 0012 40F20003 		movw	r3, #:lower16:UART_initVar
 1343 0016 C0F20003 		movt	r3, #:upper16:UART_initVar
 1344 001a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1345 001c 002B     		cmp	r3, #0
 1346 001e 0ED0     		beq	.L74
 1347              	.L73:
1242:.\Generated_Source\PSoC5/UART.c ****         {
1243:.\Generated_Source\PSoC5/UART.c ****             do
1244:.\Generated_Source\PSoC5/UART.c ****             {
1245:.\Generated_Source\PSoC5/UART.c ****                 UART_PutChar(string[buf_index]);
 1348              		.loc 1 1245 0
 1349 0020 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1350 0022 7B68     		ldr	r3, [r7, #4]
 1351 0024 1344     		add	r3, r2, r3
 1352 0026 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1353 0028 1846     		mov	r0, r3
 1354 002a FFF7FEFF 		bl	UART_PutChar
1246:.\Generated_Source\PSoC5/UART.c ****                 buf_index++;
 1355              		.loc 1 1246 0
 1356 002e FB7B     		ldrb	r3, [r7, #15]
 1357 0030 03F10103 		add	r3, r3, #1
 1358 0034 FB73     		strb	r3, [r7, #15]
1247:.\Generated_Source\PSoC5/UART.c ****             }while(buf_index < byteCount);
 1359              		.loc 1 1247 0
 1360 0036 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1361 0038 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1362 003a 9A42     		cmp	r2, r3
 1363 003c F0D3     		bcc	.L73
 1364              	.L74:
1248:.\Generated_Source\PSoC5/UART.c ****         }
1249:.\Generated_Source\PSoC5/UART.c ****     }
 1365              		.loc 1 1249 0
 1366 003e 07F11007 		add	r7, r7, #16
 1367 0042 BD46     		mov	sp, r7
 1368 0044 80BD     		pop	{r7, pc}
 1369              		.cfi_endproc
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 47


 1370              	.LFE23:
 1371              		.size	UART_PutArray, .-UART_PutArray
 1372 0046 00BF     		.section	.text.UART_PutCRLF,"ax",%progbits
 1373              		.align	2
 1374              		.global	UART_PutCRLF
 1375              		.thumb
 1376              		.thumb_func
 1377              		.type	UART_PutCRLF, %function
 1378              	UART_PutCRLF:
 1379              	.LFB24:
1250:.\Generated_Source\PSoC5/UART.c **** 
1251:.\Generated_Source\PSoC5/UART.c **** 
1252:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1253:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutCRLF
1254:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1255:.\Generated_Source\PSoC5/UART.c ****     *
1256:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1257:.\Generated_Source\PSoC5/UART.c ****     *  Write a character and then carriage return and line feed.
1258:.\Generated_Source\PSoC5/UART.c ****     *
1259:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1260:.\Generated_Source\PSoC5/UART.c ****     *  txDataByte: uint8 Character to send.
1261:.\Generated_Source\PSoC5/UART.c ****     *
1262:.\Generated_Source\PSoC5/UART.c ****     * Return:
1263:.\Generated_Source\PSoC5/UART.c ****     *  None.
1264:.\Generated_Source\PSoC5/UART.c ****     *
1265:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1266:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1267:.\Generated_Source\PSoC5/UART.c ****     *     initialized.
1268:.\Generated_Source\PSoC5/UART.c ****     *
1269:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1270:.\Generated_Source\PSoC5/UART.c ****     *  No.
1271:.\Generated_Source\PSoC5/UART.c ****     *
1272:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC5/UART.c ****     void UART_PutCRLF(uint8 txDataByte) 
1274:.\Generated_Source\PSoC5/UART.c ****     {
 1380              		.loc 1 1274 0
 1381              		.cfi_startproc
 1382              		@ args = 0, pretend = 0, frame = 8
 1383              		@ frame_needed = 1, uses_anonymous_args = 0
 1384 0000 80B5     		push	{r7, lr}
 1385              	.LCFI65:
 1386              		.cfi_def_cfa_offset 8
 1387 0002 82B0     		sub	sp, sp, #8
 1388              	.LCFI66:
 1389              		.cfi_def_cfa_offset 16
 1390 0004 00AF     		add	r7, sp, #0
 1391              		.cfi_offset 14, -4
 1392              		.cfi_offset 7, -8
 1393              	.LCFI67:
 1394              		.cfi_def_cfa_register 7
 1395 0006 0346     		mov	r3, r0
 1396 0008 FB71     		strb	r3, [r7, #7]
1275:.\Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1276:.\Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1397              		.loc 1 1276 0
 1398 000a 40F20003 		movw	r3, #:lower16:UART_initVar
 1399 000e C0F20003 		movt	r3, #:upper16:UART_initVar
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 48


 1400 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1401 0014 002B     		cmp	r3, #0
 1402 0016 0BD0     		beq	.L77
1277:.\Generated_Source\PSoC5/UART.c ****         {
1278:.\Generated_Source\PSoC5/UART.c ****             UART_PutChar(txDataByte);
 1403              		.loc 1 1278 0
 1404 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1405 001a 1846     		mov	r0, r3
 1406 001c FFF7FEFF 		bl	UART_PutChar
1279:.\Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Du);
 1407              		.loc 1 1279 0
 1408 0020 4FF00D00 		mov	r0, #13
 1409 0024 FFF7FEFF 		bl	UART_PutChar
1280:.\Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Au);
 1410              		.loc 1 1280 0
 1411 0028 4FF00A00 		mov	r0, #10
 1412 002c FFF7FEFF 		bl	UART_PutChar
 1413              	.L77:
1281:.\Generated_Source\PSoC5/UART.c ****         }
1282:.\Generated_Source\PSoC5/UART.c ****     }
 1414              		.loc 1 1282 0
 1415 0030 07F10807 		add	r7, r7, #8
 1416 0034 BD46     		mov	sp, r7
 1417 0036 80BD     		pop	{r7, pc}
 1418              		.cfi_endproc
 1419              	.LFE24:
 1420              		.size	UART_PutCRLF, .-UART_PutCRLF
 1421              		.section	.text.UART_GetTxBufferSize,"ax",%progbits
 1422              		.align	2
 1423              		.global	UART_GetTxBufferSize
 1424              		.thumb
 1425              		.thumb_func
 1426              		.type	UART_GetTxBufferSize, %function
 1427              	UART_GetTxBufferSize:
 1428              	.LFB25:
1283:.\Generated_Source\PSoC5/UART.c **** 
1284:.\Generated_Source\PSoC5/UART.c **** 
1285:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1286:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetTxBufferSize
1287:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1288:.\Generated_Source\PSoC5/UART.c ****     *
1289:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1290:.\Generated_Source\PSoC5/UART.c ****     *  Determine the amount of space left in the TX buffer and return the count in
1291:.\Generated_Source\PSoC5/UART.c ****     *  bytes
1292:.\Generated_Source\PSoC5/UART.c ****     *
1293:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1294:.\Generated_Source\PSoC5/UART.c ****     *  None.
1295:.\Generated_Source\PSoC5/UART.c ****     *
1296:.\Generated_Source\PSoC5/UART.c ****     * Return:
1297:.\Generated_Source\PSoC5/UART.c ****     *  Integer count of the number of bytes left in the TX buffer
1298:.\Generated_Source\PSoC5/UART.c ****     *
1299:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1300:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - used to calculate left space.
1301:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - used to calculate left space.
1302:.\Generated_Source\PSoC5/UART.c ****     *
1303:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1304:.\Generated_Source\PSoC5/UART.c ****     *  No.
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 49


1305:.\Generated_Source\PSoC5/UART.c ****     *
1306:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1307:.\Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1308:.\Generated_Source\PSoC5/UART.c ****     *
1309:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1310:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_GetTxBufferSize(void)
1311:.\Generated_Source\PSoC5/UART.c ****                                                             
1312:.\Generated_Source\PSoC5/UART.c ****     {
 1429              		.loc 1 1312 0
 1430              		.cfi_startproc
 1431              		@ args = 0, pretend = 0, frame = 8
 1432              		@ frame_needed = 1, uses_anonymous_args = 0
 1433              		@ link register save eliminated.
 1434 0000 80B4     		push	{r7}
 1435              	.LCFI68:
 1436              		.cfi_def_cfa_offset 4
 1437 0002 83B0     		sub	sp, sp, #12
 1438              	.LCFI69:
 1439              		.cfi_def_cfa_offset 16
 1440 0004 00AF     		add	r7, sp, #0
 1441              		.cfi_offset 7, -4
 1442              	.LCFI70:
 1443              		.cfi_def_cfa_register 7
1313:.\Generated_Source\PSoC5/UART.c ****         uint8 size;
1314:.\Generated_Source\PSoC5/UART.c **** 
1315:.\Generated_Source\PSoC5/UART.c ****         #if(UART_TXBUFFERSIZE > UART_FIFO_LENGTH)
1316:.\Generated_Source\PSoC5/UART.c **** 
1317:.\Generated_Source\PSoC5/UART.c ****             /* Disable Tx interrupt. */
1318:.\Generated_Source\PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
1319:.\Generated_Source\PSoC5/UART.c ****             #if(UART_TX_INTERRUPT_ENABLED)
1320:.\Generated_Source\PSoC5/UART.c ****                 UART_DisableTxInt();
1321:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_TX_INTERRUPT_ENABLED */
1322:.\Generated_Source\PSoC5/UART.c **** 
1323:.\Generated_Source\PSoC5/UART.c ****             if(UART_txBufferRead == UART_txBufferWrite)
1324:.\Generated_Source\PSoC5/UART.c ****             {
1325:.\Generated_Source\PSoC5/UART.c ****                 size = 0u;
1326:.\Generated_Source\PSoC5/UART.c ****             }
1327:.\Generated_Source\PSoC5/UART.c ****             else if(UART_txBufferRead < UART_txBufferWrite)
1328:.\Generated_Source\PSoC5/UART.c ****             {
1329:.\Generated_Source\PSoC5/UART.c ****                 size = (UART_txBufferWrite - UART_txBufferRead);
1330:.\Generated_Source\PSoC5/UART.c ****             }
1331:.\Generated_Source\PSoC5/UART.c ****             else
1332:.\Generated_Source\PSoC5/UART.c ****             {
1333:.\Generated_Source\PSoC5/UART.c ****                 size = (UART_TXBUFFERSIZE - UART_txBufferRead) + UART_txBufferWrite;
1334:.\Generated_Source\PSoC5/UART.c ****             }
1335:.\Generated_Source\PSoC5/UART.c **** 
1336:.\Generated_Source\PSoC5/UART.c ****             /* Enable Tx interrupt. */
1337:.\Generated_Source\PSoC5/UART.c ****             #if(UART_TX_INTERRUPT_ENABLED)
1338:.\Generated_Source\PSoC5/UART.c ****                 UART_EnableTxInt();
1339:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_TX_INTERRUPT_ENABLED */
1340:.\Generated_Source\PSoC5/UART.c **** 
1341:.\Generated_Source\PSoC5/UART.c ****         #else /* UART_TXBUFFERSIZE > UART_FIFO_LENGTH */
1342:.\Generated_Source\PSoC5/UART.c **** 
1343:.\Generated_Source\PSoC5/UART.c ****             size = UART_TXSTATUS_REG;
 1444              		.loc 1 1343 0
 1445 0006 46F26953 		movw	r3, #:lower16:1073767785
 1446 000a C4F20003 		movt	r3, #:upper16:1073767785
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 50


 1447 000e 1B78     		ldrb	r3, [r3, #0]
 1448 0010 FB71     		strb	r3, [r7, #7]
1344:.\Generated_Source\PSoC5/UART.c **** 
1345:.\Generated_Source\PSoC5/UART.c ****             /* Is the fifo is full. */
1346:.\Generated_Source\PSoC5/UART.c ****             if((size & UART_TX_STS_FIFO_FULL) != 0u)
 1449              		.loc 1 1346 0
 1450 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1451 0014 03F00403 		and	r3, r3, #4
 1452 0018 002B     		cmp	r3, #0
 1453 001a 03D0     		beq	.L79
1347:.\Generated_Source\PSoC5/UART.c ****             {
1348:.\Generated_Source\PSoC5/UART.c ****                 size = UART_FIFO_LENGTH;
 1454              		.loc 1 1348 0
 1455 001c 4FF00403 		mov	r3, #4
 1456 0020 FB71     		strb	r3, [r7, #7]
 1457 0022 0BE0     		b	.L80
 1458              	.L79:
1349:.\Generated_Source\PSoC5/UART.c ****             }
1350:.\Generated_Source\PSoC5/UART.c ****             else if((size & UART_TX_STS_FIFO_EMPTY) != 0u)
 1459              		.loc 1 1350 0
 1460 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1461 0026 03F00203 		and	r3, r3, #2
 1462 002a 002B     		cmp	r3, #0
 1463 002c 03D0     		beq	.L81
1351:.\Generated_Source\PSoC5/UART.c ****             {
1352:.\Generated_Source\PSoC5/UART.c ****                 size = 0u;
 1464              		.loc 1 1352 0
 1465 002e 4FF00003 		mov	r3, #0
 1466 0032 FB71     		strb	r3, [r7, #7]
 1467 0034 02E0     		b	.L80
 1468              	.L81:
1353:.\Generated_Source\PSoC5/UART.c ****             }
1354:.\Generated_Source\PSoC5/UART.c ****             else
1355:.\Generated_Source\PSoC5/UART.c ****             {
1356:.\Generated_Source\PSoC5/UART.c ****                 /* We only know there is data in the fifo. */
1357:.\Generated_Source\PSoC5/UART.c ****                 size = 1u;
 1469              		.loc 1 1357 0
 1470 0036 4FF00103 		mov	r3, #1
 1471 003a FB71     		strb	r3, [r7, #7]
 1472              	.L80:
1358:.\Generated_Source\PSoC5/UART.c ****             }
1359:.\Generated_Source\PSoC5/UART.c **** 
1360:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXBUFFERSIZE > UART_FIFO_LENGTH */
1361:.\Generated_Source\PSoC5/UART.c **** 
1362:.\Generated_Source\PSoC5/UART.c ****         return(size);
 1473              		.loc 1 1362 0
 1474 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1363:.\Generated_Source\PSoC5/UART.c ****     }
 1475              		.loc 1 1363 0
 1476 003e 1846     		mov	r0, r3
 1477 0040 07F10C07 		add	r7, r7, #12
 1478 0044 BD46     		mov	sp, r7
 1479 0046 80BC     		pop	{r7}
 1480 0048 7047     		bx	lr
 1481              		.cfi_endproc
 1482              	.LFE25:
 1483              		.size	UART_GetTxBufferSize, .-UART_GetTxBufferSize
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 51


 1484 004a 00BF     		.section	.text.UART_ClearTxBuffer,"ax",%progbits
 1485              		.align	2
 1486              		.global	UART_ClearTxBuffer
 1487              		.thumb
 1488              		.thumb_func
 1489              		.type	UART_ClearTxBuffer, %function
 1490              	UART_ClearTxBuffer:
 1491              	.LFB26:
1364:.\Generated_Source\PSoC5/UART.c **** 
1365:.\Generated_Source\PSoC5/UART.c **** 
1366:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1367:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearTxBuffer
1368:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1369:.\Generated_Source\PSoC5/UART.c ****     *
1370:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1371:.\Generated_Source\PSoC5/UART.c ****     *  Clears the TX RAM buffer by setting the read and write pointers both to zero.
1372:.\Generated_Source\PSoC5/UART.c ****     *  Clears the hardware TX FIFO.  Any data present in the FIFO will not be sent.
1373:.\Generated_Source\PSoC5/UART.c ****     *
1374:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1375:.\Generated_Source\PSoC5/UART.c ****     *  None.
1376:.\Generated_Source\PSoC5/UART.c ****     *
1377:.\Generated_Source\PSoC5/UART.c ****     * Return:
1378:.\Generated_Source\PSoC5/UART.c ****     *  None.
1379:.\Generated_Source\PSoC5/UART.c ****     *
1380:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1381:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cleared to zero.
1382:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cleared to zero.
1383:.\Generated_Source\PSoC5/UART.c ****     *
1384:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1385:.\Generated_Source\PSoC5/UART.c ****     *  No.
1386:.\Generated_Source\PSoC5/UART.c ****     *
1387:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1388:.\Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1389:.\Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1390:.\Generated_Source\PSoC5/UART.c ****     *  remained in the RAM.
1391:.\Generated_Source\PSoC5/UART.c ****     *
1392:.\Generated_Source\PSoC5/UART.c ****     * Side Effects:
1393:.\Generated_Source\PSoC5/UART.c ****     *  Any received data not read from the RAM buffer will be lost when overwritten.
1394:.\Generated_Source\PSoC5/UART.c ****     *
1395:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1396:.\Generated_Source\PSoC5/UART.c ****     void UART_ClearTxBuffer(void) 
1397:.\Generated_Source\PSoC5/UART.c ****     {
 1492              		.loc 1 1397 0
 1493              		.cfi_startproc
 1494              		@ args = 0, pretend = 0, frame = 8
 1495              		@ frame_needed = 1, uses_anonymous_args = 0
 1496 0000 80B5     		push	{r7, lr}
 1497              	.LCFI71:
 1498              		.cfi_def_cfa_offset 8
 1499 0002 82B0     		sub	sp, sp, #8
 1500              	.LCFI72:
 1501              		.cfi_def_cfa_offset 16
 1502 0004 00AF     		add	r7, sp, #0
 1503              		.cfi_offset 14, -4
 1504              		.cfi_offset 7, -8
 1505              	.LCFI73:
 1506              		.cfi_def_cfa_register 7
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 52


1398:.\Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
1399:.\Generated_Source\PSoC5/UART.c **** 
1400:.\Generated_Source\PSoC5/UART.c ****         /* Enter critical section */
1401:.\Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 1507              		.loc 1 1401 0
 1508 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1509 000a 0346     		mov	r3, r0
 1510 000c FB71     		strb	r3, [r7, #7]
1402:.\Generated_Source\PSoC5/UART.c ****         /* clear the HW FIFO */
1403:.\Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG |=  UART_TX_FIFO_CLR;
 1511              		.loc 1 1403 0
 1512 000e 46F29D43 		movw	r3, #:lower16:1073767581
 1513 0012 C4F20003 		movt	r3, #:upper16:1073767581
 1514 0016 46F29D42 		movw	r2, #:lower16:1073767581
 1515 001a C4F20002 		movt	r2, #:upper16:1073767581
 1516 001e 1278     		ldrb	r2, [r2, #0]
 1517 0020 D2B2     		uxtb	r2, r2
 1518 0022 42F00102 		orr	r2, r2, #1
 1519 0026 D2B2     		uxtb	r2, r2
 1520 0028 1A70     		strb	r2, [r3, #0]
1404:.\Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8)~UART_TX_FIFO_CLR;
 1521              		.loc 1 1404 0
 1522 002a 46F29D43 		movw	r3, #:lower16:1073767581
 1523 002e C4F20003 		movt	r3, #:upper16:1073767581
 1524 0032 46F29D42 		movw	r2, #:lower16:1073767581
 1525 0036 C4F20002 		movt	r2, #:upper16:1073767581
 1526 003a 1278     		ldrb	r2, [r2, #0]
 1527 003c D2B2     		uxtb	r2, r2
 1528 003e 02F0FE02 		and	r2, r2, #254
 1529 0042 1A70     		strb	r2, [r3, #0]
1405:.\Generated_Source\PSoC5/UART.c ****         /* Exit critical section */
1406:.\Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 1530              		.loc 1 1406 0
 1531 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1532 0046 1846     		mov	r0, r3
 1533 0048 FFF7FEFF 		bl	CyExitCriticalSection
1407:.\Generated_Source\PSoC5/UART.c **** 
1408:.\Generated_Source\PSoC5/UART.c ****         #if(UART_TXBUFFERSIZE > UART_FIFO_LENGTH)
1409:.\Generated_Source\PSoC5/UART.c **** 
1410:.\Generated_Source\PSoC5/UART.c ****             /* Disable Tx interrupt. */
1411:.\Generated_Source\PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
1412:.\Generated_Source\PSoC5/UART.c ****             #if(UART_TX_INTERRUPT_ENABLED)
1413:.\Generated_Source\PSoC5/UART.c ****                 UART_DisableTxInt();
1414:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_TX_INTERRUPT_ENABLED */
1415:.\Generated_Source\PSoC5/UART.c **** 
1416:.\Generated_Source\PSoC5/UART.c ****             UART_txBufferRead = 0u;
1417:.\Generated_Source\PSoC5/UART.c ****             UART_txBufferWrite = 0u;
1418:.\Generated_Source\PSoC5/UART.c **** 
1419:.\Generated_Source\PSoC5/UART.c ****             /* Enable Tx interrupt. */
1420:.\Generated_Source\PSoC5/UART.c ****             #if(UART_TX_INTERRUPT_ENABLED)
1421:.\Generated_Source\PSoC5/UART.c ****                 UART_EnableTxInt();
1422:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_TX_INTERRUPT_ENABLED */
1423:.\Generated_Source\PSoC5/UART.c **** 
1424:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXBUFFERSIZE > UART_FIFO_LENGTH */
1425:.\Generated_Source\PSoC5/UART.c ****     }
 1534              		.loc 1 1425 0
 1535 004c 07F10807 		add	r7, r7, #8
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 53


 1536 0050 BD46     		mov	sp, r7
 1537 0052 80BD     		pop	{r7, pc}
 1538              		.cfi_endproc
 1539              	.LFE26:
 1540              		.size	UART_ClearTxBuffer, .-UART_ClearTxBuffer
 1541              		.section	.text.UART_SendBreak,"ax",%progbits
 1542              		.align	2
 1543              		.global	UART_SendBreak
 1544              		.thumb
 1545              		.thumb_func
 1546              		.type	UART_SendBreak, %function
 1547              	UART_SendBreak:
 1548              	.LFB27:
1426:.\Generated_Source\PSoC5/UART.c **** 
1427:.\Generated_Source\PSoC5/UART.c **** 
1428:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1429:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SendBreak
1430:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1431:.\Generated_Source\PSoC5/UART.c ****     *
1432:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1433:.\Generated_Source\PSoC5/UART.c ****     *  Write a Break command to the UART
1434:.\Generated_Source\PSoC5/UART.c ****     *
1435:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1436:.\Generated_Source\PSoC5/UART.c ****     *  uint8 retMode:  Wait mode,
1437:.\Generated_Source\PSoC5/UART.c ****     *   0 - Initialize registers for Break, sends the Break signal and return
1438:.\Generated_Source\PSoC5/UART.c ****     *       imediately.
1439:.\Generated_Source\PSoC5/UART.c ****     *   1 - Wait until Break sending is complete, reinitialize registers to normal
1440:.\Generated_Source\PSoC5/UART.c ****     *       transmission mode then return.
1441:.\Generated_Source\PSoC5/UART.c ****     *   2 - Reinitialize registers to normal transmission mode then return.
1442:.\Generated_Source\PSoC5/UART.c ****     *   3 - both steps: 0 and 1
1443:.\Generated_Source\PSoC5/UART.c ****     *       init registers for Break, send Break signal
1444:.\Generated_Source\PSoC5/UART.c ****     *       wait until Break sending is complete, reinit registers to normal
1445:.\Generated_Source\PSoC5/UART.c ****     *       transmission mode then return.
1446:.\Generated_Source\PSoC5/UART.c ****     *
1447:.\Generated_Source\PSoC5/UART.c ****     * Return:
1448:.\Generated_Source\PSoC5/UART.c ****     *  None.
1449:.\Generated_Source\PSoC5/UART.c ****     *
1450:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1451:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1452:.\Generated_Source\PSoC5/UART.c ****     *     initialized.
1453:.\Generated_Source\PSoC5/UART.c ****     *  tx_period - static variable, used for keeping TX period configuration.
1454:.\Generated_Source\PSoC5/UART.c ****     *
1455:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1456:.\Generated_Source\PSoC5/UART.c ****     *  No.
1457:.\Generated_Source\PSoC5/UART.c ****     *
1458:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1459:.\Generated_Source\PSoC5/UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1460:.\Generated_Source\PSoC5/UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1461:.\Generated_Source\PSoC5/UART.c ****     *  operation.
1462:.\Generated_Source\PSoC5/UART.c ****     *  Trere are 3 variants for this API usage:
1463:.\Generated_Source\PSoC5/UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1464:.\Generated_Source\PSoC5/UART.c ****     *     configuration returning. Funcition will block CPU untill transmition
1465:.\Generated_Source\PSoC5/UART.c ****     *     complete.
1466:.\Generated_Source\PSoC5/UART.c ****     *  2) User may want to use bloking time if UART configured to the low speed
1467:.\Generated_Source\PSoC5/UART.c ****     *     operation
1468:.\Generated_Source\PSoC5/UART.c ****     *     Emample for this case:
1469:.\Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - init Break signal transmition
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 54


1470:.\Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1471:.\Generated_Source\PSoC5/UART.c ****     *     SendBreak(1);     - complete Break operation
1472:.\Generated_Source\PSoC5/UART.c ****     *  3) Same to 2) but user may want to init and use the interrupt for complete
1473:.\Generated_Source\PSoC5/UART.c ****     *     break operation.
1474:.\Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1475:.\Generated_Source\PSoC5/UART.c ****     *     Init TX interrupt whith "TX - On TX Complete" parameter
1476:.\Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - init Break signal transmition
1477:.\Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1478:.\Generated_Source\PSoC5/UART.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1479:.\Generated_Source\PSoC5/UART.c ****     *     SendBreak(2);     - complete Break operation
1480:.\Generated_Source\PSoC5/UART.c ****     *
1481:.\Generated_Source\PSoC5/UART.c ****     * Side Effects:
1482:.\Generated_Source\PSoC5/UART.c ****     *   Uses static variable to keep registers configuration.
1483:.\Generated_Source\PSoC5/UART.c ****     *
1484:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1485:.\Generated_Source\PSoC5/UART.c ****     void UART_SendBreak(uint8 retMode) 
1486:.\Generated_Source\PSoC5/UART.c ****     {
 1549              		.loc 1 1486 0
 1550              		.cfi_startproc
 1551              		@ args = 0, pretend = 0, frame = 16
 1552              		@ frame_needed = 1, uses_anonymous_args = 0
 1553              		@ link register save eliminated.
 1554 0000 80B4     		push	{r7}
 1555              	.LCFI74:
 1556              		.cfi_def_cfa_offset 4
 1557 0002 85B0     		sub	sp, sp, #20
 1558              	.LCFI75:
 1559              		.cfi_def_cfa_offset 24
 1560 0004 00AF     		add	r7, sp, #0
 1561              		.cfi_offset 7, -4
 1562              	.LCFI76:
 1563              		.cfi_def_cfa_register 7
 1564 0006 0346     		mov	r3, r0
 1565 0008 FB71     		strb	r3, [r7, #7]
1487:.\Generated_Source\PSoC5/UART.c **** 
1488:.\Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1489:.\Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1566              		.loc 1 1489 0
 1567 000a 40F20003 		movw	r3, #:lower16:UART_initVar
 1568 000e C0F20003 		movt	r3, #:upper16:UART_initVar
 1569 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1570 0014 002B     		cmp	r3, #0
 1571 0016 54D0     		beq	.L95
 1572              	.LBB2:
1490:.\Generated_Source\PSoC5/UART.c ****         {
1491:.\Generated_Source\PSoC5/UART.c ****             /*Set the Counter to 13-bits and transmit a 00 byte*/
1492:.\Generated_Source\PSoC5/UART.c ****             /*When that is done then reset the counter value back*/
1493:.\Generated_Source\PSoC5/UART.c ****             uint8 tmpStat;
1494:.\Generated_Source\PSoC5/UART.c **** 
1495:.\Generated_Source\PSoC5/UART.c ****             #if(UART_HD_ENABLED) /* Half Duplex mode*/
1496:.\Generated_Source\PSoC5/UART.c **** 
1497:.\Generated_Source\PSoC5/UART.c ****                 if( (retMode == UART_SEND_BREAK) ||
1498:.\Generated_Source\PSoC5/UART.c ****                     (retMode == UART_SEND_WAIT_REINIT ) )
1499:.\Generated_Source\PSoC5/UART.c ****                 {
1500:.\Generated_Source\PSoC5/UART.c ****                     /* CTRL_HD_SEND_BREAK - sends break bits in HD mode*/
1501:.\Generated_Source\PSoC5/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() |
1502:.\Generated_Source\PSoC5/UART.c ****                                                           UART_CTRL_HD_SEND_BREAK);
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 55


1503:.\Generated_Source\PSoC5/UART.c ****                     /* Send zeros*/
1504:.\Generated_Source\PSoC5/UART.c ****                     UART_TXDATA_REG = 0u;
1505:.\Generated_Source\PSoC5/UART.c **** 
1506:.\Generated_Source\PSoC5/UART.c ****                     do /*wait until transmit starts*/
1507:.\Generated_Source\PSoC5/UART.c ****                     {
1508:.\Generated_Source\PSoC5/UART.c ****                         tmpStat = UART_TXSTATUS_REG;
1509:.\Generated_Source\PSoC5/UART.c ****                     }while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
1510:.\Generated_Source\PSoC5/UART.c ****                 }
1511:.\Generated_Source\PSoC5/UART.c **** 
1512:.\Generated_Source\PSoC5/UART.c ****                 if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1513:.\Generated_Source\PSoC5/UART.c ****                     (retMode == UART_SEND_WAIT_REINIT) )
1514:.\Generated_Source\PSoC5/UART.c ****                 {
1515:.\Generated_Source\PSoC5/UART.c ****                     do /*wait until transmit complete*/
1516:.\Generated_Source\PSoC5/UART.c ****                     {
1517:.\Generated_Source\PSoC5/UART.c ****                         tmpStat = UART_TXSTATUS_REG;
1518:.\Generated_Source\PSoC5/UART.c ****                     }while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1519:.\Generated_Source\PSoC5/UART.c ****                 }
1520:.\Generated_Source\PSoC5/UART.c **** 
1521:.\Generated_Source\PSoC5/UART.c ****                 if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1522:.\Generated_Source\PSoC5/UART.c ****                     (retMode == UART_REINIT) ||
1523:.\Generated_Source\PSoC5/UART.c ****                     (retMode == UART_SEND_WAIT_REINIT) )
1524:.\Generated_Source\PSoC5/UART.c ****                 {
1525:.\Generated_Source\PSoC5/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() &
1526:.\Generated_Source\PSoC5/UART.c ****                                                   (uint8)~UART_CTRL_HD_SEND_BREAK);
1527:.\Generated_Source\PSoC5/UART.c ****                 }
1528:.\Generated_Source\PSoC5/UART.c **** 
1529:.\Generated_Source\PSoC5/UART.c ****             #else /* UART_HD_ENABLED Full Duplex mode */
1530:.\Generated_Source\PSoC5/UART.c **** 
1531:.\Generated_Source\PSoC5/UART.c ****                 static uint8 tx_period;
1532:.\Generated_Source\PSoC5/UART.c **** 
1533:.\Generated_Source\PSoC5/UART.c ****                 if( (retMode == UART_SEND_BREAK) ||
 1573              		.loc 1 1533 0
 1574 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1575 001a 002B     		cmp	r3, #0
 1576 001c 02D0     		beq	.L87
 1577 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1578 0020 032B     		cmp	r3, #3
 1579 0022 23D1     		bne	.L88
 1580              	.L87:
1534:.\Generated_Source\PSoC5/UART.c ****                     (retMode == UART_SEND_WAIT_REINIT) )
1535:.\Generated_Source\PSoC5/UART.c ****                 {
1536:.\Generated_Source\PSoC5/UART.c ****                     /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex 
1537:.\Generated_Source\PSoC5/UART.c ****                     #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1538:.\Generated_Source\PSoC5/UART.c ****                                         (UART_PARITY_TYPE_SW != 0u) )
1539:.\Generated_Source\PSoC5/UART.c ****                         UART_WriteControlRegister(UART_ReadControlRegister() |
1540:.\Generated_Source\PSoC5/UART.c ****                                                               UART_CTRL_HD_SEND_BREAK);
1541:.\Generated_Source\PSoC5/UART.c ****                     #endif /* End UART_PARITY_TYPE != UART__B_UART__NONE_REVB  */
1542:.\Generated_Source\PSoC5/UART.c **** 
1543:.\Generated_Source\PSoC5/UART.c ****                     #if(UART_TXCLKGEN_DP)
1544:.\Generated_Source\PSoC5/UART.c ****                         tx_period = UART_TXBITCLKTX_COMPLETE_REG;
 1581              		.loc 1 1544 0
 1582 0024 46F23943 		movw	r3, #:lower16:1073767481
 1583 0028 C4F20003 		movt	r3, #:upper16:1073767481
 1584 002c 1B78     		ldrb	r3, [r3, #0]
 1585 002e DAB2     		uxtb	r2, r3
 1586 0030 40F20003 		movw	r3, #:lower16:tx_period.2343
 1587 0034 C0F20003 		movt	r3, #:upper16:tx_period.2343
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 56


 1588 0038 1A70     		strb	r2, [r3, #0]
1545:.\Generated_Source\PSoC5/UART.c ****                         UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
 1589              		.loc 1 1545 0
 1590 003a 46F23943 		movw	r3, #:lower16:1073767481
 1591 003e C4F20003 		movt	r3, #:upper16:1073767481
 1592 0042 6FF03002 		mvn	r2, #48
 1593 0046 1A70     		strb	r2, [r3, #0]
1546:.\Generated_Source\PSoC5/UART.c ****                     #else
1547:.\Generated_Source\PSoC5/UART.c ****                         tx_period = UART_TXBITCTR_PERIOD_REG;
1548:.\Generated_Source\PSoC5/UART.c ****                         UART_TXBITCTR_PERIOD_REG = UART_TXBITCTR_BREAKBITS8X;
1549:.\Generated_Source\PSoC5/UART.c ****                     #endif /* End UART_TXCLKGEN_DP */
1550:.\Generated_Source\PSoC5/UART.c **** 
1551:.\Generated_Source\PSoC5/UART.c ****                     /* Send zeros*/
1552:.\Generated_Source\PSoC5/UART.c ****                     UART_TXDATA_REG = 0u;
 1594              		.loc 1 1552 0
 1595 0048 46F24D43 		movw	r3, #:lower16:1073767501
 1596 004c C4F20003 		movt	r3, #:upper16:1073767501
 1597 0050 4FF00002 		mov	r2, #0
 1598 0054 1A70     		strb	r2, [r3, #0]
 1599              	.L89:
1553:.\Generated_Source\PSoC5/UART.c **** 
1554:.\Generated_Source\PSoC5/UART.c ****                     do /* wait until transmit starts */
1555:.\Generated_Source\PSoC5/UART.c ****                     {
1556:.\Generated_Source\PSoC5/UART.c ****                         tmpStat = UART_TXSTATUS_REG;
 1600              		.loc 1 1556 0
 1601 0056 46F26953 		movw	r3, #:lower16:1073767785
 1602 005a C4F20003 		movt	r3, #:upper16:1073767785
 1603 005e 1B78     		ldrb	r3, [r3, #0]
 1604 0060 FB73     		strb	r3, [r7, #15]
1557:.\Generated_Source\PSoC5/UART.c ****                     }while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
 1605              		.loc 1 1557 0
 1606 0062 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1607 0064 03F00203 		and	r3, r3, #2
 1608 0068 002B     		cmp	r3, #0
 1609 006a F4D1     		bne	.L89
 1610              	.L88:
1558:.\Generated_Source\PSoC5/UART.c ****                 }
1559:.\Generated_Source\PSoC5/UART.c **** 
1560:.\Generated_Source\PSoC5/UART.c ****                 if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 1611              		.loc 1 1560 0
 1612 006c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1613 006e 012B     		cmp	r3, #1
 1614 0070 02D0     		beq	.L90
 1615 0072 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1616 0074 032B     		cmp	r3, #3
 1617 0076 11D1     		bne	.L91
 1618              	.L90:
1561:.\Generated_Source\PSoC5/UART.c ****                     (retMode == UART_SEND_WAIT_REINIT) )
1562:.\Generated_Source\PSoC5/UART.c ****                 {
1563:.\Generated_Source\PSoC5/UART.c ****                     do /*wait until transmit complete*/
1564:.\Generated_Source\PSoC5/UART.c ****                     {
1565:.\Generated_Source\PSoC5/UART.c ****                         tmpStat = UART_TXSTATUS_REG;
 1619              		.loc 1 1565 0
 1620 0078 46F26953 		movw	r3, #:lower16:1073767785
 1621 007c C4F20003 		movt	r3, #:upper16:1073767785
 1622 0080 1B78     		ldrb	r3, [r3, #0]
 1623 0082 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 57


1566:.\Generated_Source\PSoC5/UART.c ****                     }while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
 1624              		.loc 1 1566 0
 1625 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1626 0086 03F00103 		and	r3, r3, #1
 1627 008a 002B     		cmp	r3, #0
 1628 008c 02D1     		bne	.L92
 1629 008e 4FF00103 		mov	r3, #1
 1630 0092 01E0     		b	.L93
 1631              	.L92:
 1632 0094 4FF00003 		mov	r3, #0
 1633              	.L93:
 1634 0098 002B     		cmp	r3, #0
 1635 009a EDD1     		bne	.L90
 1636              	.L91:
1567:.\Generated_Source\PSoC5/UART.c ****                 }
1568:.\Generated_Source\PSoC5/UART.c **** 
1569:.\Generated_Source\PSoC5/UART.c ****                 if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 1637              		.loc 1 1569 0
 1638 009c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1639 009e 012B     		cmp	r3, #1
 1640 00a0 05D0     		beq	.L94
 1641 00a2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1642 00a4 022B     		cmp	r3, #2
 1643 00a6 02D0     		beq	.L94
 1644 00a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1645 00aa 032B     		cmp	r3, #3
 1646 00ac 09D1     		bne	.L95
 1647              	.L94:
1570:.\Generated_Source\PSoC5/UART.c ****                     (retMode == UART_REINIT) ||
1571:.\Generated_Source\PSoC5/UART.c ****                     (retMode == UART_SEND_WAIT_REINIT) )
1572:.\Generated_Source\PSoC5/UART.c ****                 {
1573:.\Generated_Source\PSoC5/UART.c **** 
1574:.\Generated_Source\PSoC5/UART.c ****                     #if(UART_TXCLKGEN_DP)
1575:.\Generated_Source\PSoC5/UART.c ****                         UART_TXBITCLKTX_COMPLETE_REG = tx_period;
 1648              		.loc 1 1575 0
 1649 00ae 46F23943 		movw	r3, #:lower16:1073767481
 1650 00b2 C4F20003 		movt	r3, #:upper16:1073767481
 1651 00b6 40F20002 		movw	r2, #:lower16:tx_period.2343
 1652 00ba C0F20002 		movt	r2, #:upper16:tx_period.2343
 1653 00be 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1654 00c0 1A70     		strb	r2, [r3, #0]
 1655              	.L95:
 1656              	.LBE2:
1576:.\Generated_Source\PSoC5/UART.c ****                     #else
1577:.\Generated_Source\PSoC5/UART.c ****                         UART_TXBITCTR_PERIOD_REG = tx_period;
1578:.\Generated_Source\PSoC5/UART.c ****                     #endif /* End UART_TXCLKGEN_DP */
1579:.\Generated_Source\PSoC5/UART.c **** 
1580:.\Generated_Source\PSoC5/UART.c ****                     #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1581:.\Generated_Source\PSoC5/UART.c ****                          (UART_PARITY_TYPE_SW != 0u) )
1582:.\Generated_Source\PSoC5/UART.c ****                         UART_WriteControlRegister(UART_ReadControlRegister() &
1583:.\Generated_Source\PSoC5/UART.c ****                                                       (uint8)~UART_CTRL_HD_SEND_BREAK);
1584:.\Generated_Source\PSoC5/UART.c ****                     #endif /* End UART_PARITY_TYPE != NONE */
1585:.\Generated_Source\PSoC5/UART.c ****                 }
1586:.\Generated_Source\PSoC5/UART.c ****             #endif    /* End UART_HD_ENABLED */
1587:.\Generated_Source\PSoC5/UART.c ****         }
1588:.\Generated_Source\PSoC5/UART.c ****     }
 1657              		.loc 1 1588 0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 58


 1658 00c2 07F11407 		add	r7, r7, #20
 1659 00c6 BD46     		mov	sp, r7
 1660 00c8 80BC     		pop	{r7}
 1661 00ca 7047     		bx	lr
 1662              		.cfi_endproc
 1663              	.LFE27:
 1664              		.size	UART_SendBreak, .-UART_SendBreak
 1665              		.section	.text.UART_SetTxAddressMode,"ax",%progbits
 1666              		.align	2
 1667              		.global	UART_SetTxAddressMode
 1668              		.thumb
 1669              		.thumb_func
 1670              		.type	UART_SetTxAddressMode, %function
 1671              	UART_SetTxAddressMode:
 1672              	.LFB28:
1589:.\Generated_Source\PSoC5/UART.c **** 
1590:.\Generated_Source\PSoC5/UART.c **** 
1591:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1592:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxAddressMode
1593:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1594:.\Generated_Source\PSoC5/UART.c ****     *
1595:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1596:.\Generated_Source\PSoC5/UART.c ****     *  Set the transmit addressing mode
1597:.\Generated_Source\PSoC5/UART.c ****     *
1598:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1599:.\Generated_Source\PSoC5/UART.c ****     *  addressMode: 0 -> Space
1600:.\Generated_Source\PSoC5/UART.c ****     *               1 -> Mark
1601:.\Generated_Source\PSoC5/UART.c ****     *
1602:.\Generated_Source\PSoC5/UART.c ****     * Return:
1603:.\Generated_Source\PSoC5/UART.c ****     *  None.
1604:.\Generated_Source\PSoC5/UART.c ****     *
1605:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1606:.\Generated_Source\PSoC5/UART.c ****     void UART_SetTxAddressMode(uint8 addressMode) 
1607:.\Generated_Source\PSoC5/UART.c ****     {
 1673              		.loc 1 1607 0
 1674              		.cfi_startproc
 1675              		@ args = 0, pretend = 0, frame = 8
 1676              		@ frame_needed = 1, uses_anonymous_args = 0
 1677              		@ link register save eliminated.
 1678 0000 80B4     		push	{r7}
 1679              	.LCFI77:
 1680              		.cfi_def_cfa_offset 4
 1681 0002 83B0     		sub	sp, sp, #12
 1682              	.LCFI78:
 1683              		.cfi_def_cfa_offset 16
 1684 0004 00AF     		add	r7, sp, #0
 1685              		.cfi_offset 7, -4
 1686              	.LCFI79:
 1687              		.cfi_def_cfa_register 7
 1688 0006 0346     		mov	r3, r0
 1689 0008 FB71     		strb	r3, [r7, #7]
1608:.\Generated_Source\PSoC5/UART.c ****         /* Mark/Space sending enable*/
1609:.\Generated_Source\PSoC5/UART.c ****         if(addressMode != 0u)
1610:.\Generated_Source\PSoC5/UART.c ****         {
1611:.\Generated_Source\PSoC5/UART.c ****             #if( UART_CONTROL_REG_REMOVED == 0u )
1612:.\Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() |
1613:.\Generated_Source\PSoC5/UART.c ****                                                       UART_CTRL_MARK);
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 59


1614:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED == 0u */
1615:.\Generated_Source\PSoC5/UART.c ****         }
1616:.\Generated_Source\PSoC5/UART.c ****         else
1617:.\Generated_Source\PSoC5/UART.c ****         {
1618:.\Generated_Source\PSoC5/UART.c ****             #if( UART_CONTROL_REG_REMOVED == 0u )
1619:.\Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1620:.\Generated_Source\PSoC5/UART.c ****                                                     (uint8)~UART_CTRL_MARK);
1621:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED == 0u */
1622:.\Generated_Source\PSoC5/UART.c ****         }
1623:.\Generated_Source\PSoC5/UART.c ****     }
 1690              		.loc 1 1623 0
 1691 000a 07F10C07 		add	r7, r7, #12
 1692 000e BD46     		mov	sp, r7
 1693 0010 80BC     		pop	{r7}
 1694 0012 7047     		bx	lr
 1695              		.cfi_endproc
 1696              	.LFE28:
 1697              		.size	UART_SetTxAddressMode, .-UART_SetTxAddressMode
 1698              		.bss
 1699              	tx_period.2343:
 1700 0005 00       		.space	1
 1701              		.text
 1702              	.Letext0:
 1703              		.section	.debug_loc,"",%progbits
 1704              	.Ldebug_loc0:
 1705              	.LLST0:
 1706 0000 00000000 		.4byte	.LFB0
 1707 0004 02000000 		.4byte	.LCFI0
 1708 0008 0100     		.2byte	0x1
 1709 000a 5D       		.byte	0x5d
 1710 000b 02000000 		.4byte	.LCFI0
 1711 000f 04000000 		.4byte	.LCFI1
 1712 0013 0200     		.2byte	0x2
 1713 0015 7D       		.byte	0x7d
 1714 0016 08       		.sleb128 8
 1715 0017 04000000 		.4byte	.LCFI1
 1716 001b 2A000000 		.4byte	.LFE0
 1717 001f 0200     		.2byte	0x2
 1718 0021 77       		.byte	0x77
 1719 0022 08       		.sleb128 8
 1720 0023 00000000 		.4byte	0x0
 1721 0027 00000000 		.4byte	0x0
 1722              	.LLST1:
 1723 002b 00000000 		.4byte	.LFB1
 1724 002f 02000000 		.4byte	.LCFI2
 1725 0033 0100     		.2byte	0x1
 1726 0035 5D       		.byte	0x5d
 1727 0036 02000000 		.4byte	.LCFI2
 1728 003a 04000000 		.4byte	.LCFI3
 1729 003e 0200     		.2byte	0x2
 1730 0040 7D       		.byte	0x7d
 1731 0041 08       		.sleb128 8
 1732 0042 04000000 		.4byte	.LCFI3
 1733 0046 68000000 		.4byte	.LFE1
 1734 004a 0200     		.2byte	0x2
 1735 004c 77       		.byte	0x77
 1736 004d 08       		.sleb128 8
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 60


 1737 004e 00000000 		.4byte	0x0
 1738 0052 00000000 		.4byte	0x0
 1739              	.LLST2:
 1740 0056 00000000 		.4byte	.LFB2
 1741 005a 02000000 		.4byte	.LCFI4
 1742 005e 0100     		.2byte	0x1
 1743 0060 5D       		.byte	0x5d
 1744 0061 02000000 		.4byte	.LCFI4
 1745 0065 04000000 		.4byte	.LCFI5
 1746 0069 0200     		.2byte	0x2
 1747 006b 7D       		.byte	0x7d
 1748 006c 08       		.sleb128 8
 1749 006d 04000000 		.4byte	.LCFI5
 1750 0071 06000000 		.4byte	.LCFI6
 1751 0075 0200     		.2byte	0x2
 1752 0077 7D       		.byte	0x7d
 1753 0078 10       		.sleb128 16
 1754 0079 06000000 		.4byte	.LCFI6
 1755 007d 84000000 		.4byte	.LFE2
 1756 0081 0200     		.2byte	0x2
 1757 0083 77       		.byte	0x77
 1758 0084 10       		.sleb128 16
 1759 0085 00000000 		.4byte	0x0
 1760 0089 00000000 		.4byte	0x0
 1761              	.LLST3:
 1762 008d 00000000 		.4byte	.LFB3
 1763 0091 02000000 		.4byte	.LCFI7
 1764 0095 0100     		.2byte	0x1
 1765 0097 5D       		.byte	0x5d
 1766 0098 02000000 		.4byte	.LCFI7
 1767 009c 04000000 		.4byte	.LCFI8
 1768 00a0 0200     		.2byte	0x2
 1769 00a2 7D       		.byte	0x7d
 1770 00a3 08       		.sleb128 8
 1771 00a4 04000000 		.4byte	.LCFI8
 1772 00a8 06000000 		.4byte	.LCFI9
 1773 00ac 0200     		.2byte	0x2
 1774 00ae 7D       		.byte	0x7d
 1775 00af 10       		.sleb128 16
 1776 00b0 06000000 		.4byte	.LCFI9
 1777 00b4 74000000 		.4byte	.LFE3
 1778 00b8 0200     		.2byte	0x2
 1779 00ba 77       		.byte	0x77
 1780 00bb 10       		.sleb128 16
 1781 00bc 00000000 		.4byte	0x0
 1782 00c0 00000000 		.4byte	0x0
 1783              	.LLST4:
 1784 00c4 00000000 		.4byte	.LFB4
 1785 00c8 02000000 		.4byte	.LCFI10
 1786 00cc 0100     		.2byte	0x1
 1787 00ce 5D       		.byte	0x5d
 1788 00cf 02000000 		.4byte	.LCFI10
 1789 00d3 04000000 		.4byte	.LCFI11
 1790 00d7 0200     		.2byte	0x2
 1791 00d9 7D       		.byte	0x7d
 1792 00da 04       		.sleb128 4
 1793 00db 04000000 		.4byte	.LCFI11
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 61


 1794 00df 10000000 		.4byte	.LFE4
 1795 00e3 0200     		.2byte	0x2
 1796 00e5 77       		.byte	0x77
 1797 00e6 04       		.sleb128 4
 1798 00e7 00000000 		.4byte	0x0
 1799 00eb 00000000 		.4byte	0x0
 1800              	.LLST5:
 1801 00ef 00000000 		.4byte	.LFB5
 1802 00f3 02000000 		.4byte	.LCFI12
 1803 00f7 0100     		.2byte	0x1
 1804 00f9 5D       		.byte	0x5d
 1805 00fa 02000000 		.4byte	.LCFI12
 1806 00fe 04000000 		.4byte	.LCFI13
 1807 0102 0200     		.2byte	0x2
 1808 0104 7D       		.byte	0x7d
 1809 0105 04       		.sleb128 4
 1810 0106 04000000 		.4byte	.LCFI13
 1811 010a 06000000 		.4byte	.LCFI14
 1812 010e 0200     		.2byte	0x2
 1813 0110 7D       		.byte	0x7d
 1814 0111 10       		.sleb128 16
 1815 0112 06000000 		.4byte	.LCFI14
 1816 0116 14000000 		.4byte	.LFE5
 1817 011a 0200     		.2byte	0x2
 1818 011c 77       		.byte	0x77
 1819 011d 10       		.sleb128 16
 1820 011e 00000000 		.4byte	0x0
 1821 0122 00000000 		.4byte	0x0
 1822              	.LLST6:
 1823 0126 00000000 		.4byte	.LFB6
 1824 012a 02000000 		.4byte	.LCFI15
 1825 012e 0100     		.2byte	0x1
 1826 0130 5D       		.byte	0x5d
 1827 0131 02000000 		.4byte	.LCFI15
 1828 0135 04000000 		.4byte	.LCFI16
 1829 0139 0200     		.2byte	0x2
 1830 013b 7D       		.byte	0x7d
 1831 013c 04       		.sleb128 4
 1832 013d 04000000 		.4byte	.LCFI16
 1833 0141 18000000 		.4byte	.LFE6
 1834 0145 0200     		.2byte	0x2
 1835 0147 77       		.byte	0x77
 1836 0148 04       		.sleb128 4
 1837 0149 00000000 		.4byte	0x0
 1838 014d 00000000 		.4byte	0x0
 1839              	.LLST7:
 1840 0151 00000000 		.4byte	.LFB7
 1841 0155 02000000 		.4byte	.LCFI17
 1842 0159 0100     		.2byte	0x1
 1843 015b 5D       		.byte	0x5d
 1844 015c 02000000 		.4byte	.LCFI17
 1845 0160 04000000 		.4byte	.LCFI18
 1846 0164 0200     		.2byte	0x2
 1847 0166 7D       		.byte	0x7d
 1848 0167 04       		.sleb128 4
 1849 0168 04000000 		.4byte	.LCFI18
 1850 016c 18000000 		.4byte	.LFE7
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 62


 1851 0170 0200     		.2byte	0x2
 1852 0172 77       		.byte	0x77
 1853 0173 04       		.sleb128 4
 1854 0174 00000000 		.4byte	0x0
 1855 0178 00000000 		.4byte	0x0
 1856              	.LLST8:
 1857 017c 00000000 		.4byte	.LFB8
 1858 0180 02000000 		.4byte	.LCFI19
 1859 0184 0100     		.2byte	0x1
 1860 0186 5D       		.byte	0x5d
 1861 0187 02000000 		.4byte	.LCFI19
 1862 018b 04000000 		.4byte	.LCFI20
 1863 018f 0200     		.2byte	0x2
 1864 0191 7D       		.byte	0x7d
 1865 0192 04       		.sleb128 4
 1866 0193 04000000 		.4byte	.LCFI20
 1867 0197 06000000 		.4byte	.LCFI21
 1868 019b 0200     		.2byte	0x2
 1869 019d 7D       		.byte	0x7d
 1870 019e 10       		.sleb128 16
 1871 019f 06000000 		.4byte	.LCFI21
 1872 01a3 20000000 		.4byte	.LFE8
 1873 01a7 0200     		.2byte	0x2
 1874 01a9 77       		.byte	0x77
 1875 01aa 10       		.sleb128 16
 1876 01ab 00000000 		.4byte	0x0
 1877 01af 00000000 		.4byte	0x0
 1878              	.LLST9:
 1879 01b3 00000000 		.4byte	.LFB9
 1880 01b7 02000000 		.4byte	.LCFI22
 1881 01bb 0100     		.2byte	0x1
 1882 01bd 5D       		.byte	0x5d
 1883 01be 02000000 		.4byte	.LCFI22
 1884 01c2 04000000 		.4byte	.LCFI23
 1885 01c6 0200     		.2byte	0x2
 1886 01c8 7D       		.byte	0x7d
 1887 01c9 08       		.sleb128 8
 1888 01ca 04000000 		.4byte	.LCFI23
 1889 01ce 06000000 		.4byte	.LCFI24
 1890 01d2 0200     		.2byte	0x2
 1891 01d4 7D       		.byte	0x7d
 1892 01d5 10       		.sleb128 16
 1893 01d6 06000000 		.4byte	.LCFI24
 1894 01da A8000000 		.4byte	.LFE9
 1895 01de 0200     		.2byte	0x2
 1896 01e0 77       		.byte	0x77
 1897 01e1 10       		.sleb128 16
 1898 01e2 00000000 		.4byte	0x0
 1899 01e6 00000000 		.4byte	0x0
 1900              	.LLST10:
 1901 01ea 00000000 		.4byte	.LFB10
 1902 01ee 02000000 		.4byte	.LCFI25
 1903 01f2 0100     		.2byte	0x1
 1904 01f4 5D       		.byte	0x5d
 1905 01f5 02000000 		.4byte	.LCFI25
 1906 01f9 04000000 		.4byte	.LCFI26
 1907 01fd 0200     		.2byte	0x2
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 63


 1908 01ff 7D       		.byte	0x7d
 1909 0200 04       		.sleb128 4
 1910 0201 04000000 		.4byte	.LCFI26
 1911 0205 06000000 		.4byte	.LCFI27
 1912 0209 0200     		.2byte	0x2
 1913 020b 7D       		.byte	0x7d
 1914 020c 10       		.sleb128 16
 1915 020d 06000000 		.4byte	.LCFI27
 1916 0211 50000000 		.4byte	.LFE10
 1917 0215 0200     		.2byte	0x2
 1918 0217 77       		.byte	0x77
 1919 0218 10       		.sleb128 16
 1920 0219 00000000 		.4byte	0x0
 1921 021d 00000000 		.4byte	0x0
 1922              	.LLST11:
 1923 0221 00000000 		.4byte	.LFB11
 1924 0225 02000000 		.4byte	.LCFI28
 1925 0229 0100     		.2byte	0x1
 1926 022b 5D       		.byte	0x5d
 1927 022c 02000000 		.4byte	.LCFI28
 1928 0230 04000000 		.4byte	.LCFI29
 1929 0234 0200     		.2byte	0x2
 1930 0236 7D       		.byte	0x7d
 1931 0237 08       		.sleb128 8
 1932 0238 04000000 		.4byte	.LCFI29
 1933 023c 06000000 		.4byte	.LCFI30
 1934 0240 0200     		.2byte	0x2
 1935 0242 7D       		.byte	0x7d
 1936 0243 10       		.sleb128 16
 1937 0244 06000000 		.4byte	.LCFI30
 1938 0248 D4000000 		.4byte	.LFE11
 1939 024c 0200     		.2byte	0x2
 1940 024e 77       		.byte	0x77
 1941 024f 10       		.sleb128 16
 1942 0250 00000000 		.4byte	0x0
 1943 0254 00000000 		.4byte	0x0
 1944              	.LLST12:
 1945 0258 00000000 		.4byte	.LFB12
 1946 025c 02000000 		.4byte	.LCFI31
 1947 0260 0100     		.2byte	0x1
 1948 0262 5D       		.byte	0x5d
 1949 0263 02000000 		.4byte	.LCFI31
 1950 0267 04000000 		.4byte	.LCFI32
 1951 026b 0200     		.2byte	0x2
 1952 026d 7D       		.byte	0x7d
 1953 026e 10       		.sleb128 16
 1954 026f 04000000 		.4byte	.LCFI32
 1955 0273 24000000 		.4byte	.LFE12
 1956 0277 0200     		.2byte	0x2
 1957 0279 77       		.byte	0x77
 1958 027a 10       		.sleb128 16
 1959 027b 00000000 		.4byte	0x0
 1960 027f 00000000 		.4byte	0x0
 1961              	.LLST13:
 1962 0283 00000000 		.4byte	.LFB13
 1963 0287 02000000 		.4byte	.LCFI33
 1964 028b 0100     		.2byte	0x1
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 64


 1965 028d 5D       		.byte	0x5d
 1966 028e 02000000 		.4byte	.LCFI33
 1967 0292 04000000 		.4byte	.LCFI34
 1968 0296 0200     		.2byte	0x2
 1969 0298 7D       		.byte	0x7d
 1970 0299 08       		.sleb128 8
 1971 029a 04000000 		.4byte	.LCFI34
 1972 029e 06000000 		.4byte	.LCFI35
 1973 02a2 0200     		.2byte	0x2
 1974 02a4 7D       		.byte	0x7d
 1975 02a5 10       		.sleb128 16
 1976 02a6 06000000 		.4byte	.LCFI35
 1977 02aa B6000000 		.4byte	.LFE13
 1978 02ae 0200     		.2byte	0x2
 1979 02b0 77       		.byte	0x77
 1980 02b1 10       		.sleb128 16
 1981 02b2 00000000 		.4byte	0x0
 1982 02b6 00000000 		.4byte	0x0
 1983              	.LLST14:
 1984 02ba 00000000 		.4byte	.LFB14
 1985 02be 02000000 		.4byte	.LCFI36
 1986 02c2 0100     		.2byte	0x1
 1987 02c4 5D       		.byte	0x5d
 1988 02c5 02000000 		.4byte	.LCFI36
 1989 02c9 04000000 		.4byte	.LCFI37
 1990 02cd 0200     		.2byte	0x2
 1991 02cf 7D       		.byte	0x7d
 1992 02d0 08       		.sleb128 8
 1993 02d1 04000000 		.4byte	.LCFI37
 1994 02d5 06000000 		.4byte	.LCFI38
 1995 02d9 0200     		.2byte	0x2
 1996 02db 7D       		.byte	0x7d
 1997 02dc 10       		.sleb128 16
 1998 02dd 06000000 		.4byte	.LCFI38
 1999 02e1 94000000 		.4byte	.LFE14
 2000 02e5 0200     		.2byte	0x2
 2001 02e7 77       		.byte	0x77
 2002 02e8 10       		.sleb128 16
 2003 02e9 00000000 		.4byte	0x0
 2004 02ed 00000000 		.4byte	0x0
 2005              	.LLST15:
 2006 02f1 00000000 		.4byte	.LFB15
 2007 02f5 02000000 		.4byte	.LCFI39
 2008 02f9 0100     		.2byte	0x1
 2009 02fb 5D       		.byte	0x5d
 2010 02fc 02000000 		.4byte	.LCFI39
 2011 0300 04000000 		.4byte	.LCFI40
 2012 0304 0200     		.2byte	0x2
 2013 0306 7D       		.byte	0x7d
 2014 0307 04       		.sleb128 4
 2015 0308 04000000 		.4byte	.LCFI40
 2016 030c 06000000 		.4byte	.LCFI41
 2017 0310 0200     		.2byte	0x2
 2018 0312 7D       		.byte	0x7d
 2019 0313 10       		.sleb128 16
 2020 0314 06000000 		.4byte	.LCFI41
 2021 0318 14000000 		.4byte	.LFE15
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 65


 2022 031c 0200     		.2byte	0x2
 2023 031e 77       		.byte	0x77
 2024 031f 10       		.sleb128 16
 2025 0320 00000000 		.4byte	0x0
 2026 0324 00000000 		.4byte	0x0
 2027              	.LLST16:
 2028 0328 00000000 		.4byte	.LFB16
 2029 032c 02000000 		.4byte	.LCFI42
 2030 0330 0100     		.2byte	0x1
 2031 0332 5D       		.byte	0x5d
 2032 0333 02000000 		.4byte	.LCFI42
 2033 0337 04000000 		.4byte	.LCFI43
 2034 033b 0200     		.2byte	0x2
 2035 033d 7D       		.byte	0x7d
 2036 033e 04       		.sleb128 4
 2037 033f 04000000 		.4byte	.LCFI43
 2038 0343 06000000 		.4byte	.LCFI44
 2039 0347 0200     		.2byte	0x2
 2040 0349 7D       		.byte	0x7d
 2041 034a 10       		.sleb128 16
 2042 034b 06000000 		.4byte	.LCFI44
 2043 034f 20000000 		.4byte	.LFE16
 2044 0353 0200     		.2byte	0x2
 2045 0355 77       		.byte	0x77
 2046 0356 10       		.sleb128 16
 2047 0357 00000000 		.4byte	0x0
 2048 035b 00000000 		.4byte	0x0
 2049              	.LLST17:
 2050 035f 00000000 		.4byte	.LFB17
 2051 0363 02000000 		.4byte	.LCFI45
 2052 0367 0100     		.2byte	0x1
 2053 0369 5D       		.byte	0x5d
 2054 036a 02000000 		.4byte	.LCFI45
 2055 036e 04000000 		.4byte	.LCFI46
 2056 0372 0200     		.2byte	0x2
 2057 0374 7D       		.byte	0x7d
 2058 0375 04       		.sleb128 4
 2059 0376 04000000 		.4byte	.LCFI46
 2060 037a 06000000 		.4byte	.LCFI47
 2061 037e 0200     		.2byte	0x2
 2062 0380 7D       		.byte	0x7d
 2063 0381 10       		.sleb128 16
 2064 0382 06000000 		.4byte	.LCFI47
 2065 0386 20000000 		.4byte	.LFE17
 2066 038a 0200     		.2byte	0x2
 2067 038c 77       		.byte	0x77
 2068 038d 10       		.sleb128 16
 2069 038e 00000000 		.4byte	0x0
 2070 0392 00000000 		.4byte	0x0
 2071              	.LLST18:
 2072 0396 00000000 		.4byte	.LFB18
 2073 039a 02000000 		.4byte	.LCFI48
 2074 039e 0100     		.2byte	0x1
 2075 03a0 5D       		.byte	0x5d
 2076 03a1 02000000 		.4byte	.LCFI48
 2077 03a5 04000000 		.4byte	.LCFI49
 2078 03a9 0200     		.2byte	0x2
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 66


 2079 03ab 7D       		.byte	0x7d
 2080 03ac 04       		.sleb128 4
 2081 03ad 04000000 		.4byte	.LCFI49
 2082 03b1 06000000 		.4byte	.LCFI50
 2083 03b5 0200     		.2byte	0x2
 2084 03b7 7D       		.byte	0x7d
 2085 03b8 10       		.sleb128 16
 2086 03b9 06000000 		.4byte	.LCFI50
 2087 03bd 20000000 		.4byte	.LFE18
 2088 03c1 0200     		.2byte	0x2
 2089 03c3 77       		.byte	0x77
 2090 03c4 10       		.sleb128 16
 2091 03c5 00000000 		.4byte	0x0
 2092 03c9 00000000 		.4byte	0x0
 2093              	.LLST19:
 2094 03cd 00000000 		.4byte	.LFB19
 2095 03d1 02000000 		.4byte	.LCFI51
 2096 03d5 0100     		.2byte	0x1
 2097 03d7 5D       		.byte	0x5d
 2098 03d8 02000000 		.4byte	.LCFI51
 2099 03dc 04000000 		.4byte	.LCFI52
 2100 03e0 0200     		.2byte	0x2
 2101 03e2 7D       		.byte	0x7d
 2102 03e3 04       		.sleb128 4
 2103 03e4 04000000 		.4byte	.LCFI52
 2104 03e8 06000000 		.4byte	.LCFI53
 2105 03ec 0200     		.2byte	0x2
 2106 03ee 7D       		.byte	0x7d
 2107 03ef 10       		.sleb128 16
 2108 03f0 06000000 		.4byte	.LCFI53
 2109 03f4 2E000000 		.4byte	.LFE19
 2110 03f8 0200     		.2byte	0x2
 2111 03fa 77       		.byte	0x77
 2112 03fb 10       		.sleb128 16
 2113 03fc 00000000 		.4byte	0x0
 2114 0400 00000000 		.4byte	0x0
 2115              	.LLST20:
 2116 0404 00000000 		.4byte	.LFB20
 2117 0408 02000000 		.4byte	.LCFI54
 2118 040c 0100     		.2byte	0x1
 2119 040e 5D       		.byte	0x5d
 2120 040f 02000000 		.4byte	.LCFI54
 2121 0413 04000000 		.4byte	.LCFI55
 2122 0417 0200     		.2byte	0x2
 2123 0419 7D       		.byte	0x7d
 2124 041a 04       		.sleb128 4
 2125 041b 04000000 		.4byte	.LCFI55
 2126 041f 18000000 		.4byte	.LFE20
 2127 0423 0200     		.2byte	0x2
 2128 0425 77       		.byte	0x77
 2129 0426 04       		.sleb128 4
 2130 0427 00000000 		.4byte	0x0
 2131 042b 00000000 		.4byte	0x0
 2132              	.LLST21:
 2133 042f 00000000 		.4byte	.LFB21
 2134 0433 02000000 		.4byte	.LCFI56
 2135 0437 0100     		.2byte	0x1
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 67


 2136 0439 5D       		.byte	0x5d
 2137 043a 02000000 		.4byte	.LCFI56
 2138 043e 04000000 		.4byte	.LCFI57
 2139 0442 0200     		.2byte	0x2
 2140 0444 7D       		.byte	0x7d
 2141 0445 04       		.sleb128 4
 2142 0446 04000000 		.4byte	.LCFI57
 2143 044a 06000000 		.4byte	.LCFI58
 2144 044e 0200     		.2byte	0x2
 2145 0450 7D       		.byte	0x7d
 2146 0451 10       		.sleb128 16
 2147 0452 06000000 		.4byte	.LCFI58
 2148 0456 34000000 		.4byte	.LFE21
 2149 045a 0200     		.2byte	0x2
 2150 045c 77       		.byte	0x77
 2151 045d 10       		.sleb128 16
 2152 045e 00000000 		.4byte	0x0
 2153 0462 00000000 		.4byte	0x0
 2154              	.LLST22:
 2155 0466 00000000 		.4byte	.LFB22
 2156 046a 02000000 		.4byte	.LCFI59
 2157 046e 0100     		.2byte	0x1
 2158 0470 5D       		.byte	0x5d
 2159 0471 02000000 		.4byte	.LCFI59
 2160 0475 04000000 		.4byte	.LCFI60
 2161 0479 0200     		.2byte	0x2
 2162 047b 7D       		.byte	0x7d
 2163 047c 08       		.sleb128 8
 2164 047d 04000000 		.4byte	.LCFI60
 2165 0481 06000000 		.4byte	.LCFI61
 2166 0485 0200     		.2byte	0x2
 2167 0487 7D       		.byte	0x7d
 2168 0488 18       		.sleb128 24
 2169 0489 06000000 		.4byte	.LCFI61
 2170 048d 48000000 		.4byte	.LFE22
 2171 0491 0200     		.2byte	0x2
 2172 0493 77       		.byte	0x77
 2173 0494 18       		.sleb128 24
 2174 0495 00000000 		.4byte	0x0
 2175 0499 00000000 		.4byte	0x0
 2176              	.LLST23:
 2177 049d 00000000 		.4byte	.LFB23
 2178 04a1 02000000 		.4byte	.LCFI62
 2179 04a5 0100     		.2byte	0x1
 2180 04a7 5D       		.byte	0x5d
 2181 04a8 02000000 		.4byte	.LCFI62
 2182 04ac 04000000 		.4byte	.LCFI63
 2183 04b0 0200     		.2byte	0x2
 2184 04b2 7D       		.byte	0x7d
 2185 04b3 08       		.sleb128 8
 2186 04b4 04000000 		.4byte	.LCFI63
 2187 04b8 06000000 		.4byte	.LCFI64
 2188 04bc 0200     		.2byte	0x2
 2189 04be 7D       		.byte	0x7d
 2190 04bf 18       		.sleb128 24
 2191 04c0 06000000 		.4byte	.LCFI64
 2192 04c4 46000000 		.4byte	.LFE23
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 68


 2193 04c8 0200     		.2byte	0x2
 2194 04ca 77       		.byte	0x77
 2195 04cb 18       		.sleb128 24
 2196 04cc 00000000 		.4byte	0x0
 2197 04d0 00000000 		.4byte	0x0
 2198              	.LLST24:
 2199 04d4 00000000 		.4byte	.LFB24
 2200 04d8 02000000 		.4byte	.LCFI65
 2201 04dc 0100     		.2byte	0x1
 2202 04de 5D       		.byte	0x5d
 2203 04df 02000000 		.4byte	.LCFI65
 2204 04e3 04000000 		.4byte	.LCFI66
 2205 04e7 0200     		.2byte	0x2
 2206 04e9 7D       		.byte	0x7d
 2207 04ea 08       		.sleb128 8
 2208 04eb 04000000 		.4byte	.LCFI66
 2209 04ef 06000000 		.4byte	.LCFI67
 2210 04f3 0200     		.2byte	0x2
 2211 04f5 7D       		.byte	0x7d
 2212 04f6 10       		.sleb128 16
 2213 04f7 06000000 		.4byte	.LCFI67
 2214 04fb 38000000 		.4byte	.LFE24
 2215 04ff 0200     		.2byte	0x2
 2216 0501 77       		.byte	0x77
 2217 0502 10       		.sleb128 16
 2218 0503 00000000 		.4byte	0x0
 2219 0507 00000000 		.4byte	0x0
 2220              	.LLST25:
 2221 050b 00000000 		.4byte	.LFB25
 2222 050f 02000000 		.4byte	.LCFI68
 2223 0513 0100     		.2byte	0x1
 2224 0515 5D       		.byte	0x5d
 2225 0516 02000000 		.4byte	.LCFI68
 2226 051a 04000000 		.4byte	.LCFI69
 2227 051e 0200     		.2byte	0x2
 2228 0520 7D       		.byte	0x7d
 2229 0521 04       		.sleb128 4
 2230 0522 04000000 		.4byte	.LCFI69
 2231 0526 06000000 		.4byte	.LCFI70
 2232 052a 0200     		.2byte	0x2
 2233 052c 7D       		.byte	0x7d
 2234 052d 10       		.sleb128 16
 2235 052e 06000000 		.4byte	.LCFI70
 2236 0532 4A000000 		.4byte	.LFE25
 2237 0536 0200     		.2byte	0x2
 2238 0538 77       		.byte	0x77
 2239 0539 10       		.sleb128 16
 2240 053a 00000000 		.4byte	0x0
 2241 053e 00000000 		.4byte	0x0
 2242              	.LLST26:
 2243 0542 00000000 		.4byte	.LFB26
 2244 0546 02000000 		.4byte	.LCFI71
 2245 054a 0100     		.2byte	0x1
 2246 054c 5D       		.byte	0x5d
 2247 054d 02000000 		.4byte	.LCFI71
 2248 0551 04000000 		.4byte	.LCFI72
 2249 0555 0200     		.2byte	0x2
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 69


 2250 0557 7D       		.byte	0x7d
 2251 0558 08       		.sleb128 8
 2252 0559 04000000 		.4byte	.LCFI72
 2253 055d 06000000 		.4byte	.LCFI73
 2254 0561 0200     		.2byte	0x2
 2255 0563 7D       		.byte	0x7d
 2256 0564 10       		.sleb128 16
 2257 0565 06000000 		.4byte	.LCFI73
 2258 0569 54000000 		.4byte	.LFE26
 2259 056d 0200     		.2byte	0x2
 2260 056f 77       		.byte	0x77
 2261 0570 10       		.sleb128 16
 2262 0571 00000000 		.4byte	0x0
 2263 0575 00000000 		.4byte	0x0
 2264              	.LLST27:
 2265 0579 00000000 		.4byte	.LFB27
 2266 057d 02000000 		.4byte	.LCFI74
 2267 0581 0100     		.2byte	0x1
 2268 0583 5D       		.byte	0x5d
 2269 0584 02000000 		.4byte	.LCFI74
 2270 0588 04000000 		.4byte	.LCFI75
 2271 058c 0200     		.2byte	0x2
 2272 058e 7D       		.byte	0x7d
 2273 058f 04       		.sleb128 4
 2274 0590 04000000 		.4byte	.LCFI75
 2275 0594 06000000 		.4byte	.LCFI76
 2276 0598 0200     		.2byte	0x2
 2277 059a 7D       		.byte	0x7d
 2278 059b 18       		.sleb128 24
 2279 059c 06000000 		.4byte	.LCFI76
 2280 05a0 CC000000 		.4byte	.LFE27
 2281 05a4 0200     		.2byte	0x2
 2282 05a6 77       		.byte	0x77
 2283 05a7 18       		.sleb128 24
 2284 05a8 00000000 		.4byte	0x0
 2285 05ac 00000000 		.4byte	0x0
 2286              	.LLST28:
 2287 05b0 00000000 		.4byte	.LFB28
 2288 05b4 02000000 		.4byte	.LCFI77
 2289 05b8 0100     		.2byte	0x1
 2290 05ba 5D       		.byte	0x5d
 2291 05bb 02000000 		.4byte	.LCFI77
 2292 05bf 04000000 		.4byte	.LCFI78
 2293 05c3 0200     		.2byte	0x2
 2294 05c5 7D       		.byte	0x7d
 2295 05c6 04       		.sleb128 4
 2296 05c7 04000000 		.4byte	.LCFI78
 2297 05cb 06000000 		.4byte	.LCFI79
 2298 05cf 0200     		.2byte	0x2
 2299 05d1 7D       		.byte	0x7d
 2300 05d2 10       		.sleb128 16
 2301 05d3 06000000 		.4byte	.LCFI79
 2302 05d7 14000000 		.4byte	.LFE28
 2303 05db 0200     		.2byte	0x2
 2304 05dd 77       		.byte	0x77
 2305 05de 10       		.sleb128 16
 2306 05df 00000000 		.4byte	0x0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 70


 2307 05e3 00000000 		.4byte	0x0
 2308              		.file 2 ".\\Generated_Source\\PSoC5\\/cytypes.h"
 2309              		.section	.debug_info
 2310 0000 34060000 		.4byte	0x634
 2311 0004 0200     		.2byte	0x2
 2312 0006 00000000 		.4byte	.Ldebug_abbrev0
 2313 000a 04       		.byte	0x4
 2314 000b 01       		.uleb128 0x1
 2315 000c 8D000000 		.4byte	.LASF68
 2316 0010 01       		.byte	0x1
 2317 0011 AF000000 		.4byte	.LASF69
 2318 0015 00000000 		.4byte	.LASF70
 2319 0019 00000000 		.4byte	0x0
 2320 001d 00000000 		.4byte	0x0
 2321 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 2322 0025 00000000 		.4byte	.Ldebug_line0
 2323 0029 02       		.uleb128 0x2
 2324 002a 01       		.byte	0x1
 2325 002b 06       		.byte	0x6
 2326 002c DD000000 		.4byte	.LASF0
 2327 0030 02       		.uleb128 0x2
 2328 0031 01       		.byte	0x1
 2329 0032 08       		.byte	0x8
 2330 0033 D6020000 		.4byte	.LASF1
 2331 0037 02       		.uleb128 0x2
 2332 0038 02       		.byte	0x2
 2333 0039 05       		.byte	0x5
 2334 003a F5020000 		.4byte	.LASF2
 2335 003e 02       		.uleb128 0x2
 2336 003f 02       		.byte	0x2
 2337 0040 07       		.byte	0x7
 2338 0041 F7010000 		.4byte	.LASF3
 2339 0045 02       		.uleb128 0x2
 2340 0046 04       		.byte	0x4
 2341 0047 05       		.byte	0x5
 2342 0048 FB000000 		.4byte	.LASF4
 2343 004c 02       		.uleb128 0x2
 2344 004d 04       		.byte	0x4
 2345 004e 07       		.byte	0x7
 2346 004f BA010000 		.4byte	.LASF5
 2347 0053 02       		.uleb128 0x2
 2348 0054 08       		.byte	0x8
 2349 0055 05       		.byte	0x5
 2350 0056 CF000000 		.4byte	.LASF6
 2351 005a 02       		.uleb128 0x2
 2352 005b 08       		.byte	0x8
 2353 005c 07       		.byte	0x7
 2354 005d 53000000 		.4byte	.LASF7
 2355 0061 03       		.uleb128 0x3
 2356 0062 04       		.byte	0x4
 2357 0063 05       		.byte	0x5
 2358 0064 696E7400 		.ascii	"int\000"
 2359 0068 02       		.uleb128 0x2
 2360 0069 04       		.byte	0x4
 2361 006a 07       		.byte	0x7
 2362 006b 8D010000 		.4byte	.LASF8
 2363 006f 04       		.uleb128 0x4
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 71


 2364 0070 21010000 		.4byte	.LASF9
 2365 0074 02       		.byte	0x2
 2366 0075 4C       		.byte	0x4c
 2367 0076 30000000 		.4byte	0x30
 2368 007a 04       		.uleb128 0x4
 2369 007b 28000000 		.4byte	.LASF10
 2370 007f 02       		.byte	0x2
 2371 0080 4D       		.byte	0x4d
 2372 0081 3E000000 		.4byte	0x3e
 2373 0085 02       		.uleb128 0x2
 2374 0086 04       		.byte	0x4
 2375 0087 04       		.byte	0x4
 2376 0088 A5020000 		.4byte	.LASF11
 2377 008c 02       		.uleb128 0x2
 2378 008d 08       		.byte	0x8
 2379 008e 04       		.byte	0x4
 2380 008f 40010000 		.4byte	.LASF12
 2381 0093 04       		.uleb128 0x4
 2382 0094 42030000 		.4byte	.LASF13
 2383 0098 02       		.byte	0x2
 2384 0099 5D       		.byte	0x5d
 2385 009a 9E000000 		.4byte	0x9e
 2386 009e 02       		.uleb128 0x2
 2387 009f 01       		.byte	0x1
 2388 00a0 08       		.byte	0x8
 2389 00a1 3D030000 		.4byte	.LASF14
 2390 00a5 05       		.uleb128 0x5
 2391 00a6 6F000000 		.4byte	0x6f
 2392 00aa 06       		.uleb128 0x6
 2393 00ab 04       		.byte	0x4
 2394 00ac 07       		.byte	0x7
 2395 00ad 07       		.uleb128 0x7
 2396 00ae 01       		.byte	0x1
 2397 00af 6A000000 		.4byte	.LASF15
 2398 00b3 01       		.byte	0x1
 2399 00b4 49       		.byte	0x49
 2400 00b5 01       		.byte	0x1
 2401 00b6 00000000 		.4byte	.LFB0
 2402 00ba 2A000000 		.4byte	.LFE0
 2403 00be 00000000 		.4byte	.LLST0
 2404 00c2 07       		.uleb128 0x7
 2405 00c3 01       		.byte	0x1
 2406 00c4 6E010000 		.4byte	.LASF16
 2407 00c8 01       		.byte	0x1
 2408 00c9 65       		.byte	0x65
 2409 00ca 01       		.byte	0x1
 2410 00cb 00000000 		.4byte	.LFB1
 2411 00cf 68000000 		.4byte	.LFE1
 2412 00d3 2B000000 		.4byte	.LLST1
 2413 00d7 08       		.uleb128 0x8
 2414 00d8 01       		.byte	0x1
 2415 00d9 1F030000 		.4byte	.LASF17
 2416 00dd 01       		.byte	0x1
 2417 00de AE       		.byte	0xae
 2418 00df 01       		.byte	0x1
 2419 00e0 00000000 		.4byte	.LFB2
 2420 00e4 84000000 		.4byte	.LFE2
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 72


 2421 00e8 56000000 		.4byte	.LLST2
 2422 00ec FF000000 		.4byte	0xff
 2423 00f0 09       		.uleb128 0x9
 2424 00f1 6D030000 		.4byte	.LASF19
 2425 00f5 01       		.byte	0x1
 2426 00f6 B0       		.byte	0xb0
 2427 00f7 6F000000 		.4byte	0x6f
 2428 00fb 02       		.byte	0x2
 2429 00fc 91       		.byte	0x91
 2430 00fd 77       		.sleb128 -9
 2431 00fe 00       		.byte	0x0
 2432 00ff 08       		.uleb128 0x8
 2433 0100 01       		.byte	0x1
 2434 0101 B8030000 		.4byte	.LASF18
 2435 0105 01       		.byte	0x1
 2436 0106 E3       		.byte	0xe3
 2437 0107 01       		.byte	0x1
 2438 0108 00000000 		.4byte	.LFB3
 2439 010c 74000000 		.4byte	.LFE3
 2440 0110 8D000000 		.4byte	.LLST3
 2441 0114 27010000 		.4byte	0x127
 2442 0118 09       		.uleb128 0x9
 2443 0119 6D030000 		.4byte	.LASF19
 2444 011d 01       		.byte	0x1
 2445 011e E5       		.byte	0xe5
 2446 011f 6F000000 		.4byte	0x6f
 2447 0123 02       		.byte	0x2
 2448 0124 91       		.byte	0x91
 2449 0125 77       		.sleb128 -9
 2450 0126 00       		.byte	0x0
 2451 0127 0A       		.uleb128 0xa
 2452 0128 01       		.byte	0x1
 2453 0129 27010000 		.4byte	.LASF34
 2454 012d 01       		.byte	0x1
 2455 012e 1901     		.2byte	0x119
 2456 0130 01       		.byte	0x1
 2457 0131 6F000000 		.4byte	0x6f
 2458 0135 00000000 		.4byte	.LFB4
 2459 0139 10000000 		.4byte	.LFE4
 2460 013d C4000000 		.4byte	.LLST4
 2461 0141 0B       		.uleb128 0xb
 2462 0142 01       		.byte	0x1
 2463 0143 DF030000 		.4byte	.LASF20
 2464 0147 01       		.byte	0x1
 2465 0148 3101     		.2byte	0x131
 2466 014a 01       		.byte	0x1
 2467 014b 00000000 		.4byte	.LFB5
 2468 014f 14000000 		.4byte	.LFE5
 2469 0153 EF000000 		.4byte	.LLST5
 2470 0157 6B010000 		.4byte	0x16b
 2471 015b 0C       		.uleb128 0xc
 2472 015c 66010000 		.4byte	.LASF24
 2473 0160 01       		.byte	0x1
 2474 0161 3101     		.2byte	0x131
 2475 0163 6F000000 		.4byte	0x6f
 2476 0167 02       		.byte	0x2
 2477 0168 91       		.byte	0x91
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 73


 2478 0169 77       		.sleb128 -9
 2479 016a 00       		.byte	0x0
 2480 016b 0D       		.uleb128 0xd
 2481 016c 01       		.byte	0x1
 2482 016d 8B030000 		.4byte	.LASF21
 2483 0171 01       		.byte	0x1
 2484 0172 5001     		.2byte	0x150
 2485 0174 01       		.byte	0x1
 2486 0175 00000000 		.4byte	.LFB6
 2487 0179 18000000 		.4byte	.LFE6
 2488 017d 26010000 		.4byte	.LLST6
 2489 0181 0D       		.uleb128 0xd
 2490 0182 01       		.byte	0x1
 2491 0183 E9000000 		.4byte	.LASF22
 2492 0187 01       		.byte	0x1
 2493 0188 6701     		.2byte	0x167
 2494 018a 01       		.byte	0x1
 2495 018b 00000000 		.4byte	.LFB7
 2496 018f 18000000 		.4byte	.LFE7
 2497 0193 51010000 		.4byte	.LLST7
 2498 0197 0B       		.uleb128 0xb
 2499 0198 01       		.byte	0x1
 2500 0199 48030000 		.4byte	.LASF23
 2501 019d 01       		.byte	0x1
 2502 019e 8101     		.2byte	0x181
 2503 01a0 01       		.byte	0x1
 2504 01a1 00000000 		.4byte	.LFB8
 2505 01a5 20000000 		.4byte	.LFE8
 2506 01a9 7C010000 		.4byte	.LLST8
 2507 01ad C1010000 		.4byte	0x1c1
 2508 01b1 0C       		.uleb128 0xc
 2509 01b2 37020000 		.4byte	.LASF25
 2510 01b6 01       		.byte	0x1
 2511 01b7 8101     		.2byte	0x181
 2512 01b9 6F000000 		.4byte	0x6f
 2513 01bd 02       		.byte	0x2
 2514 01be 91       		.byte	0x91
 2515 01bf 77       		.sleb128 -9
 2516 01c0 00       		.byte	0x0
 2517 01c1 0E       		.uleb128 0xe
 2518 01c2 01       		.byte	0x1
 2519 01c3 11010000 		.4byte	.LASF29
 2520 01c7 01       		.byte	0x1
 2521 01c8 A201     		.2byte	0x1a2
 2522 01ca 01       		.byte	0x1
 2523 01cb 6F000000 		.4byte	0x6f
 2524 01cf 00000000 		.4byte	.LFB9
 2525 01d3 A8000000 		.4byte	.LFE9
 2526 01d7 B3010000 		.4byte	.LLST9
 2527 01db 0D020000 		.4byte	0x20d
 2528 01df 0F       		.uleb128 0xf
 2529 01e0 18030000 		.4byte	.LASF26
 2530 01e4 01       		.byte	0x1
 2531 01e5 A401     		.2byte	0x1a4
 2532 01e7 6F000000 		.4byte	0x6f
 2533 01eb 02       		.byte	0x2
 2534 01ec 91       		.byte	0x91
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 74


 2535 01ed 75       		.sleb128 -11
 2536 01ee 0F       		.uleb128 0xf
 2537 01ef 1C020000 		.4byte	.LASF27
 2538 01f3 01       		.byte	0x1
 2539 01f4 A701     		.2byte	0x1a7
 2540 01f6 6F000000 		.4byte	0x6f
 2541 01fa 02       		.byte	0x2
 2542 01fb 91       		.byte	0x91
 2543 01fc 76       		.sleb128 -10
 2544 01fd 0F       		.uleb128 0xf
 2545 01fe 2F000000 		.4byte	.LASF28
 2546 0202 01       		.byte	0x1
 2547 0203 A801     		.2byte	0x1a8
 2548 0205 6F000000 		.4byte	0x6f
 2549 0209 02       		.byte	0x2
 2550 020a 91       		.byte	0x91
 2551 020b 77       		.sleb128 -9
 2552 020c 00       		.byte	0x0
 2553 020d 0E       		.uleb128 0xe
 2554 020e 01       		.byte	0x1
 2555 020f 2B030000 		.4byte	.LASF30
 2556 0213 01       		.byte	0x1
 2557 0214 FD01     		.2byte	0x1fd
 2558 0216 01       		.byte	0x1
 2559 0217 6F000000 		.4byte	0x6f
 2560 021b 00000000 		.4byte	.LFB10
 2561 021f 50000000 		.4byte	.LFE10
 2562 0223 EA010000 		.4byte	.LLST10
 2563 0227 3B020000 		.4byte	0x23b
 2564 022b 0F       		.uleb128 0xf
 2565 022c B1030000 		.4byte	.LASF31
 2566 0230 01       		.byte	0x1
 2567 0231 FF01     		.2byte	0x1ff
 2568 0233 6F000000 		.4byte	0x6f
 2569 0237 02       		.byte	0x2
 2570 0238 91       		.byte	0x91
 2571 0239 77       		.sleb128 -9
 2572 023a 00       		.byte	0x0
 2573 023b 0E       		.uleb128 0xe
 2574 023c 01       		.byte	0x1
 2575 023d 60030000 		.4byte	.LASF32
 2576 0241 01       		.byte	0x1
 2577 0242 2C02     		.2byte	0x22c
 2578 0244 01       		.byte	0x1
 2579 0245 6F000000 		.4byte	0x6f
 2580 0249 00000000 		.4byte	.LFB11
 2581 024d D4000000 		.4byte	.LFE11
 2582 0251 21020000 		.4byte	.LLST11
 2583 0255 96020000 		.4byte	0x296
 2584 0259 0F       		.uleb128 0xf
 2585 025a 18030000 		.4byte	.LASF26
 2586 025e 01       		.byte	0x1
 2587 025f 2E02     		.2byte	0x22e
 2588 0261 6F000000 		.4byte	0x6f
 2589 0265 02       		.byte	0x2
 2590 0266 91       		.byte	0x91
 2591 0267 74       		.sleb128 -12
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 75


 2592 0268 0F       		.uleb128 0xf
 2593 0269 9C020000 		.4byte	.LASF33
 2594 026d 01       		.byte	0x1
 2595 026e 2F02     		.2byte	0x22f
 2596 0270 6F000000 		.4byte	0x6f
 2597 0274 02       		.byte	0x2
 2598 0275 91       		.byte	0x91
 2599 0276 75       		.sleb128 -11
 2600 0277 0F       		.uleb128 0xf
 2601 0278 1C020000 		.4byte	.LASF27
 2602 027c 01       		.byte	0x1
 2603 027d 3202     		.2byte	0x232
 2604 027f 6F000000 		.4byte	0x6f
 2605 0283 02       		.byte	0x2
 2606 0284 91       		.byte	0x91
 2607 0285 76       		.sleb128 -10
 2608 0286 0F       		.uleb128 0xf
 2609 0287 2F000000 		.4byte	.LASF28
 2610 028b 01       		.byte	0x1
 2611 028c 3302     		.2byte	0x233
 2612 028e 6F000000 		.4byte	0x6f
 2613 0292 02       		.byte	0x2
 2614 0293 91       		.byte	0x91
 2615 0294 77       		.sleb128 -9
 2616 0295 00       		.byte	0x0
 2617 0296 0A       		.uleb128 0xa
 2618 0297 01       		.byte	0x1
 2619 0298 80010000 		.4byte	.LASF35
 2620 029c 01       		.byte	0x1
 2621 029d 9202     		.2byte	0x292
 2622 029f 01       		.byte	0x1
 2623 02a0 7A000000 		.4byte	0x7a
 2624 02a4 00000000 		.4byte	.LFB12
 2625 02a8 24000000 		.4byte	.LFE12
 2626 02ac 58020000 		.4byte	.LLST12
 2627 02b0 0E       		.uleb128 0xe
 2628 02b1 01       		.byte	0x1
 2629 02b2 9C030000 		.4byte	.LASF36
 2630 02b6 01       		.byte	0x1
 2631 02b7 B302     		.2byte	0x2b3
 2632 02b9 01       		.byte	0x1
 2633 02ba 6F000000 		.4byte	0x6f
 2634 02be 00000000 		.4byte	.LFB13
 2635 02c2 B6000000 		.4byte	.LFE13
 2636 02c6 83020000 		.4byte	.LLST13
 2637 02ca DE020000 		.4byte	0x2de
 2638 02ce 0F       		.uleb128 0xf
 2639 02cf F2010000 		.4byte	.LASF37
 2640 02d3 01       		.byte	0x1
 2641 02d4 B602     		.2byte	0x2b6
 2642 02d6 6F000000 		.4byte	0x6f
 2643 02da 02       		.byte	0x2
 2644 02db 91       		.byte	0x91
 2645 02dc 77       		.sleb128 -9
 2646 02dd 00       		.byte	0x0
 2647 02de 0B       		.uleb128 0xb
 2648 02df 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 76


 2649 02e0 F9030000 		.4byte	.LASF38
 2650 02e4 01       		.byte	0x1
 2651 02e5 0303     		.2byte	0x303
 2652 02e7 01       		.byte	0x1
 2653 02e8 00000000 		.4byte	.LFB14
 2654 02ec 94000000 		.4byte	.LFE14
 2655 02f0 BA020000 		.4byte	.LLST14
 2656 02f4 08030000 		.4byte	0x308
 2657 02f8 0F       		.uleb128 0xf
 2658 02f9 6D030000 		.4byte	.LASF19
 2659 02fd 01       		.byte	0x1
 2660 02fe 0503     		.2byte	0x305
 2661 0300 6F000000 		.4byte	0x6f
 2662 0304 02       		.byte	0x2
 2663 0305 91       		.byte	0x91
 2664 0306 77       		.sleb128 -9
 2665 0307 00       		.byte	0x0
 2666 0308 0B       		.uleb128 0xb
 2667 0309 01       		.byte	0x1
 2668 030a C0020000 		.4byte	.LASF39
 2669 030e 01       		.byte	0x1
 2670 030f 4003     		.2byte	0x340
 2671 0311 01       		.byte	0x1
 2672 0312 00000000 		.4byte	.LFB15
 2673 0316 14000000 		.4byte	.LFE15
 2674 031a F1020000 		.4byte	.LLST15
 2675 031e 32030000 		.4byte	0x332
 2676 0322 0C       		.uleb128 0xc
 2677 0323 47010000 		.4byte	.LASF40
 2678 0327 01       		.byte	0x1
 2679 0328 4003     		.2byte	0x340
 2680 032a 6F000000 		.4byte	0x6f
 2681 032e 02       		.byte	0x2
 2682 032f 91       		.byte	0x91
 2683 0330 77       		.sleb128 -9
 2684 0331 00       		.byte	0x0
 2685 0332 0B       		.uleb128 0xb
 2686 0333 01       		.byte	0x1
 2687 0334 76020000 		.4byte	.LASF41
 2688 0338 01       		.byte	0x1
 2689 0339 6503     		.2byte	0x365
 2690 033b 01       		.byte	0x1
 2691 033c 00000000 		.4byte	.LFB16
 2692 0340 20000000 		.4byte	.LFE16
 2693 0344 28030000 		.4byte	.LLST16
 2694 0348 5C030000 		.4byte	0x35c
 2695 034c 0C       		.uleb128 0xc
 2696 034d 6E020000 		.4byte	.LASF42
 2697 0351 01       		.byte	0x1
 2698 0352 6503     		.2byte	0x365
 2699 0354 6F000000 		.4byte	0x6f
 2700 0358 02       		.byte	0x2
 2701 0359 91       		.byte	0x91
 2702 035a 77       		.sleb128 -9
 2703 035b 00       		.byte	0x0
 2704 035c 0B       		.uleb128 0xb
 2705 035d 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 77


 2706 035e 89020000 		.4byte	.LASF43
 2707 0362 01       		.byte	0x1
 2708 0363 7A03     		.2byte	0x37a
 2709 0365 01       		.byte	0x1
 2710 0366 00000000 		.4byte	.LFB17
 2711 036a 20000000 		.4byte	.LFE17
 2712 036e 5F030000 		.4byte	.LLST17
 2713 0372 86030000 		.4byte	0x386
 2714 0376 0C       		.uleb128 0xc
 2715 0377 6E020000 		.4byte	.LASF42
 2716 037b 01       		.byte	0x1
 2717 037c 7A03     		.2byte	0x37a
 2718 037e 6F000000 		.4byte	0x6f
 2719 0382 02       		.byte	0x2
 2720 0383 91       		.byte	0x91
 2721 0384 77       		.sleb128 -9
 2722 0385 00       		.byte	0x0
 2723 0386 0B       		.uleb128 0xb
 2724 0387 01       		.byte	0x1
 2725 0388 75000000 		.4byte	.LASF44
 2726 038c 01       		.byte	0x1
 2727 038d C803     		.2byte	0x3c8
 2728 038f 01       		.byte	0x1
 2729 0390 00000000 		.4byte	.LFB18
 2730 0394 20000000 		.4byte	.LFE18
 2731 0398 96030000 		.4byte	.LLST18
 2732 039c B0030000 		.4byte	0x3b0
 2733 03a0 0C       		.uleb128 0xc
 2734 03a1 37020000 		.4byte	.LASF25
 2735 03a5 01       		.byte	0x1
 2736 03a6 C803     		.2byte	0x3c8
 2737 03a8 6F000000 		.4byte	0x6f
 2738 03ac 02       		.byte	0x2
 2739 03ad 91       		.byte	0x91
 2740 03ae 77       		.sleb128 -9
 2741 03af 00       		.byte	0x0
 2742 03b0 0B       		.uleb128 0xb
 2743 03b1 01       		.byte	0x1
 2744 03b2 E4020000 		.4byte	.LASF45
 2745 03b6 01       		.byte	0x1
 2746 03b7 EA03     		.2byte	0x3ea
 2747 03b9 01       		.byte	0x1
 2748 03ba 00000000 		.4byte	.LFB19
 2749 03be 2E000000 		.4byte	.LFE19
 2750 03c2 CD030000 		.4byte	.LLST19
 2751 03c6 DA030000 		.4byte	0x3da
 2752 03ca 0C       		.uleb128 0xc
 2753 03cb 41000000 		.4byte	.LASF46
 2754 03cf 01       		.byte	0x1
 2755 03d0 EA03     		.2byte	0x3ea
 2756 03d2 6F000000 		.4byte	0x6f
 2757 03d6 02       		.byte	0x2
 2758 03d7 91       		.byte	0x91
 2759 03d8 77       		.sleb128 -9
 2760 03d9 00       		.byte	0x0
 2761 03da 0A       		.uleb128 0xa
 2762 03db 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 78


 2763 03dc 54020000 		.4byte	.LASF47
 2764 03e0 01       		.byte	0x1
 2765 03e1 2E04     		.2byte	0x42e
 2766 03e3 01       		.byte	0x1
 2767 03e4 6F000000 		.4byte	0x6f
 2768 03e8 00000000 		.4byte	.LFB20
 2769 03ec 18000000 		.4byte	.LFE20
 2770 03f0 04040000 		.4byte	.LLST20
 2771 03f4 0B       		.uleb128 0xb
 2772 03f5 01       		.byte	0x1
 2773 03f6 04010000 		.4byte	.LASF48
 2774 03fa 01       		.byte	0x1
 2775 03fb 5204     		.2byte	0x452
 2776 03fd 01       		.byte	0x1
 2777 03fe 00000000 		.4byte	.LFB21
 2778 0402 34000000 		.4byte	.LFE21
 2779 0406 2F040000 		.4byte	.LLST21
 2780 040a 1E040000 		.4byte	0x41e
 2781 040e 0C       		.uleb128 0xc
 2782 040f 41000000 		.4byte	.LASF46
 2783 0413 01       		.byte	0x1
 2784 0414 5204     		.2byte	0x452
 2785 0416 6F000000 		.4byte	0x6f
 2786 041a 02       		.byte	0x2
 2787 041b 91       		.byte	0x91
 2788 041c 77       		.sleb128 -9
 2789 041d 00       		.byte	0x0
 2790 041e 0B       		.uleb128 0xb
 2791 041f 01       		.byte	0x1
 2792 0420 D0030000 		.4byte	.LASF49
 2793 0424 01       		.byte	0x1
 2794 0425 AE04     		.2byte	0x4ae
 2795 0427 01       		.byte	0x1
 2796 0428 00000000 		.4byte	.LFB22
 2797 042c 48000000 		.4byte	.LFE22
 2798 0430 66040000 		.4byte	.LLST22
 2799 0434 57040000 		.4byte	0x457
 2800 0438 0C       		.uleb128 0xc
 2801 0439 4C000000 		.4byte	.LASF50
 2802 043d 01       		.byte	0x1
 2803 043e AE04     		.2byte	0x4ae
 2804 0440 57040000 		.4byte	0x457
 2805 0444 02       		.byte	0x2
 2806 0445 91       		.byte	0x91
 2807 0446 6C       		.sleb128 -20
 2808 0447 0F       		.uleb128 0xf
 2809 0448 0C040000 		.4byte	.LASF51
 2810 044c 01       		.byte	0x1
 2811 044d B004     		.2byte	0x4b0
 2812 044f 7A000000 		.4byte	0x7a
 2813 0453 02       		.byte	0x2
 2814 0454 91       		.byte	0x91
 2815 0455 76       		.sleb128 -10
 2816 0456 00       		.byte	0x0
 2817 0457 10       		.uleb128 0x10
 2818 0458 04       		.byte	0x4
 2819 0459 5D040000 		.4byte	0x45d
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 79


 2820 045d 11       		.uleb128 0x11
 2821 045e 93000000 		.4byte	0x93
 2822 0462 0B       		.uleb128 0xb
 2823 0463 01       		.byte	0x1
 2824 0464 CC010000 		.4byte	.LASF52
 2825 0468 01       		.byte	0x1
 2826 0469 D404     		.2byte	0x4d4
 2827 046b 01       		.byte	0x1
 2828 046c 00000000 		.4byte	.LFB23
 2829 0470 46000000 		.4byte	.LFE23
 2830 0474 9D040000 		.4byte	.LLST23
 2831 0478 AA040000 		.4byte	0x4aa
 2832 047c 0C       		.uleb128 0xc
 2833 047d 4C000000 		.4byte	.LASF50
 2834 0481 01       		.byte	0x1
 2835 0482 D404     		.2byte	0x4d4
 2836 0484 AA040000 		.4byte	0x4aa
 2837 0488 02       		.byte	0x2
 2838 0489 91       		.byte	0x91
 2839 048a 6C       		.sleb128 -20
 2840 048b 0C       		.uleb128 0xc
 2841 048c 0E030000 		.4byte	.LASF53
 2842 0490 01       		.byte	0x1
 2843 0491 D404     		.2byte	0x4d4
 2844 0493 6F000000 		.4byte	0x6f
 2845 0497 02       		.byte	0x2
 2846 0498 91       		.byte	0x91
 2847 0499 6B       		.sleb128 -21
 2848 049a 0F       		.uleb128 0xf
 2849 049b 0C040000 		.4byte	.LASF51
 2850 049f 01       		.byte	0x1
 2851 04a0 D704     		.2byte	0x4d7
 2852 04a2 6F000000 		.4byte	0x6f
 2853 04a6 02       		.byte	0x2
 2854 04a7 91       		.byte	0x91
 2855 04a8 77       		.sleb128 -9
 2856 04a9 00       		.byte	0x0
 2857 04aa 10       		.uleb128 0x10
 2858 04ab 04       		.byte	0x4
 2859 04ac B0040000 		.4byte	0x4b0
 2860 04b0 11       		.uleb128 0x11
 2861 04b1 6F000000 		.4byte	0x6f
 2862 04b5 0B       		.uleb128 0xb
 2863 04b6 01       		.byte	0x1
 2864 04b7 AD010000 		.4byte	.LASF54
 2865 04bb 01       		.byte	0x1
 2866 04bc F904     		.2byte	0x4f9
 2867 04be 01       		.byte	0x1
 2868 04bf 00000000 		.4byte	.LFB24
 2869 04c3 38000000 		.4byte	.LFE24
 2870 04c7 D4040000 		.4byte	.LLST24
 2871 04cb DF040000 		.4byte	0x4df
 2872 04cf 0C       		.uleb128 0xc
 2873 04d0 41000000 		.4byte	.LASF46
 2874 04d4 01       		.byte	0x1
 2875 04d5 F904     		.2byte	0x4f9
 2876 04d7 6F000000 		.4byte	0x6f
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 80


 2877 04db 02       		.byte	0x2
 2878 04dc 91       		.byte	0x91
 2879 04dd 77       		.sleb128 -9
 2880 04de 00       		.byte	0x0
 2881 04df 0E       		.uleb128 0xe
 2882 04e0 01       		.byte	0x1
 2883 04e1 AB020000 		.4byte	.LASF55
 2884 04e5 01       		.byte	0x1
 2885 04e6 1E05     		.2byte	0x51e
 2886 04e8 01       		.byte	0x1
 2887 04e9 6F000000 		.4byte	0x6f
 2888 04ed 00000000 		.4byte	.LFB25
 2889 04f1 4A000000 		.4byte	.LFE25
 2890 04f5 0B050000 		.4byte	.LLST25
 2891 04f9 0D050000 		.4byte	0x50d
 2892 04fd 0F       		.uleb128 0xf
 2893 04fe F2010000 		.4byte	.LASF37
 2894 0502 01       		.byte	0x1
 2895 0503 2105     		.2byte	0x521
 2896 0505 6F000000 		.4byte	0x6f
 2897 0509 02       		.byte	0x2
 2898 050a 91       		.byte	0x91
 2899 050b 77       		.sleb128 -9
 2900 050c 00       		.byte	0x0
 2901 050d 0B       		.uleb128 0xb
 2902 050e 01       		.byte	0x1
 2903 050f 9A010000 		.4byte	.LASF56
 2904 0513 01       		.byte	0x1
 2905 0514 7405     		.2byte	0x574
 2906 0516 01       		.byte	0x1
 2907 0517 00000000 		.4byte	.LFB26
 2908 051b 54000000 		.4byte	.LFE26
 2909 051f 42050000 		.4byte	.LLST26
 2910 0523 37050000 		.4byte	0x537
 2911 0527 0F       		.uleb128 0xf
 2912 0528 6D030000 		.4byte	.LASF19
 2913 052c 01       		.byte	0x1
 2914 052d 7605     		.2byte	0x576
 2915 052f 6F000000 		.4byte	0x6f
 2916 0533 02       		.byte	0x2
 2917 0534 91       		.byte	0x91
 2918 0535 77       		.sleb128 -9
 2919 0536 00       		.byte	0x0
 2920 0537 0B       		.uleb128 0xb
 2921 0538 01       		.byte	0x1
 2922 0539 FF020000 		.4byte	.LASF57
 2923 053d 01       		.byte	0x1
 2924 053e CD05     		.2byte	0x5cd
 2925 0540 01       		.byte	0x1
 2926 0541 00000000 		.4byte	.LFB27
 2927 0545 CC000000 		.4byte	.LFE27
 2928 0549 79050000 		.4byte	.LLST27
 2929 054d 8C050000 		.4byte	0x58c
 2930 0551 0C       		.uleb128 0xc
 2931 0552 78010000 		.4byte	.LASF58
 2932 0556 01       		.byte	0x1
 2933 0557 CD05     		.2byte	0x5cd
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 81


 2934 0559 6F000000 		.4byte	0x6f
 2935 055d 02       		.byte	0x2
 2936 055e 91       		.byte	0x91
 2937 055f 6F       		.sleb128 -17
 2938 0560 12       		.uleb128 0x12
 2939 0561 18000000 		.4byte	.LBB2
 2940 0565 C2000000 		.4byte	.LBE2
 2941 0569 0F       		.uleb128 0xf
 2942 056a 66020000 		.4byte	.LASF59
 2943 056e 01       		.byte	0x1
 2944 056f D505     		.2byte	0x5d5
 2945 0571 6F000000 		.4byte	0x6f
 2946 0575 02       		.byte	0x2
 2947 0576 91       		.byte	0x91
 2948 0577 77       		.sleb128 -9
 2949 0578 0F       		.uleb128 0xf
 2950 0579 2D020000 		.4byte	.LASF60
 2951 057d 01       		.byte	0x1
 2952 057e FB05     		.2byte	0x5fb
 2953 0580 6F000000 		.4byte	0x6f
 2954 0584 05       		.byte	0x5
 2955 0585 03       		.byte	0x3
 2956 0586 05000000 		.4byte	tx_period.2343
 2957 058a 00       		.byte	0x0
 2958 058b 00       		.byte	0x0
 2959 058c 0B       		.uleb128 0xb
 2960 058d 01       		.byte	0x1
 2961 058e 3E020000 		.4byte	.LASF61
 2962 0592 01       		.byte	0x1
 2963 0593 4606     		.2byte	0x646
 2964 0595 01       		.byte	0x1
 2965 0596 00000000 		.4byte	.LFB28
 2966 059a 14000000 		.4byte	.LFE28
 2967 059e B0050000 		.4byte	.LLST28
 2968 05a2 B6050000 		.4byte	0x5b6
 2969 05a6 0C       		.uleb128 0xc
 2970 05a7 47010000 		.4byte	.LASF40
 2971 05ab 01       		.byte	0x1
 2972 05ac 4606     		.2byte	0x646
 2973 05ae 6F000000 		.4byte	0x6f
 2974 05b2 02       		.byte	0x2
 2975 05b3 91       		.byte	0x91
 2976 05b4 77       		.sleb128 -9
 2977 05b5 00       		.byte	0x0
 2978 05b6 13       		.uleb128 0x13
 2979 05b7 7E030000 		.4byte	.LASF62
 2980 05bb 01       		.byte	0x1
 2981 05bc 1C       		.byte	0x1c
 2982 05bd 6F000000 		.4byte	0x6f
 2983 05c1 01       		.byte	0x1
 2984 05c2 05       		.byte	0x5
 2985 05c3 03       		.byte	0x3
 2986 05c4 00000000 		.4byte	UART_initVar
 2987 05c8 14       		.uleb128 0x14
 2988 05c9 6F000000 		.4byte	0x6f
 2989 05cd D8050000 		.4byte	0x5d8
 2990 05d1 15       		.uleb128 0x15
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 82


 2991 05d2 AA000000 		.4byte	0xaa
 2992 05d6 3F       		.byte	0x3f
 2993 05d7 00       		.byte	0x0
 2994 05d8 13       		.uleb128 0x13
 2995 05d9 C2030000 		.4byte	.LASF63
 2996 05dd 01       		.byte	0x1
 2997 05de 24       		.byte	0x24
 2998 05df EA050000 		.4byte	0x5ea
 2999 05e3 01       		.byte	0x1
 3000 05e4 05       		.byte	0x5
 3001 05e5 03       		.byte	0x3
 3002 05e6 00000000 		.4byte	UART_rxBuffer
 3003 05ea 05       		.uleb128 0x5
 3004 05eb C8050000 		.4byte	0x5c8
 3005 05ef 13       		.uleb128 0x13
 3006 05f0 0A020000 		.4byte	.LASF64
 3007 05f4 01       		.byte	0x1
 3008 05f5 25       		.byte	0x25
 3009 05f6 A5000000 		.4byte	0xa5
 3010 05fa 01       		.byte	0x1
 3011 05fb 05       		.byte	0x5
 3012 05fc 03       		.byte	0x3
 3013 05fd 00000000 		.4byte	UART_rxBufferRead
 3014 0601 13       		.uleb128 0x13
 3015 0602 53010000 		.4byte	.LASF65
 3016 0606 01       		.byte	0x1
 3017 0607 26       		.byte	0x26
 3018 0608 A5000000 		.4byte	0xa5
 3019 060c 01       		.byte	0x1
 3020 060d 05       		.byte	0x5
 3021 060e 03       		.byte	0x3
 3022 060f 00000000 		.4byte	UART_rxBufferWrite
 3023 0613 13       		.uleb128 0x13
 3024 0614 DA010000 		.4byte	.LASF66
 3025 0618 01       		.byte	0x1
 3026 0619 27       		.byte	0x27
 3027 061a A5000000 		.4byte	0xa5
 3028 061e 01       		.byte	0x1
 3029 061f 05       		.byte	0x5
 3030 0620 03       		.byte	0x3
 3031 0621 00000000 		.4byte	UART_rxBufferLoopDetect
 3032 0625 13       		.uleb128 0x13
 3033 0626 99000000 		.4byte	.LASF67
 3034 062a 01       		.byte	0x1
 3035 062b 28       		.byte	0x28
 3036 062c A5000000 		.4byte	0xa5
 3037 0630 01       		.byte	0x1
 3038 0631 05       		.byte	0x5
 3039 0632 03       		.byte	0x3
 3040 0633 00000000 		.4byte	UART_rxBufferOverflow
 3041 0637 00       		.byte	0x0
 3042              		.section	.debug_abbrev
 3043 0000 01       		.uleb128 0x1
 3044 0001 11       		.uleb128 0x11
 3045 0002 01       		.byte	0x1
 3046 0003 25       		.uleb128 0x25
 3047 0004 0E       		.uleb128 0xe
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 83


 3048 0005 13       		.uleb128 0x13
 3049 0006 0B       		.uleb128 0xb
 3050 0007 03       		.uleb128 0x3
 3051 0008 0E       		.uleb128 0xe
 3052 0009 1B       		.uleb128 0x1b
 3053 000a 0E       		.uleb128 0xe
 3054 000b 11       		.uleb128 0x11
 3055 000c 01       		.uleb128 0x1
 3056 000d 52       		.uleb128 0x52
 3057 000e 01       		.uleb128 0x1
 3058 000f 55       		.uleb128 0x55
 3059 0010 06       		.uleb128 0x6
 3060 0011 10       		.uleb128 0x10
 3061 0012 06       		.uleb128 0x6
 3062 0013 00       		.byte	0x0
 3063 0014 00       		.byte	0x0
 3064 0015 02       		.uleb128 0x2
 3065 0016 24       		.uleb128 0x24
 3066 0017 00       		.byte	0x0
 3067 0018 0B       		.uleb128 0xb
 3068 0019 0B       		.uleb128 0xb
 3069 001a 3E       		.uleb128 0x3e
 3070 001b 0B       		.uleb128 0xb
 3071 001c 03       		.uleb128 0x3
 3072 001d 0E       		.uleb128 0xe
 3073 001e 00       		.byte	0x0
 3074 001f 00       		.byte	0x0
 3075 0020 03       		.uleb128 0x3
 3076 0021 24       		.uleb128 0x24
 3077 0022 00       		.byte	0x0
 3078 0023 0B       		.uleb128 0xb
 3079 0024 0B       		.uleb128 0xb
 3080 0025 3E       		.uleb128 0x3e
 3081 0026 0B       		.uleb128 0xb
 3082 0027 03       		.uleb128 0x3
 3083 0028 08       		.uleb128 0x8
 3084 0029 00       		.byte	0x0
 3085 002a 00       		.byte	0x0
 3086 002b 04       		.uleb128 0x4
 3087 002c 16       		.uleb128 0x16
 3088 002d 00       		.byte	0x0
 3089 002e 03       		.uleb128 0x3
 3090 002f 0E       		.uleb128 0xe
 3091 0030 3A       		.uleb128 0x3a
 3092 0031 0B       		.uleb128 0xb
 3093 0032 3B       		.uleb128 0x3b
 3094 0033 0B       		.uleb128 0xb
 3095 0034 49       		.uleb128 0x49
 3096 0035 13       		.uleb128 0x13
 3097 0036 00       		.byte	0x0
 3098 0037 00       		.byte	0x0
 3099 0038 05       		.uleb128 0x5
 3100 0039 35       		.uleb128 0x35
 3101 003a 00       		.byte	0x0
 3102 003b 49       		.uleb128 0x49
 3103 003c 13       		.uleb128 0x13
 3104 003d 00       		.byte	0x0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 84


 3105 003e 00       		.byte	0x0
 3106 003f 06       		.uleb128 0x6
 3107 0040 24       		.uleb128 0x24
 3108 0041 00       		.byte	0x0
 3109 0042 0B       		.uleb128 0xb
 3110 0043 0B       		.uleb128 0xb
 3111 0044 3E       		.uleb128 0x3e
 3112 0045 0B       		.uleb128 0xb
 3113 0046 00       		.byte	0x0
 3114 0047 00       		.byte	0x0
 3115 0048 07       		.uleb128 0x7
 3116 0049 2E       		.uleb128 0x2e
 3117 004a 00       		.byte	0x0
 3118 004b 3F       		.uleb128 0x3f
 3119 004c 0C       		.uleb128 0xc
 3120 004d 03       		.uleb128 0x3
 3121 004e 0E       		.uleb128 0xe
 3122 004f 3A       		.uleb128 0x3a
 3123 0050 0B       		.uleb128 0xb
 3124 0051 3B       		.uleb128 0x3b
 3125 0052 0B       		.uleb128 0xb
 3126 0053 27       		.uleb128 0x27
 3127 0054 0C       		.uleb128 0xc
 3128 0055 11       		.uleb128 0x11
 3129 0056 01       		.uleb128 0x1
 3130 0057 12       		.uleb128 0x12
 3131 0058 01       		.uleb128 0x1
 3132 0059 40       		.uleb128 0x40
 3133 005a 06       		.uleb128 0x6
 3134 005b 00       		.byte	0x0
 3135 005c 00       		.byte	0x0
 3136 005d 08       		.uleb128 0x8
 3137 005e 2E       		.uleb128 0x2e
 3138 005f 01       		.byte	0x1
 3139 0060 3F       		.uleb128 0x3f
 3140 0061 0C       		.uleb128 0xc
 3141 0062 03       		.uleb128 0x3
 3142 0063 0E       		.uleb128 0xe
 3143 0064 3A       		.uleb128 0x3a
 3144 0065 0B       		.uleb128 0xb
 3145 0066 3B       		.uleb128 0x3b
 3146 0067 0B       		.uleb128 0xb
 3147 0068 27       		.uleb128 0x27
 3148 0069 0C       		.uleb128 0xc
 3149 006a 11       		.uleb128 0x11
 3150 006b 01       		.uleb128 0x1
 3151 006c 12       		.uleb128 0x12
 3152 006d 01       		.uleb128 0x1
 3153 006e 40       		.uleb128 0x40
 3154 006f 06       		.uleb128 0x6
 3155 0070 01       		.uleb128 0x1
 3156 0071 13       		.uleb128 0x13
 3157 0072 00       		.byte	0x0
 3158 0073 00       		.byte	0x0
 3159 0074 09       		.uleb128 0x9
 3160 0075 34       		.uleb128 0x34
 3161 0076 00       		.byte	0x0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 85


 3162 0077 03       		.uleb128 0x3
 3163 0078 0E       		.uleb128 0xe
 3164 0079 3A       		.uleb128 0x3a
 3165 007a 0B       		.uleb128 0xb
 3166 007b 3B       		.uleb128 0x3b
 3167 007c 0B       		.uleb128 0xb
 3168 007d 49       		.uleb128 0x49
 3169 007e 13       		.uleb128 0x13
 3170 007f 02       		.uleb128 0x2
 3171 0080 0A       		.uleb128 0xa
 3172 0081 00       		.byte	0x0
 3173 0082 00       		.byte	0x0
 3174 0083 0A       		.uleb128 0xa
 3175 0084 2E       		.uleb128 0x2e
 3176 0085 00       		.byte	0x0
 3177 0086 3F       		.uleb128 0x3f
 3178 0087 0C       		.uleb128 0xc
 3179 0088 03       		.uleb128 0x3
 3180 0089 0E       		.uleb128 0xe
 3181 008a 3A       		.uleb128 0x3a
 3182 008b 0B       		.uleb128 0xb
 3183 008c 3B       		.uleb128 0x3b
 3184 008d 05       		.uleb128 0x5
 3185 008e 27       		.uleb128 0x27
 3186 008f 0C       		.uleb128 0xc
 3187 0090 49       		.uleb128 0x49
 3188 0091 13       		.uleb128 0x13
 3189 0092 11       		.uleb128 0x11
 3190 0093 01       		.uleb128 0x1
 3191 0094 12       		.uleb128 0x12
 3192 0095 01       		.uleb128 0x1
 3193 0096 40       		.uleb128 0x40
 3194 0097 06       		.uleb128 0x6
 3195 0098 00       		.byte	0x0
 3196 0099 00       		.byte	0x0
 3197 009a 0B       		.uleb128 0xb
 3198 009b 2E       		.uleb128 0x2e
 3199 009c 01       		.byte	0x1
 3200 009d 3F       		.uleb128 0x3f
 3201 009e 0C       		.uleb128 0xc
 3202 009f 03       		.uleb128 0x3
 3203 00a0 0E       		.uleb128 0xe
 3204 00a1 3A       		.uleb128 0x3a
 3205 00a2 0B       		.uleb128 0xb
 3206 00a3 3B       		.uleb128 0x3b
 3207 00a4 05       		.uleb128 0x5
 3208 00a5 27       		.uleb128 0x27
 3209 00a6 0C       		.uleb128 0xc
 3210 00a7 11       		.uleb128 0x11
 3211 00a8 01       		.uleb128 0x1
 3212 00a9 12       		.uleb128 0x12
 3213 00aa 01       		.uleb128 0x1
 3214 00ab 40       		.uleb128 0x40
 3215 00ac 06       		.uleb128 0x6
 3216 00ad 01       		.uleb128 0x1
 3217 00ae 13       		.uleb128 0x13
 3218 00af 00       		.byte	0x0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 86


 3219 00b0 00       		.byte	0x0
 3220 00b1 0C       		.uleb128 0xc
 3221 00b2 05       		.uleb128 0x5
 3222 00b3 00       		.byte	0x0
 3223 00b4 03       		.uleb128 0x3
 3224 00b5 0E       		.uleb128 0xe
 3225 00b6 3A       		.uleb128 0x3a
 3226 00b7 0B       		.uleb128 0xb
 3227 00b8 3B       		.uleb128 0x3b
 3228 00b9 05       		.uleb128 0x5
 3229 00ba 49       		.uleb128 0x49
 3230 00bb 13       		.uleb128 0x13
 3231 00bc 02       		.uleb128 0x2
 3232 00bd 0A       		.uleb128 0xa
 3233 00be 00       		.byte	0x0
 3234 00bf 00       		.byte	0x0
 3235 00c0 0D       		.uleb128 0xd
 3236 00c1 2E       		.uleb128 0x2e
 3237 00c2 00       		.byte	0x0
 3238 00c3 3F       		.uleb128 0x3f
 3239 00c4 0C       		.uleb128 0xc
 3240 00c5 03       		.uleb128 0x3
 3241 00c6 0E       		.uleb128 0xe
 3242 00c7 3A       		.uleb128 0x3a
 3243 00c8 0B       		.uleb128 0xb
 3244 00c9 3B       		.uleb128 0x3b
 3245 00ca 05       		.uleb128 0x5
 3246 00cb 27       		.uleb128 0x27
 3247 00cc 0C       		.uleb128 0xc
 3248 00cd 11       		.uleb128 0x11
 3249 00ce 01       		.uleb128 0x1
 3250 00cf 12       		.uleb128 0x12
 3251 00d0 01       		.uleb128 0x1
 3252 00d1 40       		.uleb128 0x40
 3253 00d2 06       		.uleb128 0x6
 3254 00d3 00       		.byte	0x0
 3255 00d4 00       		.byte	0x0
 3256 00d5 0E       		.uleb128 0xe
 3257 00d6 2E       		.uleb128 0x2e
 3258 00d7 01       		.byte	0x1
 3259 00d8 3F       		.uleb128 0x3f
 3260 00d9 0C       		.uleb128 0xc
 3261 00da 03       		.uleb128 0x3
 3262 00db 0E       		.uleb128 0xe
 3263 00dc 3A       		.uleb128 0x3a
 3264 00dd 0B       		.uleb128 0xb
 3265 00de 3B       		.uleb128 0x3b
 3266 00df 05       		.uleb128 0x5
 3267 00e0 27       		.uleb128 0x27
 3268 00e1 0C       		.uleb128 0xc
 3269 00e2 49       		.uleb128 0x49
 3270 00e3 13       		.uleb128 0x13
 3271 00e4 11       		.uleb128 0x11
 3272 00e5 01       		.uleb128 0x1
 3273 00e6 12       		.uleb128 0x12
 3274 00e7 01       		.uleb128 0x1
 3275 00e8 40       		.uleb128 0x40
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 87


 3276 00e9 06       		.uleb128 0x6
 3277 00ea 01       		.uleb128 0x1
 3278 00eb 13       		.uleb128 0x13
 3279 00ec 00       		.byte	0x0
 3280 00ed 00       		.byte	0x0
 3281 00ee 0F       		.uleb128 0xf
 3282 00ef 34       		.uleb128 0x34
 3283 00f0 00       		.byte	0x0
 3284 00f1 03       		.uleb128 0x3
 3285 00f2 0E       		.uleb128 0xe
 3286 00f3 3A       		.uleb128 0x3a
 3287 00f4 0B       		.uleb128 0xb
 3288 00f5 3B       		.uleb128 0x3b
 3289 00f6 05       		.uleb128 0x5
 3290 00f7 49       		.uleb128 0x49
 3291 00f8 13       		.uleb128 0x13
 3292 00f9 02       		.uleb128 0x2
 3293 00fa 0A       		.uleb128 0xa
 3294 00fb 00       		.byte	0x0
 3295 00fc 00       		.byte	0x0
 3296 00fd 10       		.uleb128 0x10
 3297 00fe 0F       		.uleb128 0xf
 3298 00ff 00       		.byte	0x0
 3299 0100 0B       		.uleb128 0xb
 3300 0101 0B       		.uleb128 0xb
 3301 0102 49       		.uleb128 0x49
 3302 0103 13       		.uleb128 0x13
 3303 0104 00       		.byte	0x0
 3304 0105 00       		.byte	0x0
 3305 0106 11       		.uleb128 0x11
 3306 0107 26       		.uleb128 0x26
 3307 0108 00       		.byte	0x0
 3308 0109 49       		.uleb128 0x49
 3309 010a 13       		.uleb128 0x13
 3310 010b 00       		.byte	0x0
 3311 010c 00       		.byte	0x0
 3312 010d 12       		.uleb128 0x12
 3313 010e 0B       		.uleb128 0xb
 3314 010f 01       		.byte	0x1
 3315 0110 11       		.uleb128 0x11
 3316 0111 01       		.uleb128 0x1
 3317 0112 12       		.uleb128 0x12
 3318 0113 01       		.uleb128 0x1
 3319 0114 00       		.byte	0x0
 3320 0115 00       		.byte	0x0
 3321 0116 13       		.uleb128 0x13
 3322 0117 34       		.uleb128 0x34
 3323 0118 00       		.byte	0x0
 3324 0119 03       		.uleb128 0x3
 3325 011a 0E       		.uleb128 0xe
 3326 011b 3A       		.uleb128 0x3a
 3327 011c 0B       		.uleb128 0xb
 3328 011d 3B       		.uleb128 0x3b
 3329 011e 0B       		.uleb128 0xb
 3330 011f 49       		.uleb128 0x49
 3331 0120 13       		.uleb128 0x13
 3332 0121 3F       		.uleb128 0x3f
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 88


 3333 0122 0C       		.uleb128 0xc
 3334 0123 02       		.uleb128 0x2
 3335 0124 0A       		.uleb128 0xa
 3336 0125 00       		.byte	0x0
 3337 0126 00       		.byte	0x0
 3338 0127 14       		.uleb128 0x14
 3339 0128 01       		.uleb128 0x1
 3340 0129 01       		.byte	0x1
 3341 012a 49       		.uleb128 0x49
 3342 012b 13       		.uleb128 0x13
 3343 012c 01       		.uleb128 0x1
 3344 012d 13       		.uleb128 0x13
 3345 012e 00       		.byte	0x0
 3346 012f 00       		.byte	0x0
 3347 0130 15       		.uleb128 0x15
 3348 0131 21       		.uleb128 0x21
 3349 0132 00       		.byte	0x0
 3350 0133 49       		.uleb128 0x49
 3351 0134 13       		.uleb128 0x13
 3352 0135 2F       		.uleb128 0x2f
 3353 0136 0B       		.uleb128 0xb
 3354 0137 00       		.byte	0x0
 3355 0138 00       		.byte	0x0
 3356 0139 00       		.byte	0x0
 3357              		.section	.debug_pubnames,"",%progbits
 3358 0000 00030000 		.4byte	0x300
 3359 0004 0200     		.2byte	0x2
 3360 0006 00000000 		.4byte	.Ldebug_info0
 3361 000a 38060000 		.4byte	0x638
 3362 000e AD000000 		.4byte	0xad
 3363 0012 55415254 		.ascii	"UART_Start\000"
 3363      5F537461 
 3363      727400
 3364 001d C2000000 		.4byte	0xc2
 3365 0021 55415254 		.ascii	"UART_Init\000"
 3365      5F496E69 
 3365      7400
 3366 002b D7000000 		.4byte	0xd7
 3367 002f 55415254 		.ascii	"UART_Enable\000"
 3367      5F456E61 
 3367      626C6500 
 3368 003b FF000000 		.4byte	0xff
 3369 003f 55415254 		.ascii	"UART_Stop\000"
 3369      5F53746F 
 3369      7000
 3370 0049 27010000 		.4byte	0x127
 3371 004d 55415254 		.ascii	"UART_ReadControlRegister\000"
 3371      5F526561 
 3371      64436F6E 
 3371      74726F6C 
 3371      52656769 
 3372 0066 41010000 		.4byte	0x141
 3373 006a 55415254 		.ascii	"UART_WriteControlRegister\000"
 3373      5F577269 
 3373      7465436F 
 3373      6E74726F 
 3373      6C526567 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 89


 3374 0084 6B010000 		.4byte	0x16b
 3375 0088 55415254 		.ascii	"UART_EnableRxInt\000"
 3375      5F456E61 
 3375      626C6552 
 3375      78496E74 
 3375      00
 3376 0099 81010000 		.4byte	0x181
 3377 009d 55415254 		.ascii	"UART_DisableRxInt\000"
 3377      5F446973 
 3377      61626C65 
 3377      5278496E 
 3377      7400
 3378 00af 97010000 		.4byte	0x197
 3379 00b3 55415254 		.ascii	"UART_SetRxInterruptMode\000"
 3379      5F536574 
 3379      5278496E 
 3379      74657272 
 3379      7570744D 
 3380 00cb C1010000 		.4byte	0x1c1
 3381 00cf 55415254 		.ascii	"UART_ReadRxData\000"
 3381      5F526561 
 3381      64527844 
 3381      61746100 
 3382 00df 0D020000 		.4byte	0x20d
 3383 00e3 55415254 		.ascii	"UART_ReadRxStatus\000"
 3383      5F526561 
 3383      64527853 
 3383      74617475 
 3383      7300
 3384 00f5 3B020000 		.4byte	0x23b
 3385 00f9 55415254 		.ascii	"UART_GetChar\000"
 3385      5F476574 
 3385      43686172 
 3385      00
 3386 0106 96020000 		.4byte	0x296
 3387 010a 55415254 		.ascii	"UART_GetByte\000"
 3387      5F476574 
 3387      42797465 
 3387      00
 3388 0117 B0020000 		.4byte	0x2b0
 3389 011b 55415254 		.ascii	"UART_GetRxBufferSize\000"
 3389      5F476574 
 3389      52784275 
 3389      66666572 
 3389      53697A65 
 3390 0130 DE020000 		.4byte	0x2de
 3391 0134 55415254 		.ascii	"UART_ClearRxBuffer\000"
 3391      5F436C65 
 3391      61725278 
 3391      42756666 
 3391      657200
 3392 0147 08030000 		.4byte	0x308
 3393 014b 55415254 		.ascii	"UART_SetRxAddressMode\000"
 3393      5F536574 
 3393      52784164 
 3393      64726573 
 3393      734D6F64 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 90


 3394 0161 32030000 		.4byte	0x332
 3395 0165 55415254 		.ascii	"UART_SetRxAddress1\000"
 3395      5F536574 
 3395      52784164 
 3395      64726573 
 3395      733100
 3396 0178 5C030000 		.4byte	0x35c
 3397 017c 55415254 		.ascii	"UART_SetRxAddress2\000"
 3397      5F536574 
 3397      52784164 
 3397      64726573 
 3397      733200
 3398 018f 86030000 		.4byte	0x386
 3399 0193 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 3399      5F536574 
 3399      5478496E 
 3399      74657272 
 3399      7570744D 
 3400 01ab B0030000 		.4byte	0x3b0
 3401 01af 55415254 		.ascii	"UART_WriteTxData\000"
 3401      5F577269 
 3401      74655478 
 3401      44617461 
 3401      00
 3402 01c0 DA030000 		.4byte	0x3da
 3403 01c4 55415254 		.ascii	"UART_ReadTxStatus\000"
 3403      5F526561 
 3403      64547853 
 3403      74617475 
 3403      7300
 3404 01d6 F4030000 		.4byte	0x3f4
 3405 01da 55415254 		.ascii	"UART_PutChar\000"
 3405      5F507574 
 3405      43686172 
 3405      00
 3406 01e7 1E040000 		.4byte	0x41e
 3407 01eb 55415254 		.ascii	"UART_PutString\000"
 3407      5F507574 
 3407      53747269 
 3407      6E6700
 3408 01fa 62040000 		.4byte	0x462
 3409 01fe 55415254 		.ascii	"UART_PutArray\000"
 3409      5F507574 
 3409      41727261 
 3409      7900
 3410 020c B5040000 		.4byte	0x4b5
 3411 0210 55415254 		.ascii	"UART_PutCRLF\000"
 3411      5F507574 
 3411      43524C46 
 3411      00
 3412 021d DF040000 		.4byte	0x4df
 3413 0221 55415254 		.ascii	"UART_GetTxBufferSize\000"
 3413      5F476574 
 3413      54784275 
 3413      66666572 
 3413      53697A65 
 3414 0236 0D050000 		.4byte	0x50d
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 91


 3415 023a 55415254 		.ascii	"UART_ClearTxBuffer\000"
 3415      5F436C65 
 3415      61725478 
 3415      42756666 
 3415      657200
 3416 024d 37050000 		.4byte	0x537
 3417 0251 55415254 		.ascii	"UART_SendBreak\000"
 3417      5F53656E 
 3417      64427265 
 3417      616B00
 3418 0260 8C050000 		.4byte	0x58c
 3419 0264 55415254 		.ascii	"UART_SetTxAddressMode\000"
 3419      5F536574 
 3419      54784164 
 3419      64726573 
 3419      734D6F64 
 3420 027a B6050000 		.4byte	0x5b6
 3421 027e 55415254 		.ascii	"UART_initVar\000"
 3421      5F696E69 
 3421      74566172 
 3421      00
 3422 028b D8050000 		.4byte	0x5d8
 3423 028f 55415254 		.ascii	"UART_rxBuffer\000"
 3423      5F727842 
 3423      75666665 
 3423      7200
 3424 029d EF050000 		.4byte	0x5ef
 3425 02a1 55415254 		.ascii	"UART_rxBufferRead\000"
 3425      5F727842 
 3425      75666665 
 3425      72526561 
 3425      6400
 3426 02b3 01060000 		.4byte	0x601
 3427 02b7 55415254 		.ascii	"UART_rxBufferWrite\000"
 3427      5F727842 
 3427      75666665 
 3427      72577269 
 3427      746500
 3428 02ca 13060000 		.4byte	0x613
 3429 02ce 55415254 		.ascii	"UART_rxBufferLoopDetect\000"
 3429      5F727842 
 3429      75666665 
 3429      724C6F6F 
 3429      70446574 
 3430 02e6 25060000 		.4byte	0x625
 3431 02ea 55415254 		.ascii	"UART_rxBufferOverflow\000"
 3431      5F727842 
 3431      75666665 
 3431      724F7665 
 3431      72666C6F 
 3432 0300 00000000 		.4byte	0x0
 3433              		.section	.debug_aranges,"",%progbits
 3434 0000 FC000000 		.4byte	0xfc
 3435 0004 0200     		.2byte	0x2
 3436 0006 00000000 		.4byte	.Ldebug_info0
 3437 000a 04       		.byte	0x4
 3438 000b 00       		.byte	0x0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 92


 3439 000c 0000     		.2byte	0x0
 3440 000e 0000     		.2byte	0x0
 3441 0010 00000000 		.4byte	.LFB0
 3442 0014 2A000000 		.4byte	.LFE0-.LFB0
 3443 0018 00000000 		.4byte	.LFB1
 3444 001c 68000000 		.4byte	.LFE1-.LFB1
 3445 0020 00000000 		.4byte	.LFB2
 3446 0024 84000000 		.4byte	.LFE2-.LFB2
 3447 0028 00000000 		.4byte	.LFB3
 3448 002c 74000000 		.4byte	.LFE3-.LFB3
 3449 0030 00000000 		.4byte	.LFB4
 3450 0034 10000000 		.4byte	.LFE4-.LFB4
 3451 0038 00000000 		.4byte	.LFB5
 3452 003c 14000000 		.4byte	.LFE5-.LFB5
 3453 0040 00000000 		.4byte	.LFB6
 3454 0044 18000000 		.4byte	.LFE6-.LFB6
 3455 0048 00000000 		.4byte	.LFB7
 3456 004c 18000000 		.4byte	.LFE7-.LFB7
 3457 0050 00000000 		.4byte	.LFB8
 3458 0054 20000000 		.4byte	.LFE8-.LFB8
 3459 0058 00000000 		.4byte	.LFB9
 3460 005c A8000000 		.4byte	.LFE9-.LFB9
 3461 0060 00000000 		.4byte	.LFB10
 3462 0064 50000000 		.4byte	.LFE10-.LFB10
 3463 0068 00000000 		.4byte	.LFB11
 3464 006c D4000000 		.4byte	.LFE11-.LFB11
 3465 0070 00000000 		.4byte	.LFB12
 3466 0074 24000000 		.4byte	.LFE12-.LFB12
 3467 0078 00000000 		.4byte	.LFB13
 3468 007c B6000000 		.4byte	.LFE13-.LFB13
 3469 0080 00000000 		.4byte	.LFB14
 3470 0084 94000000 		.4byte	.LFE14-.LFB14
 3471 0088 00000000 		.4byte	.LFB15
 3472 008c 14000000 		.4byte	.LFE15-.LFB15
 3473 0090 00000000 		.4byte	.LFB16
 3474 0094 20000000 		.4byte	.LFE16-.LFB16
 3475 0098 00000000 		.4byte	.LFB17
 3476 009c 20000000 		.4byte	.LFE17-.LFB17
 3477 00a0 00000000 		.4byte	.LFB18
 3478 00a4 20000000 		.4byte	.LFE18-.LFB18
 3479 00a8 00000000 		.4byte	.LFB19
 3480 00ac 2E000000 		.4byte	.LFE19-.LFB19
 3481 00b0 00000000 		.4byte	.LFB20
 3482 00b4 18000000 		.4byte	.LFE20-.LFB20
 3483 00b8 00000000 		.4byte	.LFB21
 3484 00bc 34000000 		.4byte	.LFE21-.LFB21
 3485 00c0 00000000 		.4byte	.LFB22
 3486 00c4 48000000 		.4byte	.LFE22-.LFB22
 3487 00c8 00000000 		.4byte	.LFB23
 3488 00cc 46000000 		.4byte	.LFE23-.LFB23
 3489 00d0 00000000 		.4byte	.LFB24
 3490 00d4 38000000 		.4byte	.LFE24-.LFB24
 3491 00d8 00000000 		.4byte	.LFB25
 3492 00dc 4A000000 		.4byte	.LFE25-.LFB25
 3493 00e0 00000000 		.4byte	.LFB26
 3494 00e4 54000000 		.4byte	.LFE26-.LFB26
 3495 00e8 00000000 		.4byte	.LFB27
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 93


 3496 00ec CC000000 		.4byte	.LFE27-.LFB27
 3497 00f0 00000000 		.4byte	.LFB28
 3498 00f4 14000000 		.4byte	.LFE28-.LFB28
 3499 00f8 00000000 		.4byte	0x0
 3500 00fc 00000000 		.4byte	0x0
 3501              		.section	.debug_ranges,"",%progbits
 3502              	.Ldebug_ranges0:
 3503 0000 00000000 		.4byte	.Ltext0
 3504 0004 00000000 		.4byte	.Letext0
 3505 0008 00000000 		.4byte	.LFB0
 3506 000c 2A000000 		.4byte	.LFE0
 3507 0010 00000000 		.4byte	.LFB1
 3508 0014 68000000 		.4byte	.LFE1
 3509 0018 00000000 		.4byte	.LFB2
 3510 001c 84000000 		.4byte	.LFE2
 3511 0020 00000000 		.4byte	.LFB3
 3512 0024 74000000 		.4byte	.LFE3
 3513 0028 00000000 		.4byte	.LFB4
 3514 002c 10000000 		.4byte	.LFE4
 3515 0030 00000000 		.4byte	.LFB5
 3516 0034 14000000 		.4byte	.LFE5
 3517 0038 00000000 		.4byte	.LFB6
 3518 003c 18000000 		.4byte	.LFE6
 3519 0040 00000000 		.4byte	.LFB7
 3520 0044 18000000 		.4byte	.LFE7
 3521 0048 00000000 		.4byte	.LFB8
 3522 004c 20000000 		.4byte	.LFE8
 3523 0050 00000000 		.4byte	.LFB9
 3524 0054 A8000000 		.4byte	.LFE9
 3525 0058 00000000 		.4byte	.LFB10
 3526 005c 50000000 		.4byte	.LFE10
 3527 0060 00000000 		.4byte	.LFB11
 3528 0064 D4000000 		.4byte	.LFE11
 3529 0068 00000000 		.4byte	.LFB12
 3530 006c 24000000 		.4byte	.LFE12
 3531 0070 00000000 		.4byte	.LFB13
 3532 0074 B6000000 		.4byte	.LFE13
 3533 0078 00000000 		.4byte	.LFB14
 3534 007c 94000000 		.4byte	.LFE14
 3535 0080 00000000 		.4byte	.LFB15
 3536 0084 14000000 		.4byte	.LFE15
 3537 0088 00000000 		.4byte	.LFB16
 3538 008c 20000000 		.4byte	.LFE16
 3539 0090 00000000 		.4byte	.LFB17
 3540 0094 20000000 		.4byte	.LFE17
 3541 0098 00000000 		.4byte	.LFB18
 3542 009c 20000000 		.4byte	.LFE18
 3543 00a0 00000000 		.4byte	.LFB19
 3544 00a4 2E000000 		.4byte	.LFE19
 3545 00a8 00000000 		.4byte	.LFB20
 3546 00ac 18000000 		.4byte	.LFE20
 3547 00b0 00000000 		.4byte	.LFB21
 3548 00b4 34000000 		.4byte	.LFE21
 3549 00b8 00000000 		.4byte	.LFB22
 3550 00bc 48000000 		.4byte	.LFE22
 3551 00c0 00000000 		.4byte	.LFB23
 3552 00c4 46000000 		.4byte	.LFE23
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 94


 3553 00c8 00000000 		.4byte	.LFB24
 3554 00cc 38000000 		.4byte	.LFE24
 3555 00d0 00000000 		.4byte	.LFB25
 3556 00d4 4A000000 		.4byte	.LFE25
 3557 00d8 00000000 		.4byte	.LFB26
 3558 00dc 54000000 		.4byte	.LFE26
 3559 00e0 00000000 		.4byte	.LFB27
 3560 00e4 CC000000 		.4byte	.LFE27
 3561 00e8 00000000 		.4byte	.LFB28
 3562 00ec 14000000 		.4byte	.LFE28
 3563 00f0 00000000 		.4byte	0x0
 3564 00f4 00000000 		.4byte	0x0
 3565              		.section	.debug_str,"MS",%progbits,1
 3566              	.LASF70:
 3567 0000 453A5C50 		.ascii	"E:\\PSoC Creator\\connect4\\connect4.cydsn\000"
 3567      536F4320 
 3567      43726561 
 3567      746F725C 
 3567      636F6E6E 
 3568              	.LASF10:
 3569 0028 75696E74 		.ascii	"uint16\000"
 3569      313600
 3570              	.LASF28:
 3571 002f 6C6F635F 		.ascii	"loc_rxBufferWrite\000"
 3571      72784275 
 3571      66666572 
 3571      57726974 
 3571      6500
 3572              	.LASF46:
 3573 0041 74784461 		.ascii	"txDataByte\000"
 3573      74614279 
 3573      746500
 3574              	.LASF50:
 3575 004c 73747269 		.ascii	"string\000"
 3575      6E6700
 3576              	.LASF7:
 3577 0053 6C6F6E67 		.ascii	"long long unsigned int\000"
 3577      206C6F6E 
 3577      6720756E 
 3577      7369676E 
 3577      65642069 
 3578              	.LASF15:
 3579 006a 55415254 		.ascii	"UART_Start\000"
 3579      5F537461 
 3579      727400
 3580              	.LASF44:
 3581 0075 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 3581      5F536574 
 3581      5478496E 
 3581      74657272 
 3581      7570744D 
 3582              	.LASF68:
 3583 008d 474E5520 		.ascii	"GNU C 4.4.1\000"
 3583      4320342E 
 3583      342E3100 
 3584              	.LASF67:
 3585 0099 55415254 		.ascii	"UART_rxBufferOverflow\000"
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 95


 3585      5F727842 
 3585      75666665 
 3585      724F7665 
 3585      72666C6F 
 3586              	.LASF69:
 3587 00af 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\UART.c\000"
 3587      6E657261 
 3587      7465645F 
 3587      536F7572 
 3587      63655C50 
 3588              	.LASF6:
 3589 00cf 6C6F6E67 		.ascii	"long long int\000"
 3589      206C6F6E 
 3589      6720696E 
 3589      7400
 3590              	.LASF0:
 3591 00dd 7369676E 		.ascii	"signed char\000"
 3591      65642063 
 3591      68617200 
 3592              	.LASF22:
 3593 00e9 55415254 		.ascii	"UART_DisableRxInt\000"
 3593      5F446973 
 3593      61626C65 
 3593      5278496E 
 3593      7400
 3594              	.LASF4:
 3595 00fb 6C6F6E67 		.ascii	"long int\000"
 3595      20696E74 
 3595      00
 3596              	.LASF48:
 3597 0104 55415254 		.ascii	"UART_PutChar\000"
 3597      5F507574 
 3597      43686172 
 3597      00
 3598              	.LASF29:
 3599 0111 55415254 		.ascii	"UART_ReadRxData\000"
 3599      5F526561 
 3599      64527844 
 3599      61746100 
 3600              	.LASF9:
 3601 0121 75696E74 		.ascii	"uint8\000"
 3601      3800
 3602              	.LASF34:
 3603 0127 55415254 		.ascii	"UART_ReadControlRegister\000"
 3603      5F526561 
 3603      64436F6E 
 3603      74726F6C 
 3603      52656769 
 3604              	.LASF12:
 3605 0140 646F7562 		.ascii	"double\000"
 3605      6C6500
 3606              	.LASF40:
 3607 0147 61646472 		.ascii	"addressMode\000"
 3607      6573734D 
 3607      6F646500 
 3608              	.LASF65:
 3609 0153 55415254 		.ascii	"UART_rxBufferWrite\000"
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 96


 3609      5F727842 
 3609      75666665 
 3609      72577269 
 3609      746500
 3610              	.LASF24:
 3611 0166 636F6E74 		.ascii	"control\000"
 3611      726F6C00 
 3612              	.LASF16:
 3613 016e 55415254 		.ascii	"UART_Init\000"
 3613      5F496E69 
 3613      7400
 3614              	.LASF58:
 3615 0178 7265744D 		.ascii	"retMode\000"
 3615      6F646500 
 3616              	.LASF35:
 3617 0180 55415254 		.ascii	"UART_GetByte\000"
 3617      5F476574 
 3617      42797465 
 3617      00
 3618              	.LASF8:
 3619 018d 756E7369 		.ascii	"unsigned int\000"
 3619      676E6564 
 3619      20696E74 
 3619      00
 3620              	.LASF56:
 3621 019a 55415254 		.ascii	"UART_ClearTxBuffer\000"
 3621      5F436C65 
 3621      61725478 
 3621      42756666 
 3621      657200
 3622              	.LASF54:
 3623 01ad 55415254 		.ascii	"UART_PutCRLF\000"
 3623      5F507574 
 3623      43524C46 
 3623      00
 3624              	.LASF5:
 3625 01ba 6C6F6E67 		.ascii	"long unsigned int\000"
 3625      20756E73 
 3625      69676E65 
 3625      6420696E 
 3625      7400
 3626              	.LASF52:
 3627 01cc 55415254 		.ascii	"UART_PutArray\000"
 3627      5F507574 
 3627      41727261 
 3627      7900
 3628              	.LASF66:
 3629 01da 55415254 		.ascii	"UART_rxBufferLoopDetect\000"
 3629      5F727842 
 3629      75666665 
 3629      724C6F6F 
 3629      70446574 
 3630              	.LASF37:
 3631 01f2 73697A65 		.ascii	"size\000"
 3631      00
 3632              	.LASF3:
 3633 01f7 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 97


 3633      7420756E 
 3633      7369676E 
 3633      65642069 
 3633      6E7400
 3634              	.LASF64:
 3635 020a 55415254 		.ascii	"UART_rxBufferRead\000"
 3635      5F727842 
 3635      75666665 
 3635      72526561 
 3635      6400
 3636              	.LASF27:
 3637 021c 6C6F635F 		.ascii	"loc_rxBufferRead\000"
 3637      72784275 
 3637      66666572 
 3637      52656164 
 3637      00
 3638              	.LASF60:
 3639 022d 74785F70 		.ascii	"tx_period\000"
 3639      6572696F 
 3639      6400
 3640              	.LASF25:
 3641 0237 696E7453 		.ascii	"intSrc\000"
 3641      726300
 3642              	.LASF61:
 3643 023e 55415254 		.ascii	"UART_SetTxAddressMode\000"
 3643      5F536574 
 3643      54784164 
 3643      64726573 
 3643      734D6F64 
 3644              	.LASF47:
 3645 0254 55415254 		.ascii	"UART_ReadTxStatus\000"
 3645      5F526561 
 3645      64547853 
 3645      74617475 
 3645      7300
 3646              	.LASF59:
 3647 0266 746D7053 		.ascii	"tmpStat\000"
 3647      74617400 
 3648              	.LASF42:
 3649 026e 61646472 		.ascii	"address\000"
 3649      65737300 
 3650              	.LASF41:
 3651 0276 55415254 		.ascii	"UART_SetRxAddress1\000"
 3651      5F536574 
 3651      52784164 
 3651      64726573 
 3651      733100
 3652              	.LASF43:
 3653 0289 55415254 		.ascii	"UART_SetRxAddress2\000"
 3653      5F536574 
 3653      52784164 
 3653      64726573 
 3653      733200
 3654              	.LASF33:
 3655 029c 72785374 		.ascii	"rxStatus\000"
 3655      61747573 
 3655      00
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 98


 3656              	.LASF11:
 3657 02a5 666C6F61 		.ascii	"float\000"
 3657      7400
 3658              	.LASF55:
 3659 02ab 55415254 		.ascii	"UART_GetTxBufferSize\000"
 3659      5F476574 
 3659      54784275 
 3659      66666572 
 3659      53697A65 
 3660              	.LASF39:
 3661 02c0 55415254 		.ascii	"UART_SetRxAddressMode\000"
 3661      5F536574 
 3661      52784164 
 3661      64726573 
 3661      734D6F64 
 3662              	.LASF1:
 3663 02d6 756E7369 		.ascii	"unsigned char\000"
 3663      676E6564 
 3663      20636861 
 3663      7200
 3664              	.LASF45:
 3665 02e4 55415254 		.ascii	"UART_WriteTxData\000"
 3665      5F577269 
 3665      74655478 
 3665      44617461 
 3665      00
 3666              	.LASF2:
 3667 02f5 73686F72 		.ascii	"short int\000"
 3667      7420696E 
 3667      7400
 3668              	.LASF57:
 3669 02ff 55415254 		.ascii	"UART_SendBreak\000"
 3669      5F53656E 
 3669      64427265 
 3669      616B00
 3670              	.LASF53:
 3671 030e 62797465 		.ascii	"byteCount\000"
 3671      436F756E 
 3671      7400
 3672              	.LASF26:
 3673 0318 72784461 		.ascii	"rxData\000"
 3673      746100
 3674              	.LASF17:
 3675 031f 55415254 		.ascii	"UART_Enable\000"
 3675      5F456E61 
 3675      626C6500 
 3676              	.LASF30:
 3677 032b 55415254 		.ascii	"UART_ReadRxStatus\000"
 3677      5F526561 
 3677      64527853 
 3677      74617475 
 3677      7300
 3678              	.LASF14:
 3679 033d 63686172 		.ascii	"char\000"
 3679      00
 3680              	.LASF13:
 3681 0342 63686172 		.ascii	"char8\000"
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 99


 3681      3800
 3682              	.LASF23:
 3683 0348 55415254 		.ascii	"UART_SetRxInterruptMode\000"
 3683      5F536574 
 3683      5278496E 
 3683      74657272 
 3683      7570744D 
 3684              	.LASF32:
 3685 0360 55415254 		.ascii	"UART_GetChar\000"
 3685      5F476574 
 3685      43686172 
 3685      00
 3686              	.LASF19:
 3687 036d 656E6162 		.ascii	"enableInterrupts\000"
 3687      6C65496E 
 3687      74657272 
 3687      75707473 
 3687      00
 3688              	.LASF62:
 3689 037e 55415254 		.ascii	"UART_initVar\000"
 3689      5F696E69 
 3689      74566172 
 3689      00
 3690              	.LASF21:
 3691 038b 55415254 		.ascii	"UART_EnableRxInt\000"
 3691      5F456E61 
 3691      626C6552 
 3691      78496E74 
 3691      00
 3692              	.LASF36:
 3693 039c 55415254 		.ascii	"UART_GetRxBufferSize\000"
 3693      5F476574 
 3693      52784275 
 3693      66666572 
 3693      53697A65 
 3694              	.LASF31:
 3695 03b1 73746174 		.ascii	"status\000"
 3695      757300
 3696              	.LASF18:
 3697 03b8 55415254 		.ascii	"UART_Stop\000"
 3697      5F53746F 
 3697      7000
 3698              	.LASF63:
 3699 03c2 55415254 		.ascii	"UART_rxBuffer\000"
 3699      5F727842 
 3699      75666665 
 3699      7200
 3700              	.LASF49:
 3701 03d0 55415254 		.ascii	"UART_PutString\000"
 3701      5F507574 
 3701      53747269 
 3701      6E6700
 3702              	.LASF20:
 3703 03df 55415254 		.ascii	"UART_WriteControlRegister\000"
 3703      5F577269 
 3703      7465436F 
 3703      6E74726F 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccEeX0fi.s 			page 100


 3703      6C526567 
 3704              	.LASF38:
 3705 03f9 55415254 		.ascii	"UART_ClearRxBuffer\000"
 3705      5F436C65 
 3705      61725278 
 3705      42756666 
 3705      657200
 3706              	.LASF51:
 3707 040c 6275665F 		.ascii	"buf_index\000"
 3707      696E6465 
 3707      7800
 3708              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"

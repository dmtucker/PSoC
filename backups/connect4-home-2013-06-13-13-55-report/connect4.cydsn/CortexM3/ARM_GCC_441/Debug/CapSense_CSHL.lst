ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"CapSense_CSHL.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 82020000 		.text
  20      02006600 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.comm	CapSense_rawFilterData1,14,4
  24              		.comm	CapSense_rawFilterData2,14,4
  25              		.global	CapSense_SensorBaseline
  26              		.bss
  27              		.align	2
  28              		.type	CapSense_SensorBaseline, %object
  29              		.size	CapSense_SensorBaseline, 14
  30              	CapSense_SensorBaseline:
  31 0000 00000000 		.space	14
  31      00000000 
  31      00000000 
  31      0000
  32              		.global	CapSense_SensorBaselineLow
  33 000e 0000     		.align	2
  34              		.type	CapSense_SensorBaselineLow, %object
  35              		.size	CapSense_SensorBaselineLow, 7
  36              	CapSense_SensorBaselineLow:
  37 0010 00000000 		.space	7
  37      000000
  38              		.global	CapSense_SensorSignal
  39 0017 00       		.align	2
  40              		.type	CapSense_SensorSignal, %object
  41              		.size	CapSense_SensorSignal, 7
  42              	CapSense_SensorSignal:
  43 0018 00000000 		.space	7
  43      000000
  44              		.global	CapSense_SensorOnMask
  45 001f 00       		.align	2
  46              		.type	CapSense_SensorOnMask, %object
  47              		.size	CapSense_SensorOnMask, 1
  48              	CapSense_SensorOnMask:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 2


  49 0020 00       		.space	1
  50              		.comm	CapSense_LowBaselineResetCnt,7,4
  51 0021 000000   		.align	2
  52              	CapSense_centroid:
  53 0024 000000   		.space	3
  54              		.global	CapSense_fingerThreshold
  55              		.data
  56              		.align	2
  57              		.type	CapSense_fingerThreshold, %object
  58              		.size	CapSense_fingerThreshold, 3
  59              	CapSense_fingerThreshold:
  60 0000 64       		.byte	100
  61 0001 64       		.byte	100
  62 0002 64       		.byte	100
  63              		.global	CapSense_noiseThreshold
  64 0003 00       		.align	2
  65              		.type	CapSense_noiseThreshold, %object
  66              		.size	CapSense_noiseThreshold, 3
  67              	CapSense_noiseThreshold:
  68 0004 14       		.byte	20
  69 0005 14       		.byte	20
  70 0006 14       		.byte	20
  71              		.global	CapSense_hysteresis
  72 0007 00       		.align	2
  73              		.type	CapSense_hysteresis, %object
  74              		.size	CapSense_hysteresis, 3
  75              	CapSense_hysteresis:
  76 0008 00       		.byte	0
  77 0009 0A       		.byte	10
  78 000a 0A       		.byte	10
  79              		.global	CapSense_debounce
  80 000b 00       		.align	2
  81              		.type	CapSense_debounce, %object
  82              		.size	CapSense_debounce, 3
  83              	CapSense_debounce:
  84 000c 01       		.byte	1
  85 000d 01       		.byte	1
  86 000e 01       		.byte	1
  87              		.global	CapSense_debounceCounter
  88              		.bss
  89 0027 00       		.align	2
  90              		.type	CapSense_debounceCounter, %object
  91              		.size	CapSense_debounceCounter, 3
  92              	CapSense_debounceCounter:
  93 0028 000000   		.space	3
  94              		.global	CapSense_rawDataIndex
  95 002b 00       		.section	.rodata
  96              		.align	2
  97              		.type	CapSense_rawDataIndex, %object
  98              		.size	CapSense_rawDataIndex, 3
  99              	CapSense_rawDataIndex:
 100 0000 02       		.byte	2
 101 0001 00       		.byte	0
 102 0002 01       		.byte	1
 103              		.global	CapSense_numberOfSensors
 104 0003 00       		.align	2
 105              		.type	CapSense_numberOfSensors, %object
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 3


 106              		.size	CapSense_numberOfSensors, 3
 107              	CapSense_numberOfSensors:
 108 0004 05       		.byte	5
 109 0005 01       		.byte	1
 110 0006 01       		.byte	1
 111              		.global	CapSense_centroidMult
 112 0007 00       		.align	2
 113              		.type	CapSense_centroidMult, %object
 114              		.size	CapSense_centroidMult, 2
 115              	CapSense_centroidMult:
 116 0008 C01F     		.short	8128
 117              		.global	CapSense_posFiltersMask
 118 000a 0000     		.align	2
 119              		.type	CapSense_posFiltersMask, %object
 120              		.size	CapSense_posFiltersMask, 1
 121              	CapSense_posFiltersMask:
 122 000c 08       		.byte	8
 123              		.global	CapSense_posFiltersData
 124 000d 000000   		.data
 125 000f 00       		.align	2
 126              		.type	CapSense_posFiltersData, %object
 127              		.size	CapSense_posFiltersData, 3
 128              	CapSense_posFiltersData:
 129 0010 01       		.byte	1
 130 0011 00       		.byte	0
 131 0012 00       		.byte	0
 132 0013 00       		.section	.text.CapSense_BaseInit,"ax",%progbits
 133              		.align	2
 134              		.global	CapSense_BaseInit
 135              		.thumb
 136              		.thumb_func
 137              		.type	CapSense_BaseInit, %function
 138              	CapSense_BaseInit:
 139              	.LFB0:
 140              		.file 1 ".\\Generated_Source\\PSoC5\\CapSense_CSHL.c"
   1:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Version 3.30
   4:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  20:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* SmartSense functions */
  21:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
  22:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     extern void CapSense_CalculateThresholds(uint8 SensorNumber)
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 4


  23:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            ;
  24:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
  25:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  26:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* Median filter function prototype */
  27:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  28:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER) )
  29:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
  30:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ;
  31:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* CapSense_RAW_FILTER_MASK && CapSense_POS_FILTERS_MASK */
  32:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  33:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* Averaging filter function prototype */
  34:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
  35:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) )
  36:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
  37:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ;
  38:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* CapSense_RAW_FILTER_MASK && CapSense_POS_FILTERS_MASK */
  39:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  40:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* IIR2Filter(1/2prev + 1/2cur) filter function prototype */
  41:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) || \
  42:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER) )
  43:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2) ;
  44:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* CapSense_RAW_FILTER_MASK && CapSense_POS_FILTERS_MASK */
  45:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  46:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* IIR4Filter(3/4prev + 1/4cur) filter function prototype */
  47:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) || \
  48:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER) )
  49:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2) ;
  50:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* CapSense_RAW_FILTER_MASK && CapSense_POS_FILTERS_MASK */
  51:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  52:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* IIR8Filter(7/8prev + 1/8cur) filter function prototype - RawCounts only */
  53:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
  54:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2) ;
  55:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* CapSense_RAW_FILTER_MASK */
  56:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  57:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* IIR16Filter(15/16prev + 1/16cur) filter function prototype - RawCounts only */
  58:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
  59:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2) ;
  60:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* CapSense_RAW_FILTER_MASK */
  61:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  62:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* JitterFilter filter function prototype */
  63:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) || \
  64:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER) )
  65:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2) ;
  66:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* CapSense_RAW_FILTER_MASK && CapSense_POS_FILTERS_MASK */
  67:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  68:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* Storage of filters data */
  69:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  70:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  71:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  72:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  73:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  74:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  75:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #elif ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)   || \
  76:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)   || \
  77:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) || \
  78:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)   || \
  79:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) )
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 5


  80:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
  81:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  82:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  83:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #else
  84:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* No Raw filters */
  85:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  86:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  87:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         */
  88:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  89:.\Generated_Source\PSoC5/CapSense_CSHL.c **** extern uint16 CapSense_SensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  90:.\Generated_Source\PSoC5/CapSense_CSHL.c **** extern uint8 CapSense_SensorEnableMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  91:.\Generated_Source\PSoC5/CapSense_CSHL.c **** extern const uint8 CYCODE CapSense_widgetNumber[];
  92:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  93:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint16 CapSense_SensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  94:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_SensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  95:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_SensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  96:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_SensorOnMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {0u};
  97:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  98:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_LowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  99:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 100:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* Helps while centroid calulation */
 101:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if (CapSense_TOTAL_CENTROIDS_COUNT)
 102:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     static uint8 CapSense_centroid[3];
 103:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif  /* (CapSense_TOTAL_CENTROIDS_COUNT) */
 104:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 105:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[] = {
 106:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     100u, 100u, 100u, 
 107:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 108:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 109:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[] = {
 110:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     20u, 20u, 20u, 
 111:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 112:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 113:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_hysteresis[] = {
 114:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, 10u, 10u, 
 115:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 116:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 117:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
 118:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, 1u, 1u, 
 119:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 120:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 121:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_debounceCounter[] = {
 122:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, 0u, 0u, 
 123:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 124:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 125:.\Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_rawDataIndex[] = {
 126:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     2u, /* LinearSlider0__LS */
 127:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, /* Button0__BTN */
 128:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button1__BTN */
 129:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 130:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 131:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 132:.\Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_numberOfSensors[] = {
 133:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     5u, /* LinearSlider0__LS */
 134:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button0__BTN */
 135:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button1__BTN */
 136:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 6


 137:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 138:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 139:.\Generated_Source\PSoC5/CapSense_CSHL.c **** const uint16 CYCODE CapSense_centroidMult[] = {
 140:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     8128u, 
 141:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 142:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 143:.\Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_posFiltersMask[] = {
 144:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     0x8u, 
 145:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 146:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 147:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_posFiltersData[] = {
 148:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, 0u, 0u, 
 149:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
 150:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 151:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 152:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 153:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 154:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 155:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 156:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 157:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 158:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 159:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_SensorBaseline[sensor] array element with an 
 160:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value which is equal to raw count value. 
 161:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Resets to zero CapSense_SensorBaselineLow[senesor] and 
 162:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorSignal[sensor] array element.
 163:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads CapSense_debounceCounter[sensor] array element with initial 
 164:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  value equal CapSense_debounce[].
 165:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and 
 166:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an 
 167:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
 168:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 169:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 170:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 171:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 172:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 173:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 174:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 175:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 176:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorBaseline[]    - used to store baseline value.
 177:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorBaselineLow[] - used to store fraction byte of 
 178:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline value.
 179:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorSignal[]      - used to store diffence between 
 180:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 181:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store current debounce 
 182:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 183:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 184:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 185:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 186:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  any enabled raw data filter.
 187:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 188:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 189:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 190:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 191:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 192:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 193:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 7


 194:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_BaseInit(uint8 sensor) 
 195:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 141              		.loc 1 195 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 16
 144              		@ frame_needed = 1, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146 0000 80B4     		push	{r7}
 147              	.LCFI0:
 148              		.cfi_def_cfa_offset 4
 149 0002 85B0     		sub	sp, sp, #20
 150              	.LCFI1:
 151              		.cfi_def_cfa_offset 24
 152 0004 00AF     		add	r7, sp, #0
 153              		.cfi_offset 7, -4
 154              	.LCFI2:
 155              		.cfi_def_cfa_register 7
 156 0006 0346     		mov	r3, r0
 157 0008 FB71     		strb	r3, [r7, #7]
 196:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 197:.\Generated_Source\PSoC5/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 198:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 158              		.loc 1 198 0
 159 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 160 000c 40F20003 		movw	r3, #:lower16:CapSense_widgetNumber
 161 0010 C0F20003 		movt	r3, #:upper16:CapSense_widgetNumber
 162 0014 9B5C     		ldrb	r3, [r3, r2]
 163 0016 FB73     		strb	r3, [r7, #15]
 199:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 200:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 201:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 202:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 debounceIndex;
 203:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 204:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 205:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 206:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 207:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 208:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 209:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 210:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 211:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Initialize Baseline */
 212:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_SensorBaseline[sensor] = CapSense_SensorRaw[sensor];
 164              		.loc 1 212 0
 165 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 166 001a F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 167 001c 40F20003 		movw	r3, #:lower16:CapSense_SensorRaw
 168 0020 C0F20003 		movt	r3, #:upper16:CapSense_SensorRaw
 169 0024 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 170 0028 40F20003 		movw	r3, #:lower16:CapSense_SensorBaseline
 171 002c C0F20003 		movt	r3, #:upper16:CapSense_SensorBaseline
 172 0030 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 213:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_SensorBaselineLow[sensor] = 0u;
 173              		.loc 1 213 0
 174 0034 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 175 0036 40F20003 		movw	r3, #:lower16:CapSense_SensorBaselineLow
 176 003a C0F20003 		movt	r3, #:upper16:CapSense_SensorBaselineLow
 177 003e 4FF00001 		mov	r1, #0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 8


 178 0042 9954     		strb	r1, [r3, r2]
 214:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_SensorSignal[sensor] = 0u;
 179              		.loc 1 214 0
 180 0044 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 181 0046 40F20003 		movw	r3, #:lower16:CapSense_SensorSignal
 182 004a C0F20003 		movt	r3, #:upper16:CapSense_SensorSignal
 183 004e 4FF00001 		mov	r1, #0
 184 0052 9954     		strb	r1, [r3, r2]
 215:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 216:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if(widget > CapSense_END_OF_TOUCH_PAD_INDEX)
 185              		.loc 1 216 0
 186 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 187 0056 002B     		cmp	r3, #0
 188 0058 0DD0     		beq	.L2
 217:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 218:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_debounceCounter[widget - (CapSense_END_OF_TOUCH_PAD_INDEX + 1)] =  CapSense_deboun
 189              		.loc 1 218 0
 190 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 191 005c 03F1FF32 		add	r2, r3, #-1
 192 0060 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 193 0062 40F20003 		movw	r3, #:lower16:CapSense_debounce
 194 0066 C0F20003 		movt	r3, #:upper16:CapSense_debounce
 195 006a 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 196 006c 40F20003 		movw	r3, #:lower16:CapSense_debounceCounter
 197 0070 C0F20003 		movt	r3, #:upper16:CapSense_debounceCounter
 198 0074 9954     		strb	r1, [r3, r2]
 199              	.L2:
 219:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 220:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 221:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 222:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) ||\
 223:.\Generated_Source\PSoC5/CapSense_CSHL.c ****          (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 224:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 225:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_SensorRaw[sensor];
 200              		.loc 1 225 0
 201 0076 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 202 0078 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 203 007a 40F20003 		movw	r3, #:lower16:CapSense_SensorRaw
 204 007e C0F20003 		movt	r3, #:upper16:CapSense_SensorRaw
 205 0082 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 206 0086 40F20003 		movw	r3, #:lower16:CapSense_rawFilterData1
 207 008a C0F20003 		movt	r3, #:upper16:CapSense_rawFilterData1
 208 008e 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 226:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_SensorRaw[sensor];
 209              		.loc 1 226 0
 210 0092 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 211 0094 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 212 0096 40F20003 		movw	r3, #:lower16:CapSense_SensorRaw
 213 009a C0F20003 		movt	r3, #:upper16:CapSense_SensorRaw
 214 009e 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 215 00a2 40F20003 		movw	r3, #:lower16:CapSense_rawFilterData2
 216 00a6 C0F20003 		movt	r3, #:upper16:CapSense_rawFilterData2
 217 00aa 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 227:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 228:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 229:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 230:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 9


 231:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 232:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 233:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             
 234:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_SensorRaw[sensor];
 235:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 236:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 237:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* No Raw filters */
 238:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 239:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 240:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             */
 241:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 242:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 243:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 244:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 245:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 246:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 218              		.loc 1 246 0
 219 00ae 07F11407 		add	r7, r7, #20
 220 00b2 BD46     		mov	sp, r7
 221 00b4 80BC     		pop	{r7}
 222 00b6 7047     		bx	lr
 223              		.cfi_endproc
 224              	.LFE0:
 225              		.size	CapSense_BaseInit, .-CapSense_BaseInit
 226              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 227              		.align	2
 228              		.global	CapSense_InitializeSensorBaseline
 229              		.thumb
 230              		.thumb_func
 231              		.type	CapSense_InitializeSensorBaseline, %function
 232              	CapSense_InitializeSensorBaseline:
 233              	.LFB1:
 247:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 248:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 249:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 250:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 251:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 252:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 253:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 254:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_SensorBaseline[sensor] array element with an 
 255:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 256:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 257:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 258:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  enabled.
 259:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 260:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 261:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 262:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 263:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 264:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 265:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 266:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 267:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 268:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 269:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 270:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint8 sensor)
 271:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                           
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 10


 272:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 234              		.loc 1 272 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 8
 237              		@ frame_needed = 1, uses_anonymous_args = 0
 238 0000 80B5     		push	{r7, lr}
 239              	.LCFI3:
 240              		.cfi_def_cfa_offset 8
 241 0002 82B0     		sub	sp, sp, #8
 242              	.LCFI4:
 243              		.cfi_def_cfa_offset 16
 244 0004 00AF     		add	r7, sp, #0
 245              		.cfi_offset 14, -4
 246              		.cfi_offset 7, -8
 247              	.LCFI5:
 248              		.cfi_def_cfa_register 7
 249 0006 0346     		mov	r3, r0
 250 0008 FB71     		strb	r3, [r7, #7]
 273:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Scan sensor */
 274:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 251              		.loc 1 274 0
 252 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 253 000c 1846     		mov	r0, r3
 254 000e FFF7FEFF 		bl	CapSense_ScanSensor
 255              	.L5:
 275:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u) {;}
 256              		.loc 1 275 0
 257 0012 FFF7FEFF 		bl	CapSense_IsBusy
 258 0016 0346     		mov	r3, r0
 259 0018 002B     		cmp	r3, #0
 260 001a FAD1     		bne	.L5
 276:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 277:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 278:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 279:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_BaseInit(sensor);
 261              		.loc 1 279 0
 262 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 263 001e 1846     		mov	r0, r3
 264 0020 FFF7FEFF 		bl	CapSense_BaseInit
 280:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 281:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 282:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 283:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
 284:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 285:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 286:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 287:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 288:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 289:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
 290:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 291:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 292:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor + CapSense_TOTAL_SENSOR_COUNT__CH0);
 293:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 294:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 295:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
 296:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 265              		.loc 1 296 0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 11


 266 0024 07F10807 		add	r7, r7, #8
 267 0028 BD46     		mov	sp, r7
 268 002a 80BD     		pop	{r7, pc}
 269              		.cfi_endproc
 270              	.LFE1:
 271              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 272              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 273              		.align	2
 274              		.global	CapSense_InitializeAllBaselines
 275              		.thumb
 276              		.thumb_func
 277              		.type	CapSense_InitializeAllBaselines, %function
 278              	CapSense_InitializeAllBaselines:
 279              	.LFB2:
 297:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 298:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 299:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 300:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 301:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 302:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 303:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 304:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to loads the 
 305:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorBaseline[] array with an initial values by scanning 
 306:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 307:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 308:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 309:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 310:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 311:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 312:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 313:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 314:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 315:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 316:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 317:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 318:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 320:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                           
 321:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 280              		.loc 1 321 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 8
 283              		@ frame_needed = 1, uses_anonymous_args = 0
 284 0000 80B5     		push	{r7, lr}
 285              	.LCFI6:
 286              		.cfi_def_cfa_offset 8
 287 0002 82B0     		sub	sp, sp, #8
 288              	.LCFI7:
 289              		.cfi_def_cfa_offset 16
 290 0004 00AF     		add	r7, sp, #0
 291              		.cfi_offset 14, -4
 292              		.cfi_offset 7, -8
 293              	.LCFI8:
 294              		.cfi_def_cfa_register 7
 322:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 323:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 324:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 12


 325:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 295              		.loc 1 325 0
 296 0006 4FF00003 		mov	r3, #0
 297 000a FB71     		strb	r3, [r7, #7]
 298 000c 07E0     		b	.L8
 299              	.L9:
 326:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 327:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 300              		.loc 1 327 0
 301 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 302 0010 1846     		mov	r0, r3
 303 0012 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 304              		.loc 1 325 0
 305 0016 FB79     		ldrb	r3, [r7, #7]
 306 0018 03F10103 		add	r3, r3, #1
 307 001c FB71     		strb	r3, [r7, #7]
 308              	.L8:
 309 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 310 0020 062B     		cmp	r3, #6
 311 0022 F4D9     		bls	.L9
 328:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 329:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 312              		.loc 1 329 0
 313 0024 07F10807 		add	r7, r7, #8
 314 0028 BD46     		mov	sp, r7
 315 002a 80BD     		pop	{r7, pc}
 316              		.cfi_endproc
 317              	.LFE2:
 318              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 319              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 320              		.align	2
 321              		.global	CapSense_InitializeEnabledBaselines
 322              		.thumb
 323              		.thumb_func
 324              		.type	CapSense_InitializeEnabledBaselines, %function
 325              	CapSense_InitializeEnabledBaselines:
 326              	.LFB3:
 330:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 331:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 332:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 333:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 334:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 335:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 336:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 337:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 338:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 339:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 340:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 341:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 342:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 343:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 344:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 345:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 346:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 347:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 348:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 349:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 13


 350:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 351:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 352:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 353:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                              
 354:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 327              		.loc 1 354 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 8
 330              		@ frame_needed = 1, uses_anonymous_args = 0
 331 0000 80B5     		push	{r7, lr}
 332              	.LCFI9:
 333              		.cfi_def_cfa_offset 8
 334 0002 82B0     		sub	sp, sp, #8
 335              	.LCFI10:
 336              		.cfi_def_cfa_offset 16
 337 0004 00AF     		add	r7, sp, #0
 338              		.cfi_offset 14, -4
 339              		.cfi_offset 7, -8
 340              	.LCFI11:
 341              		.cfi_def_cfa_register 7
 355:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 356:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 357:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 358:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 359:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 342              		.loc 1 359 0
 343 0006 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 344              	.L12:
 360:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u){;}
 345              		.loc 1 360 0
 346 000a FFF7FEFF 		bl	CapSense_IsBusy
 347 000e 0346     		mov	r3, r0
 348 0010 002B     		cmp	r3, #0
 349 0012 FAD1     		bne	.L12
 361:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 362:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 350              		.loc 1 362 0
 351 0014 4FF00003 		mov	r3, #0
 352 0018 7B71     		strb	r3, [r7, #5]
 353 001a 28E0     		b	.L13
 354              	.L15:
 363:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 364:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (i >> 3u);
 355              		.loc 1 364 0
 356 001c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 357 001e 4FEAD303 		lsr	r3, r3, #3
 358 0022 BB71     		strb	r3, [r7, #6]
 365:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 359              		.loc 1 365 0
 360 0024 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 361 0026 03F00703 		and	r3, r3, #7
 362 002a 4FF00102 		mov	r2, #1
 363 002e 02FA03F3 		lsl	r3, r2, r3
 364 0032 FB71     		strb	r3, [r7, #7]
 366:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 367:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 368:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if((CapSense_SensorEnableMask[pos] & enMask) == 0u)
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 14


 365              		.loc 1 368 0
 366 0034 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 367 0036 40F20003 		movw	r3, #:lower16:CapSense_SensorEnableMask
 368 003a C0F20003 		movt	r3, #:upper16:CapSense_SensorEnableMask
 369 003e 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 370 0040 FB79     		ldrb	r3, [r7, #7]
 371 0042 02EA0303 		and	r3, r2, r3
 372 0046 DBB2     		uxtb	r3, r3
 373 0048 002B     		cmp	r3, #0
 374 004a 08D1     		bne	.L14
 369:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 370:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_SensorRaw[i] = 0u;
 375              		.loc 1 370 0
 376 004c 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 377 004e 40F20003 		movw	r3, #:lower16:CapSense_SensorRaw
 378 0052 C0F20003 		movt	r3, #:upper16:CapSense_SensorRaw
 379 0056 4FF00001 		mov	r1, #0
 380 005a 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 381              	.L14:
 371:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 372:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 373:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Initialize baselines */
 374:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_BaseInit(i);
 382              		.loc 1 374 0
 383 005e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 384 0060 1846     		mov	r0, r3
 385 0062 FFF7FEFF 		bl	CapSense_BaseInit
 386              		.loc 1 362 0
 387 0066 7B79     		ldrb	r3, [r7, #5]
 388 0068 03F10103 		add	r3, r3, #1
 389 006c 7B71     		strb	r3, [r7, #5]
 390              	.L13:
 391 006e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 392 0070 062B     		cmp	r3, #6
 393 0072 D3D9     		bls	.L15
 375:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 376:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }  
 394              		.loc 1 376 0
 395 0074 07F10807 		add	r7, r7, #8
 396 0078 BD46     		mov	sp, r7
 397 007a 80BD     		pop	{r7, pc}
 398              		.cfi_endproc
 399              	.LFE3:
 400              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 401              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 402              		.align	2
 403              		.global	CapSense_UpdateSensorBaseline
 404              		.thumb
 405              		.thumb_func
 406              		.type	CapSense_UpdateSensorBaseline, %function
 407              	CapSense_UpdateSensorBaseline:
 408              	.LFB4:
 377:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 378:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 379:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 380:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 381:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 15


 382:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 383:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 384:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Updates the CapSense_SensorBaseline[sensor] array element using the 
 385:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 386:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 387:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  it in CapSense_SensorSignal[sensor]. 
 388:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 389:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 390:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 391:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  that noise threshold.
 392:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 393:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  calculation.
 394:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 395:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 396:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 397:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 398:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 399:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 400:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 401:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 402:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorBaseline[]    - used to store baseline value.
 403:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorBaselineLow[] - used to store fraction byte of 
 404:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline value.
 405:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorSignal[]      - used to store diffence between 
 406:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 407:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 408:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  any enabled raw data filter.
 409:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 410:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 411:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 412:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 413:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 414:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 415:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC5/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint8 sensor)
 417:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 418:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 409              		.loc 1 418 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 24
 412              		@ frame_needed = 1, uses_anonymous_args = 0
 413 0000 80B5     		push	{r7, lr}
 414              	.LCFI12:
 415              		.cfi_def_cfa_offset 8
 416 0002 86B0     		sub	sp, sp, #24
 417              	.LCFI13:
 418              		.cfi_def_cfa_offset 32
 419 0004 00AF     		add	r7, sp, #0
 420              		.cfi_offset 14, -4
 421              		.cfi_offset 7, -8
 422              	.LCFI14:
 423              		.cfi_def_cfa_register 7
 424 0006 0346     		mov	r3, r0
 425 0008 FB71     		strb	r3, [r7, #7]
 419:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint32 calc;
 420:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 tempRaw;
 421:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 filteredRawData;
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 16


 422:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 426              		.loc 1 422 0
 427 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 428 000c 40F20003 		movw	r3, #:lower16:CapSense_widgetNumber
 429 0010 C0F20003 		movt	r3, #:upper16:CapSense_widgetNumber
 430 0014 9B5C     		ldrb	r3, [r3, r2]
 431 0016 BB75     		strb	r3, [r7, #22]
 423:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 noiseThreshold = CapSense_noiseThreshold[widget];
 432              		.loc 1 423 0
 433 0018 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 434 001a 40F20003 		movw	r3, #:lower16:CapSense_noiseThreshold
 435 001e C0F20003 		movt	r3, #:upper16:CapSense_noiseThreshold
 436 0022 9B5C     		ldrb	r3, [r3, r2]
 437 0024 FB75     		strb	r3, [r7, #23]
 424:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 425:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 426:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 427:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 428:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 429:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 430:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 431:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     filteredRawData = CapSense_SensorRaw[sensor];
 438              		.loc 1 431 0
 439 0026 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 440 0028 40F20003 		movw	r3, #:lower16:CapSense_SensorRaw
 441 002c C0F20003 		movt	r3, #:upper16:CapSense_SensorRaw
 442 0030 33F81230 		ldrh	r3, [r3, r2, lsl #1]	@ movhi
 443 0034 BB82     		strh	r3, [r7, #20]	@ movhi
 432:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 433:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 434:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData;
 444              		.loc 1 434 0
 445 0036 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 446 0038 7B82     		strh	r3, [r7, #18]	@ movhi
 435:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor], 
 447              		.loc 1 435 0
 448 003a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 449 003c 40F20003 		movw	r3, #:lower16:CapSense_rawFilterData1
 450 0040 C0F20003 		movt	r3, #:upper16:CapSense_rawFilterData1
 451 0044 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 452 0048 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 453 004a 40F20003 		movw	r3, #:lower16:CapSense_rawFilterData2
 454 004e C0F20003 		movt	r3, #:upper16:CapSense_rawFilterData2
 455 0052 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 456 0056 B98A     		ldrh	r1, [r7, #20]
 457 0058 0846     		mov	r0, r1
 458 005a 1146     		mov	r1, r2
 459 005c 1A46     		mov	r2, r3
 460 005e FFF7FEFF 		bl	CapSense_MedianFilter
 461 0062 0346     		mov	r3, r0
 462 0064 BB82     		strh	r3, [r7, #20]	@ movhi
 436:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                         CapSense_rawFilterData2[sensor]);
 437:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 463              		.loc 1 437 0
 464 0066 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 465 0068 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 466 006a 40F20003 		movw	r3, #:lower16:CapSense_rawFilterData1
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 17


 467 006e C0F20003 		movt	r3, #:upper16:CapSense_rawFilterData1
 468 0072 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 469 0076 40F20003 		movw	r3, #:lower16:CapSense_rawFilterData2
 470 007a C0F20003 		movt	r3, #:upper16:CapSense_rawFilterData2
 471 007e 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 438:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = tempRaw;
 472              		.loc 1 438 0
 473 0082 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 474 0084 40F20003 		movw	r3, #:lower16:CapSense_rawFilterData1
 475 0088 C0F20003 		movt	r3, #:upper16:CapSense_rawFilterData1
 476 008c 798A     		ldrh	r1, [r7, #18]	@ movhi
 477 008e 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 439:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 440:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 441:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData;
 442:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sensor]
 443:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                            CapSense_rawFilterData2[sensor]);
 444:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 445:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = tempRaw;
 446:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 447:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 448:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 449:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 450:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 451:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 452:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 453:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 454:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             
 455:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 456:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor]);
 457:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 458:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 459:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 460:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 461:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 462:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 463:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 464:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 465:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 466:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 467:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 468:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* No Raw filters */
 469:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 470:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 471:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 472:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_CalculateThresholds(sensor);
 478              		.loc 1 472 0
 479 0092 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 480 0094 1846     		mov	r0, r3
 481 0096 FFF7FEFF 		bl	CapSense_CalculateThresholds
 473:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 474:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 475:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 476:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Baseline calculation */
 477:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 478:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_SensorBaseline[sensor])
 482              		.loc 1 478 0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 18


 483 009a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 484 009c 40F20003 		movw	r3, #:lower16:CapSense_SensorBaseline
 485 00a0 C0F20003 		movt	r3, #:upper16:CapSense_SensorBaseline
 486 00a4 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 487 00a8 BA8A     		ldrh	r2, [r7, #20]
 488 00aa 9A42     		cmp	r2, r3
 489 00ac 0ED3     		bcc	.L18
 479:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 480:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_SensorBaseline[sensor];
 490              		.loc 1 480 0
 491 00ae FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 492 00b0 40F20003 		movw	r3, #:lower16:CapSense_SensorBaseline
 493 00b4 C0F20003 		movt	r3, #:upper16:CapSense_SensorBaseline
 494 00b8 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 495 00bc BA8A     		ldrh	r2, [r7, #20]	@ movhi
 496 00be C3EB0203 		rsb	r3, r3, r2
 497 00c2 7B82     		strh	r3, [r7, #18]	@ movhi
 481:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 498              		.loc 1 481 0
 499 00c4 4FF00103 		mov	r3, #1
 500 00c8 BB75     		strb	r3, [r7, #22]
 501 00ca 0DE0     		b	.L19
 502              	.L18:
 482:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 483:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 484:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 485:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = CapSense_SensorBaseline[sensor] - filteredRawData;
 503              		.loc 1 485 0
 504 00cc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 505 00ce 40F20003 		movw	r3, #:lower16:CapSense_SensorBaseline
 506 00d2 C0F20003 		movt	r3, #:upper16:CapSense_SensorBaseline
 507 00d6 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 508 00da BB8A     		ldrh	r3, [r7, #20]	@ movhi
 509 00dc C3EB0203 		rsb	r3, r3, r2
 510 00e0 7B82     		strh	r3, [r7, #18]	@ movhi
 486:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 511              		.loc 1 486 0
 512 00e2 4FF00003 		mov	r3, #0
 513 00e6 BB75     		strb	r3, [r7, #22]
 514              	.L19:
 487:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 488:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 489:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 515              		.loc 1 489 0
 516 00e8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 517 00ea 002B     		cmp	r3, #0
 518 00ec 26D1     		bne	.L20
 519 00ee 7B8A     		ldrh	r3, [r7, #18]
 520 00f0 142B     		cmp	r3, #20
 521 00f2 23D9     		bls	.L20
 490:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 491:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_LowBaselineResetCnt[sensor] >= CapSense_LOW_BASELINE_RESET)
 522              		.loc 1 491 0
 523 00f4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 524 00f6 40F20003 		movw	r3, #:lower16:CapSense_LowBaselineResetCnt
 525 00fa C0F20003 		movt	r3, #:upper16:CapSense_LowBaselineResetCnt
 526 00fe 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 19


 527 0100 042B     		cmp	r3, #4
 528 0102 0CD9     		bls	.L21
 492:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 493:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 529              		.loc 1 493 0
 530 0104 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 531 0106 1846     		mov	r0, r3
 532 0108 FFF7FEFF 		bl	CapSense_BaseInit
 494:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_LowBaselineResetCnt[sensor] = 0;
 533              		.loc 1 494 0
 534 010c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 535 010e 40F20003 		movw	r3, #:lower16:CapSense_LowBaselineResetCnt
 536 0112 C0F20003 		movt	r3, #:upper16:CapSense_LowBaselineResetCnt
 537 0116 4FF00001 		mov	r1, #0
 538 011a 9954     		strb	r1, [r3, r2]
 539              		.loc 1 489 0
 540 011c 56E0     		b	.L23
 541              	.L21:
 495:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 496:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
 497:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 498:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_LowBaselineResetCnt[sensor]++;
 542              		.loc 1 498 0
 543 011e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 544 0120 40F20003 		movw	r3, #:lower16:CapSense_LowBaselineResetCnt
 545 0124 C0F20003 		movt	r3, #:upper16:CapSense_LowBaselineResetCnt
 546 0128 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 547 012a 03F10103 		add	r3, r3, #1
 548 012e D9B2     		uxtb	r1, r3
 549 0130 40F20003 		movw	r3, #:lower16:CapSense_LowBaselineResetCnt
 550 0134 C0F20003 		movt	r3, #:upper16:CapSense_LowBaselineResetCnt
 551 0138 9954     		strb	r1, [r3, r2]
 552              		.loc 1 489 0
 553 013a 47E0     		b	.L23
 554              	.L20:
 499:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 500:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 501:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 502:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 503:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 504:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 505:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 555              		.loc 1 505 0
 556 013c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 557 013e 7A8A     		ldrh	r2, [r7, #18]
 558 0140 9A42     		cmp	r2, r3
 559 0142 05D9     		bls	.L24
 560 0144 7B8A     		ldrh	r3, [r7, #18]
 561 0146 132B     		cmp	r3, #19
 562 0148 40D8     		bhi	.L23
 563 014a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 564 014c 002B     		cmp	r3, #0
 565 014e 3DD1     		bne	.L23
 566              	.L24:
 506:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 507:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                    && widget == 0))
 508:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 20


 509:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 510:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 511:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc = (uint32) CapSense_SensorBaseline[sensor] << 8u;
 567              		.loc 1 511 0
 568 0150 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 569 0152 40F20003 		movw	r3, #:lower16:CapSense_SensorBaseline
 570 0156 C0F20003 		movt	r3, #:upper16:CapSense_SensorBaseline
 571 015a 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 572 015e 4FEA0323 		lsl	r3, r3, #8
 573 0162 FB60     		str	r3, [r7, #12]
 512:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_SensorBaselineLow[sensor];
 574              		.loc 1 512 0
 575 0164 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 576 0166 40F20003 		movw	r3, #:lower16:CapSense_SensorBaselineLow
 577 016a C0F20003 		movt	r3, #:upper16:CapSense_SensorBaselineLow
 578 016e 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 579 0170 FA68     		ldr	r2, [r7, #12]
 580 0172 42EA0303 		orr	r3, r2, r3
 581 0176 FB60     		str	r3, [r7, #12]
 513:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 514:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 515:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc += filteredRawData;
 582              		.loc 1 515 0
 583 0178 BB8A     		ldrh	r3, [r7, #20]
 584 017a FA68     		ldr	r2, [r7, #12]
 585 017c 1344     		add	r3, r2, r3
 586 017e FB60     		str	r3, [r7, #12]
 516:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 517:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 518:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc -= CapSense_SensorBaseline[sensor];
 587              		.loc 1 518 0
 588 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 589 0182 40F20003 		movw	r3, #:lower16:CapSense_SensorBaseline
 590 0186 C0F20003 		movt	r3, #:upper16:CapSense_SensorBaseline
 591 018a 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 592 018e FA68     		ldr	r2, [r7, #12]
 593 0190 C3EB0203 		rsb	r3, r3, r2
 594 0194 FB60     		str	r3, [r7, #12]
 519:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 520:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 521:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_SensorBaseline[sensor] = ((uint16) (calc >> 8u));
 595              		.loc 1 521 0
 596 0196 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 597 0198 FB68     		ldr	r3, [r7, #12]
 598 019a 4FEA1323 		lsr	r3, r3, #8
 599 019e 99B2     		uxth	r1, r3
 600 01a0 40F20003 		movw	r3, #:lower16:CapSense_SensorBaseline
 601 01a4 C0F20003 		movt	r3, #:upper16:CapSense_SensorBaseline
 602 01a8 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 522:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_SensorBaselineLow[sensor] = ((uint8) calc);
 603              		.loc 1 522 0
 604 01ac FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 605 01ae FB68     		ldr	r3, [r7, #12]
 606 01b0 D9B2     		uxtb	r1, r3
 607 01b2 40F20003 		movw	r3, #:lower16:CapSense_SensorBaselineLow
 608 01b6 C0F20003 		movt	r3, #:upper16:CapSense_SensorBaselineLow
 609 01ba 9954     		strb	r1, [r3, r2]
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 21


 523:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 524:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_LowBaselineResetCnt[sensor] = 0;
 610              		.loc 1 524 0
 611 01bc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 612 01be 40F20003 		movw	r3, #:lower16:CapSense_LowBaselineResetCnt
 613 01c2 C0F20003 		movt	r3, #:upper16:CapSense_LowBaselineResetCnt
 614 01c6 4FF00001 		mov	r1, #0
 615 01ca 9954     		strb	r1, [r3, r2]
 616              	.L23:
 525:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 526:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 527:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 528:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 529:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 530:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 531:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 617              		.loc 1 531 0
 618 01cc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 619 01ce 7A8A     		ldrh	r2, [r7, #18]
 620 01d0 9A42     		cmp	r2, r3
 621 01d2 17D9     		bls	.L25
 622 01d4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 623 01d6 002B     		cmp	r3, #0
 624 01d8 14D0     		beq	.L25
 532:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 533:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 534:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 535:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 625              		.loc 1 535 0
 626 01da 7B8A     		ldrh	r3, [r7, #18]
 627 01dc FF2B     		cmp	r3, #255
 628 01de 08D9     		bls	.L26
 536:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 537:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_SensorSignal[sensor] = 0xFFu;
 629              		.loc 1 537 0
 630 01e0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 631 01e2 40F20003 		movw	r3, #:lower16:CapSense_SensorSignal
 632 01e6 C0F20003 		movt	r3, #:upper16:CapSense_SensorSignal
 633 01ea 4FF0FF31 		mov	r1, #-1
 634 01ee 9954     		strb	r1, [r3, r2]
 635              		.loc 1 531 0
 636 01f0 10E0     		b	.L29
 637              	.L26:
 538:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }    
 539:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             else 
 540:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 541:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_SensorSignal[sensor] = ((uint8) tempRaw);
 638              		.loc 1 541 0
 639 01f2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 640 01f4 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 641 01f6 D9B2     		uxtb	r1, r3
 642 01f8 40F20003 		movw	r3, #:lower16:CapSense_SensorSignal
 643 01fc C0F20003 		movt	r3, #:upper16:CapSense_SensorSignal
 644 0200 9954     		strb	r1, [r3, r2]
 645              		.loc 1 531 0
 646 0202 07E0     		b	.L29
 647              	.L25:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 22


 542:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 543:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
 544:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_SensorSignal[sensor] = ((uint16) tempRaw);
 545:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 546:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 547:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 548:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 549:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Signal is zero */
 550:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_SensorSignal[sensor] = 0u;
 648              		.loc 1 550 0
 649 0204 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 650 0206 40F20003 		movw	r3, #:lower16:CapSense_SensorSignal
 651 020a C0F20003 		movt	r3, #:upper16:CapSense_SensorSignal
 652 020e 4FF00001 		mov	r1, #0
 653 0212 9954     		strb	r1, [r3, r2]
 654              	.L29:
 551:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 552:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 553:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 554:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 555:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 556:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 557:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 655              		.loc 1 557 0
 656 0214 07F11807 		add	r7, r7, #24
 657 0218 BD46     		mov	sp, r7
 658 021a 80BD     		pop	{r7, pc}
 659              		.cfi_endproc
 660              	.LFE4:
 661              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 662              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 663              		.align	2
 664              		.global	CapSense_UpdateEnabledBaselines
 665              		.thumb
 666              		.thumb_func
 667              		.type	CapSense_UpdateEnabledBaselines, %function
 668              	CapSense_UpdateEnabledBaselines:
 669              	.LFB5:
 558:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 559:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 560:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 562:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 563:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 564:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 565:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Checks CapSense_SensorEnableMask[] array and calls the 
 566:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 567:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  for enabled sensors.
 568:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 569:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 570:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 571:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 572:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 573:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 574:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 575:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 576:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[] - used to store the sensor scanning 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 23


 577:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 578:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[0] contains the masked bits for sensors 
 579:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 580:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[1] contains the masked bits for 
 581:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 582:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 583:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 584:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 585:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 586:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 587:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 588:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 589:.\Generated_Source\PSoC5/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 590:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 591:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 670              		.loc 1 591 0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 8
 673              		@ frame_needed = 1, uses_anonymous_args = 0
 674 0000 80B5     		push	{r7, lr}
 675              	.LCFI15:
 676              		.cfi_def_cfa_offset 8
 677 0002 82B0     		sub	sp, sp, #8
 678              	.LCFI16:
 679              		.cfi_def_cfa_offset 16
 680 0004 00AF     		add	r7, sp, #0
 681              		.cfi_offset 14, -4
 682              		.cfi_offset 7, -8
 683              	.LCFI17:
 684              		.cfi_def_cfa_register 7
 592:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 593:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 594:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 595:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 596:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 685              		.loc 1 596 0
 686 0006 4FF00003 		mov	r3, #0
 687 000a 7B71     		strb	r3, [r7, #5]
 688 000c 1FE0     		b	.L31
 689              	.L33:
 597:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 598:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (i >> 3u);
 690              		.loc 1 598 0
 691 000e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 692 0010 4FEAD303 		lsr	r3, r3, #3
 693 0014 BB71     		strb	r3, [r7, #6]
 599:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 694              		.loc 1 599 0
 695 0016 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 696 0018 03F00703 		and	r3, r3, #7
 697 001c 4FF00102 		mov	r2, #1
 698 0020 02FA03F3 		lsl	r3, r2, r3
 699 0024 FB71     		strb	r3, [r7, #7]
 600:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if((CapSense_SensorEnableMask[pos] & enMask) != 0u)
 700              		.loc 1 600 0
 701 0026 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 702 0028 40F20003 		movw	r3, #:lower16:CapSense_SensorEnableMask
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 24


 703 002c C0F20003 		movt	r3, #:upper16:CapSense_SensorEnableMask
 704 0030 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 705 0032 FB79     		ldrb	r3, [r7, #7]
 706 0034 02EA0303 		and	r3, r2, r3
 707 0038 DBB2     		uxtb	r3, r3
 708 003a 002B     		cmp	r3, #0
 709 003c 03D0     		beq	.L32
 601:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 602:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 710              		.loc 1 602 0
 711 003e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 712 0040 1846     		mov	r0, r3
 713 0042 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 714              	.L32:
 715              		.loc 1 596 0
 716 0046 7B79     		ldrb	r3, [r7, #5]
 717 0048 03F10103 		add	r3, r3, #1
 718 004c 7B71     		strb	r3, [r7, #5]
 719              	.L31:
 720 004e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 721 0050 062B     		cmp	r3, #6
 722 0052 DCD9     		bls	.L33
 603:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 604:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 605:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 723              		.loc 1 605 0
 724 0054 07F10807 		add	r7, r7, #8
 725 0058 BD46     		mov	sp, r7
 726 005a 80BD     		pop	{r7, pc}
 727              		.cfi_endproc
 728              	.LFE5:
 729              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 730              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 731              		.align	2
 732              		.global	CapSense_CheckIsSensorActive
 733              		.thumb
 734              		.thumb_func
 735              		.type	CapSense_CheckIsSensorActive, %function
 736              	CapSense_CheckIsSensorActive:
 737              	.LFB6:
 606:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 607:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 608:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 609:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
 610:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 611:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 612:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 613:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Compares the CapSense_SensorSignal[sensor] array element to finger
 614:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 615:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 616:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  based on whether the sensor is currently active. 
 617:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 618:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 619:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  The debounce counter added to the sensor active transition.
 620:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  This function updates CapSense_SensorOnMask[] array element.
 621:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 622:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 25


 623:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 624:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 625:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 626:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 627:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 628:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 629:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorSignal[]      - used to store diffence between 
 630:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 631:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store current debounce 
 632:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 633:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 634:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 635:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorOnMask[] - used to store sensors on/off state.
 636:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorOnMask[0] contains the masked bits for sensors 
 637:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 638:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[1] contains the masked bits for 
 639:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 640:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor is inactive.
 641:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor is active.
 642:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 643:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 644:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 645:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 646:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 647:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsSensorActive(uint8 sensor)
 648:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                   
 649:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 738              		.loc 1 649 0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 16
 741              		@ frame_needed = 1, uses_anonymous_args = 0
 742              		@ link register save eliminated.
 743 0000 80B4     		push	{r7}
 744              	.LCFI18:
 745              		.cfi_def_cfa_offset 4
 746 0002 85B0     		sub	sp, sp, #20
 747              	.LCFI19:
 748              		.cfi_def_cfa_offset 24
 749 0004 00AF     		add	r7, sp, #0
 750              		.cfi_offset 7, -4
 751              	.LCFI20:
 752              		.cfi_def_cfa_register 7
 753 0006 0346     		mov	r3, r0
 754 0008 FB71     		strb	r3, [r7, #7]
 650:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 debounceIndex;
 651:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Get On/Off mask */
 652:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos = (sensor >> 3u);
 755              		.loc 1 652 0
 756 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 757 000c 4FEAD303 		lsr	r3, r3, #3
 758 0010 BB72     		strb	r3, [r7, #10]
 653:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 759              		.loc 1 653 0
 760 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 761 0014 03F00703 		and	r3, r3, #7
 762 0018 4FF00102 		mov	r2, #1
 763 001c 02FA03F3 		lsl	r3, r2, r3
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 26


 764 0020 FB72     		strb	r3, [r7, #11]
 654:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
 655:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 765              		.loc 1 655 0
 766 0022 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 767 0024 40F20003 		movw	r3, #:lower16:CapSense_widgetNumber
 768 0028 C0F20003 		movt	r3, #:upper16:CapSense_widgetNumber
 769 002c 9B5C     		ldrb	r3, [r3, r2]
 770 002e 3B73     		strb	r3, [r7, #12]
 656:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 fingerThreshold = CapSense_fingerThreshold[widget];
 771              		.loc 1 656 0
 772 0030 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 773 0032 40F20003 		movw	r3, #:lower16:CapSense_fingerThreshold
 774 0036 C0F20003 		movt	r3, #:upper16:CapSense_fingerThreshold
 775 003a 9B5C     		ldrb	r3, [r3, r2]
 776 003c 7B73     		strb	r3, [r7, #13]
 657:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 hysteresis = CapSense_hysteresis[widget];
 777              		.loc 1 657 0
 778 003e 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 779 0040 40F20003 		movw	r3, #:lower16:CapSense_hysteresis
 780 0044 C0F20003 		movt	r3, #:upper16:CapSense_hysteresis
 781 0048 9B5C     		ldrb	r3, [r3, r2]
 782 004a BB73     		strb	r3, [r7, #14]
 658:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 debounce = CapSense_debounce[widget];
 783              		.loc 1 658 0
 784 004c 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 785 004e 40F20003 		movw	r3, #:lower16:CapSense_debounce
 786 0052 C0F20003 		movt	r3, #:upper16:CapSense_debounce
 787 0056 9B5C     		ldrb	r3, [r3, r2]
 788 0058 FB73     		strb	r3, [r7, #15]
 659:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 660:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if (widget < CapSense_TOTAL_CENTROIDS_COUNT)
 789              		.loc 1 660 0
 790 005a 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 791 005c 002B     		cmp	r3, #0
 792 005e 0BD1     		bne	.L36
 661:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 662:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         debounceIndex = CapSense_UNUSED_DEBOUNCE_COUNTER_INDEX;
 793              		.loc 1 662 0
 794 0060 4FF00203 		mov	r3, #2
 795 0064 7B72     		strb	r3, [r7, #9]
 663:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_debounceCounter[debounceIndex] = 1u;
 796              		.loc 1 663 0
 797 0066 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 798 0068 40F20003 		movw	r3, #:lower16:CapSense_debounceCounter
 799 006c C0F20003 		movt	r3, #:upper16:CapSense_debounceCounter
 800 0070 4FF00101 		mov	r1, #1
 801 0074 9954     		strb	r1, [r3, r2]
 802 0076 03E0     		b	.L37
 803              	.L36:
 664:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 665:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 666:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 667:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         debounceIndex = widget - (CapSense_END_OF_TOUCH_PAD_INDEX + 1);
 804              		.loc 1 667 0
 805 0078 3B7B     		ldrb	r3, [r7, #12]
 806 007a 03F1FF33 		add	r3, r3, #-1
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 27


 807 007e 7B72     		strb	r3, [r7, #9]
 808              	.L37:
 668:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 669:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 670:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 671:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Was on */
 672:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if (CapSense_SensorOnMask[pos] & onMask)
 809              		.loc 1 672 0
 810 0080 BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 811 0082 40F20003 		movw	r3, #:lower16:CapSense_SensorOnMask
 812 0086 C0F20003 		movt	r3, #:upper16:CapSense_SensorOnMask
 813 008a 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 814 008c FB7A     		ldrb	r3, [r7, #11]
 815 008e 02EA0303 		and	r3, r2, r3
 816 0092 DBB2     		uxtb	r3, r3
 817 0094 002B     		cmp	r3, #0
 818 0096 29D0     		beq	.L38
 673:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 674:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Hysteresis minus */
 675:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_SensorSignal[sensor] < (fingerThreshold - hysteresis))
 819              		.loc 1 675 0
 820 0098 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 821 009a 40F20003 		movw	r3, #:lower16:CapSense_SensorSignal
 822 009e C0F20003 		movt	r3, #:upper16:CapSense_SensorSignal
 823 00a2 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 824 00a4 1A46     		mov	r2, r3
 825 00a6 797B     		ldrb	r1, [r7, #13]	@ zero_extendqisi2
 826 00a8 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 827 00aa C3EB0103 		rsb	r3, r3, r1
 828 00ae 9A42     		cmp	r2, r3
 829 00b0 56DA     		bge	.L46
 676:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 677:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_SensorOnMask[pos] &= ~onMask;
 830              		.loc 1 677 0
 831 00b2 BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 832 00b4 B97A     		ldrb	r1, [r7, #10]	@ zero_extendqisi2
 833 00b6 40F20003 		movw	r3, #:lower16:CapSense_SensorOnMask
 834 00ba C0F20003 		movt	r3, #:upper16:CapSense_SensorOnMask
 835 00be 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 836 00c0 1946     		mov	r1, r3
 837 00c2 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 838 00c4 6FEA0303 		mvn	r3, r3
 839 00c8 DBB2     		uxtb	r3, r3
 840 00ca 01EA0303 		and	r3, r1, r3
 841 00ce DBB2     		uxtb	r3, r3
 842 00d0 D9B2     		uxtb	r1, r3
 843 00d2 40F20003 		movw	r3, #:lower16:CapSense_SensorOnMask
 844 00d6 C0F20003 		movt	r3, #:upper16:CapSense_SensorOnMask
 845 00da 9954     		strb	r1, [r3, r2]
 678:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce; 
 846              		.loc 1 678 0
 847 00dc 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 848 00de 40F20003 		movw	r3, #:lower16:CapSense_debounceCounter
 849 00e2 C0F20003 		movt	r3, #:upper16:CapSense_debounceCounter
 850 00e6 F97B     		ldrb	r1, [r7, #15]
 851 00e8 9954     		strb	r1, [r3, r2]
 852 00ea 3CE0     		b	.L40
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 28


 853              	.L38:
 679:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 680:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 681:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else    /* Was off */
 682:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 683:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Hysteresis plus */
 684:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_SensorSignal[sensor] > (fingerThreshold + hysteresis))
 854              		.loc 1 684 0
 855 00ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 856 00ee 40F20003 		movw	r3, #:lower16:CapSense_SensorSignal
 857 00f2 C0F20003 		movt	r3, #:upper16:CapSense_SensorSignal
 858 00f6 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 859 00f8 1A46     		mov	r2, r3
 860 00fa 797B     		ldrb	r1, [r7, #13]	@ zero_extendqisi2
 861 00fc BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 862 00fe 0B44     		add	r3, r1, r3
 863 0100 9A42     		cmp	r2, r3
 864 0102 25DD     		ble	.L41
 685:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 686:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
 687:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if (CapSense_debounceCounter[debounceIndex]-- <= 1u)
 865              		.loc 1 687 0
 866 0104 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 867 0106 40F20003 		movw	r3, #:lower16:CapSense_debounceCounter
 868 010a C0F20003 		movt	r3, #:upper16:CapSense_debounceCounter
 869 010e 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 870 0110 012B     		cmp	r3, #1
 871 0112 8CBF     		ite	hi
 872 0114 0021     		movhi	r1, #0
 873 0116 0121     		movls	r1, #1
 874 0118 C9B2     		uxtb	r1, r1
 875 011a 03F1FF33 		add	r3, r3, #-1
 876 011e D8B2     		uxtb	r0, r3
 877 0120 40F20003 		movw	r3, #:lower16:CapSense_debounceCounter
 878 0124 C0F20003 		movt	r3, #:upper16:CapSense_debounceCounter
 879 0128 9854     		strb	r0, [r3, r2]
 880 012a 0029     		cmp	r1, #0
 881 012c 1AD0     		beq	.L47
 688:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 689:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_SensorOnMask[pos] |= onMask; 
 882              		.loc 1 689 0
 883 012e BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 884 0130 B97A     		ldrb	r1, [r7, #10]	@ zero_extendqisi2
 885 0132 40F20003 		movw	r3, #:lower16:CapSense_SensorOnMask
 886 0136 C0F20003 		movt	r3, #:upper16:CapSense_SensorOnMask
 887 013a 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 888 013c FB7A     		ldrb	r3, [r7, #11]
 889 013e 41EA0303 		orr	r3, r1, r3
 890 0142 D9B2     		uxtb	r1, r3
 891 0144 40F20003 		movw	r3, #:lower16:CapSense_SensorOnMask
 892 0148 C0F20003 		movt	r3, #:upper16:CapSense_SensorOnMask
 893 014c 9954     		strb	r1, [r3, r2]
 894 014e 0AE0     		b	.L40
 895              	.L41:
 690:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 691:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 692:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 29


 693:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 694:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 695:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 896              		.loc 1 695 0
 897 0150 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 898 0152 40F20003 		movw	r3, #:lower16:CapSense_debounceCounter
 899 0156 C0F20003 		movt	r3, #:upper16:CapSense_debounceCounter
 900 015a F97B     		ldrb	r1, [r7, #15]
 901 015c 9954     		strb	r1, [r3, r2]
 902 015e 02E0     		b	.L40
 903              	.L46:
 904              		.loc 1 678 0
 905 0160 00BF     		nop
 906 0162 00E0     		b	.L40
 907              	.L47:
 908              		.loc 1 689 0
 909 0164 00BF     		nop
 910              	.L40:
 696:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 697:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 698:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 699:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     return (CapSense_SensorOnMask[pos] & onMask) ? 1u : 0u;
 911              		.loc 1 699 0
 912 0166 BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 913 0168 40F20003 		movw	r3, #:lower16:CapSense_SensorOnMask
 914 016c C0F20003 		movt	r3, #:upper16:CapSense_SensorOnMask
 915 0170 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 916 0172 FB7A     		ldrb	r3, [r7, #11]
 917 0174 02EA0303 		and	r3, r2, r3
 918 0178 DBB2     		uxtb	r3, r3
 919 017a 002B     		cmp	r3, #0
 920 017c 02D0     		beq	.L43
 921 017e 4FF00103 		mov	r3, #1
 922 0182 01E0     		b	.L44
 923              	.L43:
 924 0184 4FF00003 		mov	r3, #0
 925              	.L44:
 700:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 926              		.loc 1 700 0
 927 0188 1846     		mov	r0, r3
 928 018a 07F11407 		add	r7, r7, #20
 929 018e BD46     		mov	sp, r7
 930 0190 80BC     		pop	{r7}
 931 0192 7047     		bx	lr
 932              		.cfi_endproc
 933              	.LFE6:
 934              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 935              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 936              		.align	2
 937              		.global	CapSense_CheckIsWidgetActive
 938              		.thumb
 939              		.thumb_func
 940              		.type	CapSense_CheckIsWidgetActive, %function
 941              	CapSense_CheckIsWidgetActive:
 942              	.LFB7:
 701:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 702:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 30


 703:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 704:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
 705:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 706:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 707:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 708:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Use function CapSense_CheckIsSensorActive() to update 
 709:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorOnMask[] for all sensors within the widget.
 710:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 711:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  active.
 712:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 713:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  col and row to return widget active status.
 714:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 715:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 716:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 717:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 718:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 719:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 720:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 721:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 722:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 723:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 724:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 725:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 726:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsWidgetActive(uint8 widget)
 727:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 728:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 943              		.loc 1 728 0
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 16
 946              		@ frame_needed = 1, uses_anonymous_args = 0
 947 0000 80B5     		push	{r7, lr}
 948              	.LCFI21:
 949              		.cfi_def_cfa_offset 8
 950 0002 84B0     		sub	sp, sp, #16
 951              	.LCFI22:
 952              		.cfi_def_cfa_offset 24
 953 0004 00AF     		add	r7, sp, #0
 954              		.cfi_offset 14, -4
 955              		.cfi_offset 7, -8
 956              	.LCFI23:
 957              		.cfi_def_cfa_register 7
 958 0006 0346     		mov	r3, r0
 959 0008 FB71     		strb	r3, [r7, #7]
 729:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 960              		.loc 1 729 0
 961 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 962 000c 40F20003 		movw	r3, #:lower16:CapSense_rawDataIndex
 963 0010 C0F20003 		movt	r3, #:upper16:CapSense_rawDataIndex
 964 0014 9B5C     		ldrb	r3, [r3, r2]
 965 0016 7B73     		strb	r3, [r7, #13]
 730:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 966              		.loc 1 730 0
 967 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 968 001a 40F20003 		movw	r3, #:lower16:CapSense_numberOfSensors
 969 001e C0F20003 		movt	r3, #:upper16:CapSense_numberOfSensors
 970 0022 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 971 0024 7B7B     		ldrb	r3, [r7, #13]
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 31


 972 0026 1344     		add	r3, r2, r3
 973 0028 BB73     		strb	r3, [r7, #14]
 731:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 state = 0u;
 974              		.loc 1 731 0
 975 002a 4FF00003 		mov	r3, #0
 976 002e FB73     		strb	r3, [r7, #15]
 977              	.L50:
 732:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 733:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Check all sensors of the widget */
 734:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 735:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 736:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive(rawIndex) != 0u)
 978              		.loc 1 736 0
 979 0030 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 980 0032 1846     		mov	r0, r3
 981 0034 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 982 0038 0346     		mov	r3, r0
 983 003a 002B     		cmp	r3, #0
 984 003c 02D0     		beq	.L49
 737:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 738:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             state = CapSense_SENSOR_1_IS_ACTIVE;
 985              		.loc 1 738 0
 986 003e 4FF00103 		mov	r3, #1
 987 0042 FB73     		strb	r3, [r7, #15]
 988              	.L49:
 739:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 740:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 989              		.loc 1 740 0
 990 0044 7B7B     		ldrb	r3, [r7, #13]
 991 0046 03F10103 		add	r3, r3, #1
 992 004a 7B73     		strb	r3, [r7, #13]
 741:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 742:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 993              		.loc 1 742 0
 994 004c 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 995 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 996 0050 9A42     		cmp	r2, r3
 997 0052 EDD3     		bcc	.L50
 743:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 744:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 745:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 746:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     return state;
 998              		.loc 1 746 0
 999 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 747:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 1000              		.loc 1 747 0
 1001 0056 1846     		mov	r0, r3
 1002 0058 07F11007 		add	r7, r7, #16
 1003 005c BD46     		mov	sp, r7
 1004 005e 80BD     		pop	{r7, pc}
 1005              		.cfi_endproc
 1006              	.LFE7:
 1007              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 1008              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 1009              		.align	2
 1010              		.global	CapSense_CheckIsAnyWidgetActive
 1011              		.thumb
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 32


 1012              		.thumb_func
 1013              		.type	CapSense_CheckIsAnyWidgetActive, %function
 1014              	CapSense_CheckIsAnyWidgetActive:
 1015              	.LFB8:
 748:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 749:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 750:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 751:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
 752:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 753:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 754:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 755:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Compares all sensors of the CapSense_Signal[] array to their finger 
 756:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so 
 757:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  the CapSense_SensorOnMask[] array is up to date after calling this 
 758:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  function.
 759:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 760:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 761:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 762:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 763:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 764:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 765:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 766:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 767:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 768:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 769:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 770:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsAnyWidgetActive(void)
 771:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 772:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 1016              		.loc 1 772 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 8
 1019              		@ frame_needed = 1, uses_anonymous_args = 0
 1020 0000 80B5     		push	{r7, lr}
 1021              	.LCFI24:
 1022              		.cfi_def_cfa_offset 8
 1023 0002 82B0     		sub	sp, sp, #8
 1024              	.LCFI25:
 1025              		.cfi_def_cfa_offset 16
 1026 0004 00AF     		add	r7, sp, #0
 1027              		.cfi_offset 14, -4
 1028              		.cfi_offset 7, -8
 1029              	.LCFI26:
 1030              		.cfi_def_cfa_register 7
 773:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 774:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 state = 0u;
 1031              		.loc 1 774 0
 1032 0006 4FF00003 		mov	r3, #0
 1033 000a FB71     		strb	r3, [r7, #7]
 775:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 776:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1034              		.loc 1 776 0
 1035 000c 4FF00003 		mov	r3, #0
 1036 0010 BB71     		strb	r3, [r7, #6]
 1037 0012 0DE0     		b	.L53
 1038              	.L55:
 777:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 33


 778:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 1039              		.loc 1 778 0
 1040 0014 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1041 0016 1846     		mov	r0, r3
 1042 0018 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 1043 001c 0346     		mov	r3, r0
 1044 001e 002B     		cmp	r3, #0
 1045 0020 02D0     		beq	.L54
 779:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 780:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 1046              		.loc 1 780 0
 1047 0022 4FF00103 		mov	r3, #1
 1048 0026 FB71     		strb	r3, [r7, #7]
 1049              	.L54:
 1050              		.loc 1 776 0
 1051 0028 BB79     		ldrb	r3, [r7, #6]
 1052 002a 03F10103 		add	r3, r3, #1
 1053 002e BB71     		strb	r3, [r7, #6]
 1054              	.L53:
 1055 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1056 0032 022B     		cmp	r3, #2
 1057 0034 EED9     		bls	.L55
 781:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 782:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 783:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 784:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 785:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     return state;
 1058              		.loc 1 785 0
 1059 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 786:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 1060              		.loc 1 786 0
 1061 0038 1846     		mov	r0, r3
 1062 003a 07F10807 		add	r7, r7, #8
 1063 003e BD46     		mov	sp, r7
 1064 0040 80BD     		pop	{r7, pc}
 1065              		.cfi_endproc
 1066              	.LFE8:
 1067              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 1068 0042 00BF     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 1069              		.align	2
 1070              		.global	CapSense_EnableWidget
 1071              		.thumb
 1072              		.thumb_func
 1073              		.type	CapSense_EnableWidget, %function
 1074              	CapSense_EnableWidget:
 1075              	.LFB9:
 787:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 788:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 789:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 790:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
 791:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 792:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 793:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 794:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
 795:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 796:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 797:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 34


 798:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 799:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 800:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 801:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 802:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 803:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[] - used to store the sensor scanning 
 804:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 805:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[0] contains the masked bits for sensors 
 806:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 807:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[1] contains the masked bits for 
 808:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 809:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 810:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 811:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 812:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 813:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 814:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 815:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 816:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_EnableWidget(uint8 widget)
 817:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    
 818:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 1076              		.loc 1 818 0
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 16
 1079              		@ frame_needed = 1, uses_anonymous_args = 0
 1080              		@ link register save eliminated.
 1081 0000 80B4     		push	{r7}
 1082              	.LCFI27:
 1083              		.cfi_def_cfa_offset 4
 1084 0002 85B0     		sub	sp, sp, #20
 1085              	.LCFI28:
 1086              		.cfi_def_cfa_offset 24
 1087 0004 00AF     		add	r7, sp, #0
 1088              		.cfi_offset 7, -4
 1089              	.LCFI29:
 1090              		.cfi_def_cfa_register 7
 1091 0006 0346     		mov	r3, r0
 1092 0008 FB71     		strb	r3, [r7, #7]
 819:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 820:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 821:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1093              		.loc 1 821 0
 1094 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1095 000c 40F20003 		movw	r3, #:lower16:CapSense_rawDataIndex
 1096 0010 C0F20003 		movt	r3, #:upper16:CapSense_rawDataIndex
 1097 0014 9B5C     		ldrb	r3, [r3, r2]
 1098 0016 BB73     		strb	r3, [r7, #14]
 822:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1099              		.loc 1 822 0
 1100 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1101 001a 40F20003 		movw	r3, #:lower16:CapSense_numberOfSensors
 1102 001e C0F20003 		movt	r3, #:upper16:CapSense_numberOfSensors
 1103 0022 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 1104 0024 BB7B     		ldrb	r3, [r7, #14]
 1105 0026 1344     		add	r3, r2, r3
 1106 0028 FB73     		strb	r3, [r7, #15]
 1107              	.L58:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 35


 823:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 824:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Enable all sensors of the widget */
 825:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 826:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 827:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (rawIndex >> 3u);
 1108              		.loc 1 827 0
 1109 002a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1110 002c 4FEAD303 		lsr	r3, r3, #3
 1111 0030 3B73     		strb	r3, [r7, #12]
 828:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1112              		.loc 1 828 0
 1113 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1114 0034 03F00703 		and	r3, r3, #7
 1115 0038 4FF00102 		mov	r2, #1
 1116 003c 02FA03F3 		lsl	r3, r2, r3
 1117 0040 7B73     		strb	r3, [r7, #13]
 829:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 830:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_SensorEnableMask[pos] |= enMask;
 1118              		.loc 1 830 0
 1119 0042 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 1120 0044 397B     		ldrb	r1, [r7, #12]	@ zero_extendqisi2
 1121 0046 40F20003 		movw	r3, #:lower16:CapSense_SensorEnableMask
 1122 004a C0F20003 		movt	r3, #:upper16:CapSense_SensorEnableMask
 1123 004e 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 1124 0050 7B7B     		ldrb	r3, [r7, #13]
 1125 0052 41EA0303 		orr	r3, r1, r3
 1126 0056 D9B2     		uxtb	r1, r3
 1127 0058 40F20003 		movw	r3, #:lower16:CapSense_SensorEnableMask
 1128 005c C0F20003 		movt	r3, #:upper16:CapSense_SensorEnableMask
 1129 0060 9954     		strb	r1, [r3, r2]
 831:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 1130              		.loc 1 831 0
 1131 0062 BB7B     		ldrb	r3, [r7, #14]
 1132 0064 03F10103 		add	r3, r3, #1
 1133 0068 BB73     		strb	r3, [r7, #14]
 832:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 833:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 1134              		.loc 1 833 0
 1135 006a BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1136 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1137 006e 9A42     		cmp	r2, r3
 1138 0070 DBD3     		bcc	.L58
 834:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 835:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 836:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 1139              		.loc 1 836 0
 1140 0072 07F11407 		add	r7, r7, #20
 1141 0076 BD46     		mov	sp, r7
 1142 0078 80BC     		pop	{r7}
 1143 007a 7047     		bx	lr
 1144              		.cfi_endproc
 1145              	.LFE9:
 1146              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 1147              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 1148              		.align	2
 1149              		.global	CapSense_DisableWidget
 1150              		.thumb
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 36


 1151              		.thumb_func
 1152              		.type	CapSense_DisableWidget, %function
 1153              	CapSense_DisableWidget:
 1154              	.LFB10:
 837:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 838:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 839:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 840:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
 841:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 842:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 843:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 844:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 845:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 846:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 847:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 848:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 849:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 850:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 851:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 852:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 853:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[] - used to store the sensor scanning 
 854:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 855:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[0] contains the masked bits for sensors 
 856:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 857:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_SensorEnableMask[1] contains the masked bits for 
 858:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 859:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 860:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 861:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 862:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 863:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 864:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 865:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 866:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_DisableWidget(uint8 widget)
 867:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
 868:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 1155              		.loc 1 868 0
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 16
 1158              		@ frame_needed = 1, uses_anonymous_args = 0
 1159              		@ link register save eliminated.
 1160 0000 80B4     		push	{r7}
 1161              	.LCFI30:
 1162              		.cfi_def_cfa_offset 4
 1163 0002 85B0     		sub	sp, sp, #20
 1164              	.LCFI31:
 1165              		.cfi_def_cfa_offset 24
 1166 0004 00AF     		add	r7, sp, #0
 1167              		.cfi_offset 7, -4
 1168              	.LCFI32:
 1169              		.cfi_def_cfa_register 7
 1170 0006 0346     		mov	r3, r0
 1171 0008 FB71     		strb	r3, [r7, #7]
 869:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 870:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 871:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1172              		.loc 1 871 0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 37


 1173 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1174 000c 40F20003 		movw	r3, #:lower16:CapSense_rawDataIndex
 1175 0010 C0F20003 		movt	r3, #:upper16:CapSense_rawDataIndex
 1176 0014 9B5C     		ldrb	r3, [r3, r2]
 1177 0016 BB73     		strb	r3, [r7, #14]
 872:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1178              		.loc 1 872 0
 1179 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1180 001a 40F20003 		movw	r3, #:lower16:CapSense_numberOfSensors
 1181 001e C0F20003 		movt	r3, #:upper16:CapSense_numberOfSensors
 1182 0022 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 1183 0024 BB7B     		ldrb	r3, [r7, #14]
 1184 0026 1344     		add	r3, r2, r3
 1185 0028 FB73     		strb	r3, [r7, #15]
 1186              	.L61:
 873:.\Generated_Source\PSoC5/CapSense_CSHL.c ****    
 874:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Disable all sensors of the widget */
 875:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 876:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 877:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (rawIndex >> 3u);
 1187              		.loc 1 877 0
 1188 002a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1189 002c 4FEAD303 		lsr	r3, r3, #3
 1190 0030 3B73     		strb	r3, [r7, #12]
 878:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1191              		.loc 1 878 0
 1192 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1193 0034 03F00703 		and	r3, r3, #7
 1194 0038 4FF00102 		mov	r2, #1
 1195 003c 02FA03F3 		lsl	r3, r2, r3
 1196 0040 7B73     		strb	r3, [r7, #13]
 879:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 880:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_SensorEnableMask[pos] &= ~enMask;
 1197              		.loc 1 880 0
 1198 0042 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 1199 0044 397B     		ldrb	r1, [r7, #12]	@ zero_extendqisi2
 1200 0046 40F20003 		movw	r3, #:lower16:CapSense_SensorEnableMask
 1201 004a C0F20003 		movt	r3, #:upper16:CapSense_SensorEnableMask
 1202 004e 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 1203 0050 1946     		mov	r1, r3
 1204 0052 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1205 0054 6FEA0303 		mvn	r3, r3
 1206 0058 DBB2     		uxtb	r3, r3
 1207 005a 01EA0303 		and	r3, r1, r3
 1208 005e DBB2     		uxtb	r3, r3
 1209 0060 D9B2     		uxtb	r1, r3
 1210 0062 40F20003 		movw	r3, #:lower16:CapSense_SensorEnableMask
 1211 0066 C0F20003 		movt	r3, #:upper16:CapSense_SensorEnableMask
 1212 006a 9954     		strb	r1, [r3, r2]
 881:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 1213              		.loc 1 881 0
 1214 006c BB7B     		ldrb	r3, [r7, #14]
 1215 006e 03F10103 		add	r3, r3, #1
 1216 0072 BB73     		strb	r3, [r7, #14]
 882:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 883:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 1217              		.loc 1 883 0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 38


 1218 0074 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1219 0076 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1220 0078 9A42     		cmp	r2, r3
 1221 007a D6D3     		bcc	.L61
 884:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 885:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 886:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 1222              		.loc 1 886 0
 1223 007c 07F11407 		add	r7, r7, #20
 1224 0080 BD46     		mov	sp, r7
 1225 0082 80BC     		pop	{r7}
 1226 0084 7047     		bx	lr
 1227              		.cfi_endproc
 1228              	.LFE10:
 1229              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1230 0086 00BF     		.section	.text.CapSense_FindMaximum,"ax",%progbits
 1231              		.align	2
 1232              		.global	CapSense_FindMaximum
 1233              		.thumb
 1234              		.thumb_func
 1235              		.type	CapSense_FindMaximum, %function
 1236              	CapSense_FindMaximum:
 1237              	.LFB11:
 887:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_COUNT)
 888:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
 889:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
 890:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
 891:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
 892:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
 893:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Finds index of maximum element within defined centroid. Checks 
 894:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  CapSense_SensorSignal[] within defined cenrtoid and 
 895:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  returns index of maximum element. The values below finger threshold are 
 896:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  ignored.
 897:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The centrod defines by offset of first element and number of elements - count.
 898:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The diplexed centroid requires at least consecutive two elements above
 899:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  FingerThreshold to find index of maximum element.
 900:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 901:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
 902:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  offset:  Start index of cetroid in CapSense_SensorSignal[] array.
 903:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
 904:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshould.
 905:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
 906:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 907:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
 908:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns index of maximum element within defined centroid.
 909:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If index of maximum element doesn't find the 0xFF returns.
 910:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 911:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
 912:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
 913:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 CY
 914:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                       
 915:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #else 
 916:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
 917:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                       
 918:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 919:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 1238              		.loc 1 919 0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 39


 1239              		.cfi_startproc
 1240              		@ args = 0, pretend = 0, frame = 16
 1241              		@ frame_needed = 1, uses_anonymous_args = 0
 1242              		@ link register save eliminated.
 1243 0000 80B4     		push	{r7}
 1244              	.LCFI33:
 1245              		.cfi_def_cfa_offset 4
 1246 0002 85B0     		sub	sp, sp, #20
 1247              	.LCFI34:
 1248              		.cfi_def_cfa_offset 24
 1249 0004 00AF     		add	r7, sp, #0
 1250              		.cfi_offset 7, -4
 1251              	.LCFI35:
 1252              		.cfi_def_cfa_register 7
 1253 0006 1346     		mov	r3, r2
 1254 0008 0246     		mov	r2, r0
 1255 000a FA71     		strb	r2, [r7, #7]
 1256 000c 0A46     		mov	r2, r1
 1257 000e BA71     		strb	r2, [r7, #6]
 1258 0010 7B71     		strb	r3, [r7, #5]
 920:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 i;
 921:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
 922:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curPos = 0u;
 923:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* No centroid at the Start */
 924:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
 925:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curCtrdStartPos = 0xFFu;
 926:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The biggset centroid is zero */
 927:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
 928:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
 929:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 930:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum = 0xFFu;
 1259              		.loc 1 930 0
 1260 0012 4FF0FF33 		mov	r3, #-1
 1261 0016 BB72     		strb	r3, [r7, #10]
 931:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 temp = 0u;
 1262              		.loc 1 931 0
 1263 0018 4FF00003 		mov	r3, #0
 1264 001c FB72     		strb	r3, [r7, #11]
 932:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_SensorSignal[offset]; 
 1265              		.loc 1 932 0
 1266 001e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1267 0020 40F20003 		movw	r3, #:lower16:CapSense_SensorSignal
 1268 0024 C0F20003 		movt	r3, #:upper16:CapSense_SensorSignal
 1269 0028 1344     		add	r3, r2, r3
 1270 002a FB60     		str	r3, [r7, #12]
 933:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 934:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
 935:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(diplex != 0u)
 936:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 937:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Initialize */
 938:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 i = 0u;
 939:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
 940:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
 941:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 count <<= 1u;
 942:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 while(1u)
 943:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
 944:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 40


 945:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 946:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         if (curCtrdStartPos == 0xFFu)
 947:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 948:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Start of centroid */
 949:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCtrdStartPos = i;
 950:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize++;
 951:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 952:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         else
 953:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 954:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize++;
 955:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 956:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 957:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     else   /* Select the bigest and indicate zero start */
 958:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {          
 959:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         if(curCntrdSize > 0)
 960:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 961:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* We are in the end of current */
 962:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
 963:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 964:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
 965:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
 966:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
 967:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             
 968:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize = 0u;
 969:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCtrdStartPos = 0xFFu;
 970:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 971:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 972:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
 973:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     i++; 
 974:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     curPos = diplex[i];
 975:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(i == count)
 976:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 977:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         break;
 978:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }            
 979:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
 980:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
 981:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Find the biggest centroid if two are the same size, last one wins
 982:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                        We are in the end of current */
 983:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
 984:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
 985:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
 986:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
 987:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
 988:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 989:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             else
 990:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 991:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Without diplexing */ 
 992:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 biggestCtrdSize = count;
 993:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 994:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
 995:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 996:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Check centroid size */
 997:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
 998:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
 999:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #else                    
1000:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1001:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 41


1002:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1003:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1004:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1005:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1006:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (diplex == 0u)
1007:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1008:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 curPos = i;
1009:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1010:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             else
1011:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1012:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 curPos = diplex[i];
1013:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }                    
1014:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)                    
1015:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curPos = diplex[i];                    
1016:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1017:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Looking for the grater element within centroid */
1018:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1019:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
1020:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1021:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1022:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 maximum = i;
1023:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1024:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1025:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
1026:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1027:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 } 
1028:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1029:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 1271              		.loc 1 1029 0
 1272 002c 4FF00003 		mov	r3, #0
 1273 0030 7B72     		strb	r3, [r7, #9]
 1274 0032 18E0     		b	.L64
 1275              	.L66:
1030:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {                      
1031:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Looking for the grater element within centroid */
1032:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 1276              		.loc 1 1032 0
 1277 0034 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1278 0036 FB68     		ldr	r3, [r7, #12]
 1279 0038 1344     		add	r3, r2, r3
 1280 003a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1281 003c 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 1282 003e 9A42     		cmp	r2, r3
 1283 0040 0DD2     		bcs	.L65
1033:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1034:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
 1284              		.loc 1 1034 0
 1285 0042 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1286 0044 FB68     		ldr	r3, [r7, #12]
 1287 0046 1344     		add	r3, r2, r3
 1288 0048 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1289 004a FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 1290 004c 9A42     		cmp	r2, r3
 1291 004e 06D2     		bcs	.L65
1035:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1036:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         maximum = i;
 1292              		.loc 1 1036 0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 42


 1293 0050 7B7A     		ldrb	r3, [r7, #9]
 1294 0052 BB72     		strb	r3, [r7, #10]
1037:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 1295              		.loc 1 1037 0
 1296 0054 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1297 0056 FB68     		ldr	r3, [r7, #12]
 1298 0058 1344     		add	r3, r2, r3
 1299 005a 1B78     		ldrb	r3, [r3, #0]
 1300 005c FB72     		strb	r3, [r7, #11]
 1301              	.L65:
 1302              		.loc 1 1029 0
 1303 005e 7B7A     		ldrb	r3, [r7, #9]
 1304 0060 03F10103 		add	r3, r3, #1
 1305 0064 7B72     		strb	r3, [r7, #9]
 1306              	.L64:
 1307 0066 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1308 0068 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1309 006a 9A42     		cmp	r2, r3
 1310 006c E2D3     		bcc	.L66
1038:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1039:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1040:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }    
1041:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1042:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (maximum);
 1311              		.loc 1 1042 0
 1312 006e BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
1043:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 1313              		.loc 1 1043 0
 1314 0070 1846     		mov	r0, r3
 1315 0072 07F11407 		add	r7, r7, #20
 1316 0076 BD46     		mov	sp, r7
 1317 0078 80BC     		pop	{r7}
 1318 007a 7047     		bx	lr
 1319              		.cfi_endproc
 1320              	.LFE11:
 1321              		.size	CapSense_FindMaximum, .-CapSense_FindMaximum
 1322              		.section	.text.CapSense_CalcCentroid,"ax",%progbits
 1323              		.align	2
 1324              		.global	CapSense_CalcCentroid
 1325              		.thumb
 1326              		.thumb_func
 1327              		.type	CapSense_CalcCentroid, %function
 1328              	CapSense_CalcCentroid:
 1329              	.LFB12:
1044:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
1045:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
1046:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1047:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1048:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1049:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1050:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1051:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value calculated accoring index of maximum element and API
1052:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  resolution.
1053:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1054:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1055:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  type:  widget type.
1056:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 43


1057:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1058:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  offset:   Start index of cetroid in CapSense_SensorSignal[] array.
1059:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1060:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1061:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  API resolution.
1062:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshould.
1063:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1064:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1065:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the slider.
1066:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1067:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1068:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1069:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1070:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1071:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1072:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1073:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1074:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                    
1075:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 1330              		.loc 1 1075 0
 1331              		.cfi_startproc
 1332              		@ args = 4, pretend = 0, frame = 24
 1333              		@ frame_needed = 1, uses_anonymous_args = 0
 1334              		@ link register save eliminated.
 1335 0000 80B4     		push	{r7}
 1336              	.LCFI36:
 1337              		.cfi_def_cfa_offset 4
 1338 0002 87B0     		sub	sp, sp, #28
 1339              	.LCFI37:
 1340              		.cfi_def_cfa_offset 32
 1341 0004 00AF     		add	r7, sp, #0
 1342              		.cfi_offset 7, -4
 1343              	.LCFI38:
 1344              		.cfi_def_cfa_register 7
 1345 0006 F871     		strb	r0, [r7, #7]
 1346 0008 B971     		strb	r1, [r7, #6]
 1347 000a 7A71     		strb	r2, [r7, #5]
 1348 000c 7B80     		strh	r3, [r7, #2]	@ movhi
1076:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT > 0u))
1077:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posPrev;
1078:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posNext;
1079:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT>0u)
1080:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                
1081:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)                
1082:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 pos;
1083:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1084:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1085:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 position;
1086:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         int32 numerator;
1087:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         int32 denominator;
1088:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_SensorSignal[offset];
 1349              		.loc 1 1088 0
 1350 000e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 1351 0010 40F20003 		movw	r3, #:lower16:CapSense_SensorSignal
 1352 0014 C0F20003 		movt	r3, #:upper16:CapSense_SensorSignal
 1353 0018 1344     		add	r3, r2, r3
 1354 001a 7B61     		str	r3, [r7, #20]
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 44


1089:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1090:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1091:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1092:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1093:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1094:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1095:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1096:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Copy Signal for found centriod */
1097:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1098:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                  
1099:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1100:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1101:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
1102:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1103:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1104:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1105:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1106:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1107:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1108:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1109:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1110:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1111:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1112:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1113:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1114:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1115:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1116:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1117:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1118:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1119:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             else
1120:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1121:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif
1122:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1123:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT > 0
1124:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)                   
1125:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1126:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(diplex == 0u)
1127:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1128:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         pos     = maximum;
1129:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1130:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posNext = maximum + 1u; 
1131:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1132:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
1133:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1134:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1135:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1136:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1137:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         count <<= 1u;
1138:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }                    
1139:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1140:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1141:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1142:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1143:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1144:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     count <<= 1u;                    
1145:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #else                    
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 45


1146:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1147:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posPrev = maximum - 1u;
 1355              		.loc 1 1147 0
 1356 001c FB79     		ldrb	r3, [r7, #7]
 1357 001e 03F1FF33 		add	r3, r3, #-1
 1358 0022 7B72     		strb	r3, [r7, #9]
1148:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posNext = maximum + 1u; 
 1359              		.loc 1 1148 0
 1360 0024 FB79     		ldrb	r3, [r7, #7]
 1361 0026 03F10103 		add	r3, r3, #1
 1362 002a BB72     		strb	r3, [r7, #10]
1149:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1150:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1151:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Copy Signal for found centriod */
1152:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1153:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1154:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #else
1155:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
 1363              		.loc 1 1155 0
 1364 002c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1365 002e 7B69     		ldr	r3, [r7, #20]
 1366 0030 1344     		add	r3, r2, r3
 1367 0032 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1368 0034 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1369 0038 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1370 003c 5A70     		strb	r2, [r3, #1]
1156:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1157:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1158:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1159:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 1371              		.loc 1 1159 0
 1372 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1373 0040 002B     		cmp	r3, #0
 1374 0042 10D1     		bne	.L69
1160:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
1161:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
 1375              		.loc 1 1161 0
 1376 0044 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1377 0048 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1378 004c 4FF00002 		mov	r2, #0
 1379 0050 1A70     		strb	r2, [r3, #0]
1162:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 1380              		.loc 1 1162 0
 1381 0052 BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 1382 0054 7B69     		ldr	r3, [r7, #20]
 1383 0056 1344     		add	r3, r2, r3
 1384 0058 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1385 005a 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1386 005e C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1387 0062 9A70     		strb	r2, [r3, #2]
 1388 0064 28E0     		b	.L70
 1389              	.L69:
1163:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1164:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 1390              		.loc 1 1164 0
 1391 0066 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1392 0068 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 46


 1393 006a 03F1FF33 		add	r3, r3, #-1
 1394 006e 9A42     		cmp	r2, r3
 1395 0070 10D1     		bne	.L71
1165:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1166:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 1396              		.loc 1 1166 0
 1397 0072 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1398 0074 7B69     		ldr	r3, [r7, #20]
 1399 0076 1344     		add	r3, r2, r3
 1400 0078 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1401 007a 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1402 007e C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1403 0082 1A70     		strb	r2, [r3, #0]
1167:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
 1404              		.loc 1 1167 0
 1405 0084 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1406 0088 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1407 008c 4FF00002 		mov	r2, #0
 1408 0090 9A70     		strb	r2, [r3, #2]
 1409 0092 11E0     		b	.L70
 1410              	.L71:
1168:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1169:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1170:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1171:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 1411              		.loc 1 1171 0
 1412 0094 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1413 0096 7B69     		ldr	r3, [r7, #20]
 1414 0098 1344     		add	r3, r2, r3
 1415 009a 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1416 009c 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1417 00a0 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1418 00a4 1A70     		strb	r2, [r3, #0]
1172:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 1419              		.loc 1 1172 0
 1420 00a6 BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 1421 00a8 7B69     		ldr	r3, [r7, #20]
 1422 00aa 1344     		add	r3, r2, r3
 1423 00ac 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1424 00ae 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1425 00b2 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1426 00b6 9A70     		strb	r2, [r3, #2]
 1427              	.L70:
1173:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1174:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_COUNT>0
1175:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1176:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1177:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1178:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1179:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
1180:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1181:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
 1428              		.loc 1 1181 0
 1429 00b8 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1430 00bc C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1431 00c0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1432 00c2 97F82020 		ldrb	r2, [r7, #32]	@ zero_extendqisi2
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 47


 1433 00c6 9A42     		cmp	r2, r3
 1434 00c8 0FD2     		bcs	.L72
1182:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1183:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
 1435              		.loc 1 1183 0
 1436 00ca 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1437 00ce C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1438 00d2 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1439 00d4 97F82030 		ldrb	r3, [r7, #32]
 1440 00d8 C3EB0203 		rsb	r3, r3, r2
 1441 00dc DAB2     		uxtb	r2, r3
 1442 00de 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1443 00e2 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1444 00e6 1A70     		strb	r2, [r3, #0]
 1445 00e8 06E0     		b	.L73
 1446              	.L72:
1184:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1185:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1186:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1187:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
 1447              		.loc 1 1187 0
 1448 00ea 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1449 00ee C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1450 00f2 4FF00002 		mov	r2, #0
 1451 00f6 1A70     		strb	r2, [r3, #0]
 1452              	.L73:
1188:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1189:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1190:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Maximum always grater than fingerThreshold, so grate than noiseThreshold */
1191:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
 1453              		.loc 1 1191 0
 1454 00f8 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1455 00fc C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1456 0100 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1457 0102 97F82030 		ldrb	r3, [r7, #32]
 1458 0106 C3EB0203 		rsb	r3, r3, r2
 1459 010a DAB2     		uxtb	r2, r3
 1460 010c 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1461 0110 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1462 0114 5A70     		strb	r2, [r3, #1]
1192:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1193:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1194:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
 1463              		.loc 1 1194 0
 1464 0116 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1465 011a C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1466 011e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1467 0120 97F82020 		ldrb	r2, [r7, #32]	@ zero_extendqisi2
 1468 0124 9A42     		cmp	r2, r3
 1469 0126 0FD2     		bcs	.L74
1195:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1196:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
 1470              		.loc 1 1196 0
 1471 0128 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1472 012c C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1473 0130 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 1474 0132 97F82030 		ldrb	r3, [r7, #32]
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 48


 1475 0136 C3EB0203 		rsb	r3, r3, r2
 1476 013a DAB2     		uxtb	r2, r3
 1477 013c 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1478 0140 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1479 0144 9A70     		strb	r2, [r3, #2]
 1480 0146 06E0     		b	.L75
 1481              	.L74:
1197:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1198:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1199:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1200:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
 1482              		.loc 1 1200 0
 1483 0148 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1484 014c C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1485 0150 4FF00002 		mov	r2, #0
 1486 0154 9A70     		strb	r2, [r3, #2]
 1487              	.L75:
1201:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1202:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1203:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1204:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1205:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         numerator = (int32) CapSense_centroid[CapSense_POS_NEXT] - 
 1488              		.loc 1 1205 0
 1489 0156 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1490 015a C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1491 015e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1492 0160 1A46     		mov	r2, r3
1206:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     (int32) CapSense_centroid[CapSense_POS_PREV];
 1493              		.loc 1 1206 0
 1494 0162 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1495 0166 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1496 016a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1497              		.loc 1 1205 0
 1498 016c C3EB0203 		rsb	r3, r3, r2
 1499 0170 FB60     		str	r3, [r7, #12]
1207:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1208:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1209:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
 1500              		.loc 1 1209 0
 1501 0172 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1502 0176 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1503 017a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
1210:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
 1504              		.loc 1 1210 0
 1505 017c 1A46     		mov	r2, r3
 1506 017e 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1507 0182 C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1508 0186 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1509 0188 1A44     		add	r2, r2, r3
1211:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
 1510              		.loc 1 1211 0
 1511 018a 40F20003 		movw	r3, #:lower16:CapSense_centroid
 1512 018e C0F20003 		movt	r3, #:upper16:CapSense_centroid
 1513 0192 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1514              		.loc 1 1209 0
 1515 0194 1344     		add	r3, r2, r3
 1516 0196 3B61     		str	r3, [r7, #16]
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 49


1212:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1213:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1214:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator = (numerator << 8u)/denominator + ((uint16) maximum << 8u);
 1517              		.loc 1 1214 0
 1518 0198 FB68     		ldr	r3, [r7, #12]
 1519 019a 4FEA0322 		lsl	r2, r3, #8
 1520 019e 3B69     		ldr	r3, [r7, #16]
 1521 01a0 92FBF3F2 		sdiv	r2, r2, r3
 1522 01a4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1523 01a6 4FEA0323 		lsl	r3, r3, #8
 1524 01aa 1344     		add	r3, r2, r3
 1525 01ac 3B61     		str	r3, [r7, #16]
1215:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1216:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1217:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1218:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(denominator < 0)
1219:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1220:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 denominator += ((uint16) count << 8u);
1221:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1222:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1223:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1224:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator *= resolution;
 1526              		.loc 1 1224 0
 1527 01ae 7A88     		ldrh	r2, [r7, #2]
 1528 01b0 3B69     		ldr	r3, [r7, #16]
 1529 01b2 02FB03F3 		mul	r3, r2, r3
 1530 01b6 3B61     		str	r3, [r7, #16]
1225:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1226:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Round the relust and put it to uint8 */
1227:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         position = ((uint8) HI16(denominator + CapSense_CENTROID_ROUND_VALUE));
 1531              		.loc 1 1227 0
 1532 01b8 3B69     		ldr	r3, [r7, #16]
 1533 01ba 03F5FE43 		add	r3, r3, #32512
 1534 01be 4FEA1343 		lsr	r3, r3, #16
 1535 01c2 FB72     		strb	r3, [r7, #11]
1228:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1229:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
 1536              		.loc 1 1229 0
 1537 01c4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
1230:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }    
 1538              		.loc 1 1230 0
 1539 01c6 1846     		mov	r0, r3
 1540 01c8 07F11C07 		add	r7, r7, #28
 1541 01cc BD46     		mov	sp, r7
 1542 01ce 80BC     		pop	{r7}
 1543 01d0 7047     		bx	lr
 1544              		.cfi_endproc
 1545              	.LFE12:
 1546              		.size	CapSense_CalcCentroid, .-CapSense_CalcCentroid
 1547 01d2 00BF     		.section	.text.CapSense_GetCentroidPos,"ax",%progbits
 1548              		.align	2
 1549              		.global	CapSense_GetCentroidPos
 1550              		.thumb
 1551              		.thumb_func
 1552              		.type	CapSense_GetCentroidPos, %function
 1553              	CapSense_GetCentroidPos:
 1554              	.LFB13:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 50


1231:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_COUNT) */
1232:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1233:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1234:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1235:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1236:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1237:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1238:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1239:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1240:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1241:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1242:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1243:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result if enabled.
1244:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1245:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1246:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number.
1247:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1248:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_LS__"widget_name"            5
1249:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1250:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1251:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the linear slider.
1252:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1253:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1254:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1255:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1256:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1257:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1258:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1259:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1260:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1261:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Note:
1262:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1263:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1264:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1265:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1266:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1267:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1268:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1269:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1270:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1271:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint8 widget) 
1272:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 1555              		.loc 1 1272 0
 1556              		.cfi_startproc
 1557              		@ args = 0, pretend = 0, frame = 16
 1558              		@ frame_needed = 1, uses_anonymous_args = 0
 1559 0000 80B5     		push	{r7, lr}
 1560              	.LCFI39:
 1561              		.cfi_def_cfa_offset 8
 1562 0002 86B0     		sub	sp, sp, #24
 1563              	.LCFI40:
 1564              		.cfi_def_cfa_offset 32
 1565 0004 02AF     		add	r7, sp, #8
 1566              		.cfi_offset 14, -4
 1567              		.cfi_offset 7, -8
 1568              	.LCFI41:
 1569              		.cfi_def_cfa 7, 24
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 51


 1570 0006 0346     		mov	r3, r0
 1571 0008 FB71     		strb	r3, [r7, #7]
1273:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1274:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             const uint8 CYCODE *diplex;
1275:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1276:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1277:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1278:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posIndex;
1279:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
 1572              		.loc 1 1279 0
 1573 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1574 000c 40F20003 		movw	r3, #:lower16:CapSense_posFiltersData
 1575 0010 C0F20003 		movt	r3, #:upper16:CapSense_posFiltersData
 1576 0014 9B5C     		ldrb	r3, [r3, r2]
 1577 0016 7B72     		strb	r3, [r7, #9]
1280:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];  
 1578              		.loc 1 1280 0
 1579 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1580 001a 40F20003 		movw	r3, #:lower16:CapSense_posFiltersMask
 1581 001e C0F20003 		movt	r3, #:upper16:CapSense_posFiltersMask
 1582 0022 9B5C     		ldrb	r3, [r3, r2]
 1583 0024 BB72     		strb	r3, [r7, #10]
1281:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1282:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1283:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1284:.\Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1285:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 tempPos;
1286:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1287:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1288:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                */
1289:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1290:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum;
1291:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 position;
1292:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 1584              		.loc 1 1292 0
 1585 0026 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1586 0028 40F20003 		movw	r3, #:lower16:CapSense_rawDataIndex
 1587 002c C0F20003 		movt	r3, #:upper16:CapSense_rawDataIndex
 1588 0030 9B5C     		ldrb	r3, [r3, r2]
 1589 0032 BB73     		strb	r3, [r7, #14]
1293:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 1590              		.loc 1 1293 0
 1591 0034 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1592 0036 40F20003 		movw	r3, #:lower16:CapSense_numberOfSensors
 1593 003a C0F20003 		movt	r3, #:upper16:CapSense_numberOfSensors
 1594 003e 9B5C     		ldrb	r3, [r3, r2]
 1595 0040 FB73     		strb	r3, [r7, #15]
1294:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1295:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1296:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1297:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1298:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1299:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1300:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1301:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             else
1302:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1303:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 diplex = 0u;
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 52


1304:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1305:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1306:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1307:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within centroid */      
1308:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1309:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], diplex)
1310:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1311:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
 1596              		.loc 1 1311 0
 1597 0042 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1598 0044 40F20003 		movw	r3, #:lower16:CapSense_fingerThreshold
 1599 0048 C0F20003 		movt	r3, #:upper16:CapSense_fingerThreshold
 1600 004c 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 1601 004e B97B     		ldrb	r1, [r7, #14]	@ zero_extendqisi2
 1602 0050 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1603 0052 0846     		mov	r0, r1
 1604 0054 1146     		mov	r1, r2
 1605 0056 1A46     		mov	r2, r3
 1606 0058 FFF7FEFF 		bl	CapSense_FindMaximum
 1607 005c 0346     		mov	r3, r0
 1608 005e FB72     		strb	r3, [r7, #11]
1312:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1313:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1314:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (maximum != 0xFFu)
 1609              		.loc 1 1314 0
 1610 0060 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1611 0062 FF2B     		cmp	r3, #255
 1612 0064 55D0     		beq	.L78
1315:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1316:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Calculate centroid */
1317:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
 1613              		.loc 1 1317 0
 1614 0066 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1615 0068 40F20003 		movw	r3, #:lower16:CapSense_centroidMult
 1616 006c C0F20003 		movt	r3, #:upper16:CapSense_centroidMult
 1617 0070 33F812C0 		ldrh	ip, [r3, r2, lsl #1]
 1618 0074 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1619 0076 40F20003 		movw	r3, #:lower16:CapSense_noiseThreshold
 1620 007a C0F20003 		movt	r3, #:upper16:CapSense_noiseThreshold
 1621 007e 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 1622 0080 F97A     		ldrb	r1, [r7, #11]	@ zero_extendqisi2
 1623 0082 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1624 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1625 0086 0090     		str	r0, [sp, #0]
 1626 0088 0846     		mov	r0, r1
 1627 008a 1146     		mov	r1, r2
 1628 008c 1A46     		mov	r2, r3
 1629 008e 6346     		mov	r3, ip
 1630 0090 FFF7FEFF 		bl	CapSense_CalcCentroid
 1631 0094 0346     		mov	r3, r0
 1632 0096 BB81     		strh	r3, [r7, #12]	@ movhi
1318:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1319:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1320:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1321:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1322:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
 1633              		.loc 1 1322 0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 53


 1634 0098 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1635 009a 03F01F03 		and	r3, r3, #31
 1636 009e 002B     		cmp	r3, #0
 1637 00a0 48D0     		beq	.L83
1323:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1324:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Caluclate position to store filters data */
1325:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
 1638              		.loc 1 1325 0
 1639 00a2 7B7A     		ldrb	r3, [r7, #9]
 1640 00a4 03F10103 		add	r3, r3, #1
 1641 00a8 3B72     		strb	r3, [r7, #8]
1326:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1327:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
 1642              		.loc 1 1327 0
 1643 00aa 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1644 00ac 40F20003 		movw	r3, #:lower16:CapSense_posFiltersData
 1645 00b0 C0F20003 		movt	r3, #:upper16:CapSense_posFiltersData
 1646 00b4 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 1647 00b6 002B     		cmp	r3, #0
 1648 00b8 10D1     		bne	.L80
1328:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1329:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Init filters */
1330:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
 1649              		.loc 1 1330 0
 1650 00ba 3A7A     		ldrb	r2, [r7, #8]	@ zero_extendqisi2
 1651 00bc BB89     		ldrh	r3, [r7, #12]	@ movhi
 1652 00be D9B2     		uxtb	r1, r3
 1653 00c0 40F20003 		movw	r3, #:lower16:CapSense_posFiltersData
 1654 00c4 C0F20003 		movt	r3, #:upper16:CapSense_posFiltersData
 1655 00c8 9954     		strb	r1, [r3, r2]
1331:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1332:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1333:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1334:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1335:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1336:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1337:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1338:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1339:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1340:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1341:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1342:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1343:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1344:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1345:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1346:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1347:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
 1656              		.loc 1 1347 0
 1657 00ca 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1658 00cc 40F20003 		movw	r3, #:lower16:CapSense_posFiltersData
 1659 00d0 C0F20003 		movt	r3, #:upper16:CapSense_posFiltersData
 1660 00d4 4FF00101 		mov	r1, #1
 1661 00d8 9954     		strb	r1, [r3, r2]
1348:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1349:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
1350:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1351:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Do filtering */
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 54


1352:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1353:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1354:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1355:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1356:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position, 
1357:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     CapSense_posFiltersData[posInde
1358:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     CapSense_posFiltersData[posInde
1359:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = 
1360:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1361:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1362:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1363:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1364:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1365:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1366:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1367:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1368:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) 
1369:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1370:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1371:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position, 
1372:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1373:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1374:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1375:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1376:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1377:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1378:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1379:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1380:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1381:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1382:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER)) 
1383:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1384:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1385:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1386:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1387:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1388:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1389:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1390:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1391:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1392:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1393:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1394:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1395:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position, 
1396:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1397:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
 1662              		.loc 1 1397 0
 1663 00da 2EE0     		b	.L81
 1664              	.L80:
 1665              		.loc 1 1393 0
 1666 00dc BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1667 00de 03F00803 		and	r3, r3, #8
 1668 00e2 002B     		cmp	r3, #0
 1669 00e4 28D0     		beq	.L84
 1670              		.loc 1 1396 0
 1671 00e6 3A7A     		ldrb	r2, [r7, #8]	@ zero_extendqisi2
 1672 00e8 40F20003 		movw	r3, #:lower16:CapSense_posFiltersData
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 55


 1673 00ec C0F20003 		movt	r3, #:upper16:CapSense_posFiltersData
 1674 00f0 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 1675              		.loc 1 1395 0
 1676 00f2 BA89     		ldrh	r2, [r7, #12]
 1677 00f4 1046     		mov	r0, r2
 1678 00f6 1946     		mov	r1, r3
 1679 00f8 FFF7FEFF 		bl	CapSense_IIR4Filter
 1680 00fc 0346     		mov	r3, r0
 1681 00fe BB81     		strh	r3, [r7, #12]	@ movhi
 1682              		.loc 1 1397 0
 1683 0100 3A7A     		ldrb	r2, [r7, #8]	@ zero_extendqisi2
 1684 0102 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1685 0104 D9B2     		uxtb	r1, r3
 1686 0106 40F20003 		movw	r3, #:lower16:CapSense_posFiltersData
 1687 010a C0F20003 		movt	r3, #:upper16:CapSense_posFiltersData
 1688 010e 9954     		strb	r1, [r3, r2]
 1689 0110 13E0     		b	.L81
 1690              	.L78:
1398:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }                                
1399:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1400:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1401:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1402:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1403:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1404:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1405:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1406:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position, 
1407:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
1408:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1409:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1410:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1411:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1412:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1413:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1414:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1415:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1416:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1417:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1418:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1419:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1420:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The maximum didn't find */
1421:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             position = 0xFFFFu;
 1691              		.loc 1 1421 0
 1692 0112 4FF6FF73 		movw	r3, #65535
 1693 0116 BB81     		strh	r3, [r7, #12]	@ movhi
1422:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1423:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1424:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1425:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
 1694              		.loc 1 1425 0
 1695 0118 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1696 011a 03F01F03 		and	r3, r3, #31
 1697 011e 002B     		cmp	r3, #0
 1698 0120 0BD0     		beq	.L81
1426:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1427:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
 1699              		.loc 1 1427 0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 56


 1700 0122 7A7A     		ldrb	r2, [r7, #9]	@ zero_extendqisi2
 1701 0124 40F20003 		movw	r3, #:lower16:CapSense_posFiltersData
 1702 0128 C0F20003 		movt	r3, #:upper16:CapSense_posFiltersData
 1703 012c 4FF00001 		mov	r1, #0
 1704 0130 9954     		strb	r1, [r3, r2]
 1705 0132 02E0     		b	.L81
 1706              	.L83:
 1707              		.loc 1 1397 0
 1708 0134 00BF     		nop
 1709 0136 00E0     		b	.L81
 1710              	.L84:
 1711 0138 00BF     		nop
 1712              	.L81:
1428:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1429:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1430:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1431:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1432:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1433:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
 1713              		.loc 1 1433 0
 1714 013a BB89     		ldrh	r3, [r7, #12]
1434:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 1715              		.loc 1 1434 0
 1716 013c 1846     		mov	r0, r3
 1717 013e 07F11007 		add	r7, r7, #16
 1718 0142 BD46     		mov	sp, r7
 1719 0144 80BD     		pop	{r7, pc}
 1720              		.cfi_endproc
 1721              	.LFE13:
 1722              		.size	CapSense_GetCentroidPos, .-CapSense_GetCentroidPos
 1723 0146 00BF     		.section	.text.CapSense_MedianFilter,"ax",%progbits
 1724              		.align	2
 1725              		.global	CapSense_MedianFilter
 1726              		.thumb
 1727              		.thumb_func
 1728              		.type	CapSense_MedianFilter, %function
 1729              	CapSense_MedianFilter:
 1730              	.LFB14:
1435:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) */
1436:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1437:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1438:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1439:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1440:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1441:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1442:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1443:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1444:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1445:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1446:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1447:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result if enabled.
1448:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1449:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1450:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number.
1451:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1452:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_RS_"widget_name"            5
1453:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 57


1454:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1455:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the radial slider.
1456:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1457:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1458:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1459:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1460:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1461:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1462:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1463:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1464:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Note:
1465:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1466:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1467:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1468:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1469:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1470:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1471:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1472:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1473:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1474:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1475:.\Generated_Source\PSoC5/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint8 widget)
1476:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                       
1477:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1478:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1479:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posIndex;
1480:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1481:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget]; 
1482:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1483:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1484:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1485:.\Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1486:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 tempPos;
1487:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1488:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1489:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                */
1490:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1491:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum;
1492:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 position;
1493:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1494:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1495:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1496:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within centroid */        
1497:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1498:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
1499:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1500:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
1501:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1502:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1503:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1504:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1505:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Calculate centroid */
1506:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1507:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1508:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1509:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1510:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 58


1511:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1512:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1513:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Caluclate position to store filters data */
1514:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1515:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1516:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1517:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1518:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Init filters */
1519:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1520:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1521:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1522:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1523:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1524:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1525:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  || 
1526:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1527:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1528:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1529:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1530:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1531:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1532:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1533:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1534:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1535:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1536:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1537:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1538:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
1539:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1540:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Do filtering */
1541:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
1542:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1543:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1544:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1545:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1546:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
1547:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
1548:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = 
1549:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
1550:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1551:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1552:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER & 
1553:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1554:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1555:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1556:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
1557:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1558:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1559:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1560:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1561:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position, 
1562:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1563:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1564:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
1565:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1566:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1567:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 59


1568:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1569:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1570:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1571:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
1572:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1573:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1574:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position, 
1575:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1576:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1577:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1578:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & 
1579:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1580:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1581:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1582:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
1583:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1584:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1585:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position, 
1586:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1587:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1588:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1589:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & 
1590:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1591:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1592:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1593:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
1594:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1595:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1596:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position, 
1597:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
1598:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1599:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1600:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
1601:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1602:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1603:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1604:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1605:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1606:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1607:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1608:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1609:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1610:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The maximum didn't find */
1611:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             position = 0xFFFFu;
1612:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1613:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1614:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1615:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
1616:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1617:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1618:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1619:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1620:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1621:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1622:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
1623:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1624:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 60


1625:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1626:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1627:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_COUNT > 0u)
1628:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1629:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
1630:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1631:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1632:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1633:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If a finger is present on touch pad, this function calculates the X and Y
1634:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touch pad specified
1635:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated to the API resolutions set in the
1636:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  CapSense customizer. Returns a 1 if a finger is on the touchpad.
1637:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
1638:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
1639:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  customizer.
1640:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1641:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1642:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number. 
1643:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
1644:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_TP_"widget_name"            5
1645:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1646:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
1647:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
1648:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  pos[0u]  - position of X
1649:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
1650:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1651:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1652:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
1653:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1654:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1655:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *   There are no checks of widget type argument provided to this function.
1656:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
1657:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *   calculations.
1658:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1659:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1660:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1661:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1662:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1663:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 CapSense_GetTouchCentroidPos(uint8 widget, uint16* pos)
1664:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                    
1665:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1666:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
1667:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posXIndex;
1668:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posYIndex;
1669:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1670:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1671:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
1672:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1673:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
1674:.\Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1675:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint16 tempPos;
1676:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
1677:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1678:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                */
1679:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1680:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 MaxX;
1681:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 MaxY;
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 61


1682:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 posX;
1683:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 posY;
1684:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 touch = 0u;
1685:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1686:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1687:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1688:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
1689:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1690:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
1691:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1692:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
1693:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1694:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1695:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (MaxX != 0xFFu)
1696:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1697:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
1698:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
1699:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1700:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
1701:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
1702:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
1703:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #else
1704:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
1705:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1706:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1707:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if (MaxY != 0xFFu)
1708:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1709:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
1710:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 touch = 1u;
1711:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1712:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Calculate Y centroid */
1713:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count, 
1714:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
1715:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1716:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Calculate X centroid */
1717:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
1718:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
1719:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1720:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count, 
1721:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
1722:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
1723:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
1724:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
1725:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1726:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1727:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Caluclate position to store filters data */
1728:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
1729:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
1730:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1731:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
1732:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
1733:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Init filters */
1734:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
1735:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
1736:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1737:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
1738:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 62


1739:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
1740:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1741:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1742:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1743:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1744:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1745:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
1746:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
1747:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1748:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1749:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
1750:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
1751:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1752:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1753:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             
1754:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
1755:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
1756:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         else
1757:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
1758:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Do filtering */
1759:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
1760:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1761:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1762:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posX;
1763:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
1764:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
1765:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
1766:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
1767:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1768:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
1769:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1770:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posY;
1771:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
1772:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
1773:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
1774:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
1775:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1776:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
1777:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1778:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 
1779:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
1780:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1781:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1782:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1783:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
1784:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1785:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1786:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posX;
1787:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
1788:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
1789:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
1790:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
1791:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1792:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
1793:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1794:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posY;
1795:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY, 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 63


1796:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
1797:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
1798:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
1799:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1800:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
1801:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1802:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1803:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1804:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1805:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1806:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1807:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
1808:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1809:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1810:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX, 
1811:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
1812:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
1813:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1814:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY, 
1815:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1816:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
1817:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1818:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 
1819:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
1820:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1821:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1822:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1823:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
1824:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1825:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1826:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter(posX, 
1827:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1828:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
1829:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1830:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter(posY, 
1831:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1832:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
1833:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1834:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 
1835:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
1836:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1837:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1838:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1839:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
1840:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1841:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     {
1842:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX, 
1843:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1844:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
1845:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         
1846:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY, 
1847:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1848:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
1849:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     }
1850:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
1851:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1852:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 64


1853:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
1854:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1855:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
1856:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1857:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Save positions */
1858:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 pos[0u] = posX;
1859:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 pos[1u] = posY;
1860:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1861:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1862:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1863:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
1864:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(touch == 0u)
1865:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1866:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1867:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
1868:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1869:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1870:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1871:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1872:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
1873:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1874:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (touch);
1875:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1876:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_COUNT > 0u) */
1877:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1878:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1879:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
1880:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER) )
1881:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1882:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
1883:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1884:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1885:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1886:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Median filter function. 
1887:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
1888:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  median value.
1889:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1890:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1891:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1892:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1893:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x3:  Before previous value.
1894:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1895:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1896:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1897:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1898:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1899:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
1900:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                          
1901:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 1731              		.loc 1 1901 0
 1732              		.cfi_startproc
 1733              		@ args = 0, pretend = 0, frame = 16
 1734              		@ frame_needed = 1, uses_anonymous_args = 0
 1735              		@ link register save eliminated.
 1736 0000 80B4     		push	{r7}
 1737              	.LCFI42:
 1738              		.cfi_def_cfa_offset 4
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 65


 1739 0002 85B0     		sub	sp, sp, #20
 1740              	.LCFI43:
 1741              		.cfi_def_cfa_offset 24
 1742 0004 00AF     		add	r7, sp, #0
 1743              		.cfi_offset 7, -4
 1744              	.LCFI44:
 1745              		.cfi_def_cfa_register 7
 1746 0006 1346     		mov	r3, r2
 1747 0008 0246     		mov	r2, r0	@ movhi
 1748 000a FA80     		strh	r2, [r7, #6]	@ movhi
 1749 000c 0A46     		mov	r2, r1	@ movhi
 1750 000e BA80     		strh	r2, [r7, #4]	@ movhi
 1751 0010 7B80     		strh	r3, [r7, #2]	@ movhi
1902:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 tmp;
1903:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1904:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (x1 > x2)
 1752              		.loc 1 1904 0
 1753 0012 FA88     		ldrh	r2, [r7, #6]
 1754 0014 BB88     		ldrh	r3, [r7, #4]
 1755 0016 9A42     		cmp	r2, r3
 1756 0018 05D9     		bls	.L86
1905:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1906:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             tmp = x2;
 1757              		.loc 1 1906 0
 1758 001a BB88     		ldrh	r3, [r7, #4]	@ movhi
 1759 001c FB81     		strh	r3, [r7, #14]	@ movhi
1907:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             x2 = x1;
 1760              		.loc 1 1907 0
 1761 001e FB88     		ldrh	r3, [r7, #6]	@ movhi
 1762 0020 BB80     		strh	r3, [r7, #4]	@ movhi
1908:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             x1 = tmp;
 1763              		.loc 1 1908 0
 1764 0022 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1765 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 1766              	.L86:
1909:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1910:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1911:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (x2 > x3)
 1767              		.loc 1 1911 0
 1768 0026 BA88     		ldrh	r2, [r7, #4]
 1769 0028 7B88     		ldrh	r3, [r7, #2]
 1770 002a 9A42     		cmp	r2, r3
 1771 002c 01D9     		bls	.L87
1912:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1913:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             x2 = x3;
 1772              		.loc 1 1913 0
 1773 002e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1774 0030 BB80     		strh	r3, [r7, #4]	@ movhi
 1775              	.L87:
1914:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1915:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1916:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 1776              		.loc 1 1916 0
 1777 0032 BA88     		ldrh	r2, [r7, #4]
 1778 0034 FB88     		ldrh	r3, [r7, #6]
 1779 0036 9A42     		cmp	r2, r3
 1780 0038 28BF     		it	cs
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 66


 1781 003a 1346     		movcs	r3, r2
 1782 003c 9BB2     		uxth	r3, r3
1917:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 1783              		.loc 1 1917 0
 1784 003e 1846     		mov	r0, r3
 1785 0040 07F11407 		add	r7, r7, #20
 1786 0044 BD46     		mov	sp, r7
 1787 0046 80BC     		pop	{r7}
 1788 0048 7047     		bx	lr
 1789              		.cfi_endproc
 1790              	.LFE14:
 1791              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 1792 004a 00BF     		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 1793              		.align	2
 1794              		.global	CapSense_IIR4Filter
 1795              		.thumb
 1796              		.thumb_func
 1797              		.type	CapSense_IIR4Filter, %function
 1798              	CapSense_IIR4Filter:
 1799              	.LFB15:
1918:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
1919:.\Generated_Source\PSoC5/CapSense_CSHL.c ****        *    (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER) )
1920:.\Generated_Source\PSoC5/CapSense_CSHL.c ****        */
1921:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1922:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1923:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
1924:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) )
1925:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1926:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
1927:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1928:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1929:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1930:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Averaging filter function.
1931:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of position and
1932:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  reports the averaging value.
1933:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1934:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1935:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1936:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1937:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x3:  Before previous value.
1938:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1939:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1940:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1941:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1942:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1943:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
1944:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                             
1945:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1946:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
1947:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1948:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((uint16) tmp);
1949:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1950:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* ( (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
1951:.\Generated_Source\PSoC5/CapSense_CSHL.c ****        *    (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) )
1952:.\Generated_Source\PSoC5/CapSense_CSHL.c ****        */
1953:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1954:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 67


1955:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) || \
1956:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER) )
1957:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1958:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
1959:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1960:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1961:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1962:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
1963:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1964:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1965:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1966:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1967:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1968:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1969:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1970:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1971:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1972:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
1973:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                        
1974:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1975:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 tmp;
1976:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1977:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
1978:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
1979:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp >>= 1u;
1980:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
1981:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((uint16) tmp);
1982:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1983:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) || \
1984:.\Generated_Source\PSoC5/CapSense_CSHL.c ****        *    (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER) )
1985:.\Generated_Source\PSoC5/CapSense_CSHL.c ****        */
1986:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1987:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1988:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) || \
1989:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER) )
1990:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1991:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
1992:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1993:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1994:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1995:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
1996:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1997:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1998:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1999:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
2000:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
2001:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
2002:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
2003:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
2004:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
2005:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2006:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                        
2007:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 1800              		.loc 1 2007 0
 1801              		.cfi_startproc
 1802              		@ args = 0, pretend = 0, frame = 16
 1803              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 68


 1804              		@ link register save eliminated.
 1805 0000 80B4     		push	{r7}
 1806              	.LCFI45:
 1807              		.cfi_def_cfa_offset 4
 1808 0002 85B0     		sub	sp, sp, #20
 1809              	.LCFI46:
 1810              		.cfi_def_cfa_offset 24
 1811 0004 00AF     		add	r7, sp, #0
 1812              		.cfi_offset 7, -4
 1813              	.LCFI47:
 1814              		.cfi_def_cfa_register 7
 1815 0006 0246     		mov	r2, r0
 1816 0008 0B46     		mov	r3, r1
 1817 000a FA80     		strh	r2, [r7, #6]	@ movhi
 1818 000c BB80     		strh	r3, [r7, #4]	@ movhi
2008:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 tmp;
2009:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
2010:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2011:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 1819              		.loc 1 2011 0
 1820 000e FA88     		ldrh	r2, [r7, #6]
 1821 0010 BB88     		ldrh	r3, [r7, #4]
 1822 0012 1344     		add	r3, r2, r3
 1823 0014 FB60     		str	r3, [r7, #12]
2012:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1824              		.loc 1 2012 0
 1825 0016 BB88     		ldrh	r3, [r7, #4]
 1826 0018 4FEA4303 		lsl	r3, r3, #1
 1827 001c FA68     		ldr	r2, [r7, #12]
 1828 001e 1344     		add	r3, r2, r3
 1829 0020 FB60     		str	r3, [r7, #12]
2013:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp >>= 2u;
 1830              		.loc 1 2013 0
 1831 0022 FB68     		ldr	r3, [r7, #12]
 1832 0024 4FEA9303 		lsr	r3, r3, #2
 1833 0028 FB60     		str	r3, [r7, #12]
2014:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
2015:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((uint16) tmp);
 1834              		.loc 1 2015 0
 1835 002a FB68     		ldr	r3, [r7, #12]
 1836 002c 9BB2     		uxth	r3, r3
2016:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 1837              		.loc 1 2016 0
 1838 002e 1846     		mov	r0, r3
 1839 0030 07F11407 		add	r7, r7, #20
 1840 0034 BD46     		mov	sp, r7
 1841 0036 80BC     		pop	{r7}
 1842 0038 7047     		bx	lr
 1843              		.cfi_endproc
 1844              	.LFE15:
 1845              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 1846 003a 00BF     		.text
 1847              	.Letext0:
 1848              		.section	.debug_loc,"",%progbits
 1849              	.Ldebug_loc0:
 1850              	.LLST0:
 1851 0000 00000000 		.4byte	.LFB0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 69


 1852 0004 02000000 		.4byte	.LCFI0
 1853 0008 0100     		.2byte	0x1
 1854 000a 5D       		.byte	0x5d
 1855 000b 02000000 		.4byte	.LCFI0
 1856 000f 04000000 		.4byte	.LCFI1
 1857 0013 0200     		.2byte	0x2
 1858 0015 7D       		.byte	0x7d
 1859 0016 04       		.sleb128 4
 1860 0017 04000000 		.4byte	.LCFI1
 1861 001b 06000000 		.4byte	.LCFI2
 1862 001f 0200     		.2byte	0x2
 1863 0021 7D       		.byte	0x7d
 1864 0022 18       		.sleb128 24
 1865 0023 06000000 		.4byte	.LCFI2
 1866 0027 B8000000 		.4byte	.LFE0
 1867 002b 0200     		.2byte	0x2
 1868 002d 77       		.byte	0x77
 1869 002e 18       		.sleb128 24
 1870 002f 00000000 		.4byte	0x0
 1871 0033 00000000 		.4byte	0x0
 1872              	.LLST1:
 1873 0037 00000000 		.4byte	.LFB1
 1874 003b 02000000 		.4byte	.LCFI3
 1875 003f 0100     		.2byte	0x1
 1876 0041 5D       		.byte	0x5d
 1877 0042 02000000 		.4byte	.LCFI3
 1878 0046 04000000 		.4byte	.LCFI4
 1879 004a 0200     		.2byte	0x2
 1880 004c 7D       		.byte	0x7d
 1881 004d 08       		.sleb128 8
 1882 004e 04000000 		.4byte	.LCFI4
 1883 0052 06000000 		.4byte	.LCFI5
 1884 0056 0200     		.2byte	0x2
 1885 0058 7D       		.byte	0x7d
 1886 0059 10       		.sleb128 16
 1887 005a 06000000 		.4byte	.LCFI5
 1888 005e 2C000000 		.4byte	.LFE1
 1889 0062 0200     		.2byte	0x2
 1890 0064 77       		.byte	0x77
 1891 0065 10       		.sleb128 16
 1892 0066 00000000 		.4byte	0x0
 1893 006a 00000000 		.4byte	0x0
 1894              	.LLST2:
 1895 006e 00000000 		.4byte	.LFB2
 1896 0072 02000000 		.4byte	.LCFI6
 1897 0076 0100     		.2byte	0x1
 1898 0078 5D       		.byte	0x5d
 1899 0079 02000000 		.4byte	.LCFI6
 1900 007d 04000000 		.4byte	.LCFI7
 1901 0081 0200     		.2byte	0x2
 1902 0083 7D       		.byte	0x7d
 1903 0084 08       		.sleb128 8
 1904 0085 04000000 		.4byte	.LCFI7
 1905 0089 06000000 		.4byte	.LCFI8
 1906 008d 0200     		.2byte	0x2
 1907 008f 7D       		.byte	0x7d
 1908 0090 10       		.sleb128 16
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 70


 1909 0091 06000000 		.4byte	.LCFI8
 1910 0095 2C000000 		.4byte	.LFE2
 1911 0099 0200     		.2byte	0x2
 1912 009b 77       		.byte	0x77
 1913 009c 10       		.sleb128 16
 1914 009d 00000000 		.4byte	0x0
 1915 00a1 00000000 		.4byte	0x0
 1916              	.LLST3:
 1917 00a5 00000000 		.4byte	.LFB3
 1918 00a9 02000000 		.4byte	.LCFI9
 1919 00ad 0100     		.2byte	0x1
 1920 00af 5D       		.byte	0x5d
 1921 00b0 02000000 		.4byte	.LCFI9
 1922 00b4 04000000 		.4byte	.LCFI10
 1923 00b8 0200     		.2byte	0x2
 1924 00ba 7D       		.byte	0x7d
 1925 00bb 08       		.sleb128 8
 1926 00bc 04000000 		.4byte	.LCFI10
 1927 00c0 06000000 		.4byte	.LCFI11
 1928 00c4 0200     		.2byte	0x2
 1929 00c6 7D       		.byte	0x7d
 1930 00c7 10       		.sleb128 16
 1931 00c8 06000000 		.4byte	.LCFI11
 1932 00cc 7C000000 		.4byte	.LFE3
 1933 00d0 0200     		.2byte	0x2
 1934 00d2 77       		.byte	0x77
 1935 00d3 10       		.sleb128 16
 1936 00d4 00000000 		.4byte	0x0
 1937 00d8 00000000 		.4byte	0x0
 1938              	.LLST4:
 1939 00dc 00000000 		.4byte	.LFB4
 1940 00e0 02000000 		.4byte	.LCFI12
 1941 00e4 0100     		.2byte	0x1
 1942 00e6 5D       		.byte	0x5d
 1943 00e7 02000000 		.4byte	.LCFI12
 1944 00eb 04000000 		.4byte	.LCFI13
 1945 00ef 0200     		.2byte	0x2
 1946 00f1 7D       		.byte	0x7d
 1947 00f2 08       		.sleb128 8
 1948 00f3 04000000 		.4byte	.LCFI13
 1949 00f7 06000000 		.4byte	.LCFI14
 1950 00fb 0200     		.2byte	0x2
 1951 00fd 7D       		.byte	0x7d
 1952 00fe 20       		.sleb128 32
 1953 00ff 06000000 		.4byte	.LCFI14
 1954 0103 1C020000 		.4byte	.LFE4
 1955 0107 0200     		.2byte	0x2
 1956 0109 77       		.byte	0x77
 1957 010a 20       		.sleb128 32
 1958 010b 00000000 		.4byte	0x0
 1959 010f 00000000 		.4byte	0x0
 1960              	.LLST5:
 1961 0113 00000000 		.4byte	.LFB5
 1962 0117 02000000 		.4byte	.LCFI15
 1963 011b 0100     		.2byte	0x1
 1964 011d 5D       		.byte	0x5d
 1965 011e 02000000 		.4byte	.LCFI15
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 71


 1966 0122 04000000 		.4byte	.LCFI16
 1967 0126 0200     		.2byte	0x2
 1968 0128 7D       		.byte	0x7d
 1969 0129 08       		.sleb128 8
 1970 012a 04000000 		.4byte	.LCFI16
 1971 012e 06000000 		.4byte	.LCFI17
 1972 0132 0200     		.2byte	0x2
 1973 0134 7D       		.byte	0x7d
 1974 0135 10       		.sleb128 16
 1975 0136 06000000 		.4byte	.LCFI17
 1976 013a 5C000000 		.4byte	.LFE5
 1977 013e 0200     		.2byte	0x2
 1978 0140 77       		.byte	0x77
 1979 0141 10       		.sleb128 16
 1980 0142 00000000 		.4byte	0x0
 1981 0146 00000000 		.4byte	0x0
 1982              	.LLST6:
 1983 014a 00000000 		.4byte	.LFB6
 1984 014e 02000000 		.4byte	.LCFI18
 1985 0152 0100     		.2byte	0x1
 1986 0154 5D       		.byte	0x5d
 1987 0155 02000000 		.4byte	.LCFI18
 1988 0159 04000000 		.4byte	.LCFI19
 1989 015d 0200     		.2byte	0x2
 1990 015f 7D       		.byte	0x7d
 1991 0160 04       		.sleb128 4
 1992 0161 04000000 		.4byte	.LCFI19
 1993 0165 06000000 		.4byte	.LCFI20
 1994 0169 0200     		.2byte	0x2
 1995 016b 7D       		.byte	0x7d
 1996 016c 18       		.sleb128 24
 1997 016d 06000000 		.4byte	.LCFI20
 1998 0171 94010000 		.4byte	.LFE6
 1999 0175 0200     		.2byte	0x2
 2000 0177 77       		.byte	0x77
 2001 0178 18       		.sleb128 24
 2002 0179 00000000 		.4byte	0x0
 2003 017d 00000000 		.4byte	0x0
 2004              	.LLST7:
 2005 0181 00000000 		.4byte	.LFB7
 2006 0185 02000000 		.4byte	.LCFI21
 2007 0189 0100     		.2byte	0x1
 2008 018b 5D       		.byte	0x5d
 2009 018c 02000000 		.4byte	.LCFI21
 2010 0190 04000000 		.4byte	.LCFI22
 2011 0194 0200     		.2byte	0x2
 2012 0196 7D       		.byte	0x7d
 2013 0197 08       		.sleb128 8
 2014 0198 04000000 		.4byte	.LCFI22
 2015 019c 06000000 		.4byte	.LCFI23
 2016 01a0 0200     		.2byte	0x2
 2017 01a2 7D       		.byte	0x7d
 2018 01a3 18       		.sleb128 24
 2019 01a4 06000000 		.4byte	.LCFI23
 2020 01a8 60000000 		.4byte	.LFE7
 2021 01ac 0200     		.2byte	0x2
 2022 01ae 77       		.byte	0x77
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 72


 2023 01af 18       		.sleb128 24
 2024 01b0 00000000 		.4byte	0x0
 2025 01b4 00000000 		.4byte	0x0
 2026              	.LLST8:
 2027 01b8 00000000 		.4byte	.LFB8
 2028 01bc 02000000 		.4byte	.LCFI24
 2029 01c0 0100     		.2byte	0x1
 2030 01c2 5D       		.byte	0x5d
 2031 01c3 02000000 		.4byte	.LCFI24
 2032 01c7 04000000 		.4byte	.LCFI25
 2033 01cb 0200     		.2byte	0x2
 2034 01cd 7D       		.byte	0x7d
 2035 01ce 08       		.sleb128 8
 2036 01cf 04000000 		.4byte	.LCFI25
 2037 01d3 06000000 		.4byte	.LCFI26
 2038 01d7 0200     		.2byte	0x2
 2039 01d9 7D       		.byte	0x7d
 2040 01da 10       		.sleb128 16
 2041 01db 06000000 		.4byte	.LCFI26
 2042 01df 42000000 		.4byte	.LFE8
 2043 01e3 0200     		.2byte	0x2
 2044 01e5 77       		.byte	0x77
 2045 01e6 10       		.sleb128 16
 2046 01e7 00000000 		.4byte	0x0
 2047 01eb 00000000 		.4byte	0x0
 2048              	.LLST9:
 2049 01ef 00000000 		.4byte	.LFB9
 2050 01f3 02000000 		.4byte	.LCFI27
 2051 01f7 0100     		.2byte	0x1
 2052 01f9 5D       		.byte	0x5d
 2053 01fa 02000000 		.4byte	.LCFI27
 2054 01fe 04000000 		.4byte	.LCFI28
 2055 0202 0200     		.2byte	0x2
 2056 0204 7D       		.byte	0x7d
 2057 0205 04       		.sleb128 4
 2058 0206 04000000 		.4byte	.LCFI28
 2059 020a 06000000 		.4byte	.LCFI29
 2060 020e 0200     		.2byte	0x2
 2061 0210 7D       		.byte	0x7d
 2062 0211 18       		.sleb128 24
 2063 0212 06000000 		.4byte	.LCFI29
 2064 0216 7C000000 		.4byte	.LFE9
 2065 021a 0200     		.2byte	0x2
 2066 021c 77       		.byte	0x77
 2067 021d 18       		.sleb128 24
 2068 021e 00000000 		.4byte	0x0
 2069 0222 00000000 		.4byte	0x0
 2070              	.LLST10:
 2071 0226 00000000 		.4byte	.LFB10
 2072 022a 02000000 		.4byte	.LCFI30
 2073 022e 0100     		.2byte	0x1
 2074 0230 5D       		.byte	0x5d
 2075 0231 02000000 		.4byte	.LCFI30
 2076 0235 04000000 		.4byte	.LCFI31
 2077 0239 0200     		.2byte	0x2
 2078 023b 7D       		.byte	0x7d
 2079 023c 04       		.sleb128 4
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 73


 2080 023d 04000000 		.4byte	.LCFI31
 2081 0241 06000000 		.4byte	.LCFI32
 2082 0245 0200     		.2byte	0x2
 2083 0247 7D       		.byte	0x7d
 2084 0248 18       		.sleb128 24
 2085 0249 06000000 		.4byte	.LCFI32
 2086 024d 86000000 		.4byte	.LFE10
 2087 0251 0200     		.2byte	0x2
 2088 0253 77       		.byte	0x77
 2089 0254 18       		.sleb128 24
 2090 0255 00000000 		.4byte	0x0
 2091 0259 00000000 		.4byte	0x0
 2092              	.LLST11:
 2093 025d 00000000 		.4byte	.LFB11
 2094 0261 02000000 		.4byte	.LCFI33
 2095 0265 0100     		.2byte	0x1
 2096 0267 5D       		.byte	0x5d
 2097 0268 02000000 		.4byte	.LCFI33
 2098 026c 04000000 		.4byte	.LCFI34
 2099 0270 0200     		.2byte	0x2
 2100 0272 7D       		.byte	0x7d
 2101 0273 04       		.sleb128 4
 2102 0274 04000000 		.4byte	.LCFI34
 2103 0278 06000000 		.4byte	.LCFI35
 2104 027c 0200     		.2byte	0x2
 2105 027e 7D       		.byte	0x7d
 2106 027f 18       		.sleb128 24
 2107 0280 06000000 		.4byte	.LCFI35
 2108 0284 7C000000 		.4byte	.LFE11
 2109 0288 0200     		.2byte	0x2
 2110 028a 77       		.byte	0x77
 2111 028b 18       		.sleb128 24
 2112 028c 00000000 		.4byte	0x0
 2113 0290 00000000 		.4byte	0x0
 2114              	.LLST12:
 2115 0294 00000000 		.4byte	.LFB12
 2116 0298 02000000 		.4byte	.LCFI36
 2117 029c 0100     		.2byte	0x1
 2118 029e 5D       		.byte	0x5d
 2119 029f 02000000 		.4byte	.LCFI36
 2120 02a3 04000000 		.4byte	.LCFI37
 2121 02a7 0200     		.2byte	0x2
 2122 02a9 7D       		.byte	0x7d
 2123 02aa 04       		.sleb128 4
 2124 02ab 04000000 		.4byte	.LCFI37
 2125 02af 06000000 		.4byte	.LCFI38
 2126 02b3 0200     		.2byte	0x2
 2127 02b5 7D       		.byte	0x7d
 2128 02b6 20       		.sleb128 32
 2129 02b7 06000000 		.4byte	.LCFI38
 2130 02bb D2010000 		.4byte	.LFE12
 2131 02bf 0200     		.2byte	0x2
 2132 02c1 77       		.byte	0x77
 2133 02c2 20       		.sleb128 32
 2134 02c3 00000000 		.4byte	0x0
 2135 02c7 00000000 		.4byte	0x0
 2136              	.LLST13:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 74


 2137 02cb 00000000 		.4byte	.LFB13
 2138 02cf 02000000 		.4byte	.LCFI39
 2139 02d3 0100     		.2byte	0x1
 2140 02d5 5D       		.byte	0x5d
 2141 02d6 02000000 		.4byte	.LCFI39
 2142 02da 04000000 		.4byte	.LCFI40
 2143 02de 0200     		.2byte	0x2
 2144 02e0 7D       		.byte	0x7d
 2145 02e1 08       		.sleb128 8
 2146 02e2 04000000 		.4byte	.LCFI40
 2147 02e6 06000000 		.4byte	.LCFI41
 2148 02ea 0200     		.2byte	0x2
 2149 02ec 7D       		.byte	0x7d
 2150 02ed 20       		.sleb128 32
 2151 02ee 06000000 		.4byte	.LCFI41
 2152 02f2 46010000 		.4byte	.LFE13
 2153 02f6 0200     		.2byte	0x2
 2154 02f8 77       		.byte	0x77
 2155 02f9 18       		.sleb128 24
 2156 02fa 00000000 		.4byte	0x0
 2157 02fe 00000000 		.4byte	0x0
 2158              	.LLST14:
 2159 0302 00000000 		.4byte	.LFB14
 2160 0306 02000000 		.4byte	.LCFI42
 2161 030a 0100     		.2byte	0x1
 2162 030c 5D       		.byte	0x5d
 2163 030d 02000000 		.4byte	.LCFI42
 2164 0311 04000000 		.4byte	.LCFI43
 2165 0315 0200     		.2byte	0x2
 2166 0317 7D       		.byte	0x7d
 2167 0318 04       		.sleb128 4
 2168 0319 04000000 		.4byte	.LCFI43
 2169 031d 06000000 		.4byte	.LCFI44
 2170 0321 0200     		.2byte	0x2
 2171 0323 7D       		.byte	0x7d
 2172 0324 18       		.sleb128 24
 2173 0325 06000000 		.4byte	.LCFI44
 2174 0329 4A000000 		.4byte	.LFE14
 2175 032d 0200     		.2byte	0x2
 2176 032f 77       		.byte	0x77
 2177 0330 18       		.sleb128 24
 2178 0331 00000000 		.4byte	0x0
 2179 0335 00000000 		.4byte	0x0
 2180              	.LLST15:
 2181 0339 00000000 		.4byte	.LFB15
 2182 033d 02000000 		.4byte	.LCFI45
 2183 0341 0100     		.2byte	0x1
 2184 0343 5D       		.byte	0x5d
 2185 0344 02000000 		.4byte	.LCFI45
 2186 0348 04000000 		.4byte	.LCFI46
 2187 034c 0200     		.2byte	0x2
 2188 034e 7D       		.byte	0x7d
 2189 034f 04       		.sleb128 4
 2190 0350 04000000 		.4byte	.LCFI46
 2191 0354 06000000 		.4byte	.LCFI47
 2192 0358 0200     		.2byte	0x2
 2193 035a 7D       		.byte	0x7d
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 75


 2194 035b 18       		.sleb128 24
 2195 035c 06000000 		.4byte	.LCFI47
 2196 0360 3A000000 		.4byte	.LFE15
 2197 0364 0200     		.2byte	0x2
 2198 0366 77       		.byte	0x77
 2199 0367 18       		.sleb128 24
 2200 0368 00000000 		.4byte	0x0
 2201 036c 00000000 		.4byte	0x0
 2202              		.file 2 ".\\Generated_Source\\PSoC5\\/cytypes.h"
 2203              		.section	.debug_info
 2204 0000 99080000 		.4byte	0x899
 2205 0004 0200     		.2byte	0x2
 2206 0006 00000000 		.4byte	.Ldebug_abbrev0
 2207 000a 04       		.byte	0x4
 2208 000b 01       		.uleb128 0x1
 2209 000c AD000000 		.4byte	.LASF82
 2210 0010 01       		.byte	0x1
 2211 0011 DF020000 		.4byte	.LASF83
 2212 0015 00000000 		.4byte	.LASF84
 2213 0019 00000000 		.4byte	0x0
 2214 001d 00000000 		.4byte	0x0
 2215 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 2216 0025 00000000 		.4byte	.Ldebug_line0
 2217 0029 02       		.uleb128 0x2
 2218 002a 01       		.byte	0x1
 2219 002b 06       		.byte	0x6
 2220 002c 0B010000 		.4byte	.LASF0
 2221 0030 02       		.uleb128 0x2
 2222 0031 01       		.byte	0x1
 2223 0032 08       		.byte	0x8
 2224 0033 52040000 		.4byte	.LASF1
 2225 0037 02       		.uleb128 0x2
 2226 0038 02       		.byte	0x2
 2227 0039 05       		.byte	0x5
 2228 003a 8F040000 		.4byte	.LASF2
 2229 003e 02       		.uleb128 0x2
 2230 003f 02       		.byte	0x2
 2231 0040 07       		.byte	0x7
 2232 0041 92020000 		.4byte	.LASF3
 2233 0045 02       		.uleb128 0x2
 2234 0046 04       		.byte	0x4
 2235 0047 05       		.byte	0x5
 2236 0048 69010000 		.4byte	.LASF4
 2237 004c 02       		.uleb128 0x2
 2238 004d 04       		.byte	0x4
 2239 004e 07       		.byte	0x7
 2240 004f 52020000 		.4byte	.LASF5
 2241 0053 02       		.uleb128 0x2
 2242 0054 08       		.byte	0x8
 2243 0055 05       		.byte	0x5
 2244 0056 FD000000 		.4byte	.LASF6
 2245 005a 02       		.uleb128 0x2
 2246 005b 08       		.byte	0x8
 2247 005c 07       		.byte	0x7
 2248 005d 87000000 		.4byte	.LASF7
 2249 0061 03       		.uleb128 0x3
 2250 0062 04       		.byte	0x4
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 76


 2251 0063 05       		.byte	0x5
 2252 0064 696E7400 		.ascii	"int\000"
 2253 0068 02       		.uleb128 0x2
 2254 0069 04       		.byte	0x4
 2255 006a 07       		.byte	0x7
 2256 006b 29020000 		.4byte	.LASF8
 2257 006f 04       		.uleb128 0x4
 2258 0070 A8010000 		.4byte	.LASF9
 2259 0074 02       		.byte	0x2
 2260 0075 4C       		.byte	0x4c
 2261 0076 30000000 		.4byte	0x30
 2262 007a 04       		.uleb128 0x4
 2263 007b 2E000000 		.4byte	.LASF10
 2264 007f 02       		.byte	0x2
 2265 0080 4D       		.byte	0x4d
 2266 0081 3E000000 		.4byte	0x3e
 2267 0085 04       		.uleb128 0x4
 2268 0086 CB010000 		.4byte	.LASF11
 2269 008a 02       		.byte	0x2
 2270 008b 4E       		.byte	0x4e
 2271 008c 4C000000 		.4byte	0x4c
 2272 0090 04       		.uleb128 0x4
 2273 0091 5D010000 		.4byte	.LASF12
 2274 0095 02       		.byte	0x2
 2275 0096 51       		.byte	0x51
 2276 0097 45000000 		.4byte	0x45
 2277 009b 02       		.uleb128 0x2
 2278 009c 04       		.byte	0x4
 2279 009d 04       		.byte	0x4
 2280 009e 2F040000 		.4byte	.LASF13
 2281 00a2 02       		.uleb128 0x2
 2282 00a3 08       		.byte	0x8
 2283 00a4 04       		.byte	0x4
 2284 00a5 AE010000 		.4byte	.LASF14
 2285 00a9 02       		.uleb128 0x2
 2286 00aa 01       		.byte	0x1
 2287 00ab 08       		.byte	0x8
 2288 00ac F6040000 		.4byte	.LASF15
 2289 00b0 05       		.uleb128 0x5
 2290 00b1 04       		.byte	0x4
 2291 00b2 07       		.byte	0x7
 2292 00b3 06       		.uleb128 0x6
 2293 00b4 01       		.byte	0x1
 2294 00b5 AF040000 		.4byte	.LASF16
 2295 00b9 01       		.byte	0x1
 2296 00ba C2       		.byte	0xc2
 2297 00bb 01       		.byte	0x1
 2298 00bc 00000000 		.4byte	.LFB0
 2299 00c0 B8000000 		.4byte	.LFE0
 2300 00c4 00000000 		.4byte	.LLST0
 2301 00c8 E9000000 		.4byte	0xe9
 2302 00cc 07       		.uleb128 0x7
 2303 00cd A5020000 		.4byte	.LASF18
 2304 00d1 01       		.byte	0x1
 2305 00d2 C2       		.byte	0xc2
 2306 00d3 6F000000 		.4byte	0x6f
 2307 00d7 02       		.byte	0x2
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 77


 2308 00d8 91       		.byte	0x91
 2309 00d9 6F       		.sleb128 -17
 2310 00da 08       		.uleb128 0x8
 2311 00db 99040000 		.4byte	.LASF20
 2312 00df 01       		.byte	0x1
 2313 00e0 C6       		.byte	0xc6
 2314 00e1 6F000000 		.4byte	0x6f
 2315 00e5 02       		.byte	0x2
 2316 00e6 91       		.byte	0x91
 2317 00e7 77       		.sleb128 -9
 2318 00e8 00       		.byte	0x0
 2319 00e9 09       		.uleb128 0x9
 2320 00ea 01       		.byte	0x1
 2321 00eb 72030000 		.4byte	.LASF17
 2322 00ef 01       		.byte	0x1
 2323 00f0 0E01     		.2byte	0x10e
 2324 00f2 01       		.byte	0x1
 2325 00f3 00000000 		.4byte	.LFB1
 2326 00f7 2C000000 		.4byte	.LFE1
 2327 00fb 37000000 		.4byte	.LLST1
 2328 00ff 13010000 		.4byte	0x113
 2329 0103 0A       		.uleb128 0xa
 2330 0104 A5020000 		.4byte	.LASF18
 2331 0108 01       		.byte	0x1
 2332 0109 0E01     		.2byte	0x10e
 2333 010b 6F000000 		.4byte	0x6f
 2334 010f 02       		.byte	0x2
 2335 0110 91       		.byte	0x91
 2336 0111 77       		.sleb128 -9
 2337 0112 00       		.byte	0x0
 2338 0113 09       		.uleb128 0x9
 2339 0114 01       		.byte	0x1
 2340 0115 60040000 		.4byte	.LASF19
 2341 0119 01       		.byte	0x1
 2342 011a 3F01     		.2byte	0x13f
 2343 011c 01       		.byte	0x1
 2344 011d 00000000 		.4byte	.LFB2
 2345 0121 2C000000 		.4byte	.LFE2
 2346 0125 6E000000 		.4byte	.LLST2
 2347 0129 3B010000 		.4byte	0x13b
 2348 012d 0B       		.uleb128 0xb
 2349 012e 6900     		.ascii	"i\000"
 2350 0130 01       		.byte	0x1
 2351 0131 4201     		.2byte	0x142
 2352 0133 6F000000 		.4byte	0x6f
 2353 0137 02       		.byte	0x2
 2354 0138 91       		.byte	0x91
 2355 0139 77       		.sleb128 -9
 2356 013a 00       		.byte	0x0
 2357 013b 09       		.uleb128 0x9
 2358 013c 01       		.byte	0x1
 2359 013d B9000000 		.4byte	.LASF21
 2360 0141 01       		.byte	0x1
 2361 0142 6001     		.2byte	0x160
 2362 0144 01       		.byte	0x1
 2363 0145 00000000 		.4byte	.LFB3
 2364 0149 7C000000 		.4byte	.LFE3
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 78


 2365 014d A5000000 		.4byte	.LLST3
 2366 0151 81010000 		.4byte	0x181
 2367 0155 0B       		.uleb128 0xb
 2368 0156 6900     		.ascii	"i\000"
 2369 0158 01       		.byte	0x1
 2370 0159 6301     		.2byte	0x163
 2371 015b 6F000000 		.4byte	0x6f
 2372 015f 02       		.byte	0x2
 2373 0160 91       		.byte	0x91
 2374 0161 75       		.sleb128 -11
 2375 0162 0B       		.uleb128 0xb
 2376 0163 706F7300 		.ascii	"pos\000"
 2377 0167 01       		.byte	0x1
 2378 0168 6401     		.2byte	0x164
 2379 016a 6F000000 		.4byte	0x6f
 2380 016e 02       		.byte	0x2
 2381 016f 91       		.byte	0x91
 2382 0170 76       		.sleb128 -10
 2383 0171 0C       		.uleb128 0xc
 2384 0172 C7030000 		.4byte	.LASF22
 2385 0176 01       		.byte	0x1
 2386 0177 6501     		.2byte	0x165
 2387 0179 6F000000 		.4byte	0x6f
 2388 017d 02       		.byte	0x2
 2389 017e 91       		.byte	0x91
 2390 017f 77       		.sleb128 -9
 2391 0180 00       		.byte	0x0
 2392 0181 09       		.uleb128 0x9
 2393 0182 01       		.byte	0x1
 2394 0183 C1020000 		.4byte	.LASF23
 2395 0187 01       		.byte	0x1
 2396 0188 A001     		.2byte	0x1a0
 2397 018a 01       		.byte	0x1
 2398 018b 00000000 		.4byte	.LFB4
 2399 018f 1C020000 		.4byte	.LFE4
 2400 0193 DC000000 		.4byte	.LLST4
 2401 0197 F6010000 		.4byte	0x1f6
 2402 019b 0A       		.uleb128 0xa
 2403 019c A5020000 		.4byte	.LASF18
 2404 01a0 01       		.byte	0x1
 2405 01a1 A001     		.2byte	0x1a0
 2406 01a3 6F000000 		.4byte	0x6f
 2407 01a7 02       		.byte	0x2
 2408 01a8 91       		.byte	0x91
 2409 01a9 67       		.sleb128 -25
 2410 01aa 0C       		.uleb128 0xc
 2411 01ab 08030000 		.4byte	.LASF24
 2412 01af 01       		.byte	0x1
 2413 01b0 A301     		.2byte	0x1a3
 2414 01b2 85000000 		.4byte	0x85
 2415 01b6 02       		.byte	0x2
 2416 01b7 91       		.byte	0x91
 2417 01b8 6C       		.sleb128 -20
 2418 01b9 0C       		.uleb128 0xc
 2419 01ba 9E050000 		.4byte	.LASF25
 2420 01be 01       		.byte	0x1
 2421 01bf A401     		.2byte	0x1a4
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 79


 2422 01c1 7A000000 		.4byte	0x7a
 2423 01c5 02       		.byte	0x2
 2424 01c6 91       		.byte	0x91
 2425 01c7 72       		.sleb128 -14
 2426 01c8 0C       		.uleb128 0xc
 2427 01c9 35000000 		.4byte	.LASF26
 2428 01cd 01       		.byte	0x1
 2429 01ce A501     		.2byte	0x1a5
 2430 01d0 7A000000 		.4byte	0x7a
 2431 01d4 02       		.byte	0x2
 2432 01d5 91       		.byte	0x91
 2433 01d6 74       		.sleb128 -12
 2434 01d7 0C       		.uleb128 0xc
 2435 01d8 99040000 		.4byte	.LASF20
 2436 01dc 01       		.byte	0x1
 2437 01dd A601     		.2byte	0x1a6
 2438 01df 6F000000 		.4byte	0x6f
 2439 01e3 02       		.byte	0x2
 2440 01e4 91       		.byte	0x91
 2441 01e5 76       		.sleb128 -10
 2442 01e6 0C       		.uleb128 0xc
 2443 01e7 80040000 		.4byte	.LASF27
 2444 01eb 01       		.byte	0x1
 2445 01ec A701     		.2byte	0x1a7
 2446 01ee 6F000000 		.4byte	0x6f
 2447 01f2 02       		.byte	0x2
 2448 01f3 91       		.byte	0x91
 2449 01f4 77       		.sleb128 -9
 2450 01f5 00       		.byte	0x0
 2451 01f6 09       		.uleb128 0x9
 2452 01f7 01       		.byte	0x1
 2453 01f8 DD000000 		.4byte	.LASF28
 2454 01fc 01       		.byte	0x1
 2455 01fd 4D02     		.2byte	0x24d
 2456 01ff 01       		.byte	0x1
 2457 0200 00000000 		.4byte	.LFB5
 2458 0204 5C000000 		.4byte	.LFE5
 2459 0208 13010000 		.4byte	.LLST5
 2460 020c 3C020000 		.4byte	0x23c
 2461 0210 0B       		.uleb128 0xb
 2462 0211 6900     		.ascii	"i\000"
 2463 0213 01       		.byte	0x1
 2464 0214 5002     		.2byte	0x250
 2465 0216 6F000000 		.4byte	0x6f
 2466 021a 02       		.byte	0x2
 2467 021b 91       		.byte	0x91
 2468 021c 75       		.sleb128 -11
 2469 021d 0B       		.uleb128 0xb
 2470 021e 706F7300 		.ascii	"pos\000"
 2471 0222 01       		.byte	0x1
 2472 0223 5102     		.2byte	0x251
 2473 0225 6F000000 		.4byte	0x6f
 2474 0229 02       		.byte	0x2
 2475 022a 91       		.byte	0x91
 2476 022b 76       		.sleb128 -10
 2477 022c 0C       		.uleb128 0xc
 2478 022d C7030000 		.4byte	.LASF22
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 80


 2479 0231 01       		.byte	0x1
 2480 0232 5202     		.2byte	0x252
 2481 0234 6F000000 		.4byte	0x6f
 2482 0238 02       		.byte	0x2
 2483 0239 91       		.byte	0x91
 2484 023a 77       		.sleb128 -9
 2485 023b 00       		.byte	0x0
 2486 023c 0D       		.uleb128 0xd
 2487 023d 01       		.byte	0x1
 2488 023e AA030000 		.4byte	.LASF34
 2489 0242 01       		.byte	0x1
 2490 0243 8702     		.2byte	0x287
 2491 0245 01       		.byte	0x1
 2492 0246 6F000000 		.4byte	0x6f
 2493 024a 00000000 		.4byte	.LFB6
 2494 024e 94010000 		.4byte	.LFE6
 2495 0252 4A010000 		.4byte	.LLST6
 2496 0256 D3020000 		.4byte	0x2d3
 2497 025a 0A       		.uleb128 0xa
 2498 025b A5020000 		.4byte	.LASF18
 2499 025f 01       		.byte	0x1
 2500 0260 8702     		.2byte	0x287
 2501 0262 6F000000 		.4byte	0x6f
 2502 0266 02       		.byte	0x2
 2503 0267 91       		.byte	0x91
 2504 0268 6F       		.sleb128 -17
 2505 0269 0C       		.uleb128 0xc
 2506 026a 46050000 		.4byte	.LASF29
 2507 026e 01       		.byte	0x1
 2508 026f 8A02     		.2byte	0x28a
 2509 0271 6F000000 		.4byte	0x6f
 2510 0275 02       		.byte	0x2
 2511 0276 91       		.byte	0x91
 2512 0277 71       		.sleb128 -15
 2513 0278 0B       		.uleb128 0xb
 2514 0279 706F7300 		.ascii	"pos\000"
 2515 027d 01       		.byte	0x1
 2516 027e 8C02     		.2byte	0x28c
 2517 0280 6F000000 		.4byte	0x6f
 2518 0284 02       		.byte	0x2
 2519 0285 91       		.byte	0x91
 2520 0286 72       		.sleb128 -14
 2521 0287 0C       		.uleb128 0xc
 2522 0288 A0040000 		.4byte	.LASF30
 2523 028c 01       		.byte	0x1
 2524 028d 8D02     		.2byte	0x28d
 2525 028f 6F000000 		.4byte	0x6f
 2526 0293 02       		.byte	0x2
 2527 0294 91       		.byte	0x91
 2528 0295 73       		.sleb128 -13
 2529 0296 0C       		.uleb128 0xc
 2530 0297 99040000 		.4byte	.LASF20
 2531 029b 01       		.byte	0x1
 2532 029c 8F02     		.2byte	0x28f
 2533 029e 6F000000 		.4byte	0x6f
 2534 02a2 02       		.byte	0x2
 2535 02a3 91       		.byte	0x91
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 81


 2536 02a4 74       		.sleb128 -12
 2537 02a5 0C       		.uleb128 0xc
 2538 02a6 59000000 		.4byte	.LASF31
 2539 02aa 01       		.byte	0x1
 2540 02ab 9002     		.2byte	0x290
 2541 02ad 6F000000 		.4byte	0x6f
 2542 02b1 02       		.byte	0x2
 2543 02b2 91       		.byte	0x91
 2544 02b3 75       		.sleb128 -11
 2545 02b4 0C       		.uleb128 0xc
 2546 02b5 D2010000 		.4byte	.LASF32
 2547 02b9 01       		.byte	0x1
 2548 02ba 9102     		.2byte	0x291
 2549 02bc 6F000000 		.4byte	0x6f
 2550 02c0 02       		.byte	0x2
 2551 02c1 91       		.byte	0x91
 2552 02c2 76       		.sleb128 -10
 2553 02c3 0C       		.uleb128 0xc
 2554 02c4 2E030000 		.4byte	.LASF33
 2555 02c8 01       		.byte	0x1
 2556 02c9 9202     		.2byte	0x292
 2557 02cb 6F000000 		.4byte	0x6f
 2558 02cf 02       		.byte	0x2
 2559 02d0 91       		.byte	0x91
 2560 02d1 77       		.sleb128 -9
 2561 02d2 00       		.byte	0x0
 2562 02d3 0D       		.uleb128 0xd
 2563 02d4 01       		.byte	0x1
 2564 02d5 35040000 		.4byte	.LASF35
 2565 02d9 01       		.byte	0x1
 2566 02da D602     		.2byte	0x2d6
 2567 02dc 01       		.byte	0x1
 2568 02dd 6F000000 		.4byte	0x6f
 2569 02e1 00000000 		.4byte	.LFB7
 2570 02e5 60000000 		.4byte	.LFE7
 2571 02e9 81010000 		.4byte	.LLST7
 2572 02ed 2E030000 		.4byte	0x32e
 2573 02f1 0A       		.uleb128 0xa
 2574 02f2 99040000 		.4byte	.LASF20
 2575 02f6 01       		.byte	0x1
 2576 02f7 D602     		.2byte	0x2d6
 2577 02f9 6F000000 		.4byte	0x6f
 2578 02fd 02       		.byte	0x2
 2579 02fe 91       		.byte	0x91
 2580 02ff 6F       		.sleb128 -17
 2581 0300 0C       		.uleb128 0xc
 2582 0301 44010000 		.4byte	.LASF36
 2583 0305 01       		.byte	0x1
 2584 0306 D902     		.2byte	0x2d9
 2585 0308 6F000000 		.4byte	0x6f
 2586 030c 02       		.byte	0x2
 2587 030d 91       		.byte	0x91
 2588 030e 75       		.sleb128 -11
 2589 030f 0C       		.uleb128 0xc
 2590 0310 4D010000 		.4byte	.LASF37
 2591 0314 01       		.byte	0x1
 2592 0315 DA02     		.2byte	0x2da
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 82


 2593 0317 6F000000 		.4byte	0x6f
 2594 031b 02       		.byte	0x2
 2595 031c 91       		.byte	0x91
 2596 031d 76       		.sleb128 -10
 2597 031e 0C       		.uleb128 0xc
 2598 031f 63010000 		.4byte	.LASF38
 2599 0323 01       		.byte	0x1
 2600 0324 DB02     		.2byte	0x2db
 2601 0326 6F000000 		.4byte	0x6f
 2602 032a 02       		.byte	0x2
 2603 032b 91       		.byte	0x91
 2604 032c 77       		.sleb128 -9
 2605 032d 00       		.byte	0x0
 2606 032e 0D       		.uleb128 0xd
 2607 032f 01       		.byte	0x1
 2608 0330 7C010000 		.4byte	.LASF39
 2609 0334 01       		.byte	0x1
 2610 0335 0203     		.2byte	0x302
 2611 0337 01       		.byte	0x1
 2612 0338 6F000000 		.4byte	0x6f
 2613 033c 00000000 		.4byte	.LFB8
 2614 0340 42000000 		.4byte	.LFE8
 2615 0344 B8010000 		.4byte	.LLST8
 2616 0348 69030000 		.4byte	0x369
 2617 034c 0B       		.uleb128 0xb
 2618 034d 6900     		.ascii	"i\000"
 2619 034f 01       		.byte	0x1
 2620 0350 0503     		.2byte	0x305
 2621 0352 6F000000 		.4byte	0x6f
 2622 0356 02       		.byte	0x2
 2623 0357 91       		.byte	0x91
 2624 0358 76       		.sleb128 -10
 2625 0359 0C       		.uleb128 0xc
 2626 035a 63010000 		.4byte	.LASF38
 2627 035e 01       		.byte	0x1
 2628 035f 0603     		.2byte	0x306
 2629 0361 6F000000 		.4byte	0x6f
 2630 0365 02       		.byte	0x2
 2631 0366 91       		.byte	0x91
 2632 0367 77       		.sleb128 -9
 2633 0368 00       		.byte	0x0
 2634 0369 09       		.uleb128 0x9
 2635 036a 01       		.byte	0x1
 2636 036b 4D030000 		.4byte	.LASF40
 2637 036f 01       		.byte	0x1
 2638 0370 3003     		.2byte	0x330
 2639 0372 01       		.byte	0x1
 2640 0373 00000000 		.4byte	.LFB9
 2641 0377 7C000000 		.4byte	.LFE9
 2642 037b EF010000 		.4byte	.LLST9
 2643 037f CF030000 		.4byte	0x3cf
 2644 0383 0A       		.uleb128 0xa
 2645 0384 99040000 		.4byte	.LASF20
 2646 0388 01       		.byte	0x1
 2647 0389 3003     		.2byte	0x330
 2648 038b 6F000000 		.4byte	0x6f
 2649 038f 02       		.byte	0x2
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 83


 2650 0390 91       		.byte	0x91
 2651 0391 6F       		.sleb128 -17
 2652 0392 0B       		.uleb128 0xb
 2653 0393 706F7300 		.ascii	"pos\000"
 2654 0397 01       		.byte	0x1
 2655 0398 3303     		.2byte	0x333
 2656 039a 6F000000 		.4byte	0x6f
 2657 039e 02       		.byte	0x2
 2658 039f 91       		.byte	0x91
 2659 03a0 74       		.sleb128 -12
 2660 03a1 0C       		.uleb128 0xc
 2661 03a2 C7030000 		.4byte	.LASF22
 2662 03a6 01       		.byte	0x1
 2663 03a7 3403     		.2byte	0x334
 2664 03a9 6F000000 		.4byte	0x6f
 2665 03ad 02       		.byte	0x2
 2666 03ae 91       		.byte	0x91
 2667 03af 75       		.sleb128 -11
 2668 03b0 0C       		.uleb128 0xc
 2669 03b1 44010000 		.4byte	.LASF36
 2670 03b5 01       		.byte	0x1
 2671 03b6 3503     		.2byte	0x335
 2672 03b8 6F000000 		.4byte	0x6f
 2673 03bc 02       		.byte	0x2
 2674 03bd 91       		.byte	0x91
 2675 03be 76       		.sleb128 -10
 2676 03bf 0C       		.uleb128 0xc
 2677 03c0 4D010000 		.4byte	.LASF37
 2678 03c4 01       		.byte	0x1
 2679 03c5 3603     		.2byte	0x336
 2680 03c7 6F000000 		.4byte	0x6f
 2681 03cb 02       		.byte	0x2
 2682 03cc 91       		.byte	0x91
 2683 03cd 77       		.sleb128 -9
 2684 03ce 00       		.byte	0x0
 2685 03cf 09       		.uleb128 0x9
 2686 03d0 01       		.byte	0x1
 2687 03d1 2D010000 		.4byte	.LASF41
 2688 03d5 01       		.byte	0x1
 2689 03d6 6203     		.2byte	0x362
 2690 03d8 01       		.byte	0x1
 2691 03d9 00000000 		.4byte	.LFB10
 2692 03dd 86000000 		.4byte	.LFE10
 2693 03e1 26020000 		.4byte	.LLST10
 2694 03e5 35040000 		.4byte	0x435
 2695 03e9 0A       		.uleb128 0xa
 2696 03ea 99040000 		.4byte	.LASF20
 2697 03ee 01       		.byte	0x1
 2698 03ef 6203     		.2byte	0x362
 2699 03f1 6F000000 		.4byte	0x6f
 2700 03f5 02       		.byte	0x2
 2701 03f6 91       		.byte	0x91
 2702 03f7 6F       		.sleb128 -17
 2703 03f8 0B       		.uleb128 0xb
 2704 03f9 706F7300 		.ascii	"pos\000"
 2705 03fd 01       		.byte	0x1
 2706 03fe 6503     		.2byte	0x365
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 84


 2707 0400 6F000000 		.4byte	0x6f
 2708 0404 02       		.byte	0x2
 2709 0405 91       		.byte	0x91
 2710 0406 74       		.sleb128 -12
 2711 0407 0C       		.uleb128 0xc
 2712 0408 C7030000 		.4byte	.LASF22
 2713 040c 01       		.byte	0x1
 2714 040d 6603     		.2byte	0x366
 2715 040f 6F000000 		.4byte	0x6f
 2716 0413 02       		.byte	0x2
 2717 0414 91       		.byte	0x91
 2718 0415 75       		.sleb128 -11
 2719 0416 0C       		.uleb128 0xc
 2720 0417 44010000 		.4byte	.LASF36
 2721 041b 01       		.byte	0x1
 2722 041c 6703     		.2byte	0x367
 2723 041e 6F000000 		.4byte	0x6f
 2724 0422 02       		.byte	0x2
 2725 0423 91       		.byte	0x91
 2726 0424 76       		.sleb128 -10
 2727 0425 0C       		.uleb128 0xc
 2728 0426 4D010000 		.4byte	.LASF37
 2729 042a 01       		.byte	0x1
 2730 042b 6803     		.2byte	0x368
 2731 042d 6F000000 		.4byte	0x6f
 2732 0431 02       		.byte	0x2
 2733 0432 91       		.byte	0x91
 2734 0433 77       		.sleb128 -9
 2735 0434 00       		.byte	0x0
 2736 0435 0D       		.uleb128 0xd
 2737 0436 01       		.byte	0x1
 2738 0437 AC020000 		.4byte	.LASF42
 2739 043b 01       		.byte	0x1
 2740 043c 9403     		.2byte	0x394
 2741 043e 01       		.byte	0x1
 2742 043f 6F000000 		.4byte	0x6f
 2743 0443 00000000 		.4byte	.LFB11
 2744 0447 7C000000 		.4byte	.LFE11
 2745 044b 5D020000 		.4byte	.LLST11
 2746 044f BB040000 		.4byte	0x4bb
 2747 0453 0A       		.uleb128 0xa
 2748 0454 3F050000 		.4byte	.LASF43
 2749 0458 01       		.byte	0x1
 2750 0459 9403     		.2byte	0x394
 2751 045b 6F000000 		.4byte	0x6f
 2752 045f 02       		.byte	0x2
 2753 0460 91       		.byte	0x91
 2754 0461 6F       		.sleb128 -17
 2755 0462 0A       		.uleb128 0xa
 2756 0463 28000000 		.4byte	.LASF44
 2757 0467 01       		.byte	0x1
 2758 0468 9403     		.2byte	0x394
 2759 046a 6F000000 		.4byte	0x6f
 2760 046e 02       		.byte	0x2
 2761 046f 91       		.byte	0x91
 2762 0470 6E       		.sleb128 -18
 2763 0471 0A       		.uleb128 0xa
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 85


 2764 0472 59000000 		.4byte	.LASF31
 2765 0476 01       		.byte	0x1
 2766 0477 9403     		.2byte	0x394
 2767 0479 6F000000 		.4byte	0x6f
 2768 047d 02       		.byte	0x2
 2769 047e 91       		.byte	0x91
 2770 047f 6D       		.sleb128 -19
 2771 0480 0B       		.uleb128 0xb
 2772 0481 6900     		.ascii	"i\000"
 2773 0483 01       		.byte	0x1
 2774 0484 9803     		.2byte	0x398
 2775 0486 6F000000 		.4byte	0x6f
 2776 048a 02       		.byte	0x2
 2777 048b 91       		.byte	0x91
 2778 048c 71       		.sleb128 -15
 2779 048d 0C       		.uleb128 0xc
 2780 048e A7040000 		.4byte	.LASF45
 2781 0492 01       		.byte	0x1
 2782 0493 A203     		.2byte	0x3a2
 2783 0495 6F000000 		.4byte	0x6f
 2784 0499 02       		.byte	0x2
 2785 049a 91       		.byte	0x91
 2786 049b 72       		.sleb128 -14
 2787 049c 0C       		.uleb128 0xc
 2788 049d 10020000 		.4byte	.LASF46
 2789 04a1 01       		.byte	0x1
 2790 04a2 A303     		.2byte	0x3a3
 2791 04a4 6F000000 		.4byte	0x6f
 2792 04a8 02       		.byte	0x2
 2793 04a9 91       		.byte	0x91
 2794 04aa 73       		.sleb128 -13
 2795 04ab 0C       		.uleb128 0xc
 2796 04ac 02020000 		.4byte	.LASF47
 2797 04b0 01       		.byte	0x1
 2798 04b1 A403     		.2byte	0x3a4
 2799 04b3 BB040000 		.4byte	0x4bb
 2800 04b7 02       		.byte	0x2
 2801 04b8 91       		.byte	0x91
 2802 04b9 74       		.sleb128 -12
 2803 04ba 00       		.byte	0x0
 2804 04bb 0E       		.uleb128 0xe
 2805 04bc 04       		.byte	0x4
 2806 04bd 6F000000 		.4byte	0x6f
 2807 04c1 0D       		.uleb128 0xd
 2808 04c2 01       		.byte	0x1
 2809 04c3 6F050000 		.4byte	.LASF48
 2810 04c7 01       		.byte	0x1
 2811 04c8 3004     		.2byte	0x430
 2812 04ca 01       		.byte	0x1
 2813 04cb 6F000000 		.4byte	0x6f
 2814 04cf 00000000 		.4byte	.LFB12
 2815 04d3 D2010000 		.4byte	.LFE12
 2816 04d7 94020000 		.4byte	.LLST12
 2817 04db 85050000 		.4byte	0x585
 2818 04df 0A       		.uleb128 0xa
 2819 04e0 A7040000 		.4byte	.LASF45
 2820 04e4 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 86


 2821 04e5 3004     		.2byte	0x430
 2822 04e7 6F000000 		.4byte	0x6f
 2823 04eb 02       		.byte	0x2
 2824 04ec 91       		.byte	0x91
 2825 04ed 67       		.sleb128 -25
 2826 04ee 0A       		.uleb128 0xa
 2827 04ef 3F050000 		.4byte	.LASF43
 2828 04f3 01       		.byte	0x1
 2829 04f4 3004     		.2byte	0x430
 2830 04f6 6F000000 		.4byte	0x6f
 2831 04fa 02       		.byte	0x2
 2832 04fb 91       		.byte	0x91
 2833 04fc 66       		.sleb128 -26
 2834 04fd 0A       		.uleb128 0xa
 2835 04fe 28000000 		.4byte	.LASF44
 2836 0502 01       		.byte	0x1
 2837 0503 3104     		.2byte	0x431
 2838 0505 6F000000 		.4byte	0x6f
 2839 0509 02       		.byte	0x2
 2840 050a 91       		.byte	0x91
 2841 050b 65       		.sleb128 -27
 2842 050c 0A       		.uleb128 0xa
 2843 050d C1040000 		.4byte	.LASF49
 2844 0511 01       		.byte	0x1
 2845 0512 3104     		.2byte	0x431
 2846 0514 7A000000 		.4byte	0x7a
 2847 0518 02       		.byte	0x2
 2848 0519 91       		.byte	0x91
 2849 051a 62       		.sleb128 -30
 2850 051b 0A       		.uleb128 0xa
 2851 051c 80040000 		.4byte	.LASF27
 2852 0520 01       		.byte	0x1
 2853 0521 3104     		.2byte	0x431
 2854 0523 6F000000 		.4byte	0x6f
 2855 0527 02       		.byte	0x2
 2856 0528 91       		.byte	0x91
 2857 0529 00       		.sleb128 0
 2858 052a 0C       		.uleb128 0xc
 2859 052b 69000000 		.4byte	.LASF50
 2860 052f 01       		.byte	0x1
 2861 0530 3504     		.2byte	0x435
 2862 0532 6F000000 		.4byte	0x6f
 2863 0536 02       		.byte	0x2
 2864 0537 91       		.byte	0x91
 2865 0538 69       		.sleb128 -23
 2866 0539 0C       		.uleb128 0xc
 2867 053a FA010000 		.4byte	.LASF51
 2868 053e 01       		.byte	0x1
 2869 053f 3604     		.2byte	0x436
 2870 0541 6F000000 		.4byte	0x6f
 2871 0545 02       		.byte	0x2
 2872 0546 91       		.byte	0x91
 2873 0547 6A       		.sleb128 -22
 2874 0548 0C       		.uleb128 0xc
 2875 0549 36020000 		.4byte	.LASF52
 2876 054d 01       		.byte	0x1
 2877 054e 3D04     		.2byte	0x43d
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 87


 2878 0550 6F000000 		.4byte	0x6f
 2879 0554 02       		.byte	0x2
 2880 0555 91       		.byte	0x91
 2881 0556 6B       		.sleb128 -21
 2882 0557 0C       		.uleb128 0xc
 2883 0558 72010000 		.4byte	.LASF53
 2884 055c 01       		.byte	0x1
 2885 055d 3E04     		.2byte	0x43e
 2886 055f 90000000 		.4byte	0x90
 2887 0563 02       		.byte	0x2
 2888 0564 91       		.byte	0x91
 2889 0565 6C       		.sleb128 -20
 2890 0566 0C       		.uleb128 0xc
 2891 0567 9C010000 		.4byte	.LASF54
 2892 056b 01       		.byte	0x1
 2893 056c 3F04     		.2byte	0x43f
 2894 056e 90000000 		.4byte	0x90
 2895 0572 02       		.byte	0x2
 2896 0573 91       		.byte	0x91
 2897 0574 70       		.sleb128 -16
 2898 0575 0C       		.uleb128 0xc
 2899 0576 02020000 		.4byte	.LASF47
 2900 057a 01       		.byte	0x1
 2901 057b 4004     		.2byte	0x440
 2902 057d BB040000 		.4byte	0x4bb
 2903 0581 02       		.byte	0x2
 2904 0582 91       		.byte	0x91
 2905 0583 74       		.sleb128 -12
 2906 0584 00       		.byte	0x0
 2907 0585 0D       		.uleb128 0xd
 2908 0586 01       		.byte	0x1
 2909 0587 DE040000 		.4byte	.LASF55
 2910 058b 01       		.byte	0x1
 2911 058c F704     		.2byte	0x4f7
 2912 058e 01       		.byte	0x1
 2913 058f 7A000000 		.4byte	0x7a
 2914 0593 00000000 		.4byte	.LFB13
 2915 0597 46010000 		.4byte	.LFE13
 2916 059b CB020000 		.4byte	.LLST13
 2917 059f 1C060000 		.4byte	0x61c
 2918 05a3 0A       		.uleb128 0xa
 2919 05a4 99040000 		.4byte	.LASF20
 2920 05a8 01       		.byte	0x1
 2921 05a9 F704     		.2byte	0x4f7
 2922 05ab 6F000000 		.4byte	0x6f
 2923 05af 02       		.byte	0x2
 2924 05b0 91       		.byte	0x91
 2925 05b1 6F       		.sleb128 -17
 2926 05b2 0C       		.uleb128 0xc
 2927 05b3 25030000 		.4byte	.LASF56
 2928 05b7 01       		.byte	0x1
 2929 05b8 FE04     		.2byte	0x4fe
 2930 05ba 6F000000 		.4byte	0x6f
 2931 05be 02       		.byte	0x2
 2932 05bf 91       		.byte	0x91
 2933 05c0 70       		.sleb128 -16
 2934 05c1 0C       		.uleb128 0xc
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 88


 2935 05c2 9E000000 		.4byte	.LASF57
 2936 05c6 01       		.byte	0x1
 2937 05c7 FF04     		.2byte	0x4ff
 2938 05c9 6F000000 		.4byte	0x6f
 2939 05cd 02       		.byte	0x2
 2940 05ce 91       		.byte	0x91
 2941 05cf 71       		.sleb128 -15
 2942 05d0 0C       		.uleb128 0xc
 2943 05d1 63030000 		.4byte	.LASF58
 2944 05d5 01       		.byte	0x1
 2945 05d6 0005     		.2byte	0x500
 2946 05d8 6F000000 		.4byte	0x6f
 2947 05dc 02       		.byte	0x2
 2948 05dd 91       		.byte	0x91
 2949 05de 72       		.sleb128 -14
 2950 05df 0C       		.uleb128 0xc
 2951 05e0 A7040000 		.4byte	.LASF45
 2952 05e4 01       		.byte	0x1
 2953 05e5 0A05     		.2byte	0x50a
 2954 05e7 6F000000 		.4byte	0x6f
 2955 05eb 02       		.byte	0x2
 2956 05ec 91       		.byte	0x91
 2957 05ed 73       		.sleb128 -13
 2958 05ee 0C       		.uleb128 0xc
 2959 05ef 36020000 		.4byte	.LASF52
 2960 05f3 01       		.byte	0x1
 2961 05f4 0B05     		.2byte	0x50b
 2962 05f6 7A000000 		.4byte	0x7a
 2963 05fa 02       		.byte	0x2
 2964 05fb 91       		.byte	0x91
 2965 05fc 74       		.sleb128 -12
 2966 05fd 0C       		.uleb128 0xc
 2967 05fe 3F050000 		.4byte	.LASF43
 2968 0602 01       		.byte	0x1
 2969 0603 0C05     		.2byte	0x50c
 2970 0605 6F000000 		.4byte	0x6f
 2971 0609 02       		.byte	0x2
 2972 060a 91       		.byte	0x91
 2973 060b 76       		.sleb128 -10
 2974 060c 0C       		.uleb128 0xc
 2975 060d 28000000 		.4byte	.LASF44
 2976 0611 01       		.byte	0x1
 2977 0612 0D05     		.2byte	0x50d
 2978 0614 6F000000 		.4byte	0x6f
 2979 0618 02       		.byte	0x2
 2980 0619 91       		.byte	0x91
 2981 061a 77       		.sleb128 -9
 2982 061b 00       		.byte	0x0
 2983 061c 0D       		.uleb128 0xd
 2984 061d 01       		.byte	0x1
 2985 061e 71000000 		.4byte	.LASF59
 2986 0622 01       		.byte	0x1
 2987 0623 6B07     		.2byte	0x76b
 2988 0625 01       		.byte	0x1
 2989 0626 7A000000 		.4byte	0x7a
 2990 062a 00000000 		.4byte	.LFB14
 2991 062e 4A000000 		.4byte	.LFE14
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 89


 2992 0632 02030000 		.4byte	.LLST14
 2993 0636 74060000 		.4byte	0x674
 2994 063a 0F       		.uleb128 0xf
 2995 063b 783100   		.ascii	"x1\000"
 2996 063e 01       		.byte	0x1
 2997 063f 6B07     		.2byte	0x76b
 2998 0641 7A000000 		.4byte	0x7a
 2999 0645 02       		.byte	0x2
 3000 0646 91       		.byte	0x91
 3001 0647 6E       		.sleb128 -18
 3002 0648 0F       		.uleb128 0xf
 3003 0649 783200   		.ascii	"x2\000"
 3004 064c 01       		.byte	0x1
 3005 064d 6B07     		.2byte	0x76b
 3006 064f 7A000000 		.4byte	0x7a
 3007 0653 02       		.byte	0x2
 3008 0654 91       		.byte	0x91
 3009 0655 6C       		.sleb128 -20
 3010 0656 0F       		.uleb128 0xf
 3011 0657 783300   		.ascii	"x3\000"
 3012 065a 01       		.byte	0x1
 3013 065b 6B07     		.2byte	0x76b
 3014 065d 7A000000 		.4byte	0x7a
 3015 0661 02       		.byte	0x2
 3016 0662 91       		.byte	0x91
 3017 0663 6A       		.sleb128 -22
 3018 0664 0B       		.uleb128 0xb
 3019 0665 746D7000 		.ascii	"tmp\000"
 3020 0669 01       		.byte	0x1
 3021 066a 6E07     		.2byte	0x76e
 3022 066c 7A000000 		.4byte	0x7a
 3023 0670 02       		.byte	0x2
 3024 0671 91       		.byte	0x91
 3025 0672 76       		.sleb128 -10
 3026 0673 00       		.byte	0x0
 3027 0674 0D       		.uleb128 0xd
 3028 0675 01       		.byte	0x1
 3029 0676 15020000 		.4byte	.LASF60
 3030 067a 01       		.byte	0x1
 3031 067b D507     		.2byte	0x7d5
 3032 067d 01       		.byte	0x1
 3033 067e 7A000000 		.4byte	0x7a
 3034 0682 00000000 		.4byte	.LFB15
 3035 0686 3A000000 		.4byte	.LFE15
 3036 068a 39030000 		.4byte	.LLST15
 3037 068e BE060000 		.4byte	0x6be
 3038 0692 0F       		.uleb128 0xf
 3039 0693 783100   		.ascii	"x1\000"
 3040 0696 01       		.byte	0x1
 3041 0697 D507     		.2byte	0x7d5
 3042 0699 7A000000 		.4byte	0x7a
 3043 069d 02       		.byte	0x2
 3044 069e 91       		.byte	0x91
 3045 069f 6E       		.sleb128 -18
 3046 06a0 0F       		.uleb128 0xf
 3047 06a1 783200   		.ascii	"x2\000"
 3048 06a4 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 90


 3049 06a5 D507     		.2byte	0x7d5
 3050 06a7 7A000000 		.4byte	0x7a
 3051 06ab 02       		.byte	0x2
 3052 06ac 91       		.byte	0x91
 3053 06ad 6C       		.sleb128 -20
 3054 06ae 0B       		.uleb128 0xb
 3055 06af 746D7000 		.ascii	"tmp\000"
 3056 06b3 01       		.byte	0x1
 3057 06b4 D807     		.2byte	0x7d8
 3058 06b6 85000000 		.4byte	0x85
 3059 06ba 02       		.byte	0x2
 3060 06bb 91       		.byte	0x91
 3061 06bc 74       		.sleb128 -12
 3062 06bd 00       		.byte	0x0
 3063 06be 10       		.uleb128 0x10
 3064 06bf 6F000000 		.4byte	0x6f
 3065 06c3 CE060000 		.4byte	0x6ce
 3066 06c7 11       		.uleb128 0x11
 3067 06c8 B0000000 		.4byte	0xb0
 3068 06cc 02       		.byte	0x2
 3069 06cd 00       		.byte	0x0
 3070 06ce 08       		.uleb128 0x8
 3071 06cf 13050000 		.4byte	.LASF61
 3072 06d3 01       		.byte	0x1
 3073 06d4 66       		.byte	0x66
 3074 06d5 BE060000 		.4byte	0x6be
 3075 06d9 05       		.byte	0x5
 3076 06da 03       		.byte	0x3
 3077 06db 24000000 		.4byte	CapSense_centroid
 3078 06df 10       		.uleb128 0x10
 3079 06e0 7A000000 		.4byte	0x7a
 3080 06e4 EF060000 		.4byte	0x6ef
 3081 06e8 11       		.uleb128 0x11
 3082 06e9 B0000000 		.4byte	0xb0
 3083 06ed 06       		.byte	0x6
 3084 06ee 00       		.byte	0x0
 3085 06ef 12       		.uleb128 0x12
 3086 06f0 FF030000 		.4byte	.LASF62
 3087 06f4 01       		.byte	0x1
 3088 06f5 48       		.byte	0x48
 3089 06f6 DF060000 		.4byte	0x6df
 3090 06fa 01       		.byte	0x1
 3091 06fb 05       		.byte	0x5
 3092 06fc 03       		.byte	0x3
 3093 06fd 00000000 		.4byte	CapSense_rawFilterData1
 3094 0701 12       		.uleb128 0x12
 3095 0702 17040000 		.4byte	.LASF63
 3096 0706 01       		.byte	0x1
 3097 0707 49       		.byte	0x49
 3098 0708 DF060000 		.4byte	0x6df
 3099 070c 01       		.byte	0x1
 3100 070d 05       		.byte	0x5
 3101 070e 03       		.byte	0x3
 3102 070f 00000000 		.4byte	CapSense_rawFilterData2
 3103 0713 13       		.uleb128 0x13
 3104 0714 3F020000 		.4byte	.LASF64
 3105 0718 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 91


 3106 0719 59       		.byte	0x59
 3107 071a DF060000 		.4byte	0x6df
 3108 071e 01       		.byte	0x1
 3109 071f 01       		.byte	0x1
 3110 0720 10       		.uleb128 0x10
 3111 0721 6F000000 		.4byte	0x6f
 3112 0725 30070000 		.4byte	0x730
 3113 0729 11       		.uleb128 0x11
 3114 072a B0000000 		.4byte	0xb0
 3115 072e 00       		.byte	0x0
 3116 072f 00       		.byte	0x0
 3117 0730 13       		.uleb128 0x13
 3118 0731 25050000 		.4byte	.LASF65
 3119 0735 01       		.byte	0x1
 3120 0736 5A       		.byte	0x5a
 3121 0737 20070000 		.4byte	0x720
 3122 073b 01       		.byte	0x1
 3123 073c 01       		.byte	0x1
 3124 073d 10       		.uleb128 0x10
 3125 073e 6F000000 		.4byte	0x6f
 3126 0742 48070000 		.4byte	0x748
 3127 0746 14       		.uleb128 0x14
 3128 0747 00       		.byte	0x0
 3129 0748 13       		.uleb128 0x13
 3130 0749 B5010000 		.4byte	.LASF66
 3131 074d 01       		.byte	0x1
 3132 074e 5B       		.byte	0x5b
 3133 074f 55070000 		.4byte	0x755
 3134 0753 01       		.byte	0x1
 3135 0754 01       		.byte	0x1
 3136 0755 15       		.uleb128 0x15
 3137 0756 3D070000 		.4byte	0x73d
 3138 075a 12       		.uleb128 0x12
 3139 075b FB040000 		.4byte	.LASF67
 3140 075f 01       		.byte	0x1
 3141 0760 5D       		.byte	0x5d
 3142 0761 DF060000 		.4byte	0x6df
 3143 0765 01       		.byte	0x1
 3144 0766 05       		.byte	0x5
 3145 0767 03       		.byte	0x3
 3146 0768 00000000 		.4byte	CapSense_SensorBaseline
 3147 076c 10       		.uleb128 0x10
 3148 076d 6F000000 		.4byte	0x6f
 3149 0771 7C070000 		.4byte	0x77c
 3150 0775 11       		.uleb128 0x11
 3151 0776 B0000000 		.4byte	0xb0
 3152 077a 06       		.byte	0x6
 3153 077b 00       		.byte	0x0
 3154 077c 12       		.uleb128 0x12
 3155 077d 54050000 		.4byte	.LASF68
 3156 0781 01       		.byte	0x1
 3157 0782 5E       		.byte	0x5e
 3158 0783 6C070000 		.4byte	0x76c
 3159 0787 01       		.byte	0x1
 3160 0788 05       		.byte	0x5
 3161 0789 03       		.byte	0x3
 3162 078a 00000000 		.4byte	CapSense_SensorBaselineLow
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 92


 3163 078e 12       		.uleb128 0x12
 3164 078f 94030000 		.4byte	.LASF69
 3165 0793 01       		.byte	0x1
 3166 0794 5F       		.byte	0x5f
 3167 0795 6C070000 		.4byte	0x76c
 3168 0799 01       		.byte	0x1
 3169 079a 05       		.byte	0x5
 3170 079b 03       		.byte	0x3
 3171 079c 00000000 		.4byte	CapSense_SensorSignal
 3172 07a0 12       		.uleb128 0x12
 3173 07a1 17010000 		.4byte	.LASF70
 3174 07a5 01       		.byte	0x1
 3175 07a6 60       		.byte	0x60
 3176 07a7 20070000 		.4byte	0x720
 3177 07ab 01       		.byte	0x1
 3178 07ac 05       		.byte	0x5
 3179 07ad 03       		.byte	0x3
 3180 07ae 00000000 		.4byte	CapSense_SensorOnMask
 3181 07b2 12       		.uleb128 0x12
 3182 07b3 DD010000 		.4byte	.LASF71
 3183 07b7 01       		.byte	0x1
 3184 07b8 62       		.byte	0x62
 3185 07b9 6C070000 		.4byte	0x76c
 3186 07bd 01       		.byte	0x1
 3187 07be 05       		.byte	0x5
 3188 07bf 03       		.byte	0x3
 3189 07c0 00000000 		.4byte	CapSense_LowBaselineResetCnt
 3190 07c4 12       		.uleb128 0x12
 3191 07c5 E6030000 		.4byte	.LASF72
 3192 07c9 01       		.byte	0x1
 3193 07ca 69       		.byte	0x69
 3194 07cb BE060000 		.4byte	0x6be
 3195 07cf 01       		.byte	0x1
 3196 07d0 05       		.byte	0x5
 3197 07d1 03       		.byte	0x3
 3198 07d2 00000000 		.4byte	CapSense_fingerThreshold
 3199 07d6 12       		.uleb128 0x12
 3200 07d7 CE030000 		.4byte	.LASF73
 3201 07db 01       		.byte	0x1
 3202 07dc 6D       		.byte	0x6d
 3203 07dd BE060000 		.4byte	0x6be
 3204 07e1 01       		.byte	0x1
 3205 07e2 05       		.byte	0x5
 3206 07e3 03       		.byte	0x3
 3207 07e4 00000000 		.4byte	CapSense_noiseThreshold
 3208 07e8 12       		.uleb128 0x12
 3209 07e9 45000000 		.4byte	.LASF74
 3210 07ed 01       		.byte	0x1
 3211 07ee 71       		.byte	0x71
 3212 07ef BE060000 		.4byte	0x6be
 3213 07f3 01       		.byte	0x1
 3214 07f4 05       		.byte	0x5
 3215 07f5 03       		.byte	0x3
 3216 07f6 00000000 		.4byte	CapSense_hysteresis
 3217 07fa 12       		.uleb128 0x12
 3218 07fb CC040000 		.4byte	.LASF75
 3219 07ff 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 93


 3220 0800 75       		.byte	0x75
 3221 0801 BE060000 		.4byte	0x6be
 3222 0805 01       		.byte	0x1
 3223 0806 05       		.byte	0x5
 3224 0807 03       		.byte	0x3
 3225 0808 00000000 		.4byte	CapSense_debounce
 3226 080c 12       		.uleb128 0x12
 3227 080d 85050000 		.4byte	.LASF76
 3228 0811 01       		.byte	0x1
 3229 0812 79       		.byte	0x79
 3230 0813 BE060000 		.4byte	0x6be
 3231 0817 01       		.byte	0x1
 3232 0818 05       		.byte	0x5
 3233 0819 03       		.byte	0x3
 3234 081a 00000000 		.4byte	CapSense_debounceCounter
 3235 081e 12       		.uleb128 0x12
 3236 081f 7C020000 		.4byte	.LASF77
 3237 0823 01       		.byte	0x1
 3238 0824 7D       		.byte	0x7d
 3239 0825 30080000 		.4byte	0x830
 3240 0829 01       		.byte	0x1
 3241 082a 05       		.byte	0x5
 3242 082b 03       		.byte	0x3
 3243 082c 00000000 		.4byte	CapSense_rawDataIndex
 3244 0830 15       		.uleb128 0x15
 3245 0831 BE060000 		.4byte	0x6be
 3246 0835 12       		.uleb128 0x12
 3247 0836 A6050000 		.4byte	.LASF78
 3248 083a 01       		.byte	0x1
 3249 083b 84       		.byte	0x84
 3250 083c 47080000 		.4byte	0x847
 3251 0840 01       		.byte	0x1
 3252 0841 05       		.byte	0x5
 3253 0842 03       		.byte	0x3
 3254 0843 00000000 		.4byte	CapSense_numberOfSensors
 3255 0847 15       		.uleb128 0x15
 3256 0848 BE060000 		.4byte	0x6be
 3257 084c 10       		.uleb128 0x10
 3258 084d 7A000000 		.4byte	0x7a
 3259 0851 5C080000 		.4byte	0x85c
 3260 0855 11       		.uleb128 0x11
 3261 0856 B0000000 		.4byte	0xb0
 3262 085a 00       		.byte	0x0
 3263 085b 00       		.byte	0x0
 3264 085c 12       		.uleb128 0x12
 3265 085d 37030000 		.4byte	.LASF79
 3266 0861 01       		.byte	0x1
 3267 0862 8B       		.byte	0x8b
 3268 0863 6E080000 		.4byte	0x86e
 3269 0867 01       		.byte	0x1
 3270 0868 05       		.byte	0x5
 3271 0869 03       		.byte	0x3
 3272 086a 00000000 		.4byte	CapSense_centroidMult
 3273 086e 15       		.uleb128 0x15
 3274 086f 4C080000 		.4byte	0x84c
 3275 0873 12       		.uleb128 0x12
 3276 0874 64020000 		.4byte	.LASF80
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 94


 3277 0878 01       		.byte	0x1
 3278 0879 8F       		.byte	0x8f
 3279 087a 85080000 		.4byte	0x885
 3280 087e 01       		.byte	0x1
 3281 087f 05       		.byte	0x5
 3282 0880 03       		.byte	0x3
 3283 0881 00000000 		.4byte	CapSense_posFiltersMask
 3284 0885 15       		.uleb128 0x15
 3285 0886 20070000 		.4byte	0x720
 3286 088a 12       		.uleb128 0x12
 3287 088b 0D030000 		.4byte	.LASF81
 3288 088f 01       		.byte	0x1
 3289 0890 93       		.byte	0x93
 3290 0891 BE060000 		.4byte	0x6be
 3291 0895 01       		.byte	0x1
 3292 0896 05       		.byte	0x5
 3293 0897 03       		.byte	0x3
 3294 0898 00000000 		.4byte	CapSense_posFiltersData
 3295 089c 00       		.byte	0x0
 3296              		.section	.debug_abbrev
 3297 0000 01       		.uleb128 0x1
 3298 0001 11       		.uleb128 0x11
 3299 0002 01       		.byte	0x1
 3300 0003 25       		.uleb128 0x25
 3301 0004 0E       		.uleb128 0xe
 3302 0005 13       		.uleb128 0x13
 3303 0006 0B       		.uleb128 0xb
 3304 0007 03       		.uleb128 0x3
 3305 0008 0E       		.uleb128 0xe
 3306 0009 1B       		.uleb128 0x1b
 3307 000a 0E       		.uleb128 0xe
 3308 000b 11       		.uleb128 0x11
 3309 000c 01       		.uleb128 0x1
 3310 000d 52       		.uleb128 0x52
 3311 000e 01       		.uleb128 0x1
 3312 000f 55       		.uleb128 0x55
 3313 0010 06       		.uleb128 0x6
 3314 0011 10       		.uleb128 0x10
 3315 0012 06       		.uleb128 0x6
 3316 0013 00       		.byte	0x0
 3317 0014 00       		.byte	0x0
 3318 0015 02       		.uleb128 0x2
 3319 0016 24       		.uleb128 0x24
 3320 0017 00       		.byte	0x0
 3321 0018 0B       		.uleb128 0xb
 3322 0019 0B       		.uleb128 0xb
 3323 001a 3E       		.uleb128 0x3e
 3324 001b 0B       		.uleb128 0xb
 3325 001c 03       		.uleb128 0x3
 3326 001d 0E       		.uleb128 0xe
 3327 001e 00       		.byte	0x0
 3328 001f 00       		.byte	0x0
 3329 0020 03       		.uleb128 0x3
 3330 0021 24       		.uleb128 0x24
 3331 0022 00       		.byte	0x0
 3332 0023 0B       		.uleb128 0xb
 3333 0024 0B       		.uleb128 0xb
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 95


 3334 0025 3E       		.uleb128 0x3e
 3335 0026 0B       		.uleb128 0xb
 3336 0027 03       		.uleb128 0x3
 3337 0028 08       		.uleb128 0x8
 3338 0029 00       		.byte	0x0
 3339 002a 00       		.byte	0x0
 3340 002b 04       		.uleb128 0x4
 3341 002c 16       		.uleb128 0x16
 3342 002d 00       		.byte	0x0
 3343 002e 03       		.uleb128 0x3
 3344 002f 0E       		.uleb128 0xe
 3345 0030 3A       		.uleb128 0x3a
 3346 0031 0B       		.uleb128 0xb
 3347 0032 3B       		.uleb128 0x3b
 3348 0033 0B       		.uleb128 0xb
 3349 0034 49       		.uleb128 0x49
 3350 0035 13       		.uleb128 0x13
 3351 0036 00       		.byte	0x0
 3352 0037 00       		.byte	0x0
 3353 0038 05       		.uleb128 0x5
 3354 0039 24       		.uleb128 0x24
 3355 003a 00       		.byte	0x0
 3356 003b 0B       		.uleb128 0xb
 3357 003c 0B       		.uleb128 0xb
 3358 003d 3E       		.uleb128 0x3e
 3359 003e 0B       		.uleb128 0xb
 3360 003f 00       		.byte	0x0
 3361 0040 00       		.byte	0x0
 3362 0041 06       		.uleb128 0x6
 3363 0042 2E       		.uleb128 0x2e
 3364 0043 01       		.byte	0x1
 3365 0044 3F       		.uleb128 0x3f
 3366 0045 0C       		.uleb128 0xc
 3367 0046 03       		.uleb128 0x3
 3368 0047 0E       		.uleb128 0xe
 3369 0048 3A       		.uleb128 0x3a
 3370 0049 0B       		.uleb128 0xb
 3371 004a 3B       		.uleb128 0x3b
 3372 004b 0B       		.uleb128 0xb
 3373 004c 27       		.uleb128 0x27
 3374 004d 0C       		.uleb128 0xc
 3375 004e 11       		.uleb128 0x11
 3376 004f 01       		.uleb128 0x1
 3377 0050 12       		.uleb128 0x12
 3378 0051 01       		.uleb128 0x1
 3379 0052 40       		.uleb128 0x40
 3380 0053 06       		.uleb128 0x6
 3381 0054 01       		.uleb128 0x1
 3382 0055 13       		.uleb128 0x13
 3383 0056 00       		.byte	0x0
 3384 0057 00       		.byte	0x0
 3385 0058 07       		.uleb128 0x7
 3386 0059 05       		.uleb128 0x5
 3387 005a 00       		.byte	0x0
 3388 005b 03       		.uleb128 0x3
 3389 005c 0E       		.uleb128 0xe
 3390 005d 3A       		.uleb128 0x3a
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 96


 3391 005e 0B       		.uleb128 0xb
 3392 005f 3B       		.uleb128 0x3b
 3393 0060 0B       		.uleb128 0xb
 3394 0061 49       		.uleb128 0x49
 3395 0062 13       		.uleb128 0x13
 3396 0063 02       		.uleb128 0x2
 3397 0064 0A       		.uleb128 0xa
 3398 0065 00       		.byte	0x0
 3399 0066 00       		.byte	0x0
 3400 0067 08       		.uleb128 0x8
 3401 0068 34       		.uleb128 0x34
 3402 0069 00       		.byte	0x0
 3403 006a 03       		.uleb128 0x3
 3404 006b 0E       		.uleb128 0xe
 3405 006c 3A       		.uleb128 0x3a
 3406 006d 0B       		.uleb128 0xb
 3407 006e 3B       		.uleb128 0x3b
 3408 006f 0B       		.uleb128 0xb
 3409 0070 49       		.uleb128 0x49
 3410 0071 13       		.uleb128 0x13
 3411 0072 02       		.uleb128 0x2
 3412 0073 0A       		.uleb128 0xa
 3413 0074 00       		.byte	0x0
 3414 0075 00       		.byte	0x0
 3415 0076 09       		.uleb128 0x9
 3416 0077 2E       		.uleb128 0x2e
 3417 0078 01       		.byte	0x1
 3418 0079 3F       		.uleb128 0x3f
 3419 007a 0C       		.uleb128 0xc
 3420 007b 03       		.uleb128 0x3
 3421 007c 0E       		.uleb128 0xe
 3422 007d 3A       		.uleb128 0x3a
 3423 007e 0B       		.uleb128 0xb
 3424 007f 3B       		.uleb128 0x3b
 3425 0080 05       		.uleb128 0x5
 3426 0081 27       		.uleb128 0x27
 3427 0082 0C       		.uleb128 0xc
 3428 0083 11       		.uleb128 0x11
 3429 0084 01       		.uleb128 0x1
 3430 0085 12       		.uleb128 0x12
 3431 0086 01       		.uleb128 0x1
 3432 0087 40       		.uleb128 0x40
 3433 0088 06       		.uleb128 0x6
 3434 0089 01       		.uleb128 0x1
 3435 008a 13       		.uleb128 0x13
 3436 008b 00       		.byte	0x0
 3437 008c 00       		.byte	0x0
 3438 008d 0A       		.uleb128 0xa
 3439 008e 05       		.uleb128 0x5
 3440 008f 00       		.byte	0x0
 3441 0090 03       		.uleb128 0x3
 3442 0091 0E       		.uleb128 0xe
 3443 0092 3A       		.uleb128 0x3a
 3444 0093 0B       		.uleb128 0xb
 3445 0094 3B       		.uleb128 0x3b
 3446 0095 05       		.uleb128 0x5
 3447 0096 49       		.uleb128 0x49
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 97


 3448 0097 13       		.uleb128 0x13
 3449 0098 02       		.uleb128 0x2
 3450 0099 0A       		.uleb128 0xa
 3451 009a 00       		.byte	0x0
 3452 009b 00       		.byte	0x0
 3453 009c 0B       		.uleb128 0xb
 3454 009d 34       		.uleb128 0x34
 3455 009e 00       		.byte	0x0
 3456 009f 03       		.uleb128 0x3
 3457 00a0 08       		.uleb128 0x8
 3458 00a1 3A       		.uleb128 0x3a
 3459 00a2 0B       		.uleb128 0xb
 3460 00a3 3B       		.uleb128 0x3b
 3461 00a4 05       		.uleb128 0x5
 3462 00a5 49       		.uleb128 0x49
 3463 00a6 13       		.uleb128 0x13
 3464 00a7 02       		.uleb128 0x2
 3465 00a8 0A       		.uleb128 0xa
 3466 00a9 00       		.byte	0x0
 3467 00aa 00       		.byte	0x0
 3468 00ab 0C       		.uleb128 0xc
 3469 00ac 34       		.uleb128 0x34
 3470 00ad 00       		.byte	0x0
 3471 00ae 03       		.uleb128 0x3
 3472 00af 0E       		.uleb128 0xe
 3473 00b0 3A       		.uleb128 0x3a
 3474 00b1 0B       		.uleb128 0xb
 3475 00b2 3B       		.uleb128 0x3b
 3476 00b3 05       		.uleb128 0x5
 3477 00b4 49       		.uleb128 0x49
 3478 00b5 13       		.uleb128 0x13
 3479 00b6 02       		.uleb128 0x2
 3480 00b7 0A       		.uleb128 0xa
 3481 00b8 00       		.byte	0x0
 3482 00b9 00       		.byte	0x0
 3483 00ba 0D       		.uleb128 0xd
 3484 00bb 2E       		.uleb128 0x2e
 3485 00bc 01       		.byte	0x1
 3486 00bd 3F       		.uleb128 0x3f
 3487 00be 0C       		.uleb128 0xc
 3488 00bf 03       		.uleb128 0x3
 3489 00c0 0E       		.uleb128 0xe
 3490 00c1 3A       		.uleb128 0x3a
 3491 00c2 0B       		.uleb128 0xb
 3492 00c3 3B       		.uleb128 0x3b
 3493 00c4 05       		.uleb128 0x5
 3494 00c5 27       		.uleb128 0x27
 3495 00c6 0C       		.uleb128 0xc
 3496 00c7 49       		.uleb128 0x49
 3497 00c8 13       		.uleb128 0x13
 3498 00c9 11       		.uleb128 0x11
 3499 00ca 01       		.uleb128 0x1
 3500 00cb 12       		.uleb128 0x12
 3501 00cc 01       		.uleb128 0x1
 3502 00cd 40       		.uleb128 0x40
 3503 00ce 06       		.uleb128 0x6
 3504 00cf 01       		.uleb128 0x1
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 98


 3505 00d0 13       		.uleb128 0x13
 3506 00d1 00       		.byte	0x0
 3507 00d2 00       		.byte	0x0
 3508 00d3 0E       		.uleb128 0xe
 3509 00d4 0F       		.uleb128 0xf
 3510 00d5 00       		.byte	0x0
 3511 00d6 0B       		.uleb128 0xb
 3512 00d7 0B       		.uleb128 0xb
 3513 00d8 49       		.uleb128 0x49
 3514 00d9 13       		.uleb128 0x13
 3515 00da 00       		.byte	0x0
 3516 00db 00       		.byte	0x0
 3517 00dc 0F       		.uleb128 0xf
 3518 00dd 05       		.uleb128 0x5
 3519 00de 00       		.byte	0x0
 3520 00df 03       		.uleb128 0x3
 3521 00e0 08       		.uleb128 0x8
 3522 00e1 3A       		.uleb128 0x3a
 3523 00e2 0B       		.uleb128 0xb
 3524 00e3 3B       		.uleb128 0x3b
 3525 00e4 05       		.uleb128 0x5
 3526 00e5 49       		.uleb128 0x49
 3527 00e6 13       		.uleb128 0x13
 3528 00e7 02       		.uleb128 0x2
 3529 00e8 0A       		.uleb128 0xa
 3530 00e9 00       		.byte	0x0
 3531 00ea 00       		.byte	0x0
 3532 00eb 10       		.uleb128 0x10
 3533 00ec 01       		.uleb128 0x1
 3534 00ed 01       		.byte	0x1
 3535 00ee 49       		.uleb128 0x49
 3536 00ef 13       		.uleb128 0x13
 3537 00f0 01       		.uleb128 0x1
 3538 00f1 13       		.uleb128 0x13
 3539 00f2 00       		.byte	0x0
 3540 00f3 00       		.byte	0x0
 3541 00f4 11       		.uleb128 0x11
 3542 00f5 21       		.uleb128 0x21
 3543 00f6 00       		.byte	0x0
 3544 00f7 49       		.uleb128 0x49
 3545 00f8 13       		.uleb128 0x13
 3546 00f9 2F       		.uleb128 0x2f
 3547 00fa 0B       		.uleb128 0xb
 3548 00fb 00       		.byte	0x0
 3549 00fc 00       		.byte	0x0
 3550 00fd 12       		.uleb128 0x12
 3551 00fe 34       		.uleb128 0x34
 3552 00ff 00       		.byte	0x0
 3553 0100 03       		.uleb128 0x3
 3554 0101 0E       		.uleb128 0xe
 3555 0102 3A       		.uleb128 0x3a
 3556 0103 0B       		.uleb128 0xb
 3557 0104 3B       		.uleb128 0x3b
 3558 0105 0B       		.uleb128 0xb
 3559 0106 49       		.uleb128 0x49
 3560 0107 13       		.uleb128 0x13
 3561 0108 3F       		.uleb128 0x3f
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 99


 3562 0109 0C       		.uleb128 0xc
 3563 010a 02       		.uleb128 0x2
 3564 010b 0A       		.uleb128 0xa
 3565 010c 00       		.byte	0x0
 3566 010d 00       		.byte	0x0
 3567 010e 13       		.uleb128 0x13
 3568 010f 34       		.uleb128 0x34
 3569 0110 00       		.byte	0x0
 3570 0111 03       		.uleb128 0x3
 3571 0112 0E       		.uleb128 0xe
 3572 0113 3A       		.uleb128 0x3a
 3573 0114 0B       		.uleb128 0xb
 3574 0115 3B       		.uleb128 0x3b
 3575 0116 0B       		.uleb128 0xb
 3576 0117 49       		.uleb128 0x49
 3577 0118 13       		.uleb128 0x13
 3578 0119 3F       		.uleb128 0x3f
 3579 011a 0C       		.uleb128 0xc
 3580 011b 3C       		.uleb128 0x3c
 3581 011c 0C       		.uleb128 0xc
 3582 011d 00       		.byte	0x0
 3583 011e 00       		.byte	0x0
 3584 011f 14       		.uleb128 0x14
 3585 0120 21       		.uleb128 0x21
 3586 0121 00       		.byte	0x0
 3587 0122 00       		.byte	0x0
 3588 0123 00       		.byte	0x0
 3589 0124 15       		.uleb128 0x15
 3590 0125 26       		.uleb128 0x26
 3591 0126 00       		.byte	0x0
 3592 0127 49       		.uleb128 0x49
 3593 0128 13       		.uleb128 0x13
 3594 0129 00       		.byte	0x0
 3595 012a 00       		.byte	0x0
 3596 012b 00       		.byte	0x0
 3597              		.section	.debug_pubnames,"",%progbits
 3598 0000 CD030000 		.4byte	0x3cd
 3599 0004 0200     		.2byte	0x2
 3600 0006 00000000 		.4byte	.Ldebug_info0
 3601 000a 9D080000 		.4byte	0x89d
 3602 000e B3000000 		.4byte	0xb3
 3603 0012 43617053 		.ascii	"CapSense_BaseInit\000"
 3603      656E7365 
 3603      5F426173 
 3603      65496E69 
 3603      7400
 3604 0024 E9000000 		.4byte	0xe9
 3605 0028 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 3605      656E7365 
 3605      5F496E69 
 3605      7469616C 
 3605      697A6553 
 3606 004a 13010000 		.4byte	0x113
 3607 004e 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 3607      656E7365 
 3607      5F496E69 
 3607      7469616C 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 100


 3607      697A6541 
 3608 006e 3B010000 		.4byte	0x13b
 3609 0072 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 3609      656E7365 
 3609      5F496E69 
 3609      7469616C 
 3609      697A6545 
 3610 0096 81010000 		.4byte	0x181
 3611 009a 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 3611      656E7365 
 3611      5F557064 
 3611      61746553 
 3611      656E736F 
 3612 00b8 F6010000 		.4byte	0x1f6
 3613 00bc 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 3613      656E7365 
 3613      5F557064 
 3613      61746545 
 3613      6E61626C 
 3614 00dc 3C020000 		.4byte	0x23c
 3615 00e0 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 3615      656E7365 
 3615      5F436865 
 3615      636B4973 
 3615      53656E73 
 3616 00fd D3020000 		.4byte	0x2d3
 3617 0101 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 3617      656E7365 
 3617      5F436865 
 3617      636B4973 
 3617      57696467 
 3618 011e 2E030000 		.4byte	0x32e
 3619 0122 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 3619      656E7365 
 3619      5F436865 
 3619      636B4973 
 3619      416E7957 
 3620 0142 69030000 		.4byte	0x369
 3621 0146 43617053 		.ascii	"CapSense_EnableWidget\000"
 3621      656E7365 
 3621      5F456E61 
 3621      626C6557 
 3621      69646765 
 3622 015c CF030000 		.4byte	0x3cf
 3623 0160 43617053 		.ascii	"CapSense_DisableWidget\000"
 3623      656E7365 
 3623      5F446973 
 3623      61626C65 
 3623      57696467 
 3624 0177 35040000 		.4byte	0x435
 3625 017b 43617053 		.ascii	"CapSense_FindMaximum\000"
 3625      656E7365 
 3625      5F46696E 
 3625      644D6178 
 3625      696D756D 
 3626 0190 C1040000 		.4byte	0x4c1
 3627 0194 43617053 		.ascii	"CapSense_CalcCentroid\000"
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 101


 3627      656E7365 
 3627      5F43616C 
 3627      6343656E 
 3627      74726F69 
 3628 01aa 85050000 		.4byte	0x585
 3629 01ae 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 3629      656E7365 
 3629      5F476574 
 3629      43656E74 
 3629      726F6964 
 3630 01c6 1C060000 		.4byte	0x61c
 3631 01ca 43617053 		.ascii	"CapSense_MedianFilter\000"
 3631      656E7365 
 3631      5F4D6564 
 3631      69616E46 
 3631      696C7465 
 3632 01e0 74060000 		.4byte	0x674
 3633 01e4 43617053 		.ascii	"CapSense_IIR4Filter\000"
 3633      656E7365 
 3633      5F494952 
 3633      3446696C 
 3633      74657200 
 3634 01f8 EF060000 		.4byte	0x6ef
 3635 01fc 43617053 		.ascii	"CapSense_rawFilterData1\000"
 3635      656E7365 
 3635      5F726177 
 3635      46696C74 
 3635      65724461 
 3636 0214 01070000 		.4byte	0x701
 3637 0218 43617053 		.ascii	"CapSense_rawFilterData2\000"
 3637      656E7365 
 3637      5F726177 
 3637      46696C74 
 3637      65724461 
 3638 0230 5A070000 		.4byte	0x75a
 3639 0234 43617053 		.ascii	"CapSense_SensorBaseline\000"
 3639      656E7365 
 3639      5F53656E 
 3639      736F7242 
 3639      6173656C 
 3640 024c 7C070000 		.4byte	0x77c
 3641 0250 43617053 		.ascii	"CapSense_SensorBaselineLow\000"
 3641      656E7365 
 3641      5F53656E 
 3641      736F7242 
 3641      6173656C 
 3642 026b 8E070000 		.4byte	0x78e
 3643 026f 43617053 		.ascii	"CapSense_SensorSignal\000"
 3643      656E7365 
 3643      5F53656E 
 3643      736F7253 
 3643      69676E61 
 3644 0285 A0070000 		.4byte	0x7a0
 3645 0289 43617053 		.ascii	"CapSense_SensorOnMask\000"
 3645      656E7365 
 3645      5F53656E 
 3645      736F724F 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 102


 3645      6E4D6173 
 3646 029f B2070000 		.4byte	0x7b2
 3647 02a3 43617053 		.ascii	"CapSense_LowBaselineResetCnt\000"
 3647      656E7365 
 3647      5F4C6F77 
 3647      42617365 
 3647      6C696E65 
 3648 02c0 C4070000 		.4byte	0x7c4
 3649 02c4 43617053 		.ascii	"CapSense_fingerThreshold\000"
 3649      656E7365 
 3649      5F66696E 
 3649      67657254 
 3649      68726573 
 3650 02dd D6070000 		.4byte	0x7d6
 3651 02e1 43617053 		.ascii	"CapSense_noiseThreshold\000"
 3651      656E7365 
 3651      5F6E6F69 
 3651      73655468 
 3651      72657368 
 3652 02f9 E8070000 		.4byte	0x7e8
 3653 02fd 43617053 		.ascii	"CapSense_hysteresis\000"
 3653      656E7365 
 3653      5F687973 
 3653      74657265 
 3653      73697300 
 3654 0311 FA070000 		.4byte	0x7fa
 3655 0315 43617053 		.ascii	"CapSense_debounce\000"
 3655      656E7365 
 3655      5F646562 
 3655      6F756E63 
 3655      6500
 3656 0327 0C080000 		.4byte	0x80c
 3657 032b 43617053 		.ascii	"CapSense_debounceCounter\000"
 3657      656E7365 
 3657      5F646562 
 3657      6F756E63 
 3657      65436F75 
 3658 0344 1E080000 		.4byte	0x81e
 3659 0348 43617053 		.ascii	"CapSense_rawDataIndex\000"
 3659      656E7365 
 3659      5F726177 
 3659      44617461 
 3659      496E6465 
 3660 035e 35080000 		.4byte	0x835
 3661 0362 43617053 		.ascii	"CapSense_numberOfSensors\000"
 3661      656E7365 
 3661      5F6E756D 
 3661      6265724F 
 3661      6653656E 
 3662 037b 5C080000 		.4byte	0x85c
 3663 037f 43617053 		.ascii	"CapSense_centroidMult\000"
 3663      656E7365 
 3663      5F63656E 
 3663      74726F69 
 3663      644D756C 
 3664 0395 73080000 		.4byte	0x873
 3665 0399 43617053 		.ascii	"CapSense_posFiltersMask\000"
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 103


 3665      656E7365 
 3665      5F706F73 
 3665      46696C74 
 3665      6572734D 
 3666 03b1 8A080000 		.4byte	0x88a
 3667 03b5 43617053 		.ascii	"CapSense_posFiltersData\000"
 3667      656E7365 
 3667      5F706F73 
 3667      46696C74 
 3667      65727344 
 3668 03cd 00000000 		.4byte	0x0
 3669              		.section	.debug_aranges,"",%progbits
 3670 0000 94000000 		.4byte	0x94
 3671 0004 0200     		.2byte	0x2
 3672 0006 00000000 		.4byte	.Ldebug_info0
 3673 000a 04       		.byte	0x4
 3674 000b 00       		.byte	0x0
 3675 000c 0000     		.2byte	0x0
 3676 000e 0000     		.2byte	0x0
 3677 0010 00000000 		.4byte	.LFB0
 3678 0014 B8000000 		.4byte	.LFE0-.LFB0
 3679 0018 00000000 		.4byte	.LFB1
 3680 001c 2C000000 		.4byte	.LFE1-.LFB1
 3681 0020 00000000 		.4byte	.LFB2
 3682 0024 2C000000 		.4byte	.LFE2-.LFB2
 3683 0028 00000000 		.4byte	.LFB3
 3684 002c 7C000000 		.4byte	.LFE3-.LFB3
 3685 0030 00000000 		.4byte	.LFB4
 3686 0034 1C020000 		.4byte	.LFE4-.LFB4
 3687 0038 00000000 		.4byte	.LFB5
 3688 003c 5C000000 		.4byte	.LFE5-.LFB5
 3689 0040 00000000 		.4byte	.LFB6
 3690 0044 94010000 		.4byte	.LFE6-.LFB6
 3691 0048 00000000 		.4byte	.LFB7
 3692 004c 60000000 		.4byte	.LFE7-.LFB7
 3693 0050 00000000 		.4byte	.LFB8
 3694 0054 42000000 		.4byte	.LFE8-.LFB8
 3695 0058 00000000 		.4byte	.LFB9
 3696 005c 7C000000 		.4byte	.LFE9-.LFB9
 3697 0060 00000000 		.4byte	.LFB10
 3698 0064 86000000 		.4byte	.LFE10-.LFB10
 3699 0068 00000000 		.4byte	.LFB11
 3700 006c 7C000000 		.4byte	.LFE11-.LFB11
 3701 0070 00000000 		.4byte	.LFB12
 3702 0074 D2010000 		.4byte	.LFE12-.LFB12
 3703 0078 00000000 		.4byte	.LFB13
 3704 007c 46010000 		.4byte	.LFE13-.LFB13
 3705 0080 00000000 		.4byte	.LFB14
 3706 0084 4A000000 		.4byte	.LFE14-.LFB14
 3707 0088 00000000 		.4byte	.LFB15
 3708 008c 3A000000 		.4byte	.LFE15-.LFB15
 3709 0090 00000000 		.4byte	0x0
 3710 0094 00000000 		.4byte	0x0
 3711              		.section	.debug_ranges,"",%progbits
 3712              	.Ldebug_ranges0:
 3713 0000 00000000 		.4byte	.Ltext0
 3714 0004 00000000 		.4byte	.Letext0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 104


 3715 0008 00000000 		.4byte	.LFB0
 3716 000c B8000000 		.4byte	.LFE0
 3717 0010 00000000 		.4byte	.LFB1
 3718 0014 2C000000 		.4byte	.LFE1
 3719 0018 00000000 		.4byte	.LFB2
 3720 001c 2C000000 		.4byte	.LFE2
 3721 0020 00000000 		.4byte	.LFB3
 3722 0024 7C000000 		.4byte	.LFE3
 3723 0028 00000000 		.4byte	.LFB4
 3724 002c 1C020000 		.4byte	.LFE4
 3725 0030 00000000 		.4byte	.LFB5
 3726 0034 5C000000 		.4byte	.LFE5
 3727 0038 00000000 		.4byte	.LFB6
 3728 003c 94010000 		.4byte	.LFE6
 3729 0040 00000000 		.4byte	.LFB7
 3730 0044 60000000 		.4byte	.LFE7
 3731 0048 00000000 		.4byte	.LFB8
 3732 004c 42000000 		.4byte	.LFE8
 3733 0050 00000000 		.4byte	.LFB9
 3734 0054 7C000000 		.4byte	.LFE9
 3735 0058 00000000 		.4byte	.LFB10
 3736 005c 86000000 		.4byte	.LFE10
 3737 0060 00000000 		.4byte	.LFB11
 3738 0064 7C000000 		.4byte	.LFE11
 3739 0068 00000000 		.4byte	.LFB12
 3740 006c D2010000 		.4byte	.LFE12
 3741 0070 00000000 		.4byte	.LFB13
 3742 0074 46010000 		.4byte	.LFE13
 3743 0078 00000000 		.4byte	.LFB14
 3744 007c 4A000000 		.4byte	.LFE14
 3745 0080 00000000 		.4byte	.LFB15
 3746 0084 3A000000 		.4byte	.LFE15
 3747 0088 00000000 		.4byte	0x0
 3748 008c 00000000 		.4byte	0x0
 3749              		.section	.debug_str,"MS",%progbits,1
 3750              	.LASF84:
 3751 0000 453A5C50 		.ascii	"E:\\PSoC Creator\\connect4\\connect4.cydsn\000"
 3751      536F4320 
 3751      43726561 
 3751      746F725C 
 3751      636F6E6E 
 3752              	.LASF44:
 3753 0028 636F756E 		.ascii	"count\000"
 3753      7400
 3754              	.LASF10:
 3755 002e 75696E74 		.ascii	"uint16\000"
 3755      313600
 3756              	.LASF26:
 3757 0035 66696C74 		.ascii	"filteredRawData\000"
 3757      65726564 
 3757      52617744 
 3757      61746100 
 3758              	.LASF74:
 3759 0045 43617053 		.ascii	"CapSense_hysteresis\000"
 3759      656E7365 
 3759      5F687973 
 3759      74657265 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 105


 3759      73697300 
 3760              	.LASF31:
 3761 0059 66696E67 		.ascii	"fingerThreshold\000"
 3761      65725468 
 3761      72657368 
 3761      6F6C6400 
 3762              	.LASF50:
 3763 0069 706F7350 		.ascii	"posPrev\000"
 3763      72657600 
 3764              	.LASF59:
 3765 0071 43617053 		.ascii	"CapSense_MedianFilter\000"
 3765      656E7365 
 3765      5F4D6564 
 3765      69616E46 
 3765      696C7465 
 3766              	.LASF7:
 3767 0087 6C6F6E67 		.ascii	"long long unsigned int\000"
 3767      206C6F6E 
 3767      6720756E 
 3767      7369676E 
 3767      65642069 
 3768              	.LASF57:
 3769 009e 66697273 		.ascii	"firstTimeIndex\000"
 3769      7454696D 
 3769      65496E64 
 3769      657800
 3770              	.LASF82:
 3771 00ad 474E5520 		.ascii	"GNU C 4.4.1\000"
 3771      4320342E 
 3771      342E3100 
 3772              	.LASF21:
 3773 00b9 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 3773      656E7365 
 3773      5F496E69 
 3773      7469616C 
 3773      697A6545 
 3774              	.LASF28:
 3775 00dd 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 3775      656E7365 
 3775      5F557064 
 3775      61746545 
 3775      6E61626C 
 3776              	.LASF6:
 3777 00fd 6C6F6E67 		.ascii	"long long int\000"
 3777      206C6F6E 
 3777      6720696E 
 3777      7400
 3778              	.LASF0:
 3779 010b 7369676E 		.ascii	"signed char\000"
 3779      65642063 
 3779      68617200 
 3780              	.LASF70:
 3781 0117 43617053 		.ascii	"CapSense_SensorOnMask\000"
 3781      656E7365 
 3781      5F53656E 
 3781      736F724F 
 3781      6E4D6173 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 106


 3782              	.LASF41:
 3783 012d 43617053 		.ascii	"CapSense_DisableWidget\000"
 3783      656E7365 
 3783      5F446973 
 3783      61626C65 
 3783      57696467 
 3784              	.LASF36:
 3785 0144 72617749 		.ascii	"rawIndex\000"
 3785      6E646578 
 3785      00
 3786              	.LASF37:
 3787 014d 6E756D62 		.ascii	"numberOfSensors\000"
 3787      65724F66 
 3787      53656E73 
 3787      6F727300 
 3788              	.LASF12:
 3789 015d 696E7433 		.ascii	"int32\000"
 3789      3200
 3790              	.LASF38:
 3791 0163 73746174 		.ascii	"state\000"
 3791      6500
 3792              	.LASF4:
 3793 0169 6C6F6E67 		.ascii	"long int\000"
 3793      20696E74 
 3793      00
 3794              	.LASF53:
 3795 0172 6E756D65 		.ascii	"numerator\000"
 3795      7261746F 
 3795      7200
 3796              	.LASF39:
 3797 017c 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 3797      656E7365 
 3797      5F436865 
 3797      636B4973 
 3797      416E7957 
 3798              	.LASF54:
 3799 019c 64656E6F 		.ascii	"denominator\000"
 3799      6D696E61 
 3799      746F7200 
 3800              	.LASF9:
 3801 01a8 75696E74 		.ascii	"uint8\000"
 3801      3800
 3802              	.LASF14:
 3803 01ae 646F7562 		.ascii	"double\000"
 3803      6C6500
 3804              	.LASF66:
 3805 01b5 43617053 		.ascii	"CapSense_widgetNumber\000"
 3805      656E7365 
 3805      5F776964 
 3805      6765744E 
 3805      756D6265 
 3806              	.LASF11:
 3807 01cb 75696E74 		.ascii	"uint32\000"
 3807      333200
 3808              	.LASF32:
 3809 01d2 68797374 		.ascii	"hysteresis\000"
 3809      65726573 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 107


 3809      697300
 3810              	.LASF71:
 3811 01dd 43617053 		.ascii	"CapSense_LowBaselineResetCnt\000"
 3811      656E7365 
 3811      5F4C6F77 
 3811      42617365 
 3811      6C696E65 
 3812              	.LASF51:
 3813 01fa 706F734E 		.ascii	"posNext\000"
 3813      65787400 
 3814              	.LASF47:
 3815 0202 73746172 		.ascii	"startOfSlider\000"
 3815      744F6653 
 3815      6C696465 
 3815      7200
 3816              	.LASF46:
 3817 0210 74656D70 		.ascii	"temp\000"
 3817      00
 3818              	.LASF60:
 3819 0215 43617053 		.ascii	"CapSense_IIR4Filter\000"
 3819      656E7365 
 3819      5F494952 
 3819      3446696C 
 3819      74657200 
 3820              	.LASF8:
 3821 0229 756E7369 		.ascii	"unsigned int\000"
 3821      676E6564 
 3821      20696E74 
 3821      00
 3822              	.LASF52:
 3823 0236 706F7369 		.ascii	"position\000"
 3823      74696F6E 
 3823      00
 3824              	.LASF64:
 3825 023f 43617053 		.ascii	"CapSense_SensorRaw\000"
 3825      656E7365 
 3825      5F53656E 
 3825      736F7252 
 3825      617700
 3826              	.LASF5:
 3827 0252 6C6F6E67 		.ascii	"long unsigned int\000"
 3827      20756E73 
 3827      69676E65 
 3827      6420696E 
 3827      7400
 3828              	.LASF80:
 3829 0264 43617053 		.ascii	"CapSense_posFiltersMask\000"
 3829      656E7365 
 3829      5F706F73 
 3829      46696C74 
 3829      6572734D 
 3830              	.LASF77:
 3831 027c 43617053 		.ascii	"CapSense_rawDataIndex\000"
 3831      656E7365 
 3831      5F726177 
 3831      44617461 
 3831      496E6465 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 108


 3832              	.LASF3:
 3833 0292 73686F72 		.ascii	"short unsigned int\000"
 3833      7420756E 
 3833      7369676E 
 3833      65642069 
 3833      6E7400
 3834              	.LASF18:
 3835 02a5 73656E73 		.ascii	"sensor\000"
 3835      6F7200
 3836              	.LASF42:
 3837 02ac 43617053 		.ascii	"CapSense_FindMaximum\000"
 3837      656E7365 
 3837      5F46696E 
 3837      644D6178 
 3837      696D756D 
 3838              	.LASF23:
 3839 02c1 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 3839      656E7365 
 3839      5F557064 
 3839      61746553 
 3839      656E736F 
 3840              	.LASF83:
 3841 02df 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\CapSense_CSHL.c\000"
 3841      6E657261 
 3841      7465645F 
 3841      536F7572 
 3841      63655C50 
 3842              	.LASF24:
 3843 0308 63616C63 		.ascii	"calc\000"
 3843      00
 3844              	.LASF81:
 3845 030d 43617053 		.ascii	"CapSense_posFiltersData\000"
 3845      656E7365 
 3845      5F706F73 
 3845      46696C74 
 3845      65727344 
 3846              	.LASF56:
 3847 0325 706F7349 		.ascii	"posIndex\000"
 3847      6E646578 
 3847      00
 3848              	.LASF33:
 3849 032e 6465626F 		.ascii	"debounce\000"
 3849      756E6365 
 3849      00
 3850              	.LASF79:
 3851 0337 43617053 		.ascii	"CapSense_centroidMult\000"
 3851      656E7365 
 3851      5F63656E 
 3851      74726F69 
 3851      644D756C 
 3852              	.LASF40:
 3853 034d 43617053 		.ascii	"CapSense_EnableWidget\000"
 3853      656E7365 
 3853      5F456E61 
 3853      626C6557 
 3853      69646765 
 3854              	.LASF58:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 109


 3855 0363 706F7346 		.ascii	"posFiltersMask\000"
 3855      696C7465 
 3855      72734D61 
 3855      736B00
 3856              	.LASF17:
 3857 0372 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 3857      656E7365 
 3857      5F496E69 
 3857      7469616C 
 3857      697A6553 
 3858              	.LASF69:
 3859 0394 43617053 		.ascii	"CapSense_SensorSignal\000"
 3859      656E7365 
 3859      5F53656E 
 3859      736F7253 
 3859      69676E61 
 3860              	.LASF34:
 3861 03aa 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 3861      656E7365 
 3861      5F436865 
 3861      636B4973 
 3861      53656E73 
 3862              	.LASF22:
 3863 03c7 656E4D61 		.ascii	"enMask\000"
 3863      736B00
 3864              	.LASF73:
 3865 03ce 43617053 		.ascii	"CapSense_noiseThreshold\000"
 3865      656E7365 
 3865      5F6E6F69 
 3865      73655468 
 3865      72657368 
 3866              	.LASF72:
 3867 03e6 43617053 		.ascii	"CapSense_fingerThreshold\000"
 3867      656E7365 
 3867      5F66696E 
 3867      67657254 
 3867      68726573 
 3868              	.LASF62:
 3869 03ff 43617053 		.ascii	"CapSense_rawFilterData1\000"
 3869      656E7365 
 3869      5F726177 
 3869      46696C74 
 3869      65724461 
 3870              	.LASF63:
 3871 0417 43617053 		.ascii	"CapSense_rawFilterData2\000"
 3871      656E7365 
 3871      5F726177 
 3871      46696C74 
 3871      65724461 
 3872              	.LASF13:
 3873 042f 666C6F61 		.ascii	"float\000"
 3873      7400
 3874              	.LASF35:
 3875 0435 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 3875      656E7365 
 3875      5F436865 
 3875      636B4973 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 110


 3875      57696467 
 3876              	.LASF1:
 3877 0452 756E7369 		.ascii	"unsigned char\000"
 3877      676E6564 
 3877      20636861 
 3877      7200
 3878              	.LASF19:
 3879 0460 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 3879      656E7365 
 3879      5F496E69 
 3879      7469616C 
 3879      697A6541 
 3880              	.LASF27:
 3881 0480 6E6F6973 		.ascii	"noiseThreshold\000"
 3881      65546872 
 3881      6573686F 
 3881      6C6400
 3882              	.LASF2:
 3883 048f 73686F72 		.ascii	"short int\000"
 3883      7420696E 
 3883      7400
 3884              	.LASF20:
 3885 0499 77696467 		.ascii	"widget\000"
 3885      657400
 3886              	.LASF30:
 3887 04a0 6F6E4D61 		.ascii	"onMask\000"
 3887      736B00
 3888              	.LASF45:
 3889 04a7 6D617869 		.ascii	"maximum\000"
 3889      6D756D00 
 3890              	.LASF16:
 3891 04af 43617053 		.ascii	"CapSense_BaseInit\000"
 3891      656E7365 
 3891      5F426173 
 3891      65496E69 
 3891      7400
 3892              	.LASF49:
 3893 04c1 7265736F 		.ascii	"resolution\000"
 3893      6C757469 
 3893      6F6E00
 3894              	.LASF75:
 3895 04cc 43617053 		.ascii	"CapSense_debounce\000"
 3895      656E7365 
 3895      5F646562 
 3895      6F756E63 
 3895      6500
 3896              	.LASF55:
 3897 04de 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 3897      656E7365 
 3897      5F476574 
 3897      43656E74 
 3897      726F6964 
 3898              	.LASF15:
 3899 04f6 63686172 		.ascii	"char\000"
 3899      00
 3900              	.LASF67:
 3901 04fb 43617053 		.ascii	"CapSense_SensorBaseline\000"
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccChaW5R.s 			page 111


 3901      656E7365 
 3901      5F53656E 
 3901      736F7242 
 3901      6173656C 
 3902              	.LASF61:
 3903 0513 43617053 		.ascii	"CapSense_centroid\000"
 3903      656E7365 
 3903      5F63656E 
 3903      74726F69 
 3903      6400
 3904              	.LASF65:
 3905 0525 43617053 		.ascii	"CapSense_SensorEnableMask\000"
 3905      656E7365 
 3905      5F53656E 
 3905      736F7245 
 3905      6E61626C 
 3906              	.LASF43:
 3907 053f 6F666673 		.ascii	"offset\000"
 3907      657400
 3908              	.LASF29:
 3909 0546 6465626F 		.ascii	"debounceIndex\000"
 3909      756E6365 
 3909      496E6465 
 3909      7800
 3910              	.LASF68:
 3911 0554 43617053 		.ascii	"CapSense_SensorBaselineLow\000"
 3911      656E7365 
 3911      5F53656E 
 3911      736F7242 
 3911      6173656C 
 3912              	.LASF48:
 3913 056f 43617053 		.ascii	"CapSense_CalcCentroid\000"
 3913      656E7365 
 3913      5F43616C 
 3913      6343656E 
 3913      74726F69 
 3914              	.LASF76:
 3915 0585 43617053 		.ascii	"CapSense_debounceCounter\000"
 3915      656E7365 
 3915      5F646562 
 3915      6F756E63 
 3915      65436F75 
 3916              	.LASF25:
 3917 059e 74656D70 		.ascii	"tempRaw\000"
 3917      52617700 
 3918              	.LASF78:
 3919 05a6 43617053 		.ascii	"CapSense_numberOfSensors\000"
 3919      656E7365 
 3919      5F6E756D 
 3919      6265724F 
 3919      6653656E 
 3920              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"

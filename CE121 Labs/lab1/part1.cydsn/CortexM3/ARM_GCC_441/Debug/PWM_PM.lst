ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccnfK81j.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"PWM_PM.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 BE000000 		.text
  20      02006800 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.bss
  24              		.align	2
  25              	PWM_backup:
  26 0000 00       		.space	1
  27 0001 000000   		.section	.text.PWM_SaveConfig,"ax",%progbits
  28              		.align	2
  29              		.global	PWM_SaveConfig
  30              		.thumb
  31              		.thumb_func
  32              		.type	PWM_SaveConfig, %function
  33              	PWM_SaveConfig:
  34              	.LFB0:
  35              		.file 1 ".\\Generated_Source\\PSoC5\\PWM_PM.c"
   1:.\Generated_Source\PSoC5/PWM_PM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/PWM_PM.c **** * File Name: PWM_PM.c
   3:.\Generated_Source\PSoC5/PWM_PM.c **** * Version 2.40
   4:.\Generated_Source\PSoC5/PWM_PM.c **** *
   5:.\Generated_Source\PSoC5/PWM_PM.c **** * Description:
   6:.\Generated_Source\PSoC5/PWM_PM.c **** *  This file provides the power management source code to API for the
   7:.\Generated_Source\PSoC5/PWM_PM.c **** *  PWM.
   8:.\Generated_Source\PSoC5/PWM_PM.c **** *
   9:.\Generated_Source\PSoC5/PWM_PM.c **** * Note:
  10:.\Generated_Source\PSoC5/PWM_PM.c **** *
  11:.\Generated_Source\PSoC5/PWM_PM.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/PWM_PM.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/PWM_PM.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/PWM_PM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/PWM_PM.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/PWM_PM.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/PWM_PM.c **** #include "cytypes.h"
  18:.\Generated_Source\PSoC5/PWM_PM.c **** #include "PWM.h"
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccnfK81j.s 			page 2


  19:.\Generated_Source\PSoC5/PWM_PM.c **** 
  20:.\Generated_Source\PSoC5/PWM_PM.c **** static PWM_backupStruct PWM_backup;
  21:.\Generated_Source\PSoC5/PWM_PM.c **** 
  22:.\Generated_Source\PSoC5/PWM_PM.c **** 
  23:.\Generated_Source\PSoC5/PWM_PM.c **** /*******************************************************************************
  24:.\Generated_Source\PSoC5/PWM_PM.c **** * Function Name: PWM_SaveConfig
  25:.\Generated_Source\PSoC5/PWM_PM.c **** ********************************************************************************
  26:.\Generated_Source\PSoC5/PWM_PM.c **** *
  27:.\Generated_Source\PSoC5/PWM_PM.c **** * Summary:
  28:.\Generated_Source\PSoC5/PWM_PM.c **** *  Saves the current user configuration of the component.
  29:.\Generated_Source\PSoC5/PWM_PM.c **** *  
  30:.\Generated_Source\PSoC5/PWM_PM.c **** * Parameters:  
  31:.\Generated_Source\PSoC5/PWM_PM.c **** *  None
  32:.\Generated_Source\PSoC5/PWM_PM.c **** *
  33:.\Generated_Source\PSoC5/PWM_PM.c **** * Return: 
  34:.\Generated_Source\PSoC5/PWM_PM.c **** *  None
  35:.\Generated_Source\PSoC5/PWM_PM.c **** *
  36:.\Generated_Source\PSoC5/PWM_PM.c **** * Global variables:
  37:.\Generated_Source\PSoC5/PWM_PM.c **** *  PWM_backup:  Variables of this global structure are modified to 
  38:.\Generated_Source\PSoC5/PWM_PM.c **** *  store the values of non retention configuration registers when Sleep() API is 
  39:.\Generated_Source\PSoC5/PWM_PM.c **** *  called.
  40:.\Generated_Source\PSoC5/PWM_PM.c **** *
  41:.\Generated_Source\PSoC5/PWM_PM.c **** *******************************************************************************/
  42:.\Generated_Source\PSoC5/PWM_PM.c **** void PWM_SaveConfig(void) 
  43:.\Generated_Source\PSoC5/PWM_PM.c **** {
  36              		.loc 1 43 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40              		@ link register save eliminated.
  41 0000 80B4     		push	{r7}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 4
  44 0002 00AF     		add	r7, sp, #0
  45              		.cfi_offset 7, -4
  46              	.LCFI1:
  47              		.cfi_def_cfa_register 7
  44:.\Generated_Source\PSoC5/PWM_PM.c ****     
  45:.\Generated_Source\PSoC5/PWM_PM.c ****     #if(!PWM_UsingFixedFunction)
  46:.\Generated_Source\PSoC5/PWM_PM.c ****         #if (CY_UDB_V0)
  47:.\Generated_Source\PSoC5/PWM_PM.c ****             PWM_backup.PWMUdb = PWM_ReadCounter();
  48:.\Generated_Source\PSoC5/PWM_PM.c ****             PWM_backup.PWMPeriod = PWM_ReadPeriod();
  49:.\Generated_Source\PSoC5/PWM_PM.c ****             #if (PWM_UseStatus)
  50:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_backup.InterruptMaskValue = PWM_STATUS_MASK;
  51:.\Generated_Source\PSoC5/PWM_PM.c ****             #endif /* (PWM_UseStatus) */
  52:.\Generated_Source\PSoC5/PWM_PM.c ****             
  53:.\Generated_Source\PSoC5/PWM_PM.c ****             #if(PWM_UseOneCompareMode)
  54:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_backup.PWMCompareValue = PWM_ReadCompare();
  55:.\Generated_Source\PSoC5/PWM_PM.c ****             #else
  56:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_backup.PWMCompareValue1 = PWM_ReadCompare1();
  57:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_backup.PWMCompareValue2 = PWM_ReadCompare2();
  58:.\Generated_Source\PSoC5/PWM_PM.c ****             #endif /* (PWM_UseOneCompareMode) */
  59:.\Generated_Source\PSoC5/PWM_PM.c ****             
  60:.\Generated_Source\PSoC5/PWM_PM.c ****            #if(PWM_DeadBandUsed)
  61:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_backup.PWMdeadBandValue = PWM_ReadDeadTime();
  62:.\Generated_Source\PSoC5/PWM_PM.c ****             #endif /* (PWM_DeadBandUsed) */
  63:.\Generated_Source\PSoC5/PWM_PM.c ****           
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccnfK81j.s 			page 3


  64:.\Generated_Source\PSoC5/PWM_PM.c ****             #if ( PWM_KillModeMinTime)
  65:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_backup.PWMKillCounterPeriod = PWM_ReadKillTime();
  66:.\Generated_Source\PSoC5/PWM_PM.c ****             #endif /* ( PWM_KillModeMinTime) */
  67:.\Generated_Source\PSoC5/PWM_PM.c ****         #endif /* (CY_UDB_V0) */
  68:.\Generated_Source\PSoC5/PWM_PM.c ****         
  69:.\Generated_Source\PSoC5/PWM_PM.c ****         #if (CY_UDB_V1)
  70:.\Generated_Source\PSoC5/PWM_PM.c ****             #if(!PWM_PWMModeIsCenterAligned)
  71:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_backup.PWMPeriod = PWM_ReadPeriod();
  72:.\Generated_Source\PSoC5/PWM_PM.c ****             #endif /* (!PWM_PWMModeIsCenterAligned) */
  73:.\Generated_Source\PSoC5/PWM_PM.c ****             PWM_backup.PWMUdb = PWM_ReadCounter();
  74:.\Generated_Source\PSoC5/PWM_PM.c ****             #if (PWM_UseStatus)
  75:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_backup.InterruptMaskValue = PWM_STATUS_MASK;
  76:.\Generated_Source\PSoC5/PWM_PM.c ****             #endif /* (PWM_UseStatus) */
  77:.\Generated_Source\PSoC5/PWM_PM.c ****             
  78:.\Generated_Source\PSoC5/PWM_PM.c ****             #if(PWM_DeadBandMode == PWM__B_PWM__DBM_256_CLOCKS || \
  79:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_DeadBandMode == PWM__B_PWM__DBM_2_4_CLOCKS)
  80:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_backup.PWMdeadBandValue = PWM_ReadDeadTime();
  81:.\Generated_Source\PSoC5/PWM_PM.c ****             #endif /*  deadband count is either 2-4 clocks or 256 clocks */
  82:.\Generated_Source\PSoC5/PWM_PM.c ****             
  83:.\Generated_Source\PSoC5/PWM_PM.c ****             #if(PWM_KillModeMinTime)
  84:.\Generated_Source\PSoC5/PWM_PM.c ****                  PWM_backup.PWMKillCounterPeriod = PWM_ReadKillTime();
  85:.\Generated_Source\PSoC5/PWM_PM.c ****             #endif /* (PWM_KillModeMinTime) */
  86:.\Generated_Source\PSoC5/PWM_PM.c ****         #endif /* (CY_UDB_V1) */
  87:.\Generated_Source\PSoC5/PWM_PM.c ****         
  88:.\Generated_Source\PSoC5/PWM_PM.c ****         #if(PWM_UseControl)
  89:.\Generated_Source\PSoC5/PWM_PM.c ****             PWM_backup.PWMControlRegister = PWM_ReadControlRegister();
  90:.\Generated_Source\PSoC5/PWM_PM.c ****         #endif /* (PWM_UseControl) */
  91:.\Generated_Source\PSoC5/PWM_PM.c ****     #endif  /* (!PWM_UsingFixedFunction) */
  92:.\Generated_Source\PSoC5/PWM_PM.c **** }
  48              		.loc 1 92 0
  49 0004 BD46     		mov	sp, r7
  50 0006 80BC     		pop	{r7}
  51 0008 7047     		bx	lr
  52              		.cfi_endproc
  53              	.LFE0:
  54              		.size	PWM_SaveConfig, .-PWM_SaveConfig
  55 000a 00BF     		.section	.text.PWM_RestoreConfig,"ax",%progbits
  56              		.align	2
  57              		.global	PWM_RestoreConfig
  58              		.thumb
  59              		.thumb_func
  60              		.type	PWM_RestoreConfig, %function
  61              	PWM_RestoreConfig:
  62              	.LFB1:
  93:.\Generated_Source\PSoC5/PWM_PM.c **** 
  94:.\Generated_Source\PSoC5/PWM_PM.c **** 
  95:.\Generated_Source\PSoC5/PWM_PM.c **** /*******************************************************************************
  96:.\Generated_Source\PSoC5/PWM_PM.c **** * Function Name: PWM_RestoreConfig
  97:.\Generated_Source\PSoC5/PWM_PM.c **** ********************************************************************************
  98:.\Generated_Source\PSoC5/PWM_PM.c **** * 
  99:.\Generated_Source\PSoC5/PWM_PM.c **** * Summary:
 100:.\Generated_Source\PSoC5/PWM_PM.c **** *  Restores the current user configuration of the component.
 101:.\Generated_Source\PSoC5/PWM_PM.c **** *
 102:.\Generated_Source\PSoC5/PWM_PM.c **** * Parameters:  
 103:.\Generated_Source\PSoC5/PWM_PM.c **** *  None
 104:.\Generated_Source\PSoC5/PWM_PM.c **** *
 105:.\Generated_Source\PSoC5/PWM_PM.c **** * Return: 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccnfK81j.s 			page 4


 106:.\Generated_Source\PSoC5/PWM_PM.c **** *  None
 107:.\Generated_Source\PSoC5/PWM_PM.c **** *
 108:.\Generated_Source\PSoC5/PWM_PM.c **** * Global variables:
 109:.\Generated_Source\PSoC5/PWM_PM.c **** *  PWM_backup:  Variables of this global structure are used to  
 110:.\Generated_Source\PSoC5/PWM_PM.c **** *  restore the values of non retention registers on wakeup from sleep mode.
 111:.\Generated_Source\PSoC5/PWM_PM.c **** *
 112:.\Generated_Source\PSoC5/PWM_PM.c **** *******************************************************************************/
 113:.\Generated_Source\PSoC5/PWM_PM.c **** void PWM_RestoreConfig(void) 
 114:.\Generated_Source\PSoC5/PWM_PM.c **** {
  63              		.loc 1 114 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 1, uses_anonymous_args = 0
  67              		@ link register save eliminated.
  68 0000 80B4     		push	{r7}
  69              	.LCFI2:
  70              		.cfi_def_cfa_offset 4
  71 0002 00AF     		add	r7, sp, #0
  72              		.cfi_offset 7, -4
  73              	.LCFI3:
  74              		.cfi_def_cfa_register 7
 115:.\Generated_Source\PSoC5/PWM_PM.c ****         #if(!PWM_UsingFixedFunction)
 116:.\Generated_Source\PSoC5/PWM_PM.c ****             #if (CY_UDB_V0)
 117:.\Generated_Source\PSoC5/PWM_PM.c ****                 /* Interrupt State Backup for Critical Region*/
 118:.\Generated_Source\PSoC5/PWM_PM.c ****                 uint8 PWM_interruptState;
 119:.\Generated_Source\PSoC5/PWM_PM.c ****                 /* Enter Critical Region*/
 120:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_interruptState = CyEnterCriticalSection();
 121:.\Generated_Source\PSoC5/PWM_PM.c ****                 #if (PWM_UseStatus)
 122:.\Generated_Source\PSoC5/PWM_PM.c ****                     /* Use the interrupt output of the status register for IRQ output */
 123:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_STATUS_AUX_CTRL |= PWM_STATUS_ACTL_INT_EN_MASK;
 124:.\Generated_Source\PSoC5/PWM_PM.c ****                     
 125:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_STATUS_MASK = PWM_backup.InterruptMaskValue;
 126:.\Generated_Source\PSoC5/PWM_PM.c ****                 #endif /* (PWM_UseStatus) */
 127:.\Generated_Source\PSoC5/PWM_PM.c ****                 
 128:.\Generated_Source\PSoC5/PWM_PM.c ****                 #if (PWM_Resolution == 8)
 129:.\Generated_Source\PSoC5/PWM_PM.c ****                     /* Set FIFO 0 to 1 byte register for period*/
 130:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_AUX_CONTROLDP0 |= (PWM_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC5/PWM_PM.c ****                 #else /* (PWM_Resolution == 16)*/
 132:.\Generated_Source\PSoC5/PWM_PM.c ****                     /* Set FIFO 0 to 1 byte register for period */
 133:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_AUX_CONTROLDP0 |= (PWM_AUX_CTRL_FIFO0_CLR);
 134:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_AUX_CONTROLDP1 |= (PWM_AUX_CTRL_FIFO0_CLR);
 135:.\Generated_Source\PSoC5/PWM_PM.c ****                 #endif /* (PWM_Resolution == 8) */
 136:.\Generated_Source\PSoC5/PWM_PM.c ****                 /* Exit Critical Region*/
 137:.\Generated_Source\PSoC5/PWM_PM.c ****                 CyExitCriticalSection(PWM_interruptState);
 138:.\Generated_Source\PSoC5/PWM_PM.c ****                 
 139:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_WriteCounter(PWM_backup.PWMUdb);
 140:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_WritePeriod(PWM_backup.PWMPeriod);
 141:.\Generated_Source\PSoC5/PWM_PM.c ****                 
 142:.\Generated_Source\PSoC5/PWM_PM.c ****                 #if(PWM_UseOneCompareMode)
 143:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_WriteCompare(PWM_backup.PWMCompareValue);
 144:.\Generated_Source\PSoC5/PWM_PM.c ****                 #else
 145:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_WriteCompare1(PWM_backup.PWMCompareValue1);
 146:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_WriteCompare2(PWM_backup.PWMCompareValue2);
 147:.\Generated_Source\PSoC5/PWM_PM.c ****                 #endif /* (PWM_UseOneCompareMode) */
 148:.\Generated_Source\PSoC5/PWM_PM.c ****                 
 149:.\Generated_Source\PSoC5/PWM_PM.c ****                #if(PWM_DeadBandMode == PWM__B_PWM__DBM_256_CLOCKS || \
 150:.\Generated_Source\PSoC5/PWM_PM.c ****                    PWM_DeadBandMode == PWM__B_PWM__DBM_2_4_CLOCKS)
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccnfK81j.s 			page 5


 151:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_WriteDeadTime(PWM_backup.PWMdeadBandValue);
 152:.\Generated_Source\PSoC5/PWM_PM.c ****                 #endif /* deadband count is either 2-4 clocks or 256 clocks */
 153:.\Generated_Source\PSoC5/PWM_PM.c ****             
 154:.\Generated_Source\PSoC5/PWM_PM.c ****                 #if ( PWM_KillModeMinTime)
 155:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_WriteKillTime(PWM_backup.PWMKillCounterPeriod);
 156:.\Generated_Source\PSoC5/PWM_PM.c ****                 #endif /* ( PWM_KillModeMinTime) */
 157:.\Generated_Source\PSoC5/PWM_PM.c ****             #endif /* (CY_UDB_V0) */
 158:.\Generated_Source\PSoC5/PWM_PM.c ****             
 159:.\Generated_Source\PSoC5/PWM_PM.c ****             #if (CY_UDB_V1)
 160:.\Generated_Source\PSoC5/PWM_PM.c ****                 #if(!PWM_PWMModeIsCenterAligned)
 161:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_WritePeriod(PWM_backup.PWMPeriod);
 162:.\Generated_Source\PSoC5/PWM_PM.c ****                 #endif /* (!PWM_PWMModeIsCenterAligned) */
 163:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_WriteCounter(PWM_backup.PWMUdb);
 164:.\Generated_Source\PSoC5/PWM_PM.c ****                 #if (PWM_UseStatus)
 165:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_STATUS_MASK = PWM_backup.InterruptMaskValue;
 166:.\Generated_Source\PSoC5/PWM_PM.c ****                 #endif /* (PWM_UseStatus) */
 167:.\Generated_Source\PSoC5/PWM_PM.c ****                 
 168:.\Generated_Source\PSoC5/PWM_PM.c ****                 #if(PWM_DeadBandMode == PWM__B_PWM__DBM_256_CLOCKS || \
 169:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_DeadBandMode == PWM__B_PWM__DBM_2_4_CLOCKS)
 170:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_WriteDeadTime(PWM_backup.PWMdeadBandValue);
 171:.\Generated_Source\PSoC5/PWM_PM.c ****                 #endif /* deadband count is either 2-4 clocks or 256 clocks */
 172:.\Generated_Source\PSoC5/PWM_PM.c ****                 
 173:.\Generated_Source\PSoC5/PWM_PM.c ****                 #if(PWM_KillModeMinTime)
 174:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_WriteKillTime(PWM_backup.PWMKillCounterPeriod);
 175:.\Generated_Source\PSoC5/PWM_PM.c ****                 #endif /* (PWM_KillModeMinTime) */
 176:.\Generated_Source\PSoC5/PWM_PM.c ****             #endif /* (CY_UDB_V1) */
 177:.\Generated_Source\PSoC5/PWM_PM.c ****             
 178:.\Generated_Source\PSoC5/PWM_PM.c ****             #if(PWM_UseControl)
 179:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_WriteControlRegister(PWM_backup.PWMControlRegister); 
 180:.\Generated_Source\PSoC5/PWM_PM.c ****             #endif /* (PWM_UseControl) */
 181:.\Generated_Source\PSoC5/PWM_PM.c ****         #endif  /* (!PWM_UsingFixedFunction) */
 182:.\Generated_Source\PSoC5/PWM_PM.c ****     }
  75              		.loc 1 182 0
  76 0004 BD46     		mov	sp, r7
  77 0006 80BC     		pop	{r7}
  78 0008 7047     		bx	lr
  79              		.cfi_endproc
  80              	.LFE1:
  81              		.size	PWM_RestoreConfig, .-PWM_RestoreConfig
  82 000a 00BF     		.section	.text.PWM_Sleep,"ax",%progbits
  83              		.align	2
  84              		.global	PWM_Sleep
  85              		.thumb
  86              		.thumb_func
  87              		.type	PWM_Sleep, %function
  88              	PWM_Sleep:
  89              	.LFB2:
 183:.\Generated_Source\PSoC5/PWM_PM.c **** 
 184:.\Generated_Source\PSoC5/PWM_PM.c **** 
 185:.\Generated_Source\PSoC5/PWM_PM.c **** /*******************************************************************************
 186:.\Generated_Source\PSoC5/PWM_PM.c **** * Function Name: PWM_Sleep
 187:.\Generated_Source\PSoC5/PWM_PM.c **** ********************************************************************************
 188:.\Generated_Source\PSoC5/PWM_PM.c **** * 
 189:.\Generated_Source\PSoC5/PWM_PM.c **** * Summary:
 190:.\Generated_Source\PSoC5/PWM_PM.c **** *  Disables block's operation and saves the user configuration. Should be called 
 191:.\Generated_Source\PSoC5/PWM_PM.c **** *  just prior to entering sleep.
 192:.\Generated_Source\PSoC5/PWM_PM.c **** *  
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccnfK81j.s 			page 6


 193:.\Generated_Source\PSoC5/PWM_PM.c **** * Parameters:  
 194:.\Generated_Source\PSoC5/PWM_PM.c **** *  None
 195:.\Generated_Source\PSoC5/PWM_PM.c **** *
 196:.\Generated_Source\PSoC5/PWM_PM.c **** * Return: 
 197:.\Generated_Source\PSoC5/PWM_PM.c **** *  None
 198:.\Generated_Source\PSoC5/PWM_PM.c **** *
 199:.\Generated_Source\PSoC5/PWM_PM.c **** * Global variables:
 200:.\Generated_Source\PSoC5/PWM_PM.c **** *  PWM_backup.PWMEnableState:  Is modified depending on the enable 
 201:.\Generated_Source\PSoC5/PWM_PM.c **** *  state of the block before entering sleep mode.
 202:.\Generated_Source\PSoC5/PWM_PM.c **** *
 203:.\Generated_Source\PSoC5/PWM_PM.c **** *******************************************************************************/
 204:.\Generated_Source\PSoC5/PWM_PM.c **** void PWM_Sleep(void) 
 205:.\Generated_Source\PSoC5/PWM_PM.c **** {
  90              		.loc 1 205 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 1, uses_anonymous_args = 0
  94 0000 80B5     		push	{r7, lr}
  95              	.LCFI4:
  96              		.cfi_def_cfa_offset 8
  97 0002 00AF     		add	r7, sp, #0
  98              		.cfi_offset 14, -4
  99              		.cfi_offset 7, -8
 100              	.LCFI5:
 101              		.cfi_def_cfa_register 7
 206:.\Generated_Source\PSoC5/PWM_PM.c ****     #if(PWM_UseControl)
 207:.\Generated_Source\PSoC5/PWM_PM.c ****         if(PWM_CTRL_ENABLE == (PWM_CONTROL & PWM_CTRL_ENABLE))
 102              		.loc 1 207 0
 103 0004 44F60073 		movw	r3, #:lower16:1073762048
 104 0008 C4F20003 		movt	r3, #:upper16:1073762048
 105 000c 1B78     		ldrb	r3, [r3, #0]
 106 000e DBB2     		uxtb	r3, r3
 107 0010 03F00103 		and	r3, r3, #1
 108 0014 DBB2     		uxtb	r3, r3
 109 0016 002B     		cmp	r3, #0
 110 0018 07D0     		beq	.L6
 208:.\Generated_Source\PSoC5/PWM_PM.c ****         {
 209:.\Generated_Source\PSoC5/PWM_PM.c ****             /*Component is enabled */
 210:.\Generated_Source\PSoC5/PWM_PM.c ****             PWM_backup.PWMEnableState = 1u;
 111              		.loc 1 210 0
 112 001a 40F20003 		movw	r3, #:lower16:PWM_backup
 113 001e C0F20003 		movt	r3, #:upper16:PWM_backup
 114 0022 4FF00102 		mov	r2, #1
 115 0026 1A70     		strb	r2, [r3, #0]
 116 0028 06E0     		b	.L7
 117              	.L6:
 211:.\Generated_Source\PSoC5/PWM_PM.c ****         }
 212:.\Generated_Source\PSoC5/PWM_PM.c ****         else
 213:.\Generated_Source\PSoC5/PWM_PM.c ****         {
 214:.\Generated_Source\PSoC5/PWM_PM.c ****             /* Component is disabled */
 215:.\Generated_Source\PSoC5/PWM_PM.c ****             PWM_backup.PWMEnableState = 0u;
 118              		.loc 1 215 0
 119 002a 40F20003 		movw	r3, #:lower16:PWM_backup
 120 002e C0F20003 		movt	r3, #:upper16:PWM_backup
 121 0032 4FF00002 		mov	r2, #0
 122 0036 1A70     		strb	r2, [r3, #0]
 123              	.L7:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccnfK81j.s 			page 7


 216:.\Generated_Source\PSoC5/PWM_PM.c ****         }
 217:.\Generated_Source\PSoC5/PWM_PM.c ****     #endif /* (PWM_UseControl) */
 218:.\Generated_Source\PSoC5/PWM_PM.c **** 
 219:.\Generated_Source\PSoC5/PWM_PM.c ****     /* Stop component */
 220:.\Generated_Source\PSoC5/PWM_PM.c ****     PWM_Stop();
 124              		.loc 1 220 0
 125 0038 FFF7FEFF 		bl	PWM_Stop
 221:.\Generated_Source\PSoC5/PWM_PM.c ****     
 222:.\Generated_Source\PSoC5/PWM_PM.c ****     /* Save registers configuration */
 223:.\Generated_Source\PSoC5/PWM_PM.c ****     PWM_SaveConfig();
 126              		.loc 1 223 0
 127 003c FFF7FEFF 		bl	PWM_SaveConfig
 224:.\Generated_Source\PSoC5/PWM_PM.c **** }
 128              		.loc 1 224 0
 129 0040 80BD     		pop	{r7, pc}
 130              		.cfi_endproc
 131              	.LFE2:
 132              		.size	PWM_Sleep, .-PWM_Sleep
 133 0042 00BF     		.section	.text.PWM_Wakeup,"ax",%progbits
 134              		.align	2
 135              		.global	PWM_Wakeup
 136              		.thumb
 137              		.thumb_func
 138              		.type	PWM_Wakeup, %function
 139              	PWM_Wakeup:
 140              	.LFB3:
 225:.\Generated_Source\PSoC5/PWM_PM.c **** 
 226:.\Generated_Source\PSoC5/PWM_PM.c **** 
 227:.\Generated_Source\PSoC5/PWM_PM.c **** /*******************************************************************************
 228:.\Generated_Source\PSoC5/PWM_PM.c **** * Function Name: PWM_Wakeup
 229:.\Generated_Source\PSoC5/PWM_PM.c **** ********************************************************************************
 230:.\Generated_Source\PSoC5/PWM_PM.c **** * 
 231:.\Generated_Source\PSoC5/PWM_PM.c **** * Summary:
 232:.\Generated_Source\PSoC5/PWM_PM.c **** *  Restores and enables the user configuration. Should be called just after 
 233:.\Generated_Source\PSoC5/PWM_PM.c **** *  awaking from sleep.
 234:.\Generated_Source\PSoC5/PWM_PM.c **** *  
 235:.\Generated_Source\PSoC5/PWM_PM.c **** * Parameters:  
 236:.\Generated_Source\PSoC5/PWM_PM.c **** *  None
 237:.\Generated_Source\PSoC5/PWM_PM.c **** *
 238:.\Generated_Source\PSoC5/PWM_PM.c **** * Return: 
 239:.\Generated_Source\PSoC5/PWM_PM.c **** *  None
 240:.\Generated_Source\PSoC5/PWM_PM.c **** *
 241:.\Generated_Source\PSoC5/PWM_PM.c **** * Global variables:
 242:.\Generated_Source\PSoC5/PWM_PM.c **** *  PWM_backup.pwmEnable:  Is used to restore the enable state of 
 243:.\Generated_Source\PSoC5/PWM_PM.c **** *  block on wakeup from sleep mode.
 244:.\Generated_Source\PSoC5/PWM_PM.c **** *
 245:.\Generated_Source\PSoC5/PWM_PM.c **** *******************************************************************************/
 246:.\Generated_Source\PSoC5/PWM_PM.c **** void PWM_Wakeup(void) 
 247:.\Generated_Source\PSoC5/PWM_PM.c **** {
 141              		.loc 1 247 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 1, uses_anonymous_args = 0
 145 0000 80B5     		push	{r7, lr}
 146              	.LCFI6:
 147              		.cfi_def_cfa_offset 8
 148 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccnfK81j.s 			page 8


 149              		.cfi_offset 14, -4
 150              		.cfi_offset 7, -8
 151              	.LCFI7:
 152              		.cfi_def_cfa_register 7
 248:.\Generated_Source\PSoC5/PWM_PM.c ****      /* Restore registers values */
 249:.\Generated_Source\PSoC5/PWM_PM.c ****     PWM_RestoreConfig();
 153              		.loc 1 249 0
 154 0004 FFF7FEFF 		bl	PWM_RestoreConfig
 250:.\Generated_Source\PSoC5/PWM_PM.c ****     
 251:.\Generated_Source\PSoC5/PWM_PM.c ****     if(PWM_backup.PWMEnableState != 0u)
 155              		.loc 1 251 0
 156 0008 40F20003 		movw	r3, #:lower16:PWM_backup
 157 000c C0F20003 		movt	r3, #:upper16:PWM_backup
 158 0010 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 159 0012 002B     		cmp	r3, #0
 160 0014 01D0     		beq	.L11
 252:.\Generated_Source\PSoC5/PWM_PM.c ****     {
 253:.\Generated_Source\PSoC5/PWM_PM.c ****         /* Enable component's operation */
 254:.\Generated_Source\PSoC5/PWM_PM.c ****         PWM_Enable();
 161              		.loc 1 254 0
 162 0016 FFF7FEFF 		bl	PWM_Enable
 163              	.L11:
 255:.\Generated_Source\PSoC5/PWM_PM.c ****     } /* Do nothing if component's block was disabled before */
 256:.\Generated_Source\PSoC5/PWM_PM.c ****     
 257:.\Generated_Source\PSoC5/PWM_PM.c **** }
 164              		.loc 1 257 0
 165 001a 80BD     		pop	{r7, pc}
 166              		.cfi_endproc
 167              	.LFE3:
 168              		.size	PWM_Wakeup, .-PWM_Wakeup
 169              		.text
 170              	.Letext0:
 171              		.section	.debug_loc,"",%progbits
 172              	.Ldebug_loc0:
 173              	.LLST0:
 174 0000 00000000 		.4byte	.LFB0
 175 0004 02000000 		.4byte	.LCFI0
 176 0008 0100     		.2byte	0x1
 177 000a 5D       		.byte	0x5d
 178 000b 02000000 		.4byte	.LCFI0
 179 000f 04000000 		.4byte	.LCFI1
 180 0013 0200     		.2byte	0x2
 181 0015 7D       		.byte	0x7d
 182 0016 04       		.sleb128 4
 183 0017 04000000 		.4byte	.LCFI1
 184 001b 0A000000 		.4byte	.LFE0
 185 001f 0200     		.2byte	0x2
 186 0021 77       		.byte	0x77
 187 0022 04       		.sleb128 4
 188 0023 00000000 		.4byte	0x0
 189 0027 00000000 		.4byte	0x0
 190              	.LLST1:
 191 002b 00000000 		.4byte	.LFB1
 192 002f 02000000 		.4byte	.LCFI2
 193 0033 0100     		.2byte	0x1
 194 0035 5D       		.byte	0x5d
 195 0036 02000000 		.4byte	.LCFI2
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccnfK81j.s 			page 9


 196 003a 04000000 		.4byte	.LCFI3
 197 003e 0200     		.2byte	0x2
 198 0040 7D       		.byte	0x7d
 199 0041 04       		.sleb128 4
 200 0042 04000000 		.4byte	.LCFI3
 201 0046 0A000000 		.4byte	.LFE1
 202 004a 0200     		.2byte	0x2
 203 004c 77       		.byte	0x77
 204 004d 04       		.sleb128 4
 205 004e 00000000 		.4byte	0x0
 206 0052 00000000 		.4byte	0x0
 207              	.LLST2:
 208 0056 00000000 		.4byte	.LFB2
 209 005a 02000000 		.4byte	.LCFI4
 210 005e 0100     		.2byte	0x1
 211 0060 5D       		.byte	0x5d
 212 0061 02000000 		.4byte	.LCFI4
 213 0065 04000000 		.4byte	.LCFI5
 214 0069 0200     		.2byte	0x2
 215 006b 7D       		.byte	0x7d
 216 006c 08       		.sleb128 8
 217 006d 04000000 		.4byte	.LCFI5
 218 0071 42000000 		.4byte	.LFE2
 219 0075 0200     		.2byte	0x2
 220 0077 77       		.byte	0x77
 221 0078 08       		.sleb128 8
 222 0079 00000000 		.4byte	0x0
 223 007d 00000000 		.4byte	0x0
 224              	.LLST3:
 225 0081 00000000 		.4byte	.LFB3
 226 0085 02000000 		.4byte	.LCFI6
 227 0089 0100     		.2byte	0x1
 228 008b 5D       		.byte	0x5d
 229 008c 02000000 		.4byte	.LCFI6
 230 0090 04000000 		.4byte	.LCFI7
 231 0094 0200     		.2byte	0x2
 232 0096 7D       		.byte	0x7d
 233 0097 08       		.sleb128 8
 234 0098 04000000 		.4byte	.LCFI7
 235 009c 1C000000 		.4byte	.LFE3
 236 00a0 0200     		.2byte	0x2
 237 00a2 77       		.byte	0x77
 238 00a3 08       		.sleb128 8
 239 00a4 00000000 		.4byte	0x0
 240 00a8 00000000 		.4byte	0x0
 241              		.file 2 ".\\Generated_Source\\PSoC5\\/cytypes.h"
 242              		.file 3 ".\\Generated_Source\\PSoC5\\/PWM.h"
 243              		.section	.debug_info
 244 0000 16010000 		.4byte	0x116
 245 0004 0200     		.2byte	0x2
 246 0006 00000000 		.4byte	.Ldebug_abbrev0
 247 000a 04       		.byte	0x4
 248 000b 01       		.uleb128 0x1
 249 000c 86000000 		.4byte	.LASF18
 250 0010 01       		.byte	0x1
 251 0011 64000000 		.4byte	.LASF19
 252 0015 2B010000 		.4byte	.LASF20
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccnfK81j.s 			page 10


 253 0019 00000000 		.4byte	0x0
 254 001d 00000000 		.4byte	0x0
 255 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 256 0025 00000000 		.4byte	.Ldebug_line0
 257 0029 02       		.uleb128 0x2
 258 002a 01       		.byte	0x1
 259 002b 06       		.byte	0x6
 260 002c F2000000 		.4byte	.LASF0
 261 0030 02       		.uleb128 0x2
 262 0031 01       		.byte	0x1
 263 0032 08       		.byte	0x8
 264 0033 92000000 		.4byte	.LASF1
 265 0037 02       		.uleb128 0x2
 266 0038 02       		.byte	0x2
 267 0039 05       		.byte	0x5
 268 003a 21010000 		.4byte	.LASF2
 269 003e 02       		.uleb128 0x2
 270 003f 02       		.byte	0x2
 271 0040 07       		.byte	0x7
 272 0041 DF000000 		.4byte	.LASF3
 273 0045 02       		.uleb128 0x2
 274 0046 04       		.byte	0x4
 275 0047 05       		.byte	0x5
 276 0048 AF000000 		.4byte	.LASF4
 277 004c 02       		.uleb128 0x2
 278 004d 04       		.byte	0x4
 279 004e 07       		.byte	0x7
 280 004f 3B000000 		.4byte	.LASF5
 281 0053 02       		.uleb128 0x2
 282 0054 08       		.byte	0x8
 283 0055 05       		.byte	0x5
 284 0056 00000000 		.4byte	.LASF6
 285 005a 02       		.uleb128 0x2
 286 005b 08       		.byte	0x8
 287 005c 07       		.byte	0x7
 288 005d 4D000000 		.4byte	.LASF7
 289 0061 03       		.uleb128 0x3
 290 0062 04       		.byte	0x4
 291 0063 05       		.byte	0x5
 292 0064 696E7400 		.ascii	"int\000"
 293 0068 02       		.uleb128 0x2
 294 0069 04       		.byte	0x4
 295 006a 07       		.byte	0x7
 296 006b 0E000000 		.4byte	.LASF8
 297 006f 04       		.uleb128 0x4
 298 0070 35000000 		.4byte	.LASF12
 299 0074 02       		.byte	0x2
 300 0075 4C       		.byte	0x4c
 301 0076 30000000 		.4byte	0x30
 302 007a 02       		.uleb128 0x2
 303 007b 04       		.byte	0x4
 304 007c 04       		.byte	0x4
 305 007d 09010000 		.4byte	.LASF9
 306 0081 02       		.uleb128 0x2
 307 0082 08       		.byte	0x8
 308 0083 04       		.byte	0x4
 309 0084 B8000000 		.4byte	.LASF10
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccnfK81j.s 			page 11


 310 0088 02       		.uleb128 0x2
 311 0089 01       		.byte	0x1
 312 008a 08       		.byte	0x8
 313 008b A0000000 		.4byte	.LASF11
 314 008f 05       		.uleb128 0x5
 315 0090 04       		.byte	0x4
 316 0091 07       		.byte	0x7
 317 0092 06       		.uleb128 0x6
 318 0093 01       		.byte	0x1
 319 0094 03       		.byte	0x3
 320 0095 69       		.byte	0x69
 321 0096 A9000000 		.4byte	0xa9
 322 009a 07       		.uleb128 0x7
 323 009b 1B000000 		.4byte	.LASF21
 324 009f 03       		.byte	0x3
 325 00a0 6B       		.byte	0x6b
 326 00a1 6F000000 		.4byte	0x6f
 327 00a5 02       		.byte	0x2
 328 00a6 23       		.byte	0x23
 329 00a7 00       		.uleb128 0x0
 330 00a8 00       		.byte	0x0
 331 00a9 04       		.uleb128 0x4
 332 00aa BF000000 		.4byte	.LASF13
 333 00ae 03       		.byte	0x3
 334 00af A4       		.byte	0xa4
 335 00b0 92000000 		.4byte	0x92
 336 00b4 08       		.uleb128 0x8
 337 00b5 01       		.byte	0x1
 338 00b6 D0000000 		.4byte	.LASF14
 339 00ba 01       		.byte	0x1
 340 00bb 2A       		.byte	0x2a
 341 00bc 01       		.byte	0x1
 342 00bd 00000000 		.4byte	.LFB0
 343 00c1 0A000000 		.4byte	.LFE0
 344 00c5 00000000 		.4byte	.LLST0
 345 00c9 08       		.uleb128 0x8
 346 00ca 01       		.byte	0x1
 347 00cb 0F010000 		.4byte	.LASF15
 348 00cf 01       		.byte	0x1
 349 00d0 71       		.byte	0x71
 350 00d1 01       		.byte	0x1
 351 00d2 00000000 		.4byte	.LFB1
 352 00d6 0A000000 		.4byte	.LFE1
 353 00da 2B000000 		.4byte	.LLST1
 354 00de 08       		.uleb128 0x8
 355 00df 01       		.byte	0x1
 356 00e0 A5000000 		.4byte	.LASF16
 357 00e4 01       		.byte	0x1
 358 00e5 CC       		.byte	0xcc
 359 00e6 01       		.byte	0x1
 360 00e7 00000000 		.4byte	.LFB2
 361 00eb 42000000 		.4byte	.LFE2
 362 00ef 56000000 		.4byte	.LLST2
 363 00f3 08       		.uleb128 0x8
 364 00f4 01       		.byte	0x1
 365 00f5 2A000000 		.4byte	.LASF17
 366 00f9 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccnfK81j.s 			page 12


 367 00fa F6       		.byte	0xf6
 368 00fb 01       		.byte	0x1
 369 00fc 00000000 		.4byte	.LFB3
 370 0100 1C000000 		.4byte	.LFE3
 371 0104 81000000 		.4byte	.LLST3
 372 0108 09       		.uleb128 0x9
 373 0109 FE000000 		.4byte	.LASF22
 374 010d 01       		.byte	0x1
 375 010e 14       		.byte	0x14
 376 010f A9000000 		.4byte	0xa9
 377 0113 05       		.byte	0x5
 378 0114 03       		.byte	0x3
 379 0115 00000000 		.4byte	PWM_backup
 380 0119 00       		.byte	0x0
 381              		.section	.debug_abbrev
 382 0000 01       		.uleb128 0x1
 383 0001 11       		.uleb128 0x11
 384 0002 01       		.byte	0x1
 385 0003 25       		.uleb128 0x25
 386 0004 0E       		.uleb128 0xe
 387 0005 13       		.uleb128 0x13
 388 0006 0B       		.uleb128 0xb
 389 0007 03       		.uleb128 0x3
 390 0008 0E       		.uleb128 0xe
 391 0009 1B       		.uleb128 0x1b
 392 000a 0E       		.uleb128 0xe
 393 000b 11       		.uleb128 0x11
 394 000c 01       		.uleb128 0x1
 395 000d 52       		.uleb128 0x52
 396 000e 01       		.uleb128 0x1
 397 000f 55       		.uleb128 0x55
 398 0010 06       		.uleb128 0x6
 399 0011 10       		.uleb128 0x10
 400 0012 06       		.uleb128 0x6
 401 0013 00       		.byte	0x0
 402 0014 00       		.byte	0x0
 403 0015 02       		.uleb128 0x2
 404 0016 24       		.uleb128 0x24
 405 0017 00       		.byte	0x0
 406 0018 0B       		.uleb128 0xb
 407 0019 0B       		.uleb128 0xb
 408 001a 3E       		.uleb128 0x3e
 409 001b 0B       		.uleb128 0xb
 410 001c 03       		.uleb128 0x3
 411 001d 0E       		.uleb128 0xe
 412 001e 00       		.byte	0x0
 413 001f 00       		.byte	0x0
 414 0020 03       		.uleb128 0x3
 415 0021 24       		.uleb128 0x24
 416 0022 00       		.byte	0x0
 417 0023 0B       		.uleb128 0xb
 418 0024 0B       		.uleb128 0xb
 419 0025 3E       		.uleb128 0x3e
 420 0026 0B       		.uleb128 0xb
 421 0027 03       		.uleb128 0x3
 422 0028 08       		.uleb128 0x8
 423 0029 00       		.byte	0x0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccnfK81j.s 			page 13


 424 002a 00       		.byte	0x0
 425 002b 04       		.uleb128 0x4
 426 002c 16       		.uleb128 0x16
 427 002d 00       		.byte	0x0
 428 002e 03       		.uleb128 0x3
 429 002f 0E       		.uleb128 0xe
 430 0030 3A       		.uleb128 0x3a
 431 0031 0B       		.uleb128 0xb
 432 0032 3B       		.uleb128 0x3b
 433 0033 0B       		.uleb128 0xb
 434 0034 49       		.uleb128 0x49
 435 0035 13       		.uleb128 0x13
 436 0036 00       		.byte	0x0
 437 0037 00       		.byte	0x0
 438 0038 05       		.uleb128 0x5
 439 0039 24       		.uleb128 0x24
 440 003a 00       		.byte	0x0
 441 003b 0B       		.uleb128 0xb
 442 003c 0B       		.uleb128 0xb
 443 003d 3E       		.uleb128 0x3e
 444 003e 0B       		.uleb128 0xb
 445 003f 00       		.byte	0x0
 446 0040 00       		.byte	0x0
 447 0041 06       		.uleb128 0x6
 448 0042 13       		.uleb128 0x13
 449 0043 01       		.byte	0x1
 450 0044 0B       		.uleb128 0xb
 451 0045 0B       		.uleb128 0xb
 452 0046 3A       		.uleb128 0x3a
 453 0047 0B       		.uleb128 0xb
 454 0048 3B       		.uleb128 0x3b
 455 0049 0B       		.uleb128 0xb
 456 004a 01       		.uleb128 0x1
 457 004b 13       		.uleb128 0x13
 458 004c 00       		.byte	0x0
 459 004d 00       		.byte	0x0
 460 004e 07       		.uleb128 0x7
 461 004f 0D       		.uleb128 0xd
 462 0050 00       		.byte	0x0
 463 0051 03       		.uleb128 0x3
 464 0052 0E       		.uleb128 0xe
 465 0053 3A       		.uleb128 0x3a
 466 0054 0B       		.uleb128 0xb
 467 0055 3B       		.uleb128 0x3b
 468 0056 0B       		.uleb128 0xb
 469 0057 49       		.uleb128 0x49
 470 0058 13       		.uleb128 0x13
 471 0059 38       		.uleb128 0x38
 472 005a 0A       		.uleb128 0xa
 473 005b 00       		.byte	0x0
 474 005c 00       		.byte	0x0
 475 005d 08       		.uleb128 0x8
 476 005e 2E       		.uleb128 0x2e
 477 005f 00       		.byte	0x0
 478 0060 3F       		.uleb128 0x3f
 479 0061 0C       		.uleb128 0xc
 480 0062 03       		.uleb128 0x3
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccnfK81j.s 			page 14


 481 0063 0E       		.uleb128 0xe
 482 0064 3A       		.uleb128 0x3a
 483 0065 0B       		.uleb128 0xb
 484 0066 3B       		.uleb128 0x3b
 485 0067 0B       		.uleb128 0xb
 486 0068 27       		.uleb128 0x27
 487 0069 0C       		.uleb128 0xc
 488 006a 11       		.uleb128 0x11
 489 006b 01       		.uleb128 0x1
 490 006c 12       		.uleb128 0x12
 491 006d 01       		.uleb128 0x1
 492 006e 40       		.uleb128 0x40
 493 006f 06       		.uleb128 0x6
 494 0070 00       		.byte	0x0
 495 0071 00       		.byte	0x0
 496 0072 09       		.uleb128 0x9
 497 0073 34       		.uleb128 0x34
 498 0074 00       		.byte	0x0
 499 0075 03       		.uleb128 0x3
 500 0076 0E       		.uleb128 0xe
 501 0077 3A       		.uleb128 0x3a
 502 0078 0B       		.uleb128 0xb
 503 0079 3B       		.uleb128 0x3b
 504 007a 0B       		.uleb128 0xb
 505 007b 49       		.uleb128 0x49
 506 007c 13       		.uleb128 0x13
 507 007d 02       		.uleb128 0x2
 508 007e 0A       		.uleb128 0xa
 509 007f 00       		.byte	0x0
 510 0080 00       		.byte	0x0
 511 0081 00       		.byte	0x0
 512              		.section	.debug_pubnames,"",%progbits
 513 0000 54000000 		.4byte	0x54
 514 0004 0200     		.2byte	0x2
 515 0006 00000000 		.4byte	.Ldebug_info0
 516 000a 1A010000 		.4byte	0x11a
 517 000e B4000000 		.4byte	0xb4
 518 0012 50574D5F 		.ascii	"PWM_SaveConfig\000"
 518      53617665 
 518      436F6E66 
 518      696700
 519 0021 C9000000 		.4byte	0xc9
 520 0025 50574D5F 		.ascii	"PWM_RestoreConfig\000"
 520      52657374 
 520      6F726543 
 520      6F6E6669 
 520      6700
 521 0037 DE000000 		.4byte	0xde
 522 003b 50574D5F 		.ascii	"PWM_Sleep\000"
 522      536C6565 
 522      7000
 523 0045 F3000000 		.4byte	0xf3
 524 0049 50574D5F 		.ascii	"PWM_Wakeup\000"
 524      57616B65 
 524      757000
 525 0054 00000000 		.4byte	0x0
 526              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccnfK81j.s 			page 15


 527 0000 34000000 		.4byte	0x34
 528 0004 0200     		.2byte	0x2
 529 0006 00000000 		.4byte	.Ldebug_info0
 530 000a 04       		.byte	0x4
 531 000b 00       		.byte	0x0
 532 000c 0000     		.2byte	0x0
 533 000e 0000     		.2byte	0x0
 534 0010 00000000 		.4byte	.LFB0
 535 0014 0A000000 		.4byte	.LFE0-.LFB0
 536 0018 00000000 		.4byte	.LFB1
 537 001c 0A000000 		.4byte	.LFE1-.LFB1
 538 0020 00000000 		.4byte	.LFB2
 539 0024 42000000 		.4byte	.LFE2-.LFB2
 540 0028 00000000 		.4byte	.LFB3
 541 002c 1C000000 		.4byte	.LFE3-.LFB3
 542 0030 00000000 		.4byte	0x0
 543 0034 00000000 		.4byte	0x0
 544              		.section	.debug_ranges,"",%progbits
 545              	.Ldebug_ranges0:
 546 0000 00000000 		.4byte	.Ltext0
 547 0004 00000000 		.4byte	.Letext0
 548 0008 00000000 		.4byte	.LFB0
 549 000c 0A000000 		.4byte	.LFE0
 550 0010 00000000 		.4byte	.LFB1
 551 0014 0A000000 		.4byte	.LFE1
 552 0018 00000000 		.4byte	.LFB2
 553 001c 42000000 		.4byte	.LFE2
 554 0020 00000000 		.4byte	.LFB3
 555 0024 1C000000 		.4byte	.LFE3
 556 0028 00000000 		.4byte	0x0
 557 002c 00000000 		.4byte	0x0
 558              		.section	.debug_str,"MS",%progbits,1
 559              	.LASF6:
 560 0000 6C6F6E67 		.ascii	"long long int\000"
 560      206C6F6E 
 560      6720696E 
 560      7400
 561              	.LASF8:
 562 000e 756E7369 		.ascii	"unsigned int\000"
 562      676E6564 
 562      20696E74 
 562      00
 563              	.LASF21:
 564 001b 50574D45 		.ascii	"PWMEnableState\000"
 564      6E61626C 
 564      65537461 
 564      746500
 565              	.LASF17:
 566 002a 50574D5F 		.ascii	"PWM_Wakeup\000"
 566      57616B65 
 566      757000
 567              	.LASF12:
 568 0035 75696E74 		.ascii	"uint8\000"
 568      3800
 569              	.LASF5:
 570 003b 6C6F6E67 		.ascii	"long unsigned int\000"
 570      20756E73 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccnfK81j.s 			page 16


 570      69676E65 
 570      6420696E 
 570      7400
 571              	.LASF7:
 572 004d 6C6F6E67 		.ascii	"long long unsigned int\000"
 572      206C6F6E 
 572      6720756E 
 572      7369676E 
 572      65642069 
 573              	.LASF19:
 574 0064 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\PWM_PM.c\000"
 574      6E657261 
 574      7465645F 
 574      536F7572 
 574      63655C50 
 575              	.LASF18:
 576 0086 474E5520 		.ascii	"GNU C 4.4.1\000"
 576      4320342E 
 576      342E3100 
 577              	.LASF1:
 578 0092 756E7369 		.ascii	"unsigned char\000"
 578      676E6564 
 578      20636861 
 578      7200
 579              	.LASF11:
 580 00a0 63686172 		.ascii	"char\000"
 580      00
 581              	.LASF16:
 582 00a5 50574D5F 		.ascii	"PWM_Sleep\000"
 582      536C6565 
 582      7000
 583              	.LASF4:
 584 00af 6C6F6E67 		.ascii	"long int\000"
 584      20696E74 
 584      00
 585              	.LASF10:
 586 00b8 646F7562 		.ascii	"double\000"
 586      6C6500
 587              	.LASF13:
 588 00bf 50574D5F 		.ascii	"PWM_backupStruct\000"
 588      6261636B 
 588      75705374 
 588      72756374 
 588      00
 589              	.LASF14:
 590 00d0 50574D5F 		.ascii	"PWM_SaveConfig\000"
 590      53617665 
 590      436F6E66 
 590      696700
 591              	.LASF3:
 592 00df 73686F72 		.ascii	"short unsigned int\000"
 592      7420756E 
 592      7369676E 
 592      65642069 
 592      6E7400
 593              	.LASF0:
 594 00f2 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\ccnfK81j.s 			page 17


 594      65642063 
 594      68617200 
 595              	.LASF22:
 596 00fe 50574D5F 		.ascii	"PWM_backup\000"
 596      6261636B 
 596      757000
 597              	.LASF9:
 598 0109 666C6F61 		.ascii	"float\000"
 598      7400
 599              	.LASF15:
 600 010f 50574D5F 		.ascii	"PWM_RestoreConfig\000"
 600      52657374 
 600      6F726543 
 600      6F6E6669 
 600      6700
 601              	.LASF2:
 602 0121 73686F72 		.ascii	"short int\000"
 602      7420696E 
 602      7400
 603              	.LASF20:
 604 012b 453A5C50 		.ascii	"E:\\PSoC Creator\\lab1\\part1.cydsn\000"
 604      536F4320 
 604      43726561 
 604      746F725C 
 604      6C616231 
 605              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"

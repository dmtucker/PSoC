ARM GAS  C:\DOCUME~1\dtucker\LOCALS~1\Temp\ccZHKNJy.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"UART_INT.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 C1000000 		.text
  20      02006B00 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.UART_RXISR,"ax",%progbits
  24              		.align	2
  25              		.global	UART_RXISR
  26              		.thumb
  27              		.thumb_func
  28              		.type	UART_RXISR, %function
  29              	UART_RXISR:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC5\\UART_INT.c"
   1:.\Generated_Source\PSoC5/UART_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/UART_INT.c **** * File Name: UART_INT.c
   3:.\Generated_Source\PSoC5/UART_INT.c **** * Version 2.30
   4:.\Generated_Source\PSoC5/UART_INT.c **** *
   5:.\Generated_Source\PSoC5/UART_INT.c **** * Description:
   6:.\Generated_Source\PSoC5/UART_INT.c **** *  This file provides all Interrupt Service functionality of the UART component
   7:.\Generated_Source\PSoC5/UART_INT.c **** *
   8:.\Generated_Source\PSoC5/UART_INT.c **** * Note:
   9:.\Generated_Source\PSoC5/UART_INT.c **** *  Any unusual or non-standard behavior should be noted here. Other-
  10:.\Generated_Source\PSoC5/UART_INT.c **** *  wise, this section should remain blank.
  11:.\Generated_Source\PSoC5/UART_INT.c **** *
  12:.\Generated_Source\PSoC5/UART_INT.c **** ********************************************************************************
  13:.\Generated_Source\PSoC5/UART_INT.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC5/UART_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC5/UART_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC5/UART_INT.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC5/UART_INT.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC5/UART_INT.c **** 
  19:.\Generated_Source\PSoC5/UART_INT.c **** #include "UART.h"
  20:.\Generated_Source\PSoC5/UART_INT.c **** #include "CyLib.h"
  21:.\Generated_Source\PSoC5/UART_INT.c **** 
  22:.\Generated_Source\PSoC5/UART_INT.c **** 
ARM GAS  C:\DOCUME~1\dtucker\LOCALS~1\Temp\ccZHKNJy.s 			page 2


  23:.\Generated_Source\PSoC5/UART_INT.c **** /***************************************
  24:.\Generated_Source\PSoC5/UART_INT.c **** * Custom Declratations
  25:.\Generated_Source\PSoC5/UART_INT.c **** ***************************************/
  26:.\Generated_Source\PSoC5/UART_INT.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  27:.\Generated_Source\PSoC5/UART_INT.c **** 
  28:.\Generated_Source\PSoC5/UART_INT.c **** /* `#END` */
  29:.\Generated_Source\PSoC5/UART_INT.c **** 
  30:.\Generated_Source\PSoC5/UART_INT.c **** #if( (UART_RX_ENABLED || UART_HD_ENABLED) && \
  31:.\Generated_Source\PSoC5/UART_INT.c ****      (UART_RXBUFFERSIZE > UART_FIFO_LENGTH))
  32:.\Generated_Source\PSoC5/UART_INT.c **** 
  33:.\Generated_Source\PSoC5/UART_INT.c **** 
  34:.\Generated_Source\PSoC5/UART_INT.c ****     /*******************************************************************************
  35:.\Generated_Source\PSoC5/UART_INT.c ****     * Function Name: UART_RXISR
  36:.\Generated_Source\PSoC5/UART_INT.c ****     ********************************************************************************
  37:.\Generated_Source\PSoC5/UART_INT.c ****     *
  38:.\Generated_Source\PSoC5/UART_INT.c ****     * Summary:
  39:.\Generated_Source\PSoC5/UART_INT.c ****     *  Interrupt Service Routine for RX portion of the UART
  40:.\Generated_Source\PSoC5/UART_INT.c ****     *
  41:.\Generated_Source\PSoC5/UART_INT.c ****     * Parameters:
  42:.\Generated_Source\PSoC5/UART_INT.c ****     *  None.
  43:.\Generated_Source\PSoC5/UART_INT.c ****     *
  44:.\Generated_Source\PSoC5/UART_INT.c ****     * Return:
  45:.\Generated_Source\PSoC5/UART_INT.c ****     *  None.
  46:.\Generated_Source\PSoC5/UART_INT.c ****     *
  47:.\Generated_Source\PSoC5/UART_INT.c ****     * Global Variables:
  48:.\Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
  49:.\Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
  50:.\Generated_Source\PSoC5/UART_INT.c ****     *     increments after each byte saved to buffer.
  51:.\Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
  52:.\Generated_Source\PSoC5/UART_INT.c ****     *     checked to detect overflow condition.
  53:.\Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferOverflow - software overflow flag. Set to one
  54:.\Generated_Source\PSoC5/UART_INT.c ****     *     when UART_rxBufferWrite index overtakes
  55:.\Generated_Source\PSoC5/UART_INT.c ****     *     UART_rxBufferRead index.
  56:.\Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferLoopDetect - additional variable to detect overflow.
  57:.\Generated_Source\PSoC5/UART_INT.c ****     *     Set to one when UART_rxBufferWrite is equal to
  58:.\Generated_Source\PSoC5/UART_INT.c ****     *    UART_rxBufferRead
  59:.\Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxAddressMode - this variable contains the Address mode,
  60:.\Generated_Source\PSoC5/UART_INT.c ****     *     selected in customizer or set by UART_SetRxAddressMode() API.
  61:.\Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxAddressDetected - set to 1 when correct address received,
  62:.\Generated_Source\PSoC5/UART_INT.c ****     *     and analysed to store following addressed data bytes to the buffer.
  63:.\Generated_Source\PSoC5/UART_INT.c ****     *     When not correct address received, set to 0 to skip following data bytes.
  64:.\Generated_Source\PSoC5/UART_INT.c ****     *
  65:.\Generated_Source\PSoC5/UART_INT.c ****     *******************************************************************************/
  66:.\Generated_Source\PSoC5/UART_INT.c ****     CY_ISR(UART_RXISR)
  67:.\Generated_Source\PSoC5/UART_INT.c ****     {
  32              		.loc 1 67 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 8
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36              		@ link register save eliminated.
  37 0000 80B4     		push	{r7}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 4
  40 0002 83B0     		sub	sp, sp, #12
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 16
  43 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\DOCUME~1\dtucker\LOCALS~1\Temp\ccZHKNJy.s 			page 3


  44              		.cfi_offset 7, -4
  45              	.LCFI2:
  46              		.cfi_def_cfa_register 7
  68:.\Generated_Source\PSoC5/UART_INT.c ****         uint8 readData;
  69:.\Generated_Source\PSoC5/UART_INT.c ****         uint8 increment_pointer = 0u;
  47              		.loc 1 69 0
  48 0006 4FF00003 		mov	r3, #0
  49 000a FB71     		strb	r3, [r7, #7]
  70:.\Generated_Source\PSoC5/UART_INT.c ****         #if(CY_PSOC3)
  71:.\Generated_Source\PSoC5/UART_INT.c ****             uint8 int_en;
  72:.\Generated_Source\PSoC5/UART_INT.c ****         #endif /* CY_PSOC3 */
  73:.\Generated_Source\PSoC5/UART_INT.c **** 
  74:.\Generated_Source\PSoC5/UART_INT.c ****         /* User code required at start of ISR */
  75:.\Generated_Source\PSoC5/UART_INT.c ****         /* `#START UART_RXISR_START` */
  76:.\Generated_Source\PSoC5/UART_INT.c **** 
  77:.\Generated_Source\PSoC5/UART_INT.c ****         /* `#END` */
  78:.\Generated_Source\PSoC5/UART_INT.c **** 
  79:.\Generated_Source\PSoC5/UART_INT.c ****         #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
  80:.\Generated_Source\PSoC5/UART_INT.c ****             int_en = EA;
  81:.\Generated_Source\PSoC5/UART_INT.c ****             CyGlobalIntEnable;
  82:.\Generated_Source\PSoC5/UART_INT.c ****         #endif /* CY_PSOC3 */
  83:.\Generated_Source\PSoC5/UART_INT.c **** 
  84:.\Generated_Source\PSoC5/UART_INT.c ****         readData = UART_RXSTATUS_REG;
  50              		.loc 1 84 0
  51 000c 46F26343 		movw	r3, #:lower16:1073767523
  52 0010 C4F20003 		movt	r3, #:upper16:1073767523
  53 0014 1B78     		ldrb	r3, [r3, #0]
  54 0016 BB71     		strb	r3, [r7, #6]
  85:.\Generated_Source\PSoC5/UART_INT.c **** 
  86:.\Generated_Source\PSoC5/UART_INT.c ****         if((readData & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
  87:.\Generated_Source\PSoC5/UART_INT.c ****                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
  88:.\Generated_Source\PSoC5/UART_INT.c ****         {
  89:.\Generated_Source\PSoC5/UART_INT.c ****             /* ERROR handling. */
  90:.\Generated_Source\PSoC5/UART_INT.c ****             /* `#START UART_RXISR_ERROR` */
  91:.\Generated_Source\PSoC5/UART_INT.c **** 
  92:.\Generated_Source\PSoC5/UART_INT.c ****             /* `#END` */
  93:.\Generated_Source\PSoC5/UART_INT.c ****         }
  94:.\Generated_Source\PSoC5/UART_INT.c **** 
  95:.\Generated_Source\PSoC5/UART_INT.c ****         while((readData & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
  55              		.loc 1 95 0
  56 0018 73E0     		b	.L2
  57              	.L7:
  96:.\Generated_Source\PSoC5/UART_INT.c ****         {
  97:.\Generated_Source\PSoC5/UART_INT.c **** 
  98:.\Generated_Source\PSoC5/UART_INT.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
  99:.\Generated_Source\PSoC5/UART_INT.c ****                 if(UART_rxAddressMode == (uint8)UART__B_UART__AM_SW_DETECT_TO_BUFFER)
 100:.\Generated_Source\PSoC5/UART_INT.c ****                 {
 101:.\Generated_Source\PSoC5/UART_INT.c ****                     if((readData & UART_RX_STS_MRKSPC) != 0u)
 102:.\Generated_Source\PSoC5/UART_INT.c ****                     {
 103:.\Generated_Source\PSoC5/UART_INT.c ****                         if ((readData & UART_RX_STS_ADDR_MATCH) != 0u)
 104:.\Generated_Source\PSoC5/UART_INT.c ****                         {
 105:.\Generated_Source\PSoC5/UART_INT.c ****                             UART_rxAddressDetected = 1u;
 106:.\Generated_Source\PSoC5/UART_INT.c ****                         }
 107:.\Generated_Source\PSoC5/UART_INT.c ****                         else
 108:.\Generated_Source\PSoC5/UART_INT.c ****                         {
 109:.\Generated_Source\PSoC5/UART_INT.c ****                             UART_rxAddressDetected = 0u;
 110:.\Generated_Source\PSoC5/UART_INT.c ****                         }
ARM GAS  C:\DOCUME~1\dtucker\LOCALS~1\Temp\ccZHKNJy.s 			page 4


 111:.\Generated_Source\PSoC5/UART_INT.c ****                     }
 112:.\Generated_Source\PSoC5/UART_INT.c **** 
 113:.\Generated_Source\PSoC5/UART_INT.c ****                     readData = UART_RXDATA_REG;
 114:.\Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxAddressDetected != 0u)
 115:.\Generated_Source\PSoC5/UART_INT.c ****                     {   /* store only addressed data */
 116:.\Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBuffer[UART_rxBufferWrite] = readData;
 117:.\Generated_Source\PSoC5/UART_INT.c ****                         increment_pointer = 1u;
 118:.\Generated_Source\PSoC5/UART_INT.c ****                     }
 119:.\Generated_Source\PSoC5/UART_INT.c ****                 }
 120:.\Generated_Source\PSoC5/UART_INT.c ****                 else /* without software addressing */
 121:.\Generated_Source\PSoC5/UART_INT.c ****                 {
 122:.\Generated_Source\PSoC5/UART_INT.c ****                     UART_rxBuffer[UART_rxBufferWrite] = UART_RXDATA_REG;
 123:.\Generated_Source\PSoC5/UART_INT.c ****                     increment_pointer = 1u;
 124:.\Generated_Source\PSoC5/UART_INT.c ****                 }
 125:.\Generated_Source\PSoC5/UART_INT.c ****             #else  /* without addressing */
 126:.\Generated_Source\PSoC5/UART_INT.c ****                 UART_rxBuffer[UART_rxBufferWrite] = UART_RXDATA_REG;
  58              		.loc 1 126 0
  59 001a 40F20003 		movw	r3, #:lower16:UART_rxBufferWrite
  60 001e C0F20003 		movt	r3, #:upper16:UART_rxBufferWrite
  61 0022 1B78     		ldrb	r3, [r3, #0]
  62 0024 DBB2     		uxtb	r3, r3
  63 0026 1A46     		mov	r2, r3
  64 0028 46F24043 		movw	r3, #:lower16:1073767488
  65 002c C4F20003 		movt	r3, #:upper16:1073767488
  66 0030 1B78     		ldrb	r3, [r3, #0]
  67 0032 D9B2     		uxtb	r1, r3
  68 0034 40F20003 		movw	r3, #:lower16:UART_rxBuffer
  69 0038 C0F20003 		movt	r3, #:upper16:UART_rxBuffer
  70 003c 9954     		strb	r1, [r3, r2]
 127:.\Generated_Source\PSoC5/UART_INT.c ****                 increment_pointer = 1u;
  71              		.loc 1 127 0
  72 003e 4FF00103 		mov	r3, #1
  73 0042 FB71     		strb	r3, [r7, #7]
 128:.\Generated_Source\PSoC5/UART_INT.c ****             #endif /* End SW_DETECT_TO_BUFFER */
 129:.\Generated_Source\PSoC5/UART_INT.c **** 
 130:.\Generated_Source\PSoC5/UART_INT.c ****             /* do not increment buffer pointer when skip not adderessed data */
 131:.\Generated_Source\PSoC5/UART_INT.c ****             if( increment_pointer != 0u )
  74              		.loc 1 131 0
  75 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  76 0046 002B     		cmp	r3, #0
  77 0048 55D0     		beq	.L3
 132:.\Generated_Source\PSoC5/UART_INT.c ****             {
 133:.\Generated_Source\PSoC5/UART_INT.c ****                 if(UART_rxBufferLoopDetect != 0u)
  78              		.loc 1 133 0
  79 004a 40F20003 		movw	r3, #:lower16:UART_rxBufferLoopDetect
  80 004e C0F20003 		movt	r3, #:upper16:UART_rxBufferLoopDetect
  81 0052 1B78     		ldrb	r3, [r3, #0]
  82 0054 DBB2     		uxtb	r3, r3
  83 0056 002B     		cmp	r3, #0
  84 0058 06D0     		beq	.L4
 134:.\Generated_Source\PSoC5/UART_INT.c ****                 {   /* Set Software Buffer status Overflow */
 135:.\Generated_Source\PSoC5/UART_INT.c ****                     UART_rxBufferOverflow = 1u;
  85              		.loc 1 135 0
  86 005a 40F20003 		movw	r3, #:lower16:UART_rxBufferOverflow
  87 005e C0F20003 		movt	r3, #:upper16:UART_rxBufferOverflow
  88 0062 4FF00102 		mov	r2, #1
  89 0066 1A70     		strb	r2, [r3, #0]
ARM GAS  C:\DOCUME~1\dtucker\LOCALS~1\Temp\ccZHKNJy.s 			page 5


  90              	.L4:
 136:.\Generated_Source\PSoC5/UART_INT.c ****                 }
 137:.\Generated_Source\PSoC5/UART_INT.c ****                 /* Set next pointer. */
 138:.\Generated_Source\PSoC5/UART_INT.c ****                 UART_rxBufferWrite++;
  91              		.loc 1 138 0
  92 0068 40F20003 		movw	r3, #:lower16:UART_rxBufferWrite
  93 006c C0F20003 		movt	r3, #:upper16:UART_rxBufferWrite
  94 0070 1B78     		ldrb	r3, [r3, #0]
  95 0072 DBB2     		uxtb	r3, r3
  96 0074 03F10103 		add	r3, r3, #1
  97 0078 DAB2     		uxtb	r2, r3
  98 007a 40F20003 		movw	r3, #:lower16:UART_rxBufferWrite
  99 007e C0F20003 		movt	r3, #:upper16:UART_rxBufferWrite
 100 0082 1A70     		strb	r2, [r3, #0]
 139:.\Generated_Source\PSoC5/UART_INT.c **** 
 140:.\Generated_Source\PSoC5/UART_INT.c ****                 /* Check pointer for a loop condition */
 141:.\Generated_Source\PSoC5/UART_INT.c ****                 if(UART_rxBufferWrite >= UART_RXBUFFERSIZE)
 101              		.loc 1 141 0
 102 0084 40F20003 		movw	r3, #:lower16:UART_rxBufferWrite
 103 0088 C0F20003 		movt	r3, #:upper16:UART_rxBufferWrite
 104 008c 1B78     		ldrb	r3, [r3, #0]
 105 008e DBB2     		uxtb	r3, r3
 106 0090 3F2B     		cmp	r3, #63
 107 0092 06D9     		bls	.L5
 142:.\Generated_Source\PSoC5/UART_INT.c ****                 {
 143:.\Generated_Source\PSoC5/UART_INT.c ****                     UART_rxBufferWrite = 0u;
 108              		.loc 1 143 0
 109 0094 40F20003 		movw	r3, #:lower16:UART_rxBufferWrite
 110 0098 C0F20003 		movt	r3, #:upper16:UART_rxBufferWrite
 111 009c 4FF00002 		mov	r2, #0
 112 00a0 1A70     		strb	r2, [r3, #0]
 113              	.L5:
 144:.\Generated_Source\PSoC5/UART_INT.c ****                 }
 145:.\Generated_Source\PSoC5/UART_INT.c ****                 /* Detect pre-overload condition and set flag */
 146:.\Generated_Source\PSoC5/UART_INT.c ****                 if(UART_rxBufferWrite == UART_rxBufferRead)
 114              		.loc 1 146 0
 115 00a2 40F20003 		movw	r3, #:lower16:UART_rxBufferWrite
 116 00a6 C0F20003 		movt	r3, #:upper16:UART_rxBufferWrite
 117 00aa 1B78     		ldrb	r3, [r3, #0]
 118 00ac DAB2     		uxtb	r2, r3
 119 00ae 40F20003 		movw	r3, #:lower16:UART_rxBufferRead
 120 00b2 C0F20003 		movt	r3, #:upper16:UART_rxBufferRead
 121 00b6 1B78     		ldrb	r3, [r3, #0]
 122 00b8 DBB2     		uxtb	r3, r3
 123 00ba 9A42     		cmp	r2, r3
 124 00bc 1BD1     		bne	.L3
 147:.\Generated_Source\PSoC5/UART_INT.c ****                 {
 148:.\Generated_Source\PSoC5/UART_INT.c ****                     UART_rxBufferLoopDetect = 1u;
 125              		.loc 1 148 0
 126 00be 40F20003 		movw	r3, #:lower16:UART_rxBufferLoopDetect
 127 00c2 C0F20003 		movt	r3, #:upper16:UART_rxBufferLoopDetect
 128 00c6 4FF00102 		mov	r2, #1
 129 00ca 1A70     		strb	r2, [r3, #0]
 149:.\Generated_Source\PSoC5/UART_INT.c ****                     /* When Hardware Flow Control selected */
 150:.\Generated_Source\PSoC5/UART_INT.c ****                     #if(UART_FLOW_CONTROL != 0u)
 151:.\Generated_Source\PSoC5/UART_INT.c ****                     /* Disable RX interrupt mask, it will be enabled when user read data from the b
 152:.\Generated_Source\PSoC5/UART_INT.c ****                         UART_RXSTATUS_MASK_REG  &= (uint8)~UART_RX_STS_FIFO_NOTEMPTY;
ARM GAS  C:\DOCUME~1\dtucker\LOCALS~1\Temp\ccZHKNJy.s 			page 6


 130              		.loc 1 152 0
 131 00cc 46F28343 		movw	r3, #:lower16:1073767555
 132 00d0 C4F20003 		movt	r3, #:upper16:1073767555
 133 00d4 46F28342 		movw	r2, #:lower16:1073767555
 134 00d8 C4F20002 		movt	r2, #:upper16:1073767555
 135 00dc 1278     		ldrb	r2, [r2, #0]
 136 00de D2B2     		uxtb	r2, r2
 137 00e0 02F0DF02 		and	r2, r2, #223
 138 00e4 1A70     		strb	r2, [r3, #0]
 153:.\Generated_Source\PSoC5/UART_INT.c ****                         CyIntClearPending(UART_RX_VECT_NUM);
 139              		.loc 1 153 0
 140 00e6 4EF28023 		movw	r3, #:lower16:-536812928
 141 00ea CEF20003 		movt	r3, #:upper16:-536812928
 142 00ee 4FF00102 		mov	r2, #1
 143 00f2 1A60     		str	r2, [r3, #0]
 154:.\Generated_Source\PSoC5/UART_INT.c ****                         break; /* Break the reading of the FIFO loop, leave the data there for gene
 144              		.loc 1 154 0
 145 00f4 0AE0     		b	.L8
 146              	.L3:
 155:.\Generated_Source\PSoC5/UART_INT.c ****                     #endif /* End UART_FLOW_CONTROL != 0 */
 156:.\Generated_Source\PSoC5/UART_INT.c ****                 }
 157:.\Generated_Source\PSoC5/UART_INT.c ****             }
 158:.\Generated_Source\PSoC5/UART_INT.c **** 
 159:.\Generated_Source\PSoC5/UART_INT.c ****             /* Check again if there is data. */
 160:.\Generated_Source\PSoC5/UART_INT.c ****             readData = UART_RXSTATUS_REG;
 147              		.loc 1 160 0
 148 00f6 46F26343 		movw	r3, #:lower16:1073767523
 149 00fa C4F20003 		movt	r3, #:upper16:1073767523
 150 00fe 1B78     		ldrb	r3, [r3, #0]
 151 0100 BB71     		strb	r3, [r7, #6]
 152              	.L2:
 153              		.loc 1 95 0
 154 0102 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 155 0104 03F02003 		and	r3, r3, #32
 156 0108 002B     		cmp	r3, #0
 157 010a 86D1     		bne	.L7
 158              	.L8:
 161:.\Generated_Source\PSoC5/UART_INT.c ****         }
 162:.\Generated_Source\PSoC5/UART_INT.c **** 
 163:.\Generated_Source\PSoC5/UART_INT.c ****         /* User code required at end of ISR (Optional) */
 164:.\Generated_Source\PSoC5/UART_INT.c ****         /* `#START UART_RXISR_END` */
 165:.\Generated_Source\PSoC5/UART_INT.c **** 
 166:.\Generated_Source\PSoC5/UART_INT.c ****         /* `#END` */
 167:.\Generated_Source\PSoC5/UART_INT.c **** 
 168:.\Generated_Source\PSoC5/UART_INT.c ****         #if(CY_PSOC3)
 169:.\Generated_Source\PSoC5/UART_INT.c ****             EA = int_en;
 170:.\Generated_Source\PSoC5/UART_INT.c ****         #endif /* CY_PSOC3 */
 171:.\Generated_Source\PSoC5/UART_INT.c **** 
 172:.\Generated_Source\PSoC5/UART_INT.c ****     }
 159              		.loc 1 172 0
 160 010c 07F10C07 		add	r7, r7, #12
 161 0110 BD46     		mov	sp, r7
 162 0112 80BC     		pop	{r7}
 163 0114 7047     		bx	lr
 164              		.cfi_endproc
 165              	.LFE0:
 166              		.size	UART_RXISR, .-UART_RXISR
ARM GAS  C:\DOCUME~1\dtucker\LOCALS~1\Temp\ccZHKNJy.s 			page 7


 167 0116 00BF     		.section	.text.UART_TXISR,"ax",%progbits
 168              		.align	2
 169              		.global	UART_TXISR
 170              		.thumb
 171              		.thumb_func
 172              		.type	UART_TXISR, %function
 173              	UART_TXISR:
 174              	.LFB1:
 173:.\Generated_Source\PSoC5/UART_INT.c **** 
 174:.\Generated_Source\PSoC5/UART_INT.c **** #endif /* End UART_RX_ENABLED && (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) */
 175:.\Generated_Source\PSoC5/UART_INT.c **** 
 176:.\Generated_Source\PSoC5/UART_INT.c **** 
 177:.\Generated_Source\PSoC5/UART_INT.c **** #if(UART_TX_ENABLED && (UART_TXBUFFERSIZE > UART_FIFO_LENGTH))
 178:.\Generated_Source\PSoC5/UART_INT.c **** 
 179:.\Generated_Source\PSoC5/UART_INT.c **** 
 180:.\Generated_Source\PSoC5/UART_INT.c ****     /*******************************************************************************
 181:.\Generated_Source\PSoC5/UART_INT.c ****     * Function Name: UART_TXISR
 182:.\Generated_Source\PSoC5/UART_INT.c ****     ********************************************************************************
 183:.\Generated_Source\PSoC5/UART_INT.c ****     *
 184:.\Generated_Source\PSoC5/UART_INT.c ****     * Summary:
 185:.\Generated_Source\PSoC5/UART_INT.c ****     * Interrupt Service Routine for the TX portion of the UART
 186:.\Generated_Source\PSoC5/UART_INT.c ****     *
 187:.\Generated_Source\PSoC5/UART_INT.c ****     * Parameters:
 188:.\Generated_Source\PSoC5/UART_INT.c ****     *  None.
 189:.\Generated_Source\PSoC5/UART_INT.c ****     *
 190:.\Generated_Source\PSoC5/UART_INT.c ****     * Return:
 191:.\Generated_Source\PSoC5/UART_INT.c ****     *  None.
 192:.\Generated_Source\PSoC5/UART_INT.c ****     *
 193:.\Generated_Source\PSoC5/UART_INT.c ****     * Global Variables:
 194:.\Generated_Source\PSoC5/UART_INT.c ****     *  UART_txBuffer - RAM buffer pointer for transmit data from.
 195:.\Generated_Source\PSoC5/UART_INT.c ****     *  UART_txBufferRead - cyclic index for read and transmit data
 196:.\Generated_Source\PSoC5/UART_INT.c ****     *     from txBuffer, increments after each transmited byte.
 197:.\Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferWrite - cyclic index for write to txBuffer,
 198:.\Generated_Source\PSoC5/UART_INT.c ****     *     checked to detect available for transmission bytes.
 199:.\Generated_Source\PSoC5/UART_INT.c ****     *
 200:.\Generated_Source\PSoC5/UART_INT.c ****     *******************************************************************************/
 201:.\Generated_Source\PSoC5/UART_INT.c ****     CY_ISR(UART_TXISR)
 202:.\Generated_Source\PSoC5/UART_INT.c ****     {
 175              		.loc 1 202 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 1, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180 0000 80B4     		push	{r7}
 181              	.LCFI3:
 182              		.cfi_def_cfa_offset 4
 183 0002 00AF     		add	r7, sp, #0
 184              		.cfi_offset 7, -4
 185              	.LCFI4:
 186              		.cfi_def_cfa_register 7
 203:.\Generated_Source\PSoC5/UART_INT.c **** 
 204:.\Generated_Source\PSoC5/UART_INT.c ****         #if(CY_PSOC3)
 205:.\Generated_Source\PSoC5/UART_INT.c ****             uint8 int_en;
 206:.\Generated_Source\PSoC5/UART_INT.c ****         #endif /* CY_PSOC3 */
 207:.\Generated_Source\PSoC5/UART_INT.c **** 
 208:.\Generated_Source\PSoC5/UART_INT.c ****         /* User code required at start of ISR */
 209:.\Generated_Source\PSoC5/UART_INT.c ****         /* `#START UART_TXISR_START` */
ARM GAS  C:\DOCUME~1\dtucker\LOCALS~1\Temp\ccZHKNJy.s 			page 8


 210:.\Generated_Source\PSoC5/UART_INT.c **** 
 211:.\Generated_Source\PSoC5/UART_INT.c ****         /* `#END` */
 212:.\Generated_Source\PSoC5/UART_INT.c **** 
 213:.\Generated_Source\PSoC5/UART_INT.c ****         #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
 214:.\Generated_Source\PSoC5/UART_INT.c ****             int_en = EA;
 215:.\Generated_Source\PSoC5/UART_INT.c ****             CyGlobalIntEnable;
 216:.\Generated_Source\PSoC5/UART_INT.c ****         #endif /* CY_PSOC3 */
 217:.\Generated_Source\PSoC5/UART_INT.c **** 
 218:.\Generated_Source\PSoC5/UART_INT.c ****         while((UART_txBufferRead != UART_txBufferWrite) &&
 187              		.loc 1 218 0
 188 0004 2EE0     		b	.L10
 189              	.L13:
 219:.\Generated_Source\PSoC5/UART_INT.c ****              ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u))
 220:.\Generated_Source\PSoC5/UART_INT.c ****         {
 221:.\Generated_Source\PSoC5/UART_INT.c ****             /* Check pointer. */
 222:.\Generated_Source\PSoC5/UART_INT.c ****             if(UART_txBufferRead >= UART_TXBUFFERSIZE)
 190              		.loc 1 222 0
 191 0006 40F20003 		movw	r3, #:lower16:UART_txBufferRead
 192 000a C0F20003 		movt	r3, #:upper16:UART_txBufferRead
 193 000e 1B78     		ldrb	r3, [r3, #0]
 194 0010 DBB2     		uxtb	r3, r3
 195 0012 3F2B     		cmp	r3, #63
 196 0014 06D9     		bls	.L11
 223:.\Generated_Source\PSoC5/UART_INT.c ****             {
 224:.\Generated_Source\PSoC5/UART_INT.c ****                 UART_txBufferRead = 0u;
 197              		.loc 1 224 0
 198 0016 40F20003 		movw	r3, #:lower16:UART_txBufferRead
 199 001a C0F20003 		movt	r3, #:upper16:UART_txBufferRead
 200 001e 4FF00002 		mov	r2, #0
 201 0022 1A70     		strb	r2, [r3, #0]
 202              	.L11:
 225:.\Generated_Source\PSoC5/UART_INT.c ****             }
 226:.\Generated_Source\PSoC5/UART_INT.c **** 
 227:.\Generated_Source\PSoC5/UART_INT.c ****             UART_TXDATA_REG = UART_txBuffer[UART_txBufferRead];
 203              		.loc 1 227 0
 204 0024 46F24443 		movw	r3, #:lower16:1073767492
 205 0028 C4F20003 		movt	r3, #:upper16:1073767492
 206 002c 40F20002 		movw	r2, #:lower16:UART_txBufferRead
 207 0030 C0F20002 		movt	r2, #:upper16:UART_txBufferRead
 208 0034 1278     		ldrb	r2, [r2, #0]
 209 0036 D2B2     		uxtb	r2, r2
 210 0038 1146     		mov	r1, r2
 211 003a 40F20002 		movw	r2, #:lower16:UART_txBuffer
 212 003e C0F20002 		movt	r2, #:upper16:UART_txBuffer
 213 0042 525C     		ldrb	r2, [r2, r1]
 214 0044 D2B2     		uxtb	r2, r2
 215 0046 1A70     		strb	r2, [r3, #0]
 228:.\Generated_Source\PSoC5/UART_INT.c **** 
 229:.\Generated_Source\PSoC5/UART_INT.c ****             /* Set next pointer. */
 230:.\Generated_Source\PSoC5/UART_INT.c ****             UART_txBufferRead++;
 216              		.loc 1 230 0
 217 0048 40F20003 		movw	r3, #:lower16:UART_txBufferRead
 218 004c C0F20003 		movt	r3, #:upper16:UART_txBufferRead
 219 0050 1B78     		ldrb	r3, [r3, #0]
 220 0052 DBB2     		uxtb	r3, r3
 221 0054 03F10103 		add	r3, r3, #1
 222 0058 DAB2     		uxtb	r2, r3
ARM GAS  C:\DOCUME~1\dtucker\LOCALS~1\Temp\ccZHKNJy.s 			page 9


 223 005a 40F20003 		movw	r3, #:lower16:UART_txBufferRead
 224 005e C0F20003 		movt	r3, #:upper16:UART_txBufferRead
 225 0062 1A70     		strb	r2, [r3, #0]
 226              	.L10:
 227              		.loc 1 218 0
 228 0064 40F20003 		movw	r3, #:lower16:UART_txBufferRead
 229 0068 C0F20003 		movt	r3, #:upper16:UART_txBufferRead
 230 006c 1B78     		ldrb	r3, [r3, #0]
 231 006e DAB2     		uxtb	r2, r3
 232 0070 40F20003 		movw	r3, #:lower16:UART_txBufferWrite
 233 0074 C0F20003 		movt	r3, #:upper16:UART_txBufferWrite
 234 0078 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 235 007a 9A42     		cmp	r2, r3
 236 007c 09D0     		beq	.L14
 237              		.loc 1 219 0
 238 007e 46F26543 		movw	r3, #:lower16:1073767525
 239 0082 C4F20003 		movt	r3, #:upper16:1073767525
 240 0086 1B78     		ldrb	r3, [r3, #0]
 241 0088 DBB2     		uxtb	r3, r3
 242 008a 03F00403 		and	r3, r3, #4
 243              		.loc 1 218 0
 244 008e 002B     		cmp	r3, #0
 245 0090 B9D0     		beq	.L13
 246              	.L14:
 231:.\Generated_Source\PSoC5/UART_INT.c ****         }
 232:.\Generated_Source\PSoC5/UART_INT.c **** 
 233:.\Generated_Source\PSoC5/UART_INT.c ****         /* User code required at end of ISR (Optional) */
 234:.\Generated_Source\PSoC5/UART_INT.c ****         /* `#START UART_TXISR_END` */
 235:.\Generated_Source\PSoC5/UART_INT.c **** 
 236:.\Generated_Source\PSoC5/UART_INT.c ****         /* `#END` */
 237:.\Generated_Source\PSoC5/UART_INT.c **** 
 238:.\Generated_Source\PSoC5/UART_INT.c ****         #if(CY_PSOC3)
 239:.\Generated_Source\PSoC5/UART_INT.c ****             EA = int_en;
 240:.\Generated_Source\PSoC5/UART_INT.c ****         #endif /* CY_PSOC3 */
 241:.\Generated_Source\PSoC5/UART_INT.c **** 
 242:.\Generated_Source\PSoC5/UART_INT.c ****     }
 247              		.loc 1 242 0
 248 0092 BD46     		mov	sp, r7
 249 0094 80BC     		pop	{r7}
 250 0096 7047     		bx	lr
 251              		.cfi_endproc
 252              	.LFE1:
 253              		.size	UART_TXISR, .-UART_TXISR
 254              		.text
 255              	.Letext0:
 256              		.section	.debug_loc,"",%progbits
 257              	.Ldebug_loc0:
 258              	.LLST0:
 259 0000 00000000 		.4byte	.LFB0
 260 0004 02000000 		.4byte	.LCFI0
 261 0008 0100     		.2byte	0x1
 262 000a 5D       		.byte	0x5d
 263 000b 02000000 		.4byte	.LCFI0
 264 000f 04000000 		.4byte	.LCFI1
 265 0013 0200     		.2byte	0x2
 266 0015 7D       		.byte	0x7d
 267 0016 04       		.sleb128 4
ARM GAS  C:\DOCUME~1\dtucker\LOCALS~1\Temp\ccZHKNJy.s 			page 10


 268 0017 04000000 		.4byte	.LCFI1
 269 001b 06000000 		.4byte	.LCFI2
 270 001f 0200     		.2byte	0x2
 271 0021 7D       		.byte	0x7d
 272 0022 10       		.sleb128 16
 273 0023 06000000 		.4byte	.LCFI2
 274 0027 16010000 		.4byte	.LFE0
 275 002b 0200     		.2byte	0x2
 276 002d 77       		.byte	0x77
 277 002e 10       		.sleb128 16
 278 002f 00000000 		.4byte	0x0
 279 0033 00000000 		.4byte	0x0
 280              	.LLST1:
 281 0037 00000000 		.4byte	.LFB1
 282 003b 02000000 		.4byte	.LCFI3
 283 003f 0100     		.2byte	0x1
 284 0041 5D       		.byte	0x5d
 285 0042 02000000 		.4byte	.LCFI3
 286 0046 04000000 		.4byte	.LCFI4
 287 004a 0200     		.2byte	0x2
 288 004c 7D       		.byte	0x7d
 289 004d 04       		.sleb128 4
 290 004e 04000000 		.4byte	.LCFI4
 291 0052 98000000 		.4byte	.LFE1
 292 0056 0200     		.2byte	0x2
 293 0058 77       		.byte	0x77
 294 0059 04       		.sleb128 4
 295 005a 00000000 		.4byte	0x0
 296 005e 00000000 		.4byte	0x0
 297              		.file 2 ".\\Generated_Source\\PSoC5\\/UART.h"
 298              		.file 3 ".\\Generated_Source\\PSoC5\\/cytypes.h"
 299              		.section	.debug_info
 300 0000 69010000 		.4byte	0x169
 301 0004 0200     		.2byte	0x2
 302 0006 00000000 		.4byte	.Ldebug_abbrev0
 303 000a 04       		.byte	0x4
 304 000b 01       		.uleb128 0x1
 305 000c E3000000 		.4byte	.LASF22
 306 0010 01       		.byte	0x1
 307 0011 B4000000 		.4byte	.LASF23
 308 0015 1B000000 		.4byte	.LASF24
 309 0019 00000000 		.4byte	0x0
 310 001d 00000000 		.4byte	0x0
 311 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 312 0025 00000000 		.4byte	.Ldebug_line0
 313 0029 02       		.uleb128 0x2
 314 002a 01       		.byte	0x1
 315 002b 06       		.byte	0x6
 316 002c 42010000 		.4byte	.LASF0
 317 0030 02       		.uleb128 0x2
 318 0031 01       		.byte	0x1
 319 0032 08       		.byte	0x8
 320 0033 EF000000 		.4byte	.LASF1
 321 0037 02       		.uleb128 0x2
 322 0038 02       		.byte	0x2
 323 0039 05       		.byte	0x5
 324 003a 7E010000 		.4byte	.LASF2
ARM GAS  C:\DOCUME~1\dtucker\LOCALS~1\Temp\ccZHKNJy.s 			page 11


 325 003e 02       		.uleb128 0x2
 326 003f 02       		.byte	0x2
 327 0040 07       		.byte	0x7
 328 0041 2F010000 		.4byte	.LASF3
 329 0045 02       		.uleb128 0x2
 330 0046 04       		.byte	0x4
 331 0047 05       		.byte	0x5
 332 0048 02010000 		.4byte	.LASF4
 333 004c 02       		.uleb128 0x2
 334 004d 04       		.byte	0x4
 335 004e 07       		.byte	0x7
 336 004f 8B000000 		.4byte	.LASF5
 337 0053 02       		.uleb128 0x2
 338 0054 08       		.byte	0x8
 339 0055 05       		.byte	0x5
 340 0056 00000000 		.4byte	.LASF6
 341 005a 02       		.uleb128 0x2
 342 005b 08       		.byte	0x8
 343 005c 07       		.byte	0x7
 344 005d 9D000000 		.4byte	.LASF7
 345 0061 03       		.uleb128 0x3
 346 0062 04       		.byte	0x4
 347 0063 05       		.byte	0x5
 348 0064 696E7400 		.ascii	"int\000"
 349 0068 02       		.uleb128 0x2
 350 0069 04       		.byte	0x4
 351 006a 07       		.byte	0x7
 352 006b 0E000000 		.4byte	.LASF8
 353 006f 04       		.uleb128 0x4
 354 0070 85000000 		.4byte	.LASF25
 355 0074 03       		.byte	0x3
 356 0075 4C       		.byte	0x4c
 357 0076 30000000 		.4byte	0x30
 358 007a 02       		.uleb128 0x2
 359 007b 04       		.byte	0x4
 360 007c 04       		.byte	0x4
 361 007d 78010000 		.4byte	.LASF9
 362 0081 02       		.uleb128 0x2
 363 0082 08       		.byte	0x8
 364 0083 04       		.byte	0x4
 365 0084 1D010000 		.4byte	.LASF10
 366 0088 02       		.uleb128 0x2
 367 0089 01       		.byte	0x1
 368 008a 08       		.byte	0x8
 369 008b FD000000 		.4byte	.LASF11
 370 008f 05       		.uleb128 0x5
 371 0090 6F000000 		.4byte	0x6f
 372 0094 06       		.uleb128 0x6
 373 0095 04       		.byte	0x4
 374 0096 07       		.byte	0x7
 375 0097 07       		.uleb128 0x7
 376 0098 01       		.byte	0x1
 377 0099 D8000000 		.4byte	.LASF26
 378 009d 01       		.byte	0x1
 379 009e 42       		.byte	0x42
 380 009f 01       		.byte	0x1
 381 00a0 00000000 		.4byte	.LFB0
ARM GAS  C:\DOCUME~1\dtucker\LOCALS~1\Temp\ccZHKNJy.s 			page 12


 382 00a4 16010000 		.4byte	.LFE0
 383 00a8 00000000 		.4byte	.LLST0
 384 00ac CD000000 		.4byte	0xcd
 385 00b0 08       		.uleb128 0x8
 386 00b1 9B010000 		.4byte	.LASF12
 387 00b5 01       		.byte	0x1
 388 00b6 44       		.byte	0x44
 389 00b7 6F000000 		.4byte	0x6f
 390 00bb 02       		.byte	0x2
 391 00bc 91       		.byte	0x91
 392 00bd 76       		.sleb128 -10
 393 00be 08       		.uleb128 0x8
 394 00bf 3C000000 		.4byte	.LASF13
 395 00c3 01       		.byte	0x1
 396 00c4 45       		.byte	0x45
 397 00c5 6F000000 		.4byte	0x6f
 398 00c9 02       		.byte	0x2
 399 00ca 91       		.byte	0x91
 400 00cb 77       		.sleb128 -9
 401 00cc 00       		.byte	0x0
 402 00cd 09       		.uleb128 0x9
 403 00ce 01       		.byte	0x1
 404 00cf 24010000 		.4byte	.LASF27
 405 00d3 01       		.byte	0x1
 406 00d4 C9       		.byte	0xc9
 407 00d5 01       		.byte	0x1
 408 00d6 00000000 		.4byte	.LFB1
 409 00da 98000000 		.4byte	.LFE1
 410 00de 37000000 		.4byte	.LLST1
 411 00e2 0A       		.uleb128 0xa
 412 00e3 6F000000 		.4byte	0x6f
 413 00e7 F2000000 		.4byte	0xf2
 414 00eb 0B       		.uleb128 0xb
 415 00ec 94000000 		.4byte	0x94
 416 00f0 3F       		.byte	0x3f
 417 00f1 00       		.byte	0x0
 418 00f2 0C       		.uleb128 0xc
 419 00f3 A4010000 		.4byte	.LASF14
 420 00f7 02       		.byte	0x2
 421 00f8 4C01     		.2byte	0x14c
 422 00fa 00010000 		.4byte	0x100
 423 00fe 01       		.byte	0x1
 424 00ff 01       		.byte	0x1
 425 0100 05       		.uleb128 0x5
 426 0101 E2000000 		.4byte	0xe2
 427 0105 0C       		.uleb128 0xc
 428 0106 0B010000 		.4byte	.LASF15
 429 010a 02       		.byte	0x2
 430 010b 4D01     		.2byte	0x14d
 431 010d 8F000000 		.4byte	0x8f
 432 0111 01       		.byte	0x1
 433 0112 01       		.byte	0x1
 434 0113 0C       		.uleb128 0xc
 435 0114 4E000000 		.4byte	.LASF16
 436 0118 02       		.byte	0x2
 437 0119 4E01     		.2byte	0x14e
 438 011b 6F000000 		.4byte	0x6f
ARM GAS  C:\DOCUME~1\dtucker\LOCALS~1\Temp\ccZHKNJy.s 			page 13


 439 011f 01       		.byte	0x1
 440 0120 01       		.byte	0x1
 441 0121 0C       		.uleb128 0xc
 442 0122 77000000 		.4byte	.LASF17
 443 0126 02       		.byte	0x2
 444 0127 5201     		.2byte	0x152
 445 0129 2F010000 		.4byte	0x12f
 446 012d 01       		.byte	0x1
 447 012e 01       		.byte	0x1
 448 012f 05       		.uleb128 0x5
 449 0130 E2000000 		.4byte	0xe2
 450 0134 0C       		.uleb128 0xc
 451 0135 66010000 		.4byte	.LASF18
 452 0139 02       		.byte	0x2
 453 013a 5301     		.2byte	0x153
 454 013c 8F000000 		.4byte	0x8f
 455 0140 01       		.byte	0x1
 456 0141 01       		.byte	0x1
 457 0142 0C       		.uleb128 0xc
 458 0143 88010000 		.4byte	.LASF19
 459 0147 02       		.byte	0x2
 460 0148 5401     		.2byte	0x154
 461 014a 8F000000 		.4byte	0x8f
 462 014e 01       		.byte	0x1
 463 014f 01       		.byte	0x1
 464 0150 0C       		.uleb128 0xc
 465 0151 4E010000 		.4byte	.LASF20
 466 0155 02       		.byte	0x2
 467 0156 5501     		.2byte	0x155
 468 0158 8F000000 		.4byte	0x8f
 469 015c 01       		.byte	0x1
 470 015d 01       		.byte	0x1
 471 015e 0C       		.uleb128 0xc
 472 015f 61000000 		.4byte	.LASF21
 473 0163 02       		.byte	0x2
 474 0164 5601     		.2byte	0x156
 475 0166 8F000000 		.4byte	0x8f
 476 016a 01       		.byte	0x1
 477 016b 01       		.byte	0x1
 478 016c 00       		.byte	0x0
 479              		.section	.debug_abbrev
 480 0000 01       		.uleb128 0x1
 481 0001 11       		.uleb128 0x11
 482 0002 01       		.byte	0x1
 483 0003 25       		.uleb128 0x25
 484 0004 0E       		.uleb128 0xe
 485 0005 13       		.uleb128 0x13
 486 0006 0B       		.uleb128 0xb
 487 0007 03       		.uleb128 0x3
 488 0008 0E       		.uleb128 0xe
 489 0009 1B       		.uleb128 0x1b
 490 000a 0E       		.uleb128 0xe
 491 000b 11       		.uleb128 0x11
 492 000c 01       		.uleb128 0x1
 493 000d 52       		.uleb128 0x52
 494 000e 01       		.uleb128 0x1
 495 000f 55       		.uleb128 0x55
ARM GAS  C:\DOCUME~1\dtucker\LOCALS~1\Temp\ccZHKNJy.s 			page 14


 496 0010 06       		.uleb128 0x6
 497 0011 10       		.uleb128 0x10
 498 0012 06       		.uleb128 0x6
 499 0013 00       		.byte	0x0
 500 0014 00       		.byte	0x0
 501 0015 02       		.uleb128 0x2
 502 0016 24       		.uleb128 0x24
 503 0017 00       		.byte	0x0
 504 0018 0B       		.uleb128 0xb
 505 0019 0B       		.uleb128 0xb
 506 001a 3E       		.uleb128 0x3e
 507 001b 0B       		.uleb128 0xb
 508 001c 03       		.uleb128 0x3
 509 001d 0E       		.uleb128 0xe
 510 001e 00       		.byte	0x0
 511 001f 00       		.byte	0x0
 512 0020 03       		.uleb128 0x3
 513 0021 24       		.uleb128 0x24
 514 0022 00       		.byte	0x0
 515 0023 0B       		.uleb128 0xb
 516 0024 0B       		.uleb128 0xb
 517 0025 3E       		.uleb128 0x3e
 518 0026 0B       		.uleb128 0xb
 519 0027 03       		.uleb128 0x3
 520 0028 08       		.uleb128 0x8
 521 0029 00       		.byte	0x0
 522 002a 00       		.byte	0x0
 523 002b 04       		.uleb128 0x4
 524 002c 16       		.uleb128 0x16
 525 002d 00       		.byte	0x0
 526 002e 03       		.uleb128 0x3
 527 002f 0E       		.uleb128 0xe
 528 0030 3A       		.uleb128 0x3a
 529 0031 0B       		.uleb128 0xb
 530 0032 3B       		.uleb128 0x3b
 531 0033 0B       		.uleb128 0xb
 532 0034 49       		.uleb128 0x49
 533 0035 13       		.uleb128 0x13
 534 0036 00       		.byte	0x0
 535 0037 00       		.byte	0x0
 536 0038 05       		.uleb128 0x5
 537 0039 35       		.uleb128 0x35
 538 003a 00       		.byte	0x0
 539 003b 49       		.uleb128 0x49
 540 003c 13       		.uleb128 0x13
 541 003d 00       		.byte	0x0
 542 003e 00       		.byte	0x0
 543 003f 06       		.uleb128 0x6
 544 0040 24       		.uleb128 0x24
 545 0041 00       		.byte	0x0
 546 0042 0B       		.uleb128 0xb
 547 0043 0B       		.uleb128 0xb
 548 0044 3E       		.uleb128 0x3e
 549 0045 0B       		.uleb128 0xb
 550 0046 00       		.byte	0x0
 551 0047 00       		.byte	0x0
 552 0048 07       		.uleb128 0x7
ARM GAS  C:\DOCUME~1\dtucker\LOCALS~1\Temp\ccZHKNJy.s 			page 15


 553 0049 2E       		.uleb128 0x2e
 554 004a 01       		.byte	0x1
 555 004b 3F       		.uleb128 0x3f
 556 004c 0C       		.uleb128 0xc
 557 004d 03       		.uleb128 0x3
 558 004e 0E       		.uleb128 0xe
 559 004f 3A       		.uleb128 0x3a
 560 0050 0B       		.uleb128 0xb
 561 0051 3B       		.uleb128 0x3b
 562 0052 0B       		.uleb128 0xb
 563 0053 27       		.uleb128 0x27
 564 0054 0C       		.uleb128 0xc
 565 0055 11       		.uleb128 0x11
 566 0056 01       		.uleb128 0x1
 567 0057 12       		.uleb128 0x12
 568 0058 01       		.uleb128 0x1
 569 0059 40       		.uleb128 0x40
 570 005a 06       		.uleb128 0x6
 571 005b 01       		.uleb128 0x1
 572 005c 13       		.uleb128 0x13
 573 005d 00       		.byte	0x0
 574 005e 00       		.byte	0x0
 575 005f 08       		.uleb128 0x8
 576 0060 34       		.uleb128 0x34
 577 0061 00       		.byte	0x0
 578 0062 03       		.uleb128 0x3
 579 0063 0E       		.uleb128 0xe
 580 0064 3A       		.uleb128 0x3a
 581 0065 0B       		.uleb128 0xb
 582 0066 3B       		.uleb128 0x3b
 583 0067 0B       		.uleb128 0xb
 584 0068 49       		.uleb128 0x49
 585 0069 13       		.uleb128 0x13
 586 006a 02       		.uleb128 0x2
 587 006b 0A       		.uleb128 0xa
 588 006c 00       		.byte	0x0
 589 006d 00       		.byte	0x0
 590 006e 09       		.uleb128 0x9
 591 006f 2E       		.uleb128 0x2e
 592 0070 00       		.byte	0x0
 593 0071 3F       		.uleb128 0x3f
 594 0072 0C       		.uleb128 0xc
 595 0073 03       		.uleb128 0x3
 596 0074 0E       		.uleb128 0xe
 597 0075 3A       		.uleb128 0x3a
 598 0076 0B       		.uleb128 0xb
 599 0077 3B       		.uleb128 0x3b
 600 0078 0B       		.uleb128 0xb
 601 0079 27       		.uleb128 0x27
 602 007a 0C       		.uleb128 0xc
 603 007b 11       		.uleb128 0x11
 604 007c 01       		.uleb128 0x1
 605 007d 12       		.uleb128 0x12
 606 007e 01       		.uleb128 0x1
 607 007f 40       		.uleb128 0x40
 608 0080 06       		.uleb128 0x6
 609 0081 00       		.byte	0x0
ARM GAS  C:\DOCUME~1\dtucker\LOCALS~1\Temp\ccZHKNJy.s 			page 16


 610 0082 00       		.byte	0x0
 611 0083 0A       		.uleb128 0xa
 612 0084 01       		.uleb128 0x1
 613 0085 01       		.byte	0x1
 614 0086 49       		.uleb128 0x49
 615 0087 13       		.uleb128 0x13
 616 0088 01       		.uleb128 0x1
 617 0089 13       		.uleb128 0x13
 618 008a 00       		.byte	0x0
 619 008b 00       		.byte	0x0
 620 008c 0B       		.uleb128 0xb
 621 008d 21       		.uleb128 0x21
 622 008e 00       		.byte	0x0
 623 008f 49       		.uleb128 0x49
 624 0090 13       		.uleb128 0x13
 625 0091 2F       		.uleb128 0x2f
 626 0092 0B       		.uleb128 0xb
 627 0093 00       		.byte	0x0
 628 0094 00       		.byte	0x0
 629 0095 0C       		.uleb128 0xc
 630 0096 34       		.uleb128 0x34
 631 0097 00       		.byte	0x0
 632 0098 03       		.uleb128 0x3
 633 0099 0E       		.uleb128 0xe
 634 009a 3A       		.uleb128 0x3a
 635 009b 0B       		.uleb128 0xb
 636 009c 3B       		.uleb128 0x3b
 637 009d 05       		.uleb128 0x5
 638 009e 49       		.uleb128 0x49
 639 009f 13       		.uleb128 0x13
 640 00a0 3F       		.uleb128 0x3f
 641 00a1 0C       		.uleb128 0xc
 642 00a2 3C       		.uleb128 0x3c
 643 00a3 0C       		.uleb128 0xc
 644 00a4 00       		.byte	0x0
 645 00a5 00       		.byte	0x0
 646 00a6 00       		.byte	0x0
 647              		.section	.debug_pubnames,"",%progbits
 648 0000 2C000000 		.4byte	0x2c
 649 0004 0200     		.2byte	0x2
 650 0006 00000000 		.4byte	.Ldebug_info0
 651 000a 6D010000 		.4byte	0x16d
 652 000e 97000000 		.4byte	0x97
 653 0012 55415254 		.ascii	"UART_RXISR\000"
 653      5F525849 
 653      535200
 654 001d CD000000 		.4byte	0xcd
 655 0021 55415254 		.ascii	"UART_TXISR\000"
 655      5F545849 
 655      535200
 656 002c 00000000 		.4byte	0x0
 657              		.section	.debug_aranges,"",%progbits
 658 0000 24000000 		.4byte	0x24
 659 0004 0200     		.2byte	0x2
 660 0006 00000000 		.4byte	.Ldebug_info0
 661 000a 04       		.byte	0x4
 662 000b 00       		.byte	0x0
ARM GAS  C:\DOCUME~1\dtucker\LOCALS~1\Temp\ccZHKNJy.s 			page 17


 663 000c 0000     		.2byte	0x0
 664 000e 0000     		.2byte	0x0
 665 0010 00000000 		.4byte	.LFB0
 666 0014 16010000 		.4byte	.LFE0-.LFB0
 667 0018 00000000 		.4byte	.LFB1
 668 001c 98000000 		.4byte	.LFE1-.LFB1
 669 0020 00000000 		.4byte	0x0
 670 0024 00000000 		.4byte	0x0
 671              		.section	.debug_ranges,"",%progbits
 672              	.Ldebug_ranges0:
 673 0000 00000000 		.4byte	.Ltext0
 674 0004 00000000 		.4byte	.Letext0
 675 0008 00000000 		.4byte	.LFB0
 676 000c 16010000 		.4byte	.LFE0
 677 0010 00000000 		.4byte	.LFB1
 678 0014 98000000 		.4byte	.LFE1
 679 0018 00000000 		.4byte	0x0
 680 001c 00000000 		.4byte	0x0
 681              		.section	.debug_str,"MS",%progbits,1
 682              	.LASF6:
 683 0000 6C6F6E67 		.ascii	"long long int\000"
 683      206C6F6E 
 683      6720696E 
 683      7400
 684              	.LASF8:
 685 000e 756E7369 		.ascii	"unsigned int\000"
 685      676E6564 
 685      20696E74 
 685      00
 686              	.LASF24:
 687 001b 463A5C50 		.ascii	"F:\\PSoC Creator\\lab3\\part3.cydsn\000"
 687      536F4320 
 687      43726561 
 687      746F725C 
 687      6C616233 
 688              	.LASF13:
 689 003c 696E6372 		.ascii	"increment_pointer\000"
 689      656D656E 
 689      745F706F 
 689      696E7465 
 689      7200
 690              	.LASF16:
 691 004e 55415254 		.ascii	"UART_txBufferWrite\000"
 691      5F747842 
 691      75666665 
 691      72577269 
 691      746500
 692              	.LASF21:
 693 0061 55415254 		.ascii	"UART_rxBufferOverflow\000"
 693      5F727842 
 693      75666665 
 693      724F7665 
 693      72666C6F 
 694              	.LASF17:
 695 0077 55415254 		.ascii	"UART_rxBuffer\000"
 695      5F727842 
 695      75666665 
ARM GAS  C:\DOCUME~1\dtucker\LOCALS~1\Temp\ccZHKNJy.s 			page 18


 695      7200
 696              	.LASF25:
 697 0085 75696E74 		.ascii	"uint8\000"
 697      3800
 698              	.LASF5:
 699 008b 6C6F6E67 		.ascii	"long unsigned int\000"
 699      20756E73 
 699      69676E65 
 699      6420696E 
 699      7400
 700              	.LASF7:
 701 009d 6C6F6E67 		.ascii	"long long unsigned int\000"
 701      206C6F6E 
 701      6720756E 
 701      7369676E 
 701      65642069 
 702              	.LASF23:
 703 00b4 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\UART_INT.c\000"
 703      6E657261 
 703      7465645F 
 703      536F7572 
 703      63655C50 
 704              	.LASF26:
 705 00d8 55415254 		.ascii	"UART_RXISR\000"
 705      5F525849 
 705      535200
 706              	.LASF22:
 707 00e3 474E5520 		.ascii	"GNU C 4.4.1\000"
 707      4320342E 
 707      342E3100 
 708              	.LASF1:
 709 00ef 756E7369 		.ascii	"unsigned char\000"
 709      676E6564 
 709      20636861 
 709      7200
 710              	.LASF11:
 711 00fd 63686172 		.ascii	"char\000"
 711      00
 712              	.LASF4:
 713 0102 6C6F6E67 		.ascii	"long int\000"
 713      20696E74 
 713      00
 714              	.LASF15:
 715 010b 55415254 		.ascii	"UART_txBufferRead\000"
 715      5F747842 
 715      75666665 
 715      72526561 
 715      6400
 716              	.LASF10:
 717 011d 646F7562 		.ascii	"double\000"
 717      6C6500
 718              	.LASF27:
 719 0124 55415254 		.ascii	"UART_TXISR\000"
 719      5F545849 
 719      535200
 720              	.LASF3:
 721 012f 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\DOCUME~1\dtucker\LOCALS~1\Temp\ccZHKNJy.s 			page 19


 721      7420756E 
 721      7369676E 
 721      65642069 
 721      6E7400
 722              	.LASF0:
 723 0142 7369676E 		.ascii	"signed char\000"
 723      65642063 
 723      68617200 
 724              	.LASF20:
 725 014e 55415254 		.ascii	"UART_rxBufferLoopDetect\000"
 725      5F727842 
 725      75666665 
 725      724C6F6F 
 725      70446574 
 726              	.LASF18:
 727 0166 55415254 		.ascii	"UART_rxBufferRead\000"
 727      5F727842 
 727      75666665 
 727      72526561 
 727      6400
 728              	.LASF9:
 729 0178 666C6F61 		.ascii	"float\000"
 729      7400
 730              	.LASF2:
 731 017e 73686F72 		.ascii	"short int\000"
 731      7420696E 
 731      7400
 732              	.LASF19:
 733 0188 55415254 		.ascii	"UART_rxBufferWrite\000"
 733      5F727842 
 733      75666665 
 733      72577269 
 733      746500
 734              	.LASF12:
 735 019b 72656164 		.ascii	"readData\000"
 735      44617461 
 735      00
 736              	.LASF14:
 737 01a4 55415254 		.ascii	"UART_txBuffer\000"
 737      5F747842 
 737      75666665 
 737      7200
 738              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
